{"version":3,"sources":["config/constants/types.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","hooks/useActiveWeb3React.ts","state/mint/actions.ts","components/Layout/Row.tsx","state/swap/actions.ts","utils/bigNumber.ts","utils/formatBalance.ts","config/constants/tokens.ts","components/Layout/Column.tsx","config/constants/contracts.ts","utils/addressHelpers.ts","utils/index.ts","state/types.ts","config/constants/index.ts","state/user/actions.ts","utils/contractHelpers.ts","hooks/useContract.ts","components/Balance.tsx","state/user/hooks/index.tsx","utils/multicall.ts","views/Pools/helpers.tsx","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","hooks/Tokens.ts","config/constants/endpoints.ts","utils/wrappedCurrency.ts","state/predictions/helpers.ts","state/predictions/queries.ts","state/user/hooks/helpers.ts","state/multicall/hooks.ts","config/index.ts","state/info/index.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","config/constants/lists.ts","state/lists/hooks.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","components/QuestionHelper/index.tsx","state/lists/actions.ts","state/nftMarket/helpers.ts","state/nftMarket/queries.ts","utils/prices.ts","state/multicall/actions.ts","state/nftMarket/types.ts","hooks/useTheme.ts","config/constants/pools.ts","hooks/useToast.ts","utils/providers.ts","state/farms/hooks.ts","components/ConnectWalletButton.tsx","components/Toast/types.ts","components/Toast/Toast.tsx","components/Toast/ToastContainer.tsx","components/Toast/DescriptionWithTx.tsx","state/block/hooks.ts","state/transactions/actions.ts","state/wallet/hooks.ts","state/transactions/hooks.tsx","state/predictions/config.ts","state/info/actions.ts","components/Card/index.tsx","utils/compoundApyHelpers.ts","utils/getGasPrice.ts","config/localization/languages.ts","state/profile/index.tsx","hooks/useRefresh.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/swap/hooks.ts","hooks/useParsedQueryString.ts","config/constants/nftsCollections/types.ts","config/constants/nftsCollections/index.ts","views/Nft/market/constants.ts","hooks/useCallWithGasPrice.ts","hooks/useTokenBalance.ts","state/lottery/helpers.ts","hooks/usePairs.ts","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","config/constants/farms.ts","utils/isZero.ts","contexts/Localization/helpers.ts","utils/truncateHash.ts","components/RoiCalculatorModal/useRoiCalculatorReducer.ts","components/RoiCalculatorModal/RoiCalculatorFooter.tsx","components/RoiCalculatorModal/RoiCard.tsx","components/RoiCalculatorModal/AnimatedArrow.tsx","components/RoiCalculatorModal/index.tsx","hooks/useDebounce.ts","hooks/useAuth.ts","utils/wallet.ts","utils/currencyId.ts","utils/uriToHttp.ts","state/teams/index.tsx","hooks/usePreviousValue.ts","config/constants/lottery.ts","components/TransactionConfirmationModal/index.tsx","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/trades.ts","hooks/Trades.ts","config/constants/meta.ts","components/Layout/Page.tsx","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","components/Loader/CircleLoader.tsx","components/Tags.tsx","utils/web3React.ts","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","state/block/index.ts","utils/getRpcUrl.ts","utils/ENS/parseENSAddress.ts","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","state/profile/helpers.ts","config/constants/campaigns.ts","components/SearchModal/filtering.ts","components/Loader/Dots.tsx","config/constants/teams.ts","hooks/useTotalSupply.ts","state/teams/helpers.ts","state/user/hooks/useUserAddedTokens.ts","components/Layout/Container.tsx","state/profile/hooks.ts","hooks/useLastUpdated.ts","components/TokenImage/index.tsx","views/Page.tsx","routerHistory.ts","config/constants/ifo.ts","hooks/useIsWindowVisible.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","state/pools/helpers.ts","state/achievements/helpers.ts","state/lottery/getUserLotteryData.ts","config/abi/erc20.ts","utils/contenthashToUri.ts","contexts/RefreshContext.tsx","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","components/Menu/GlobalSettings/TransactionSettings.tsx","components/Menu/GlobalSettings/ExpertModal.tsx","components/Menu/GlobalSettings/GasSettings.tsx","components/Menu/GlobalSettings/SettingsModal.tsx","components/Menu/GlobalSettings/index.tsx","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","state/burn/actions.ts","utils/achievements.ts","utils/latinise.ts","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","state/predictions/index.ts","state/nftMarket/reducer.ts","components/PageHeader/PageHeader.tsx","state/lottery/index.ts","components/Loader/PageLoader.tsx","utils/getTimePeriods.ts","components/Select/Select.tsx","components/PositionCard/index.tsx","state/voting/helpers.ts","state/voting/index.tsx","state/achievements/index.ts","state/lottery/getLotteriesData.ts","state/lottery/getUserTicketsData.ts","components/Loading.tsx","utils/farmHelpers.ts","utils/apr.ts","hooks/useIntersectionObserver.ts","components/Layout/Flex.tsx","hooks/useDelayedUnmount.ts","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/DatePicker/DatePicker.tsx","components/DatePicker/DatePickerPortal.tsx","components/DatePicker/TimePicker.tsx","components/SearchInput/SearchInput.tsx","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","components/Menu/UserMenu/WalletModal.tsx","hooks/useEagerConnect.ts","hooks/useUserAgent.ts","hooks/useScrollOnRouteChange.ts","style/Global.tsx","components/Menu/config/config.ts","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UserMenu/index.tsx","components/Menu/utils.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","components/GlobalCheckClaimStatus/AnniversaryAchievementModal.tsx","components/GlobalCheckClaimStatus/index.tsx","state/pools/hooks.ts","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.tsx","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/ToggleView/ToggleView.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/AutoHarvest.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/Cells/AutoEarningsCell.tsx","views/Pools/components/PoolsTable/Cells/AutoAprCell.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","config/constants/swapWarningTokens.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","hooks/useLast.ts","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/Swap/redirects.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["PoolIds","PoolCategory","LotteryStatus","AuctionStatus","initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","getLanguageCodeFromLS","languages","state","setState","useEffect","a","enLocale","get","fetchLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","localStorage","setItem","LS_KEY","translate","useCallback","key","data","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","simpleRpcProvider","provider","setProvider","current","parseInt","process","Field","typeInput","createAction","resetMintState","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","BIG_ZERO","BigNumber","BIG_ONE","BIG_TEN","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","getDecimalAmount","amount","decimals","times","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","split","leftSide","MAINNET","ChainId","TESTNET","mainnetTokens","wbnb","Token","bnb","cake","tlos","nft","stephero","pros","qbt","cvp","bscdefi","busd","dai","usdt","btcb","ust","eth","usdc","kalm","hotcross","belt","watch","bry","wsote","helmet","ten","ditto","blink","syrup","pha","babycake","bmon","hero","wsg","mcrn","revv","skill","if","sps","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","ramp","bfi","dexe","bel","tpt","xmark","bmxx","iotx","bor","bopen","dodo","swingby","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","front","btcst","bscx","balbt","asr","atm","og","reef","juv","psg","vai","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","bifi","dusk","beth","mamzn","mgoogl","mnflx","mtsla","ltc","ada","band","dot","eos","link","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","mad","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","pots","gnt","rusd","bp","sfund","naos","testnetTokens","tokens","reduce","accum","serializeTokens","unserializedTokens","serializeToken","Column","ColumnCenter","AutoColumn","getAddress","address","getMasterChefAddress","addresses","getMulticallAddress","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getBunnySpecialLotteryAddress","getFarmAuctionAddress","getAnniversaryAchievement","getNftMarketAddress","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","getBscScanLinkForNft","collectionAddress","tokenId","calculateGasMargin","mul","add","basisPointsToPercent","num","Percent","JSBI","BigInt","calculateSlippageAmount","slippage","divide","multiply","raw","getContract","ABI","account","AddressZero","Contract","getSigner","connectUnchecked","getProviderOrSigner","getRouterContract","_","ROUTER_ADDRESS","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","Boolean","ProfileAvatarFetchStatus","BetPosition","PredictionStatus","HistoryFilter","LeaderboardLoadingState","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","BASES_TO_CHECK_TRADES_AGAINST","ADDITIONAL_BASES","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","FarmStakedOnly","ViewMode","updateUserExpertMode","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","toggleTheme","updateUserFarmStakedOnly","updateUserPoolStakedOnly","updateUserPoolsViewMode","updateUserFarmsViewMode","updateUserPredictionAcceptedRisk","updateUserPredictionChartDisclaimerShow","updateUserExpertModeAcknowledgementShow","updateUserUsernameVisibility","updateGasPrice","addWatchlistToken","addWatchlistPool","abi","signer","signerOrProvider","getBep20Contract","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","id","config","poolsConfig","find","pool","sousId","poolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","pointCenterIfo","getCakeContract","cakeAbi","getProfileContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getBunnySpecialLotteryContract","bunnySpecialLotteryAbi","getFarmAuctionContract","farmAuctionAbi","getAnniversaryAchievementContract","anniversaryAchievementAbi","getNftMarketContract","nftMarketAbi","useIfoV1Contract","useMemo","useIfoV2Contract","useERC20","useCake","useBunnyFactory","usePancakeRabbits","useProfile","useLotteryV2Contract","useMasterchef","useSousChef","usePointCenterIfoContract","useTradingCompetitionContract","useCakeVaultContract","usePredictionsContract","useAnniversaryAchievementContract","useFarmAuctionContract","useNftMarketContract","useContract","withSignerIfPossible","error","console","useTokenContract","tokenAddress","ERC20_ABI","useWETHContract","WETH","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","multiCallAbi","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","suffix","duration","separator","useAudioModeManager","dispatch","useDispatch","audioPlay","useSelector","user","toggleSetAudioMode","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useThemeManager","isDark","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","useUserFarmStakedOnly","isActive","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","TRUE","FALSE","ON_FINISHED","useUserPoolStakedOnly","userPoolStakedOnly","useUserPoolsViewMode","userPoolsViewMode","viewMode","useUserFarmsViewMode","userFarmsViewMode","useUserPredictionAcceptedRisk","userPredictionAcceptedRisk","acceptedRisk","userAcceptedRisk","useUserPredictionChartDisclaimerShow","userPredictionChartDisclaimerShow","showDisclaimer","userShowDisclaimer","useUserExpertModeAcknowledgementShow","userExpertModeAcknowledgementShow","showAcknowledgement","useUserTransactionTTL","userDeadline","deadline","useAddUserToken","token","serializedToken","useRemoveUserAddedToken","useGasPrice","userGas","gasPrice","GAS_PRICE_GWEI","testnet","useGasPriceManager","serializePair","pair","token0","token1","usePairAdder","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","useAllTokens","pinnedPairs","generatedPairs","flatMap","map","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","memo","sorted","sortsBefore","useWatchlistTokens","watchlistTokens","useWatchlistPools","watchlistPools","multicall","calls","multi","itf","utils","Interface","calldata","call","toLowerCase","encodeFunctionData","name","params","aggregate","returnData","res","i","decodeFunctionResult","multicallv2","requireSuccess","tryAggregate","result","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","performanceFee","isAutoVault","apr","autoCompoundFrequency","getApy","getCakeVaultEarnings","cakeAtLastUserAction","userShares","pricePerFullShare","earningTokenPrice","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","currentBlock","startBlock","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","Math","max","blocksRemaining","hasPoolStarted","blocksToDisplay","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","StyledListLogo","Logo","ListLogo","logoURI","alt","srcs","useHttpLocations","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","newMap","tokenMap_","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","includes","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","useSingleCallResult","NEVER_RELOAD","tokenNameBytes32","symbol","symbolBytes32","loading","useCurrency","currencyId","isBNB","toUpperCase","GRAPH_API_PROFILE","GRAPH_API_PREDICTION","GRAPH_API_LOTTERY","SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","API_PROFILE","API_NFT","SNAPSHOT_API","SNAPSHOT_HUB_API","GRAPH_API_PREDICTION_V1","INFO_CLIENT","BLOCKS_CLIENT","GRAPH_API_NFTMARKET","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","Result","numberOrNull","valueNum","Number","isNaN","transformBetResponse","betResponse","bet","hash","block","parseFloat","position","BULL","BEAR","claimed","claimedAt","claimedBlock","claimedHash","claimedBNB","claimedNetBNB","createdAt","updatedAt","transformUserResponse","round","transformRoundResponse","userResponse","totalBets","totalBetsBull","totalBetsBear","totalBNB","totalBNBBull","totalBNBBear","totalBetsClaimed","totalBNBClaimed","winRate","averageBNB","netBNB","roundResponse","positionResponse","epoch","failed","startAt","startHash","lockAt","lockBlock","lockHash","lockPrice","lockRoundId","closeAt","closeBlock","closeHash","closePrice","closeRoundId","totalAmount","bullBets","bullAmount","bearBets","bearAmount","bets","HOUSE","getRoundResult","currentEpoch","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getFilteredBets","COLLECTED","UNCOLLECTED","ALL","getBetHistory","where","first","skip","request","gql","response","getLedgerData","epochs","ledgerCalls","LEADERBOARD_RESULTS_PER_PAGE","defaultPredictionUserOptions","orderBy","orderDir","getPredictionUsers","users","getPredictionUser","getClaimStatuses","claimableCalls","claimableResponses","claimableResponse","index","claimable","getPredictionData","staticCalls","method","intervalSeconds","minBetAmount","paused","bufferSeconds","status","PAUSED","getRoundsData","makeFutureRoundResponse","startTimestamp","lockTimestamp","closeTimestamp","rewardBaseCalAmount","rewardAmount","oracleCalled","lockOracleId","closeOracleId","makeRoundData","rounds","serializePredictionsLedgerResponse","ledgerResponse","makeLedgerData","ledgers","eq","serializePredictionsRoundsResponse","parseBigNumberObj","fetchUsersRoundsLength","contract","getUserRoundsLength","fetchUserRounds","cursor","ROUNDS_PER_PAGE","getUserRounds","GAS_PRICE","projectLink","default","parseUnits","fast","instant","isMethodArg","x","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","blockNumber","blocksPerFetch","Infinity","useCallsData","callResults","serializedCallKeys","JSON","stringify","c","toCallKey","sort","callKeys","parse","parseCallKey","addMulticallListeners","removeMulticallListeners","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","debug","useSingleContractMultipleData","methodName","callInputs","interface","getFunction","results","inputs","callData","useBlock","useMultipleContractSingleData","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","AUCTION_BIDDERS_TO_FETCH","RECLAIM_AUCTIONS_TO_FETCH","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","IPFS_GATEWAY","protocol","overview","chartData","transactions","pools","byAddress","createReducer","builder","addCase","updateProtocolData","protocolData","payload","updateProtocolChartData","updateProtocolTransactions","updatePoolData","poolData","addPoolKeys","poolAddresses","updatePoolChartData","poolAddress","updatePoolTransactions","updateTokenData","tokenData","addTokenKeys","tokenAddresses","priceData","addTokenPoolAddresses","updateTokenChartData","updateTokenTransactions","updateTokenPriceData","secondsInterval","oldestFetchedTimestamp","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","timestamp","TABLE","userUsernameVisibility","lastUpdateVersionTimestamp","action","tokenAAddress","tokenBAddress","tokenWatchlist","newTokens","poolsWatchlist","newPools","now","addTransaction","approval","summary","claim","txs","addedTime","clearAllTransactions","checkedTransaction","tx","lastCheckedBlockNumber","finalizeTransaction","receipt","confirmedTime","independentField","INPUT","typedValue","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","byUrl","UNSUPPORTED_LIST_URLS","listUrl","activeListUrls","DEFAULT_ACTIVE_LIST_URLS","fetchTokenList","pending","requestId","url","fulfilled","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","push","rejected","errorMessage","addList","removeList","u","enableList","disableList","acceptListUpdate","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","listeners","callListeners","callKey","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","blockReducer","farms","farmsReducer","poolsReducer","predictions","predictionsReducer","profile","profileReducer","teams","teamsReducer","voting","votingReducer","lottery","lotteryReducer","info","infoReducer","nftMarket","nftMarketReducer","swap","mint","burn","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","useAppDispatch","useTokenAllowance","ApprovalState","owner","spender","allowance","useApproveCallback","amountToApprove","callWithGasPrice","useCallWithGasPrice","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","then","useApproveCallbackFromTrade","allowedSlippage","computeSlippageAdjustedAmounts","sortByListPriority","urlA","urlB","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","allTokens","currentUrl","assign","useActiveListUrls","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","Promise","all","stakingLimits","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingCake","pendingReward","fetchPublicVaultData","sharePrice","estimatedCakeBountyReward","totalPendingCakeHarvest","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","totalShares","totalCakeInVault","fetchVaultFees","callFee","withdrawalFee","withdrawalFeePeriod","cakeVaultContract","fetchVaultUser","userContractResponse","isLoading","lastDepositedTime","lastUserActionTime","userDataLoaded","cakeVault","fees","userData","fetchPoolsPublicDataAsync","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","stakingTokenPrice","earningTokenAddress","earningToken","getPoolApr","tokenPerBlock","setPoolsPublicData","fetchPoolsStakingLimitsAsync","stakingLimitData","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","stakedBalance","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","fetchCakeVaultPublicData","createAsyncThunk","publicVaultInfo","fetchCakeVaultFees","vaultFees","fetchCakeVaultUserData","PoolsSlice","createSlice","reducers","livePoolsData","livePoolData","userPoolData","findIndex","extraReducers","actions","QuestionWrapper","QuestionHelper","text","placement","useTooltip","trigger","targetRef","tooltip","tooltipVisible","ref","getCollectionsApi","fetch","ok","json","statusText","getCollectionApi","getNftsFromCollectionApi","getNftApi","getNftsFromDifferentCollectionsApi","promises","responses","resp","collectionName","collection","description","attributes","image","original","thumbnail","getCollectionSg","getCollectionsSg","collections","getNftsFromCollectionSg","nfts","getNftsByBunnyIdSg","bunnyId","existingTokenIds","orderDirection","otherId","isTradable","tokenId_not_in","pancakeBunniesAddress","getMarketDataForTokenIds","getNftsMarketData","getAllPancakeBunniesLowestPrice","bunnyIds","singlePancakeBunnySubQueries","rawResponse","lowestPricesData","subQueryKey","currentAskPrice","getAllPancakeBunniesRecentUpdatedAt","updatedAtData","getLowestPriceInCollection","nftSg","getUserActivity","askOrderHistory","buyTradeHistory","sellTradeHistory","getLatestListedNfts","fetchWalletTokenIdsForCollections","walletNftPromises","balanceOf","balanceOfResponse","getTokenId","tokenOfOwnerByIndex","tokenIdBn","tokenIdPromises","tokenIds","nftLocation","NftLocation","WALLET","tokensWithCollectionAddress","walletNfts","flat","combineCollectionData","collectionApiData","collectionSgData","collectionsMarketObj","prev","collectionMarket","attachMarketDataToWalletNfts","marketDataForWalletNfts","walletNft","marketData","marketNft","metadataUrl","transactionHistory","currentSeller","latestTradedPriceInBNB","tradeVolumeBNB","totalTrades","combineNftMarketAndMetadata","nftsWithMetadata","nftsForSale","tokenIdsInWallet","tokenIdsForSale","profileNftId","forSaleNft","location","PROFILE","FORSALE","getNftLocationForMarketNft","getCompleteAccountNftData","profileNftWithCollectionAddress","walletNftIds","tokenId_in","walletNftsWithMarketData","marketDataForSaleNfts","forSaleNftIds","metadataForAllNfts","completeNftData","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","multiplyPriceByAmount","price","significantDigits","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","NFTMarketInitializationState","UserNftInitializationState","AskOrderType","useTheme","theme","StyledThemeContext","serializedTokens","CORE","harvest","sortOrder","enableEmergencyWithdraw","COMMUNITY","useToast","toastContext","ToastsContext","RPC_URL","getRpcUrl","providers","JsonRpcProvider","deserializeFarmUserData","farm","tokenBalance","earnings","deserializeFarm","lpAddresses","lpSymbol","pid","dual","multiplier","isCommunity","quoteTokenPriceBusd","tokenPriceBusd","quoteToken","tokenAmountTotal","lpTotalInQuoteToken","lpTotalSupply","tokenPriceVsQuote","poolWeight","usePollFarmsPublicData","includeArchive","useRefresh","slowRefresh","pids","farmsConfig","nonArchivedFarms","farmToFetch","fetchFarmsPublicDataAsync","usePollFarmsWithUserData","fetchFarmUserDataAsync","usePollCoreFarmData","fastRefresh","useFarms","deserializedFarmsData","loadArchivedFarmsData","useFarmFromPid","f","useFarmUser","useLpTokenPrice","useFarmFromLpSymbol","farmTokenPriceInUsd","useBusdPriceFromPid","lpTokenPrice","overallValueOfAllTokensInFarm","totalLpTokens","usePriceCakeBusd","cakePriceBusdAsString","ConnectWalletButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","types","SUCCESS","DANGER","WARNING","INFO","alertTypeMap","alertVariants","StyledToast","mediaQueries","sm","Toast","toast","onRemove","ttl","timer","removeHandler","title","handleRemove","clearTimeout","window","setTimeout","CSSTransition","nodeRef","timeout","onMouseEnter","onMouseLeave","variant","StyledToastContainer","ToastContainer","toasts","stackSpacing","TransitionGroup","zIndex","top","DescriptionWithTx","txHash","as","external","href","truncateHash","usePollBlockNumber","isWindowVisible","useIsWindowVisible","setInterval","getBlockNumber","setBlock","clearInterval","useInitialBlock","initialBlock","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","some","callState","useTokenBalances","useTokenBalance","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","useAllTransactions","isTransactionRecent","allTransactions","REWARD_RATE","ROUND_BUFFER","PAST_ROUND_COUNT","FUTURE_ROUND_COUNT","LEADERBOARD_MIN_ROUNDS_PLAYED","Card","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","DAYS_TO_CALCULATE_AGAINST","getInterestBreakdown","principalInUSD","compoundFrequency","timesCompounded","aprAsDecimal","roundingDecimalsNew","days","daysAsDecimalOfYear","principal","interestEarned","getPrincipalForInterest","interest","compoundingFrequency","apyAsDecimal","performanceFeeAsDecimal","takenAsPerformanceFee","getRoi","amountEarned","amountInvested","getGasPrice","code","languageList","isInitialized","hasRegistered","profileAvatars","fetchProfileAvatar","getProfileAvatar","fetchProfileUsername","username","getUsername","profileSlice","profileFetchStart","profileFetchSucceeded","profileFetchFailed","profileClear","addPoints","points","meta","arg","usernameFetchStatus","FETCHING","avatarFetchStatus","FETCHED","NOT_FETCHED","fetchProfile","getProfile","RefreshContext","slow","priceHelperLps","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","tokenDecimals","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","quoteTokenAmountMc","masterchefABI","totalAllocPoint","allocPoint","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","serializedFarm","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","bnbBusdFarm","farmsWithPrices","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","isArchivedPid","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","useSwapState","useSwapActionHandlers","onCurrencySelection","onSwitchTokens","onUserInput","onChangeRecipient","tryParseAmount","typedValueParsed","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","useENS","to","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","search","useLocation","parseArrays","ignoreQueryPrefix","useParsedQueryString","setResult","parsed","CollectionKey","PANCAKE","slug","SQUAD","nftsBaseUrl","TMP_SEE_ALL_LINK","methodArgs","overrides","contractMethod","hasManualGasPriceOverride","FetchStatus","FAILED","fetchStatus","balanceState","setBalanceState","fetchBalance","useGetBnbBalance","setFetchStatus","setBalance","useLastUpdated","lastUpdated","setLastUpdated","walletBalance","refresh","useGetCakeBalance","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","NUM_ROUNDS_TO_FETCH_FROM_NODES","roundId","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","userTickets","hasRoundBeenClaimed","tickets","ticket","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","getTokenLogoURL","StyledLogo","uriLocations","isZero","hexNumberString","getItem","startLength","endLength","substring","EditingCurrency","CalculatorMode","Footer","Flex","BulletList","ul","textSubtle","RoiCalculatorFooter","isFarm","displayApr","linkLabel","linkHref","isExpanded","setIsExpanded","my","tooltipOffset","multiplierRef","multiplierTooltip","multiplierTooltipVisible","gridRowCount","apy","flexDirection","expanded","px","gridTemplateColumns","gridRowGap","gridTemplateRows","small","textAlign","compoundTimes","justifyContent","alignItems","mr","height","fontSize","display","mt","fee","compoundingIndexToFrequency","controls","compounding","activeCompoundingIndex","stakingDuration","mode","ROI_BASED_ON_PRINCIPAL","editingCurrency","USD","principalAsToken","principalAsUSD","roiUSD","roiTokens","roiPercentage","roiCalculatorReducer","toggledCompounding","PRINCIPAL_BASED_ON_ROI","currencyAfterChange","TOKEN","useRoiCalculatorReducer","useReducer","principalInUSDAsNumber","interestBreakdown","hasInterest","roiAsUSD","principalForExpectedRoi","principalUSD","principalToken","setPrincipalFromUSDValue","principalAsTokenBN","setPrincipalFromTokenValue","principalAsUsdBN","principalAsUsdString","setStakingDuration","stakingDurationIndex","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","setCalculatorMode","modeToSet","setTargetRoi","targetRoiAsTokens","MILLION","RoiCardWrapper","radii","RoiCardInner","gradients","bubblegum","RoiInputContainer","RoiDisplayContainer","RoiDollarAmount","Text","fadeOut","RoiCard","earningTokenSymbol","calculatorState","inputRef","focus","onEnterEditing","bold","textTransform","inputMode","pattern","scale","placeholder","onChange","event","currentTarget","rotate","keyframes","ArrowContainer","primary","AnimatedArrow","setKey","prevKey","prevId","StyledModal","Modal","ScrollableContainer","FullWidthButtonMenu","ButtonMenu","disabled","RoiCalculatorModal","onDismiss","onBack","stakingTokenSymbol","initialValue","balanceInputRef","assetSymbol","editingUnit","editingValue","conversionUnit","conversionValue","headerBackground","mb","asset","currencyValue","innerRef","switchEditingUnits","onFocus","lte","toLocaleUpperCase","activeIndex","onItemClick","flex","checked","useDebounce","delay","debouncedValue","setDebouncedValue","handler","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","walletconnect","close","ethereum","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","registerToken","tokenAdded","uriToHttp","uri","substr","teamsList","team","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","teamId","getTeam","fetchTeams","getTeams","usePreviousValue","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","TransactionSubmittedContent","currencyToAdd","strokeWidth","isMetaMask","ml","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","content","handleDismiss","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","registrarContract","resolverAddress","resolverAddressResult","resolverContract","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","tokenIn","tokenOut","DEFAULT_META","StyledPage","Container","lg","PageMeta","pathname","cakePriceUsd","cakePriceUsdDisplay","pageMeta","startsWith","getCustomMeta","pageTitle","join","property","Page","gasMarginPer10000","rawGasEstimation","gasEstimation","callWithEstimateGas","stakeFarm","enterStaking","wait","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","getActivePools","eligiblePools","startBlockCalls","endBlockCalls","startBlocks","endBlocks","poolCheck","StyledSVG","svg","stroke","CircleLoader","rest","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","CoreTag","outline","startIcon","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag","rpcUrl","getNodeUrl","injected","InjectedConnector","supportedChainIds","rpc","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","Web3Provider","signMessage","BinanceChain","bnbSign","signature","wc","wcMessage","hexlify","toUtf8Bytes","signPersonalMessage","TransactionState","IconWrapper","failure","Transaction","renderTransactions","TransactionsModal","sortedRecentTransactions","confirmed","clearAllTransactionsCallback","Transactions","useModal","onPresentTransactionsModal","AppHeaderContainer","AppHeader","subtitle","helper","backTo","noConfig","Link","show","GlobalSettings","BodyWrapper","AppBody","blockSlice","REACT_APP_NODE_ALT","sample","parseENSAddress","ensAddress","ensPath","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","contenthashToUri","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","contenthash","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","nanoid","ToastsProvider","setToasts","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","toastInfo","toastSuccess","toastWarning","ToastListener","StyledInput","input","inputRegex","Input","React","nextUserInput","target","autoComplete","autoCorrect","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","translatedLabel","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","className","val","transformProfileResponse","profileResponse","userId","numberPoints","profileContract","getUserProfile","apiRes","nftToken","Cookies","avatar","domain","secure","expires","campaigns","badge","campaignMap","campaign","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubstrings","trim","Dots","span","images","md","ipfs","textColor","useTotalSupply","totalSupply","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","teamData","onChainTeamData","serializedTokensMap","maxWidth","useFetchProfile","useProfileForAddress","profileState","setProfileState","hasAddressChanged","fetchProfileForAddress","useAchievementsForAddress","getAchievements","hasProfile","useGetProfileAvatar","setStateLastUpdated","previousLastUpdated","getImageUrlFromToken","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","TokenImage","src","xs","flexGrow","history","createBrowserHistory","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","VISIBILITY_STATE_SUPPORTED","document","visibilityState","isVisible","setIsVisible","handleVisibilityChange","addEventListener","removeEventListener","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","transformUserData","transformPool","quoteTokenAddress","toLocaleLowerCase","getUserPointIncreaseEvents","pointIncreaseEvents","userPoint","campaignMeta","getAchievementTitle","getAchievementDescription","MAX_USER_LOTTERIES_REQUEST_SIZE","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","nodeRound","ticketDataForRound","roundTickets","totalTickets","nodeRoundsWithGraphData","userNodeRound","userGraphRound","graphResponseRound","nodeRoundData","lastCombinedDataRound","lastCombinedDataRoundIndex","graphRound","remainingSubgraphRounds","splice","getGraphLotteryUser","blankUser","totalCake","userRes","getUserLotteryData","idsForTicketsNodeCall","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","graphResponse","mergedRoundData","graphResponseWithNodeRounds","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","hidden","useIsBrowserTabActive","interval","DetailsFooter","invertedContrast","UnsupportedModal","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","onError","ImportToken","handleCurrencySelect","setConfirmed","addToken","inactiveTokenList","gridGap","userSelect","maxAmountSpend","greaterThan","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","setUserSlippageTolerance","setTtl","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","RiskyLow","RiskyHigh","InvalidInput","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","flexWrap","onBlur","e","isWarning","isSuccess","ExpertModal","setShowConfirmExpertModal","setShowExpertModeAcknowledgement","toggleExpertMode","isRememberChecked","setIsRememberChecked","prompt","GasSettings","setGasPrice","SettingsModal","showConfirmExpertModal","showExpertModeAcknowledgement","setSingleHopOnly","pb","borderTop","TransactionSettings","onPresentSettingsModal","ens","resolvedContentHash","useENSContentHash","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","claimStatusCalls","pointCenterIfoABI","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","ZERO","useMintState","ConfirmAddModalBottom","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity","currencyIdA","currencyIdB","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","minWidth","marginTop","showUnwrapped","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","lastOraclePrice","totalHistory","currentHistoryPage","hasHistoryLoaded","claimableStatuses","leaderboard","selectedAddress","loadingState","filters","timePeriod","hasMoreResults","addressResults","initializePredictions","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","ledgerResponses","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","fetchNodeHistory","page","userRoundsLength","emptyResult","maxPages","ceil","lt","userRounds","epochStr","roundData","reduxRound","ledger","ledgerAmount","filterLeaderboard","totalBets_gte","usersResponse","fetchAddressResult","rejectWithValue","filterNextPageLeaderboard","predictionsSlice","setLeaderboardFilter","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markAsCollected","setSelectedAddress","IDLE","newestRound","maxBy","futureRound","futureRounds","currentRound","initializationState","UNINITIALIZED","isFetchingMoreNfts","latestFetchAt","lastUpdateAt","userNftsInitializationState","activity","fetchCollections","collectionsMarket","fetchCollection","fetchNftsFromCollections","nftsMarket","apiMetadata","traitType","displayType","updateNftTokensData","fetchNftsByBunnyId","existingMetadata","fetchUserNfts","updateUserNft","marketDataForNft","metadataForNft","removeUserNft","addUserNft","fetchUserActivity","userActivity","NftMarket","INITIALIZED","existingNftsInState","ERROR","INITIALIZING","userNftsState","nftToUpdate","indexInState","copyOfState","nftToRemove","Outer","Inner","PageHeader","isTransitioning","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","getLotteriesData","lotteries","fetchUserLotteries","fetchAdditionalUserLotteries","additionalUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","mergedRounds","PageLoader","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","hours","minutes","floor","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ListItem","li","Select","onOptionChange","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","toggling","stopPropagation","handleClickOutside","option","selectedIndex","FixedHeightRow","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","headers","body","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","votingSlice","_inValid","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","MAX_LOTTERIES_REQUEST_SIZE","applyNodeDataToLotteriesGraphResponse","nodeData","ticketPrice","totalUsers","winningTickets","graphRoundData","getGraphLotteries","idsForNodesCall","mergedData","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","Loading","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","NaN","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","useIntersectionObserver","observerRef","intersectionObserverRef","observerIsSet","setObserverIsSet","isIntersecting","setIsIntersecting","IntersectionObserver","rootMargin","threshold","observe","disconnect","FlexLayout","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","BaseWrapper","disable","CommonBases","onSelect","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","opacity","currencyKey","StyledBalanceText","FixedContentRow","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","CurrencyModalView","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","paddingTop","marginLeft","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","Manage","showLists","setShowLists","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","InputWrapper","SearchInput","onChangeCallback","searchText","setSearchText","debouncedOnChange","debounce","Updater","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","WalletView","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","useUserAgent","documentElement","setAttribute","navigator","userAgent","useScrollOnRouteChange","unlisten","listen","scroll","left","behavior","GlobalStyle","createGlobalStyle","icon","showItemsOnMobile","Address","Tooltip","isTooltipDisplayed","contrast","CopyAddress","setIsTooltipDisplayed","displayTooltip","readOnly","clipboard","permissions","writeText","queryCommandSupported","ele","createElement","appendChild","select","execCommand","removeChild","WalletInfo","hasLowBnbBalance","cakeBalance","cakeFetchStatus","fontWeight","TxnIcon","Summary","TxnLink","renderIcon","txn","spin","TransactionRow","WalletTransactions","sortedTransactions","minHeight","LOW_BNB_BALANCE","ModalHeader","UIKitModalHeader","Tabs","WalletModal","initialView","WALLET_INFO","view","setView","newIndex","fullWidth","TRANSACTIONS","WalletUserMenuItem","onPresentWalletModal","UserMenu","onPresentTransactionModal","avatarSrc","getActiveSubMenuItem","menuItem","activeSubMenuItems","subMenuItem","subMenuItem1","subMenuItem2","Menu","activeMenuItem","menuConfig","getActiveMenuItem","activeSubMenuItem","userMenu","globalMenu","currentLang","langs","setLang","links","subLinks","hideSubNav","activeItem","activeSubItem","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","AnniversaryImage","img","showConfetti","confetti","particleCount","startVelocity","gravity","spread","origin","y","AnniversaryAchievementModal","setIsLoading","claimAnniversaryPoints","handleClick","endIcon","GlobalCheckClaimStatus","excludeLocations","hasDisplayedModal","canClaimAnniversaryPoints","setCanClaimAnniversaryPoints","onPresentAnniversaryModal","canClaim","canClaimAnniversary","fetchClaimAnniversaryStatus","matchesSomeLocations","useCakeVault","totalSharesAsString","pricePerFullShareAsString","totalCakeInVaultAsString","estimatedCakeBountyRewardAsString","totalPendingCakeHarvestAsString","userSharesAsString","cakeAtLastUserActionAsString","ApyLabelContainer","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","plus","onPresentApyModal","StyledCard","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","manualTooltipText","autoTooltipText","CakeVaultTokenPairImage","primaryTokenSrc","CardHeader","backgroundDisabled","StyledCardHeader","isStaking","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","cakeContract","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","StyledLink","NotEnoughTokensModal","cardHeader","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","units","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","handleUnstake","onUnstake","AnnualRoiContainer","AnnualRoiDisplay","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","showRoiCalculator","setShowRoiCalculator","getCalculatedStakingLimit","fullDecimalStakeAmount","userNotEnoughToken","usdValueStaked","formattedUsdValueStaked","annualRoi","formattedAnnualRoi","getTokenLink","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","handleHarvestConfirm","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","callOptions","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","RecentCakeProfitRow","VaultCardActions","ToggleView","onToggle","handleToggle","CARD","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","Divider","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","right","BountyCard","onPresentBountyModal","ButtonText","HelpButton","BaseCell","CellContent","StyledCell","NameCell","isMobile","useMatchBreakpoints","hasVaultShares","showStakedTag","showSubtitle","EarningsCell","labelText","AprLabelContainer","Apr","showIcon","openRoiModal","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","showLoading","ArrowIcon","ChevronDownIcon","toggled","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","lineHeight","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","AutoHarvestAction","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isXs","isSm","isMd","poolStakingTokenBalance","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","AutoHarvest","Harvest","Stake","HelpIconWrapper","AutoEarningsCell","AutoAprCell","StyledRow","PoolRow","isLg","isXl","isXxl","isTablet","isDesktop","isLargerScreen","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Pools","usePools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","useFetchCakeVault","fetchPoolsPublicData","useFetchPublicPoolsData","useFetchUserPools","poolsCurrentlyVisible","chosenPools","showFinishedPools","lowercaseQuery","poolsToSort","sortPools","cardLayout","tableLayout","SwapWarningTokens","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","estimatedText","transactionRevertText","truncatedRecipient","recipientSentToText","postSentToText","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","component","Label","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmWord","word","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","entries","warningTokenConfig","warningTokenData","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","frameBorder","allow","rel","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","RedirectPathToSwapOnly","RedirectToSwap","Home","lazy","Farms","FarmAuction","Lottery","Ifos","NotFound","Teams","Team","TradingCompetition","Predictions","PredictionsLeaderboard","Voting","Proposal","CreateProposal","Liquidity","PoolFinder","RemoveLiquidity","Info","ProfileCreation","Global","exact","strict","iterations","ThemeProviderWrapper","dark","light","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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BAEFoB,IAAK,IAAIf,IACPL,EACA,6CACA,GACA,MACA,6BACA,4BAEFqB,KAAM,IAAIhB,IACRL,EACA,6CACA,GACA,OACA,uBACA,8BAEFsB,KAAM,IAAIjB,IACRL,EACA,6CACA,GACA,OACA,eACA,sBAEFuB,SAAU,IAAIlB,IACZL,EACA,6CACA,GACA,WACA,iBACA,6BAEFwB,KAAM,IAAInB,IACRL,EACA,6CACA,GACA,OACA,aACA,yBAEFyB,MAAO,IAAIpB,IACTL,EACA,6CACA,GACA,QACA,mBACA,2BAEF0B,IAAK,IAAIrB,IACPL,EACA,6CACA,GACA,MACA,cACA,yBAEF2B,MAAO,IAAItB,IACTL,EACA,6CACA,GACA,QACA,gBACA,4BAEF4B,OAAQ,IAAIvB,IACVL,EACA,6CACA,GACA,SACA,eACA,8BAEF6B,IAAK,IAAIxB,IACPL,EACA,6CACA,GACA,MACA,cACA,2BAEF8B,MAAO,IAAIzB,IACTL,EACA,6CACA,EACA,QACA,cACA,wBAEF+B,MAAO,IAAI1B,IACTL,EACA,6CACA,EACA,QACA,cACA,0BAEFgC,MAAO,IAAI3B,IACTL,EACA,6CACA,GACA,QACA,iBACA,gCAEFiC,IAAK,IAAI5B,IACPL,EACA,6CACA,GACA,MACA,cACA,yBAEFkC,SAAU,IAAI7B,IACZL,EACA,6CACA,GACA,WACA,kBACA,yBAEFmC,KAAM,IAAI9B,IACRL,EACA,6CACA,GACA,OACA,gBACA,wBAEFoC,KAAM,IAAI/B,IACRL,EACA,6CACA,GACA,OACA,iBACA,wBAEFqC,IAAK,IAAIhC,IACPL,EACA,6CACA,GACA,MACA,0BACA,mBAEFsC,KAAM,IAAIjC,IACRL,EACA,6CACA,GACA,OACA,oBACA,oCAEFuC,KAAM,IAAIlC,IACRL,EACA,6CACA,GACA,OACA,aACA,+BAEFwC,MAAO,IAAInC,IACTL,EACA,6CACA,GACA,QACA,qBACA,gCAEFyC,GAAI,IAAIpC,IACNL,EACA,6CACA,GACA,KACA,2BACA,+BAEF0C,IAAK,IAAIrC,IACPL,EACA,6CACA,GACA,MACA,sBACA,6BAEF2C,MAAO,IAAItC,IACTL,EACA,6CACA,GACA,QACA,cACA,0BAEF4C,MAAO,IAAIvC,IACTL,EACA,6CACA,GACA,QACA,kBACA,yBAEF6C,QAAS,IAAIxC,IACXL,EACA,6CACA,GACA,MACA,oBACA,4BAEF8C,KAAM,IAAIzC,IAAML,EAAS,6CAA8C,GAAI,OAAQ,aAAc,oBACjG+C,IAAK,IAAI1C,IACPL,EACA,6CACA,GACA,MACA,wBACA,4BAEFgD,IAAK,IAAI3C,IACPL,EACA,6CACA,GACA,MACA,qBACA,4BAEFiD,OAAQ,IAAI5C,IACVL,EACA,6CACA,GACA,SACA,eACA,uBAEFkD,OAAQ,IAAI7C,IACVL,EACA,6CACA,GACA,SACA,uBACA,iCAEFmD,KAAM,IAAI9C,IACRL,EACA,6CACA,GACA,OACA,kBACA,yBAEFoD,IAAK,IAAI/C,IAAML,EAAS,6CAA8C,GAAI,MAAO,aAAc,qBAC/FqD,KAAM,IAAIhD,IACRL,EACA,6CACA,GACA,OACA,aACA,yBAEFsD,IAAK,IAAIjD,IACPL,EACA,6CACA,GACA,MACA,kBACA,6BAEFuD,MAAO,IAAIlD,IACTL,EACA,6CACA,GACA,QACA,qBACA,iCAEFwD,MAAO,IAAInD,IACTL,EACA,6CACA,EACA,QACA,0BACA,oCAEFyD,IAAK,IAAIpD,IACPL,EACA,6CACA,GACA,MACA,gBACA,6BAEF0D,IAAK,IAAIrD,IACPL,EACA,6CACA,GACA,MACA,mBACA,kCAEF2D,KAAM,IAAItD,IACRL,EACA,6CACA,EACA,OACA,aACA,wBAEF4D,KAAM,IAAIvD,IACRL,EACA,6CACA,GACA,OACA,kBACA,yBAEF6D,IAAK,IAAIxD,IACPL,EACA,6CACA,GACA,MACA,iBACA,qBAEF8D,KAAM,IAAIzD,IACRL,EACA,6CACA,GACA,OACA,aACA,yBAEF+D,IAAK,IAAI1D,IACPL,EACA,6CACA,GACA,MACA,uBACA,qBAEFgE,IAAK,IAAI3D,IACPL,EACA,6CACA,EACA,MACA,oBACA,gCAEFiE,MAAO,IAAI5D,IACTL,EACA,6CACA,EACA,QACA,2BACA,sCAEFkE,KAAM,IAAI7D,IACRL,EACA,6CACA,GACA,OACA,mBACA,+BAEFmE,KAAM,IAAI9D,IACRL,EACA,6CACA,GACA,OACA,kCACA,qBAEFoE,IAAK,IAAI/D,IACPL,EACA,6CACA,GACA,MACA,kBACA,8BAEFqE,MAAO,IAAIhE,IACTL,EACA,6CACA,GACA,QACA,wBACA,uBAEFsE,KAAM,IAAIjE,IACRL,EACA,6CACA,GACA,OACA,aACA,sBAEFuE,QAAS,IAAIlE,IACXL,EACA,6CACA,GACA,UACA,wBACA,4BAEFwE,IAAK,IAAInE,IACPL,EACA,6CACA,GACA,MACA,iBACA,wBAEFyE,KAAM,IAAIpE,IACRL,EACA,6CACA,GACA,OACA,aACA,0BAEF0E,IAAK,IAAIrE,IACPL,EACA,6CACA,GACA,MACA,YACA,0BAEF2E,IAAK,IAAItE,IACPL,EACA,6CACA,GACA,MACA,gBACA,2BAEF4E,KAAM,IAAIvE,IACRL,EACA,6CACA,GACA,OACA,uBACA,2BAEF6E,IAAK,IAAIxE,IACPL,EACA,6CACA,GACA,MACA,iBACA,6BAEF8E,KAAM,IAAIzE,IACRL,EACA,6CACA,EACA,OACA,eACA,2BAEF+E,IAAK,IAAI1E,IACPL,EACA,6CACA,GACA,MACA,gBACA,uBAEFgF,KAAM,IAAI3E,IACRL,EACA,6CACA,GACA,OACA,eACA,uBAEFiF,MAAO,IAAI5E,IACTL,EACA,6CACA,GACA,QACA,iBACA,yBAEFkF,MAAO,IAAI7E,IACTL,EACA,6CACA,GACA,QACA,4BACA,uBAEFmF,KAAM,IAAI9E,IACRL,EACA,6CACA,GACA,OACA,aACA,sBAEFoF,MAAO,IAAI/E,IACTL,EACA,6CACA,GACA,QACA,sBACA,6BAEFqF,IAAK,IAAIhF,IACPL,EACA,6CACA,EACA,MACA,gBACA,0BAEFsF,IAAK,IAAIjF,IACPL,EACA,6CACA,EACA,MACA,yBACA,0BAEFuF,GAAI,IAAIlF,IACNL,EACA,6CACA,EACA,KACA,gBACA,0BAEFwF,KAAM,IAAInF,IACRL,EACA,6CACA,GACA,OACA,qBACA,yBAEFyF,IAAK,IAAIpF,IACPL,EACA,6CACA,EACA,MACA,iBACA,0BAEF0F,IAAK,IAAIrF,IACPL,EACA,6CACA,EACA,MACA,4BACA,0BAEF2F,IAAK,IAAItF,IACPL,EACA,6CACA,GACA,MACA,iBACA,8CAEF4F,KAAM,IAAIvF,IACRL,EACA,6CACA,GACA,OACA,aACA,6BAEF6F,IAAK,IAAIxF,IACPL,EACA,6CACA,GACA,MACA,qBACA,4BAEF8F,KAAM,IAAIzF,IACRL,EACA,6CACA,EACA,OACA,aACA,wBAEF+F,QAAS,IAAI1F,IACXL,EACA,6CACA,GACA,UACA,eACA,sBAEFgG,KAAM,IAAI3F,IACRL,EACA,6CACA,GACA,OACA,gBACA,4BAEFiG,IAAK,IAAI5F,IACPL,EACA,6CACA,GACA,MACA,oBACA,4BAEFkG,IAAK,IAAI7F,IACPL,EACA,6CACA,GACA,MACA,iBACA,yBAEFmG,IAAK,IAAI9F,IACPL,EACA,6CACA,EACA,MACA,eACA,kCAEFoG,IAAK,IAAI/F,IACPL,EACA,6CACA,GACA,MACA,2BACA,kCAEFqG,IAAK,IAAIhG,IAAML,EAAS,6CAA8C,GAAI,MAAO,cAAe,qBAChGsG,MAAO,IAAIjG,IACTL,EACA,6CACA,GACA,QACA,sBACA,4BAEFuG,IAAK,IAAIlG,IAAML,EAAS,6CAA8C,GAAI,MAAO,cAAe,qBAChGwG,MAAO,IAAInG,IACTL,EACA,6CACA,GACA,QACA,yBACA,sBAEFyG,KAAM,IAAIpG,IACRL,EACA,6CACA,GACA,OACA,yBACA,6BAEF0G,KAAM,IAAIrG,IACRL,EACA,6CACA,GACA,OACA,sBACA,0BAEF2G,KAAM,IAAItG,IACRL,EACA,6CACA,GACA,OACA,qBACA,yBAEF4G,KAAM,IAAIvG,IACRL,EACA,6CACA,GACA,OACA,qBACA,8CAEF6G,MAAO,IAAIxG,IACTL,EACA,6CACA,GACA,QACA,4BACA,2BAEF8G,OAAQ,IAAIzG,IACVL,EACA,6CACA,GACA,SACA,6BACA,2BAEF+G,MAAO,IAAI1G,IACTL,EACA,6CACA,GACA,QACA,4BACA,2BAEFgH,MAAO,IAAI3G,IACTL,EACA,6CACA,GACA,QACA,4BACA,2BAEFiH,IAAK,IAAI5G,IACPL,EACA,6CACA,GACA,MACA,6BACA,yBAEFkH,IAAK,IAAI7G,IACPL,EACA,6CACA,GACA,MACA,6BACA,4BAEFmH,KAAM,IAAI9G,IACRL,EACA,6CACA,GACA,OACA,kCACA,6BAEFoH,IAAK,IAAI/G,IACPL,EACA,6CACA,GACA,MACA,6BACA,6BAEFqH,IAAK,IAAIhH,IACPL,EACA,6CACA,GACA,MACA,wBACA,mBAEFsH,KAAM,IAAIjH,IACRL,EACA,6CACA,GACA,OACA,8BACA,uBAEFuH,IAAK,IAAIlH,IACPL,EACA,6CACA,GACA,MACA,wBACA,2BAEFwH,KAAM,IAAInH,IACRL,EACA,6CACA,GACA,OACA,2BACA,2BAEFyH,KAAM,IAAIpH,IACRL,EACA,6CACA,GACA,OACA,iCACA,wBAEF0H,IAAK,IAAIrH,IACPL,EACA,6CACA,GACA,MACA,0BACA,0BAEF2H,IAAK,IAAItH,IACPL,EACA,6CACA,GACA,MACA,iCACA,qBAEF4H,IAAK,IAAIvH,IACPL,EACA,6CACA,GACA,MACA,kCACA,0BAEF6H,IAAK,IAAIxH,IACPL,EACA,6CACA,GACA,MACA,4BACA,wBAEF8H,IAAK,IAAIzH,IACPL,EACA,6CACA,GACA,MACA,6BACA,wBAEF+H,KAAM,IAAI1H,IACRL,EACA,6CACA,GACA,OACA,mBACA,+BAEFgI,OAAQ,IAAI3H,IACVL,EACA,6CACA,GACA,SACA,mBACA,2BAEFiI,MAAO,IAAI5H,IACTL,EACA,6CACA,GACA,QACA,yBACA,2BAEFkI,QAAS,IAAI7H,IACXL,EACA,6CACA,GACA,UACA,2BACA,2BAEFmI,MAAO,IAAI9H,IACTL,EACA,6CACA,GACA,QACA,iBACA,yBAEFoI,IAAK,IAAI/H,IACPL,EACA,6CACA,GACA,MACA,iBACA,uBAEFqI,IAAK,IAAIhI,IACPL,EACA,6CACA,GACA,MACA,wBACA,2BAEFsI,KAAM,IAAIjI,IACRL,EACA,6CACA,GACA,OACA,oBACA,uBAEFuI,IAAK,IAAIlI,IACPL,EACA,6CACA,GACA,MACA,oBACA,2BAEFwI,KAAM,IAAInI,IACRL,EACA,6CACA,GACA,OACA,mBACA,kCAEFyI,IAAK,IAAIpI,IACPL,EACA,6CACA,GACA,MACA,gBACA,4BAEF0I,KAAM,IAAIrI,IACRL,EACA,6CACA,EACA,OACA,qBACA,yBAEF2I,KAAM,IAAItI,IACRL,EACA,6CACA,EACA,OACA,yBACA,6BAEF4I,IAAK,IAAIvI,IACPL,EACA,6CACA,GACA,MACA,gBACA,gCAEF6I,IAAK,IAAIxI,IACPL,EACA,6CACA,GACA,MACA,sBACA,6BAEF8I,KAAM,IAAIzI,IACRL,EACA,6CACA,GACA,OACA,qBACA,iCAEF+I,IAAK,IAAI1I,IACPL,EACA,6CACA,GACA,MACA,sBACA,qBAEFgJ,KAAM,IAAI3I,IACRL,EACA,6CACA,GACA,OACA,aACA,2BAEFiJ,KAAM,IAAI5I,IAAML,EAAS,6CAA8C,GAAI,OAAQ,aAAc,oBACjGkJ,IAAK,IAAI7I,IAAML,EAAS,6CAA8C,EAAG,MAAO,YAAa,oBAC7FmJ,KAAM,IAAI9I,IACRL,EACA,6CACA,GACA,OACA,iBACA,wBAEFoJ,OAAQ,IAAI/I,IACVL,EACA,6CACA,GACA,SACA,eACA,+BAEFqJ,IAAK,IAAIhJ,IACPL,EACA,6CACA,GACA,MACA,mBACA,+BAEFsJ,KAAM,IAAIjJ,IACRL,EACA,6CACA,GACA,OACA,qBACA,yBAEFuJ,KAAM,IAAIlJ,IACRL,EACA,6CACA,GACA,OACA,kBACA,yBAEFwJ,IAAK,IAAInJ,IACPL,EACA,6CACA,GACA,MACA,yBACA,6BAEFyJ,IAAK,IAAIpJ,IACPL,EACA,6CACA,GACA,MACA,wBACA,wBAEF0J,IAAK,IAAIrJ,IACPL,EACA,6CACA,EACA,MACA,6BACA,2BAEF2J,KAAM,IAAItJ,IACRL,EACA,6CACA,GACA,OACA,SACA,4BAEF4J,KAAM,IAAIvJ,IACRL,EACA,6CACA,GACA,OACA,YACA,yBAEF6J,IAAK,IAAIxJ,IACPL,EACA,6CACA,GACA,MACA,yBACA,gCAEF8J,MAAO,IAAIzJ,IACTL,EACA,6CACA,GACA,QACA,iBACA,+BAEF+J,IAAK,IAAI1J,IACPL,EACA,6CACA,GACA,MACA,oBACA,8BAEFgK,IAAK,IAAI3J,IACPL,EACA,6CACA,GACA,MACA,YACA,oCAEFiK,MAAO,IAAI5J,IACTL,EACA,6CACA,GACA,QACA,cACA,0BAEFkK,IAAK,IAAI7J,IACPL,EACA,6CACA,GACA,MACA,gBACA,4BAEFmK,YAAM,IAAI9J,IACRL,EACA,6CACA,EACA,YACA,sBACA,8BAEFoK,IAAK,IAAI/J,IACPL,EACA,6CACA,EACA,MACA,WACA,6BAEFqK,IAAK,IAAIhK,IACPL,EACA,6CACA,GACA,MACA,iBACA,yBAEFsK,IAAK,IAAIjK,IACPL,EACA,6CACA,GACA,MACA,qBACA,yBAEFuK,IAAK,IAAIlK,IACPL,EACA,6CACA,GACA,MACA,+BACA,+BAEFwK,IAAK,IAAInK,IACPL,EACA,6CACA,GACA,MACA,aACA,yBAEFyK,IAAK,IAAIpK,IACPL,EACA,6CACA,GACA,MACA,YACA,yBAEF0K,MAAO,IAAIrK,IACTL,EACA,6CACA,GACA,QACA,4BACA,2BAEF2K,KAAM,IAAItK,IACRL,EACA,6CACA,GACA,OACA,aACA,2BAEF4K,IAAK,IAAIvK,IACPL,EACA,6CACA,GACA,MACA,wBACA,0BAEF6K,IAAK,IAAIxK,IACPL,EACA,6CACA,GACA,MACA,gCACA,0BAEF8K,KAAM,IAAIzK,IACRL,EACA,6CACA,GACA,OACA,aACA,uBAEF+K,IAAK,IAAI1K,IACPL,EACA,6CACA,EACA,MACA,mBACA,wBAEFgL,KAAM,IAAI3K,IACRL,EACA,6CACA,EACA,OACA,uBACA,yBAEFiL,KAAM,IAAI5K,IACRL,EACA,6CACA,GACA,OACA,kBACA,0BAEFkL,IAAK,IAAI7K,IACPL,EACA,6CACA,GACA,MACA,eACA,2BAEFmL,KAAM,IAAI9K,IACRL,EACA,6CACA,GACA,OACA,iBACA,yBAEFoL,aAAO,IAAI/K,IACTL,EACA,6CACA,EACA,aACA,iBACA,8BAEFqL,IAAK,IAAIhL,IACPL,EACA,6CACA,GACA,MACA,eACA,2BAEFsL,KAAM,IAAIjL,IACRL,EACA,6CACA,GACA,OACA,eACA,uBAEFuL,MAAO,IAAIlL,IACTL,EACA,6CACA,EACA,QACA,qBACA,2BAEFwL,KAAM,IAAInL,IACRL,EACA,6CACA,GACA,OACA,aACA,8BAEFyL,KAAM,IAAIpL,IACRL,EACA,6CACA,GACA,OACA,aACA,yBAEF0L,IAAK,IAAIrL,IAAML,EAAS,6CAA8C,GAAI,MAAO,YAAa,wBAC9F2L,IAAK,IAAItL,IACPL,EACA,6CACA,EACA,MACA,eACA,wBAEF4L,KAAM,IAAIvL,IACRL,EACA,6CACA,GACA,OACA,aACA,gCAEF6L,KAAM,IAAIxL,IACRL,EACA,6CACA,GACA,OACA,gBACA,8BAEF8L,IAAK,IAAIzL,IACPL,EACA,6CACA,GACA,MACA,kBACA,0BAEF+L,OAAQ,IAAI1L,IACVL,EACA,6CACA,GACA,SACA,cACA,0BAEFgM,MAAO,IAAI3L,IACTL,EACA,6CACA,GACA,QACA,wBACA,uBAEFiM,GAAI,IAAI5L,IACNL,EACA,6CACA,GACA,KACA,gBACA,2BAEFkM,IAAK,IAAI7L,IACPL,EACA,6CACA,GACA,MACA,qBACA,qBAEFmM,KAAM,IAAI9L,IACRL,EACA,6CACA,GACA,OACA,4BACA,4BAEFoM,KAAM,IAAI/L,IACRL,EACA,6CACA,GACA,OACA,qBACA,yBAEFqM,IAAK,IAAIhM,IACPL,EACA,6CACA,GACA,MACA,gBACA,uBAEFsM,IAAK,IAAIjM,IACPL,EACA,6CACA,GACA,MACA,mBACA,0BAEFuM,KAAM,IAAIlM,IACRL,EACA,6CACA,GACA,OACA,oBACA,mCAEFwM,GAAI,IAAInM,IAAML,EAAS,6CAA8C,GAAI,KAAM,WAAY,wBAC3FyM,IAAK,IAAIpM,IACPL,EACA,6CACA,GACA,MACA,iBACA,4BAEF0M,KAAM,IAAIrM,IACRL,EACA,6CACA,GACA,OACA,cACA,2BAEF2M,OAAQ,IAAItM,IACVL,EACA,6CACA,GACA,SACA,kBACA,8BAEF4M,MAAO,IAAIvM,IACTL,EACA,6CACA,GACA,QACA,kBACA,yBAEF6M,KAAM,IAAIxM,IACRL,EACA,6CACA,EACA,OACA,aACA,+BAEF8M,GAAI,IAAIzM,IACNL,EACA,6CACA,GACA,KACA,gBACA,uBAEF+M,IAAK,IAAI1M,IAAML,EAAS,6CAA8C,EAAG,MAAO,eAAgB,sBAChGgN,IAAK,IAAI3M,IACPL,EACA,6CACA,GACA,MACA,eACA,0BAEFiN,IAAK,IAAI5M,IACPL,EACA,6CACA,GACA,MACA,yBACA,wBAEFkN,IAAK,IAAI7M,IACPL,EACA,6CACA,GACA,MACA,wBACA,4BAEFmN,SAAU,IAAI9M,IACZL,EACA,6CACA,EACA,WACA,iBACA,yBAEFoN,IAAK,IAAI/M,IACPL,EACA,6CACA,GACA,MACA,qCACA,6BAEFqN,IAAK,IAAIhN,IACPL,EACA,6CACA,GACA,MACA,eACA,uBAEFsN,KAAM,IAAIjN,IACRL,EACA,6CACA,GACA,OACA,gBACA,wBAEFuN,IAAK,IAAIlN,IACPL,EACA,6CACA,GACA,MACA,mBACA,oCAEFwN,KAAM,IAAInN,IACRL,EACA,6CACA,GACA,OACA,aACA,iCAEFyN,GAAI,IAAIpN,IACNL,EACA,6CACA,GACA,KACA,kBACA,8BAEF0N,MAAO,IAAIrN,IACTL,EACA,6CACA,GACA,QACA,qBACA,yBAEF2N,KAAM,IAAItN,IACRL,EACA,6CACA,GACA,OACA,YACA,0BAIS4N,EAAgB,CAC3BxN,KAAM,IAAIC,IACRH,EACA,6CACA,GACA,OACA,cACA,4BAEFK,KAAM,IAAIF,IACRH,EACA,6CACA,GACA,OACA,oBACA,gCAEFa,KAAM,IAAIV,IACRH,EACA,6CACA,GACA,OACA,cACA,+BAEF8B,MAAO,IAAI3B,IACTH,EACA,6CACA,GACA,QACA,iBACA,gCAEF6H,KAAM,IAAI1H,IA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ET,CACE/3D,GAAI,YACJxG,KAAM,aACNssC,MAAO,uBACPiyB,MAAO,2BAET,CACE/3D,GAAI,YACJxG,KAAM,aACNssC,MAAO,uBACPiyB,MAAO,2BAET,CACE/3D,GAAI,YACJxG,KAAM,aACNssC,MAAO,uBACPiyB,MAAO,2BAET,CACE/3D,GAAI,YACJxG,KAAM,aACNssC,MAAO,2BACPiyB,MAAO,+BAET,CACE/3D,GAAI,YACJxG,KAAM,aACNssC,MAAO,0BACPiyB,MAAO,8BAET,CACE/3D,GAAI,YACJxG,KAAM,aACNssC,MAAO,yBACPiyB,MAAO,6BAET,CACE/3D,GAAI,YACJxG,KAAM,aACNssC,MAAO,yBACPiyB,MAAO,6BAET,CACE/3D,GAAI,YACJxG,KAAM,aACNssC,MAAO,yBACPiyB,MAAO,6BAET,CACE/3D,GAAI,YACJxG,KAAM,aACNssC,MAAO,6BACPiyB,MAAO,iCAET,CACE/3D,GAAI,YACJxG,KAAM,aACNssC,MAAO,0BACPiyB,MAAO,8BAET,CACE/3D,GAAI,YACJxG,KAAM,aACNssC,MAAO,yBACPiyB,MAAO,6BAET,CACE/3D,GAAI,YACJxG,KAAM,aACNssC,MAAO,yBACPiyB,MAAO,6BAET,CACE/3D,GAAI,YACJxG,KAAM,aACNssC,MAAO,yBACPiyB,MAAO,6BAET,CACE/3D,GAAI,YACJxG,KAAM,aACNssC,MAAO,6BACPiyB,MAAO,iCAET,CACE/3D,GAAI,YACJxG,KAAM,gBACNssC,MAAO,eACPhN,YAAa,qDACbi/B,MAAO,oBAET,CACE/3D,GAAI,YACJxG,KAAM,gBACNssC,MAAO,cACPhN,YAAa,mDACbi/B,MAAO,mBAET,CACE/3D,GAAI,YACJxG,KAAM,gBACNssC,MAAO,SACPhN,YAAa,iDACbi/B,MAAO,cAET,CACE/3D,GAAI,YACJxG,KAAM,gBACNssC,MAAO,QACPhN,YAAa,8CACbi/B,MAAO,aAET,CACE/3D,GAAI,YACJxG,KAAM,gBACNssC,MAAO,SACPhN,YAAa,uDACbi/B,MAAO,cAET,CACE/3D,GAAI,YACJxG,KAAM,gBACNssC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","file":"static/js/main.e6002488.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { Token } from '@pancakeswap/sdk'\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n  projectLink?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\ninterface FarmConfigBaseProps {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface SerializedFarmConfig extends FarmConfigBaseProps {\n  token: SerializedToken\n  quoteToken: SerializedToken\n}\n\nexport interface DeserializedFarmConfig extends FarmConfigBaseProps {\n  token: Token\n  quoteToken: Token\n}\n\ninterface PoolConfigBaseProps {\n  sousId: number\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport interface SerializedPoolConfig extends PoolConfigBaseProps {\n  earningToken: SerializedToken\n  stakingToken: SerializedToken\n}\n\nexport interface DeserializedPoolConfig extends PoolConfigBaseProps {\n  earningToken: Token\n  stakingToken: Token\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: string\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setProvider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setProvider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { serializeToken } from 'state/user/hooks/helpers'\nimport { SerializedToken } from './types'\n\nconst { MAINNET, TESTNET } = ChainId\n\ninterface TokenList {\n  [symbol: string]: Token\n}\n\ninterface SerializedTokenList {\n  [symbol: string]: SerializedToken\n}\n\nexport const mainnetTokens = {\n  wbnb: new Token(\n    MAINNET,\n    '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    18,\n    'WBNB',\n    'Wrapped BNB',\n    'https://www.binance.com/',\n  ),\n  // bnb here points to the wbnb contract. Wherever the currency BNB is required, conditional checks for the symbol 'BNB' can be used\n  bnb: new Token(MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'BNB', 'BNB', 'https://www.binance.com/'),\n  cake: new Token(\n    MAINNET,\n    '0xb08ba8C99A883D85D929f561B81Bb8C365A5a93b',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n    'https://pancakeswap.finance/',\n  ),\n  tlos: new Token(MAINNET, '0xb6C53431608E626AC81a9776ac3e999c5556717c', 18, 'TLOS', 'Telos', 'https://www.telos.net/'),\n  nft: new Token(MAINNET, '0x1fC9004eC7E5722891f5f38baE7678efCB11d34D', 6, 'NFT', 'APENFT', 'https://apenft.org'),\n  stephero: new Token(\n    MAINNET,\n    '0xE8176d414560cFE1Bf82Fd73B986823B89E4F545',\n    18,\n    'HERO',\n    'StepHero',\n    'https://stephero.io/',\n  ),\n  pros: new Token(MAINNET, '0xEd8c8Aa8299C10f067496BB66f8cC7Fb338A3405', 18, 'PROS', 'Prosper', 'https://prosper.so/'),\n  qbt: new Token(MAINNET, '0x17B7163cf1Dbd286E262ddc68b553D899B93f526', 18, 'QBT', 'Qubit Token', 'https://qbt.fi/'),\n  cvp: new Token(\n    MAINNET,\n    '0x5Ec3AdBDae549Dce842e24480Eb2434769e22B2E',\n    18,\n    'CVP',\n    'Concentrated Voting Power Token',\n    'https://powerpool.finance/',\n  ),\n  bscdefi: new Token(\n    MAINNET,\n    '0x40E46dE174dfB776BB89E04dF1C47d8a66855EB3',\n    18,\n    'BSCDEFI',\n    'BSC Defi blue chips token',\n    'https://powerpool.finance/',\n  ),\n  busd: new Token(\n    MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n    'https://www.paxos.com/busd/',\n  ),\n  dai: new Token(\n    MAINNET,\n    '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n    18,\n    'DAI',\n    'Dai Stablecoin',\n    'https://www.makerdao.com/',\n  ),\n  usdt: new Token(\n    MAINNET,\n    '0x55d398326f99059fF775485246999027B3197955',\n    18,\n    'USDT',\n    'Tether USD',\n    'https://tether.to/',\n  ),\n  btcb: new Token(\n    MAINNET,\n    '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n    18,\n    'BTCB',\n    'BTCb',\n    'https://bitcoin.org/',\n  ),\n  ust: new Token(\n    MAINNET,\n    '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n    18,\n    'UST',\n    'Wrapped UST Token',\n    'https://mirror.finance/',\n  ),\n  eth: new Token(\n    MAINNET,\n    '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n    18,\n    'ETH',\n    'Binance-Peg Ethereum Token',\n    'https://ethereum.org/en/',\n  ),\n  usdc: new Token(\n    MAINNET,\n    '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n    18,\n    'USDC',\n    'Binance-Peg USD Coin',\n    'https://www.centre.io/usdc',\n  ),\n  kalm: new Token(\n    MAINNET,\n    '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n    18,\n    'KALM',\n    'Kalmar Token',\n    'https://kalmar.io/',\n  ),\n  hotcross: new Token(\n    MAINNET,\n    '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n    18,\n    'HOTCROSS',\n    'Hotcross Token',\n    'https://www.hotcross.com/',\n  ),\n  belt: new Token(\n    MAINNET,\n    '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n    18,\n    'BELT',\n    'Belt Token',\n    'https://beta.belt.fi/',\n  ),\n  watch: new Token(\n    MAINNET,\n    '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n    18,\n    'WATCH',\n    'Yieldwatch Token',\n    'https://yieldwatch.net/',\n  ),\n  bry: new Token(\n    MAINNET,\n    '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n    18,\n    'BRY',\n    'Berry Token',\n    'https://berrydata.co/',\n  ),\n  wsote: new Token(\n    MAINNET,\n    '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n    18,\n    'wSOTE',\n    'Soteria Token',\n    'https://soteria.finance/',\n  ),\n  helmet: new Token(\n    MAINNET,\n    '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n    18,\n    'Helmet',\n    'Helmet Token',\n    'https://www.helmet.insure/',\n  ),\n  ten: new Token(\n    MAINNET,\n    '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n    18,\n    'TEN',\n    'Tenet Token',\n    'https://www.tenet.farm/',\n  ),\n  ditto: new Token(\n    MAINNET,\n    '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n    9,\n    'DITTO',\n    'Ditto Token',\n    'https://ditto.money/',\n  ),\n  blink: new Token(\n    MAINNET,\n    '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n    6,\n    'BLINK',\n    'Blink Token',\n    'https://blink.wink.org',\n  ),\n  syrup: new Token(\n    MAINNET,\n    '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n    18,\n    'SYRUP',\n    'SyrupBar Token',\n    'https://pancakeswap.finance/',\n  ),\n  pha: new Token(\n    MAINNET,\n    '0x0112e557d400474717056C4e6D40eDD846F38351',\n    18,\n    'PHA',\n    'Phala Token',\n    'https://phala.network',\n  ),\n  babycake: new Token(\n    MAINNET,\n    '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n    18,\n    'BABYCAKE',\n    'Baby Cake Token',\n    'https://babycake.app/',\n  ),\n  bmon: new Token(\n    MAINNET,\n    '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n    18,\n    'BMON',\n    'Binamon Token',\n    'https://binamon.org/',\n  ),\n  hero: new Token(\n    MAINNET,\n    '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n    18,\n    'HERO',\n    'Metahero Token',\n    'https://metahero.io/',\n  ),\n  wsg: new Token(\n    MAINNET,\n    '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n    18,\n    'WSG',\n    'Wall Street Games Token',\n    'https://wsg.gg/',\n  ),\n  mcrn: new Token(\n    MAINNET,\n    '0xacb2d47827C9813AE26De80965845D80935afd0B',\n    18,\n    'MCRN',\n    'Macaronswap Token',\n    'https://www.macaronswap.finance/',\n  ),\n  revv: new Token(\n    MAINNET,\n    '0x833F307aC507D47309fD8CDD1F835BeF8D702a93',\n    18,\n    'REVV',\n    'REVV Token',\n    'https://revvmotorsport.com/',\n  ),\n  skill: new Token(\n    MAINNET,\n    '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n    18,\n    'SKILL',\n    'Cryptoblades Token',\n    'https://www.cryptoblades.io/',\n  ),\n  if: new Token(\n    MAINNET,\n    '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n    18,\n    'IF',\n    'Impossible Finance Token',\n    'https://impossible.finance/',\n  ),\n  sps: new Token(\n    MAINNET,\n    '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n    18,\n    'SPS',\n    'Splinterlands Token',\n    'https://splinterlands.com',\n  ),\n  chess: new Token(\n    MAINNET,\n    '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n    18,\n    'CHESS',\n    'Chess Token',\n    'https://tranchess.com/',\n  ),\n  titan: new Token(\n    MAINNET,\n    '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n    18,\n    'TITAN',\n    'Titanswap Token',\n    'https://titanswap.org',\n  ),\n  harmony: new Token(\n    MAINNET,\n    '0x03fF0ff224f904be3118461335064bB48Df47938',\n    18,\n    'ONE',\n    'Harmony ONE Token',\n    'https://www.harmony.one/',\n  ),\n  mask: new Token(MAINNET, '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3', 18, 'MASK', 'Mask Token', 'https://mask.io/'),\n  dvi: new Token(\n    MAINNET,\n    '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n    18,\n    'DVI',\n    'Dvision Network Token',\n    'https://dvision.network/',\n  ),\n  adx: new Token(\n    MAINNET,\n    '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n    18,\n    'ADX',\n    'Adex Network Token',\n    'https://www.adex.network',\n  ),\n  bscpad: new Token(\n    MAINNET,\n    '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n    18,\n    'BSCPAD',\n    'Bscpad Token',\n    'https://bscpad.com/',\n  ),\n  rabbit: new Token(\n    MAINNET,\n    '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n    18,\n    'RABBIT',\n    'Rabbit Finance Token',\n    'https://rabbitfinance.io/earn',\n  ),\n  form: new Token(\n    MAINNET,\n    '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n    18,\n    'FORM',\n    'Formation Token',\n    'https://formation.fi/',\n  ),\n  txl: new Token(MAINNET, '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5', 18, 'TXL', 'Tixl Token', 'https://tixl.org/'),\n  orbs: new Token(\n    MAINNET,\n    '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n    18,\n    'ORBS',\n    'Orbs Token',\n    'https://www.orbs.com/',\n  ),\n  cos: new Token(\n    MAINNET,\n    '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n    18,\n    'COS',\n    'Contentos Token',\n    'https://www.contentos.io/',\n  ),\n  bunny: new Token(\n    MAINNET,\n    '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n    18,\n    'BUNNY',\n    'Pancakebunny Token',\n    'https://pancakebunny.finance/',\n  ),\n  alice: new Token(\n    MAINNET,\n    '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n    6,\n    'ALICE',\n    'My Neighbor Alice Token',\n    'https://www.myneighboralice.com/',\n  ),\n  for: new Token(\n    MAINNET,\n    '0x658A109C5900BC6d2357c87549B651670E5b0539',\n    18,\n    'FOR',\n    'Fortube Token',\n    'https://www.for.tube/home',\n  ),\n  bux: new Token(\n    MAINNET,\n    '0x211FfbE424b90e25a15531ca322adF1559779E45',\n    18,\n    'BUX',\n    'Bux Crypto Token',\n    'https://getbux.com/bux-crypto/',\n  ),\n  nuls: new Token(\n    MAINNET,\n    '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n    8,\n    'NULS',\n    'Nuls Token',\n    'https://www.nuls.io/',\n  ),\n  ramp: new Token(\n    MAINNET,\n    '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n    18,\n    'RAMP',\n    'RAMP DEFI Token',\n    'https://rampdefi.com/',\n  ),\n  bfi: new Token(\n    MAINNET,\n    '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n    18,\n    'BFI',\n    'bearn.fi Token',\n    'https://bearn.fi/',\n  ),\n  dexe: new Token(\n    MAINNET,\n    '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n    18,\n    'DEXE',\n    'DeXe Token',\n    'https://dexe.network/',\n  ),\n  bel: new Token(\n    MAINNET,\n    '0x8443f091997f06a61670B735ED92734F5628692F',\n    18,\n    'BEL',\n    'Bella Protocol Token',\n    'https://bella.fi/',\n  ),\n  tpt: new Token(\n    MAINNET,\n    '0xECa41281c24451168a37211F0bc2b8645AF45092',\n    4,\n    'TPT',\n    'Tokenpocket Token',\n    'https://www.tokenpocket.pro/',\n  ),\n  xmark: new Token(\n    MAINNET,\n    '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n    9,\n    'xMARK',\n    'Benchmark Protocol Token',\n    'https://benchmarkprotocol.finance/',\n  ),\n  bmxx: new Token(\n    MAINNET,\n    '0x4131b87F74415190425ccD873048C708F8005823',\n    18,\n    'bMXX',\n    'Multiplier Token',\n    'https://multiplier.finance/',\n  ),\n  iotx: new Token(\n    MAINNET,\n    '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n    18,\n    'IOTX',\n    'Binance-Peg IoTeX Network Token',\n    'https://iotex.io/',\n  ),\n  bor: new Token(\n    MAINNET,\n    '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n    18,\n    'BOR',\n    'BoringDAO Token',\n    'https://www.boringdao.com/',\n  ),\n  bopen: new Token(\n    MAINNET,\n    '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n    18,\n    'bOPEN',\n    'OPEN Governance Token',\n    'https://opendao.io/',\n  ),\n  dodo: new Token(\n    MAINNET,\n    '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n    18,\n    'DODO',\n    'Dodo Token',\n    'https://dodoex.io/',\n  ),\n  swingby: new Token(\n    MAINNET,\n    '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n    18,\n    'SWINGBY',\n    'Swingby Network Token',\n    'https://swingby.network/',\n  ),\n  zee: new Token(\n    MAINNET,\n    '0x44754455564474A89358B2C2265883DF993b12F0',\n    18,\n    'ZEE',\n    'Zeroswap Token',\n    'https://zeroswap.io/',\n  ),\n  swgb: new Token(\n    MAINNET,\n    '0xE40255C5d7fa7ceEc5120408C78C787CECB4cfdb',\n    18,\n    'SWGb',\n    'SWGb Token',\n    'https://swirgepay.com/',\n  ),\n  swg: new Token(\n    MAINNET,\n    '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n    18,\n    'SWG',\n    'SWG Token',\n    'https://swirgepay.com/',\n  ),\n  sfp: new Token(\n    MAINNET,\n    '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n    18,\n    'SFP',\n    'Safepal Token',\n    'https://www.safepal.io/',\n  ),\n  lina: new Token(\n    MAINNET,\n    '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n    18,\n    'LINA',\n    'Linear Finance Token',\n    'https://linear.finance/',\n  ),\n  lit: new Token(\n    MAINNET,\n    '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n    18,\n    'LIT',\n    'Litentry Token',\n    'https://www.litentry.com/',\n  ),\n  hget: new Token(\n    MAINNET,\n    '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n    6,\n    'HGET',\n    'Hedget Token',\n    'https://www.hedget.com/',\n  ),\n  bdo: new Token(\n    MAINNET,\n    '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n    18,\n    'BDO',\n    'Bdollar Token',\n    'https://bdollar.fi/',\n  ),\n  egld: new Token(\n    MAINNET,\n    '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n    18,\n    'EGLD',\n    'Elrond Token',\n    'https://elrond.com/',\n  ),\n  front: new Token(\n    MAINNET,\n    '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n    18,\n    'FRONT',\n    'Frontier Token',\n    'https://frontier.xyz/',\n  ),\n  btcst: new Token(\n    MAINNET,\n    '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n    17,\n    'BTCST',\n    'StandardBTCHashrate Token',\n    'https://www.1-b.tc/',\n  ),\n  bscx: new Token(\n    MAINNET,\n    '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n    18,\n    'BSCX',\n    'BSCX Token',\n    'https://bscex.org/',\n  ),\n  balbt: new Token(\n    MAINNET,\n    '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n    18,\n    'bALBT',\n    'AllianceBlock Token',\n    'https://allianceblock.io/',\n  ),\n  asr: new Token(\n    MAINNET,\n    '0x80D5f92C2c8C682070C95495313dDB680B267320',\n    2,\n    'ASR',\n    'AS Roma Token',\n    'https://www.chiliz.com',\n  ),\n  atm: new Token(\n    MAINNET,\n    '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n    2,\n    'ATM',\n    'Athletico Madrid Token',\n    'https://www.chiliz.com',\n  ),\n  og: new Token(\n    MAINNET,\n    '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n    2,\n    'OG',\n    'OG Nice Token',\n    'https://www.chiliz.com',\n  ),\n  reef: new Token(\n    MAINNET,\n    '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n    18,\n    'REEF',\n    'Reef.finance Token',\n    'https://reef.finance/',\n  ),\n  juv: new Token(\n    MAINNET,\n    '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n    2,\n    'JUV',\n    'Juventus Token',\n    'https://www.chiliz.com',\n  ),\n  psg: new Token(\n    MAINNET,\n    '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n    2,\n    'PSG',\n    'Paris Saint-Germain Token',\n    'https://www.chiliz.com',\n  ),\n  vai: new Token(\n    MAINNET,\n    '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n    18,\n    'VAI',\n    'VAI Stablecoin',\n    '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n  ),\n  unfi: new Token(\n    MAINNET,\n    '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n    18,\n    'UNFI',\n    'UNFI Token',\n    'https://unifiprotocol.com',\n  ),\n  twt: new Token(\n    MAINNET,\n    '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n    18,\n    'TWT',\n    'Trust Wallet Token',\n    'https://trustwallet.com/',\n  ),\n  hard: new Token(\n    MAINNET,\n    '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n    6,\n    'HARD',\n    'HARD Token',\n    'https://hard.kava.io',\n  ),\n  broobee: new Token(\n    MAINNET,\n    '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n    18,\n    'bROOBEE',\n    'ROOBEE Token',\n    'https://roobee.io/',\n  ),\n  stax: new Token(\n    MAINNET,\n    '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n    18,\n    'STAX',\n    'StableX Token',\n    'https://stablexswap.com/',\n  ),\n  nar: new Token(\n    MAINNET,\n    '0xA1303E6199b319a891b79685F0537D289af1FC83',\n    18,\n    'NAR',\n    'Narwhalswap Token',\n    'https://narwhalswap.org/',\n  ),\n  nya: new Token(\n    MAINNET,\n    '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n    18,\n    'NYA',\n    'Nyanswop Token',\n    'https://nyanswop.org/',\n  ),\n  ctk: new Token(\n    MAINNET,\n    '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n    6,\n    'CTK',\n    'Certik Token',\n    'https://www.certik.foundation/',\n  ),\n  inj: new Token(\n    MAINNET,\n    '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n    18,\n    'INJ',\n    'Injective Protocol Token',\n    'https://injectiveprotocol.com/',\n  ),\n  sxp: new Token(MAINNET, '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A', 18, 'SXP', 'Swipe Token', 'https://swipe.io/'),\n  alpha: new Token(\n    MAINNET,\n    '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n    18,\n    'ALPHA',\n    'Alpha Finance Token',\n    'https://alphafinance.io/',\n  ),\n  xvs: new Token(MAINNET, '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63', 18, 'XVS', 'Venus Token', 'https://venus.io/'),\n  sushi: new Token(\n    MAINNET,\n    '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n    18,\n    'SUSHI',\n    'Binance-Peg SushiToken',\n    'https://sushi.com/',\n  ),\n  comp: new Token(\n    MAINNET,\n    '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n    18,\n    'COMP',\n    'Compound Finance Token',\n    'https://compound.finance/',\n  ),\n  bifi: new Token(\n    MAINNET,\n    '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n    18,\n    'BIFI',\n    'Beefy Finance Token',\n    'https://beefy.finance/',\n  ),\n  dusk: new Token(\n    MAINNET,\n    '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n    18,\n    'DUSK',\n    'Dusk Network Token',\n    'https://dusk.network/',\n  ),\n  beth: new Token(\n    MAINNET,\n    '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n    18,\n    'BETH',\n    'Binance Beacon ETH',\n    'https://ethereum.org/en/eth2/beacon-chain/',\n  ),\n  mamzn: new Token(\n    MAINNET,\n    '0x3947B992DC0147D2D89dF0392213781b04B25075',\n    18,\n    'mAMZN',\n    'Wrapped Mirror AMZN Token',\n    'https://mirror.finance/',\n  ),\n  mgoogl: new Token(\n    MAINNET,\n    '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n    18,\n    'mGOOGL',\n    'Wrapped Mirror GOOGL Token',\n    'https://mirror.finance/',\n  ),\n  mnflx: new Token(\n    MAINNET,\n    '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n    18,\n    'mNFLX',\n    'Wrapped Mirror NFLX Token',\n    'https://mirror.finance/',\n  ),\n  mtsla: new Token(\n    MAINNET,\n    '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n    18,\n    'mTSLA',\n    'Wrapped Mirror TSLA Token',\n    'https://mirror.finance/',\n  ),\n  ltc: new Token(\n    MAINNET,\n    '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n    18,\n    'LTC',\n    'Binance-Peg Litecoin Token',\n    'https://litecoin.org/',\n  ),\n  ada: new Token(\n    MAINNET,\n    '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n    18,\n    'ADA',\n    ' Binance-Peg Cardano Token',\n    'https://www.cardano.org/',\n  ),\n  band: new Token(\n    MAINNET,\n    '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n    18,\n    'BAND',\n    'Binance-Peg Band Protocol Token',\n    'https://bandprotocol.com/',\n  ),\n  dot: new Token(\n    MAINNET,\n    '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n    18,\n    'DOT',\n    'Binance-Peg Polkadot Token',\n    'https://polkadot.network/',\n  ),\n  eos: new Token(\n    MAINNET,\n    '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n    18,\n    'EOS',\n    'Binance-Peg EOS Token',\n    'https://eos.io/',\n  ),\n  link: new Token(\n    MAINNET,\n    '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n    18,\n    'LINK',\n    'Binance-Peg Chainlink Token',\n    'https://chain.link/',\n  ),\n  xrp: new Token(\n    MAINNET,\n    '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n    18,\n    'XRP',\n    'Binance-Peg XRP Token',\n    'https://ripple.com/xrp/',\n  ),\n  atom: new Token(\n    MAINNET,\n    '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n    18,\n    'ATOM',\n    'Binance-Peg Cosmos Token',\n    'https://cosmos.network/',\n  ),\n  yfii: new Token(\n    MAINNET,\n    '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n    18,\n    'YFII',\n    'Binance-Peg YFII.finance Token',\n    'https://dfi.money/#/',\n  ),\n  xtz: new Token(\n    MAINNET,\n    '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n    18,\n    'XTZ',\n    'Binance-Peg Tezos Token',\n    'https://www.tezos.com/',\n  ),\n  bch: new Token(\n    MAINNET,\n    '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n    18,\n    'BCH',\n    'Binance-Peg Bitcoin Cash Token',\n    'https://bch.info/',\n  ),\n  yfi: new Token(\n    MAINNET,\n    '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n    18,\n    'YFI',\n    'Binance-Peg yearn.finance Token',\n    'https://yearn.finance/',\n  ),\n  uni: new Token(\n    MAINNET,\n    '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n    18,\n    'UNI',\n    'Binance-Peg Uniswap Token',\n    'https://uniswap.org/',\n  ),\n  fil: new Token(\n    MAINNET,\n    '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n    18,\n    'FIL',\n    'Binance-Peg Filecoin Token',\n    'https://filecoin.io/',\n  ),\n  bake: new Token(\n    MAINNET,\n    '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    18,\n    'BAKE',\n    'Bakeryswap Token',\n    'https://www.bakeryswap.org/',\n  ),\n  burger: new Token(\n    MAINNET,\n    '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n    18,\n    'BURGER',\n    'Burgerswap Token',\n    'https://burgerswap.org/',\n  ),\n  bdigg: new Token(\n    MAINNET,\n    '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n    18,\n    'bDIGG',\n    'Badger Sett Digg Token',\n    'https://badger.finance/',\n  ),\n  bbadger: new Token(\n    MAINNET,\n    '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n    18,\n    'bBadger',\n    'Badger Sett Badger Token',\n    'https://badger.finance/',\n  ),\n  trade: new Token(\n    MAINNET,\n    '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n    18,\n    'TRADE',\n    'Unitrade Token',\n    'https://unitrade.app/',\n  ),\n  pnt: new Token(\n    MAINNET,\n    '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n    18,\n    'PNT',\n    'pNetwork Token',\n    'https://ptokens.io/',\n  ),\n  mir: new Token(\n    MAINNET,\n    '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n    18,\n    'MIR',\n    'Mirror Protocol Token',\n    'https://mirror.finance/',\n  ),\n  pbtc: new Token(\n    MAINNET,\n    '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n    18,\n    'pBTC',\n    'pTokens BTC Token',\n    'https://ptokens.io/',\n  ),\n  lto: new Token(\n    MAINNET,\n    '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n    18,\n    'LTO',\n    'LTO Network Token',\n    'https://ltonetwork.com/',\n  ),\n  pcws: new Token(\n    MAINNET,\n    '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n    18,\n    'pCWS',\n    'PolyCrowns Token',\n    'https://game.seascape.network/',\n  ),\n  zil: new Token(\n    MAINNET,\n    '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n    12,\n    'ZIL',\n    'Zilliqa Token',\n    'https://www.zilliqa.com/',\n  ),\n  lien: new Token(\n    MAINNET,\n    '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n    8,\n    'LIEN',\n    'Lien Finance Token',\n    'https://lien.finance/',\n  ),\n  swth: new Token(\n    MAINNET,\n    '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n    8,\n    'SWTH',\n    'Switcheo Network Token',\n    'https://switcheo.network/',\n  ),\n  dft: new Token(\n    MAINNET,\n    '0x42712dF5009c20fee340B245b510c0395896cF6e',\n    18,\n    'DFT',\n    'Dfuture Token',\n    'https://www.dfuture.com/home',\n  ),\n  gum: new Token(\n    MAINNET,\n    '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n    18,\n    'GUM',\n    'GourmetGalaxy Token',\n    'https://gourmetgalaxy.io/',\n  ),\n  dego: new Token(\n    MAINNET,\n    '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n    18,\n    'DEGO',\n    'Dego Finance Token',\n    'https://bsc.dego.finance/home',\n  ),\n  nrv: new Token(\n    MAINNET,\n    '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n    18,\n    'NRV',\n    'Nerve Finance Token',\n    'https://nerve.fi/',\n  ),\n  easy: new Token(\n    MAINNET,\n    '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n    18,\n    'EASY',\n    'EASY Token',\n    'https://easyfi.network/',\n  ),\n  oddz: new Token(MAINNET, '0xCD40F2670CF58720b694968698A5514e924F742d', 18, 'ODDZ', 'Oddz Token', 'https://oddz.fi/'),\n  hoo: new Token(MAINNET, '0xE1d1F66215998786110Ba0102ef558b22224C016', 8, 'HOO', 'Hoo Token', 'https://hoo.com/'),\n  apys: new Token(\n    MAINNET,\n    '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n    18,\n    'APYS',\n    'APY Swap Token',\n    'https://apyswap.com/',\n  ),\n  bondly: new Token(\n    MAINNET,\n    '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n    18,\n    'BONDLY',\n    'Bondly Token',\n    'https://www.bondly.finance/',\n  ),\n  tko: new Token(\n    MAINNET,\n    '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n    18,\n    'TKO',\n    'Tokocrypto Token',\n    'https://www.tokocrypto.com/',\n  ),\n  itam: new Token(\n    MAINNET,\n    '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n    18,\n    'ITAM',\n    'Itam Network Token',\n    'https://itam.network/',\n  ),\n  arpa: new Token(\n    MAINNET,\n    '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n    18,\n    'ARPA',\n    'Arpachain Token',\n    'https://arpachain.io/',\n  ),\n  eps: new Token(\n    MAINNET,\n    '0xA7f552078dcC247C2684336020c03648500C6d9F',\n    18,\n    'EPS',\n    'Ellipsis Finance Token',\n    'https://ellipsis.finance/',\n  ),\n  jgn: new Token(\n    MAINNET,\n    '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n    18,\n    'JGN',\n    'Juggernaut DeFi Token',\n    'https://jgndefi.com/',\n  ),\n  tlm: new Token(\n    MAINNET,\n    '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n    4,\n    'TLM',\n    'Alien Worlds Trilium Token',\n    'https://alienworlds.io/',\n  ),\n  perl: new Token(\n    MAINNET,\n    '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n    18,\n    'PERL',\n    'Perlin',\n    'https://perlinx.finance/',\n  ),\n  alpa: new Token(\n    MAINNET,\n    '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n    18,\n    'ALPA',\n    'AlpaToken',\n    'https://bsc.mad.city/',\n  ),\n  hzn: new Token(\n    MAINNET,\n    '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n    18,\n    'HZN',\n    'Horizon Protocol Token',\n    'https://horizonprotocol.com/',\n  ),\n  suter: new Token(\n    MAINNET,\n    '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n    18,\n    'SUTER',\n    'Suterusu Token',\n    'https://shield.suterusu.io/',\n  ),\n  cgg: new Token(\n    MAINNET,\n    '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n    18,\n    'CGG',\n    'pTokens CGG Token',\n    'https://chainguardians.io/',\n  ),\n  mix: new Token(\n    MAINNET,\n    '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n    18,\n    'MIX',\n    'Mix Token',\n    'https://mixie.chainguardians.io/',\n  ),\n  hakka: new Token(\n    MAINNET,\n    '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n    18,\n    'HAKKA',\n    'Hakka Token',\n    'https://hakka.finance/',\n  ),\n  xed: new Token(\n    MAINNET,\n    '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n    18,\n    'XED',\n    'Exeedme Token',\n    'https://www.exeedme.com/',\n  ),\n  τbtc: new Token(\n    MAINNET,\n    '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n    9,\n    'τBTC',\n    'τBitcoin Token',\n    'https://www.btcst.finance/',\n  ),\n  mad: new Token(\n    MAINNET,\n    '0xb08ba8C99A883D85D929f561B81Bb8C365A5a93b',\n    9,\n    'MAD',\n    'MADToken',\n    'https://www.madtoken.org/',\n  ),\n  dfd: new Token(\n    MAINNET,\n    '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n    18,\n    'DFD',\n    'DefiDollar DAO',\n    'https://dusd.finance/',\n  ),\n  lmt: new Token(\n    MAINNET,\n    '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n    18,\n    'LMT',\n    'Lympo Market Token',\n    'https://lympo.io/lmt/',\n  ),\n  btt: new Token(\n    MAINNET,\n    '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n    18,\n    'BTT',\n    'Binance-Peg BitTorrent Token',\n    'https://www.bittorrent.com/',\n  ),\n  trx: new Token(\n    MAINNET,\n    '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n    18,\n    'TRX',\n    'TRON Token',\n    'https://tron.network/',\n  ),\n  win: new Token(\n    MAINNET,\n    '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n    18,\n    'WIN',\n    'WIN Token',\n    'https://winklink.org/',\n  ),\n  mcoin: new Token(\n    MAINNET,\n    '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n    18,\n    'MCOIN',\n    'Wrapped Mirror COIN Token',\n    'https://mirror.finance/',\n  ),\n  math: new Token(\n    MAINNET,\n    '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n    18,\n    'MATH',\n    'MATH Token',\n    'https://mathwallet.org/',\n  ),\n  kun: new Token(\n    MAINNET,\n    '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n    18,\n    'KUN',\n    'QIAN governance token',\n    'https://chemix.io/home',\n  ),\n  qsd: new Token(\n    MAINNET,\n    '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n    18,\n    'QSD',\n    'QIAN second generation dollar',\n    'https://chemix.io/home',\n  ),\n  hyfi: new Token(\n    MAINNET,\n    '0x9a319b959e33369C5eaA494a770117eE3e585318',\n    18,\n    'HYFI',\n    'HYFI Token',\n    'https://hyfi.pro/#/',\n  ),\n  oin: new Token(\n    MAINNET,\n    '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n    8,\n    'OIN',\n    'oinfinance Token',\n    'https://oin.finance/',\n  ),\n  doge: new Token(\n    MAINNET,\n    '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n    8,\n    'DOGE',\n    'Binance-Peg Dogecoin',\n    'https://dogecoin.com/',\n  ),\n  fine: new Token(\n    MAINNET,\n    '0x4e6415a5727ea08aAE4580057187923aeC331227',\n    18,\n    'FINE',\n    'Refinable Token',\n    'https://refinable.com/',\n  ),\n  one: new Token(\n    MAINNET,\n    '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n    18,\n    'ONE',\n    'BigONE Token',\n    'https://www.bigone.com/',\n  ),\n  pmon: new Token(\n    MAINNET,\n    '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n    18,\n    'PMON',\n    'Polkamon Token',\n    'https://polkamon.com/',\n  ),\n  τdoge: new Token(\n    MAINNET,\n    '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n    8,\n    'τDOGE',\n    'τDogecoin',\n    'https://www.btcst.finance/',\n  ),\n  btr: new Token(\n    MAINNET,\n    '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n    18,\n    'BTR',\n    'Bitrue Token',\n    'https://www.bitrue.com/',\n  ),\n  ubxt: new Token(\n    MAINNET,\n    '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n    18,\n    'UBXT',\n    'UpBots Token',\n    'https://upbots.com/',\n  ),\n  wmass: new Token(\n    MAINNET,\n    '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n    8,\n    'WMASS',\n    'Wrapped MASS Token',\n    'https://massnet.org/en/',\n  ),\n  rfox: new Token(\n    MAINNET,\n    '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n    18,\n    'RFOX',\n    'RFOX Token',\n    'https://www.redfoxlabs.io/',\n  ),\n  xend: new Token(\n    MAINNET,\n    '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n    18,\n    'XEND',\n    'XEND Token',\n    'https://xend.finance/',\n  ),\n  cyc: new Token(MAINNET, '0x810EE35443639348aDbbC467b33310d2AB43c168', 18, 'CYC', 'CYC Token', 'https://cyclone.xyz/'),\n  chr: new Token(\n    MAINNET,\n    '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n    6,\n    'CHR',\n    'Chroma Token',\n    'https://chromia.com/',\n  ),\n  deri: new Token(\n    MAINNET,\n    '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n    18,\n    'DERI',\n    'Deri Token',\n    'https://deri.finance/#/index',\n  ),\n  well: new Token(\n    MAINNET,\n    '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n    18,\n    'WELL',\n    'BitWell Token',\n    'https://www.bitwellex.com/',\n  ),\n  wex: new Token(\n    MAINNET,\n    '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n    18,\n    'WEX',\n    'WaultSwap Token',\n    'https://wault.finance/',\n  ),\n  waultx: new Token(\n    MAINNET,\n    '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n    18,\n    'WAULTx',\n    'Wault Token',\n    'https://wault.finance/',\n  ),\n  popen: new Token(\n    MAINNET,\n    '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n    18,\n    'pOPEN',\n    'OPEN Governance Token',\n    'https://opendao.io/',\n  ),\n  ez: new Token(\n    MAINNET,\n    '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n    18,\n    'EZ',\n    'Easy V2 Token',\n    'https://easyfi.network/',\n  ),\n  vrt: new Token(\n    MAINNET,\n    '0x5F84ce30DC3cF7909101C69086c50De191895883',\n    18,\n    'VRT',\n    'Venus Reward Token',\n    'https://venus.io/',\n  ),\n  tusd: new Token(\n    MAINNET,\n    '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n    18,\n    'TUSD',\n    'Binance-Peg TrueUSD Token',\n    'https://www.trueusd.com/',\n  ),\n  mtrg: new Token(\n    MAINNET,\n    '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n    18,\n    'MTRG',\n    'Wrapped MTRG Token',\n    'https://www.meter.io/',\n  ),\n  ktn: new Token(\n    MAINNET,\n    '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n    18,\n    'KTN',\n    'Kattana Token',\n    'https://kattana.io/',\n  ),\n  qkc: new Token(\n    MAINNET,\n    '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n    18,\n    'QKC',\n    'QuarkChain Token',\n    'https://quarkchain.io/',\n  ),\n  bcfx: new Token(\n    MAINNET,\n    '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n    18,\n    'bCFX',\n    'BSC Conflux Token',\n    'https://www.confluxnetwork.org/',\n  ),\n  mx: new Token(MAINNET, '0x9F882567A62a5560d147d64871776EeA72Df41D3', 18, 'MX', 'MX Token', 'https://www.mxc.com/'),\n  ata: new Token(\n    MAINNET,\n    '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n    18,\n    'ATA',\n    'Automata Token',\n    'https://www.ata.network/',\n  ),\n  mbox: new Token(\n    MAINNET,\n    '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n    18,\n    'MBOX',\n    'Mobox Token',\n    'https://www.mobox.io/#/',\n  ),\n  boring: new Token(\n    MAINNET,\n    '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n    18,\n    'BORING',\n    'BoringDAO Token',\n    'https://www.boringdao.com/',\n  ),\n  marsh: new Token(\n    MAINNET,\n    '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n    18,\n    'MARSH',\n    'Unmarshal Token',\n    'https://unmarshal.io/',\n  ),\n  ampl: new Token(\n    MAINNET,\n    '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n    9,\n    'AMPL',\n    'AMPL Token',\n    'https://www.ampleforth.org/',\n  ),\n  o3: new Token(\n    MAINNET,\n    '0xEe9801669C6138E84bD50dEB500827b776777d28',\n    18,\n    'O3',\n    'O3 Swap Token',\n    'https://o3swap.com/',\n  ),\n  hai: new Token(MAINNET, '0xaA9E582e5751d703F85912903bacADdFed26484C', 8, 'HAI', 'Hacken Token', 'https://hacken.io/'),\n  htb: new Token(\n    MAINNET,\n    '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n    18,\n    'HTB',\n    'Hotbit Token',\n    'https://www.hotbit.io/',\n  ),\n  woo: new Token(\n    MAINNET,\n    '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n    18,\n    'WOO',\n    'Wootrade Network Token',\n    'https://woo.network/',\n  ),\n  $dg: new Token(\n    MAINNET,\n    '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n    18,\n    '$DG',\n    'Decentral Games Token',\n    'https://decentral.games/',\n  ),\n  safemoon: new Token(\n    MAINNET,\n    '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n    9,\n    'SAFEMOON',\n    'Safemoon Token',\n    'https://safemoon.net/',\n  ),\n  axs: new Token(\n    MAINNET,\n    '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n    18,\n    'AXS',\n    'Binance-Pegged Axie Infinity Shard',\n    'https://axieinfinity.com/',\n  ),\n  c98: new Token(\n    MAINNET,\n    '0xaEC945e04baF28b135Fa7c640f624f8D90F1C3a6',\n    18,\n    'c98',\n    'Coin98 Token',\n    'https://coin98.com/',\n  ),\n  pots: new Token(\n    MAINNET,\n    '0x3Fcca8648651E5b974DD6d3e50F61567779772A8',\n    18,\n    'POTS',\n    'Moonpot Token',\n    'https://moonpot.com/',\n  ),\n  gnt: new Token(\n    MAINNET,\n    '0xF750A26EB0aCf95556e8529E72eD530f3b60f348',\n    18,\n    'GNT',\n    'GreenTrust Token',\n    'https://www.greentrusttoken.com/',\n  ),\n  rusd: new Token(\n    MAINNET,\n    '0x07663837218A003e66310a01596af4bf4e44623D',\n    18,\n    'rUSD',\n    'rUSD Token',\n    'https://appv2.rampdefi.com/#/',\n  ),\n  bp: new Token(\n    MAINNET,\n    '0xACB8f52DC63BB752a51186D1c55868ADbFfEe9C1',\n    18,\n    'BP',\n    'BunnyPark Token',\n    'https://www.bunnypark.com/',\n  ),\n  sfund: new Token(\n    MAINNET,\n    '0x477bC8d23c634C154061869478bce96BE6045D12',\n    18,\n    'SFUND',\n    'Seedify Fund Token',\n    'https://seedify.fund/',\n  ),\n  naos: new Token(\n    MAINNET,\n    '0x758d08864fB6cCE3062667225ca10b8F00496cc2',\n    18,\n    'NAOS',\n    'NAOSToken',\n    'https://naos.finance/',\n  ),\n}\n\nexport const testnetTokens = {\n  wbnb: new Token(\n    TESTNET,\n    '0x094616F0BdFB0b526bD735Bf66Eca0Ad254ca81F',\n    18,\n    'WBNB',\n    'Wrapped BNB',\n    'https://www.binance.com/',\n  ),\n  cake: new Token(\n    TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n    'https://pancakeswap.finance/',\n  ),\n  busd: new Token(\n    TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n    'https://www.paxos.com/busd/',\n  ),\n  syrup: new Token(\n    TESTNET,\n    '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    18,\n    'SYRUP',\n    'SyrupBar Token',\n    'https://pancakeswap.finance/',\n  ),\n  bake: new Token(\n    TESTNET,\n    '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    18,\n    'BAKE',\n    'Bakeryswap Token',\n    'https://www.bakeryswap.org/',\n  ),\n}\n\nconst tokens = (): TokenList => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n\n  // If testnet - return list comprised of testnetTokens wherever they exist, and mainnetTokens where they don't\n  if (parseInt(chainId, 10) === ChainId.TESTNET) {\n    return Object.keys(mainnetTokens).reduce((accum, key) => {\n      return { ...accum, [key]: testnetTokens[key] || mainnetTokens[key] }\n    }, {})\n  }\n\n  return mainnetTokens\n}\n\nexport const serializeTokens = (): SerializedTokenList => {\n  const unserializedTokens = tokens()\n  const serializedTokens = Object.keys(unserializedTokens).reduce((accum, key) => {\n    return { ...accum, [key]: serializeToken(unserializedTokens[key]) }\n  }, {})\n\n  return serializedTokens\n}\n\nexport default tokens()\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","export default {\n  masterChef: {\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0xdCa2b8A804ca21bffF0ca56d9163b40269A06B35',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n    97: '',\n  },\n  predictions: {\n    56: '0x18B2A687610328590Bc8F2e5fEdDe3b582A49cdA',\n    97: '',\n  },\n  chainlinkOracle: {\n    56: '0xb08ba8C99A883D85D929f561B81Bb8C365A5a93b',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n  bunnySpecialLottery: {\n    56: '0x24ED31d31C5868e5a96aA77fdcB890f3511fa0b2',\n    97: '0x382cB497110F398F0f152cae82821476AE51c9cF',\n  },\n  farmAuction: {\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\n  },\n  AnniversaryAchievement: {\n    56: '0x787980da5491118C3cB33B21aB50c8c379D2C552',\n    97: '0x981aE96378e770DE44F89cD9175E708f9EDB70a9',\n  },\n  nftMarket: {\n    56: '0x17539cCa21C7933Df5c980172d22659B8C345C5A',\n    97: '0x7f9f37ddcaa33893f9beb3d8748c8d6bfbde6ab2',\n  },\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getBunnySpecialLotteryAddress = () => {\n  return getAddress(addresses.bunnySpecialLottery)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\nexport const getAnniversaryAchievement = () => {\n  return getAddress(addresses.AnniversaryAchievement)\n}\nexport const getNftMarketAddress = () => {\n  return getAddress(addresses.nftMarket)\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\nexport function getBscScanLinkForNft(\n  collectionAddress: string,\n  tokenId: string,\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  return `${BASE_BSC_SCAN_URLS[chainId]}/token/${collectionAddress}?a=${tokenId}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport {\n  CampaignType,\n  SerializedFarmConfig,\n  LotteryStatus,\n  LotteryTicket,\n  DeserializedPoolConfig,\n  SerializedPoolConfig,\n  Team,\n  TranslatableText,\n  DeserializedFarmConfig,\n} from 'config/constants/types'\nimport { NftToken, State as NftMarketState } from './nftMarket/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type SerializedBigNumber = string\n\ninterface SerializedFarmUserData {\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport interface DeserializedFarmUserData {\n  allowance: BigNumber\n  tokenBalance: BigNumber\n  stakedBalance: BigNumber\n  earnings: BigNumber\n}\n\nexport interface SerializedFarm extends SerializedFarmConfig {\n  tokenPriceBusd?: string\n  quoteTokenPriceBusd?: string\n  tokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: SerializedFarmUserData\n}\n\nexport interface DeserializedFarm extends DeserializedFarmConfig {\n  tokenPriceBusd?: string\n  quoteTokenPriceBusd?: string\n  tokenAmountTotal?: BigNumber\n  lpTotalInQuoteToken?: BigNumber\n  lpTotalSupply?: BigNumber\n  tokenPriceVsQuote?: BigNumber\n  poolWeight?: BigNumber\n  userData?: DeserializedFarmUserData\n}\n\ninterface CorePoolProps {\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n}\n\nexport interface DeserializedPool extends DeserializedPoolConfig, CorePoolProps {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface SerializedPool extends SerializedPoolConfig, CorePoolProps {\n  totalStaked?: SerializedBigNumber\n  stakingLimit?: SerializedBigNumber\n  userData?: {\n    allowance: SerializedBigNumber\n    stakingTokenBalance: SerializedBigNumber\n    stakedBalance: SerializedBigNumber\n    pendingReward: SerializedBigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  collectionAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: NftToken\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface SerializedFarmsState {\n  data: SerializedFarm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface DeserializedFarmsState {\n  data: DeserializedFarm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: SerializedPool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport enum ProfileAvatarFetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  FETCHING = 'fetching',\n  FETCHED = 'fetched',\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n  profileAvatars: {\n    [key: string]: {\n      username: string\n      nft: NftToken\n      hasRegistered: boolean\n      usernameFetchStatus: ProfileAvatarFetchStatus\n      avatarFetchStatus: ProfileAvatarFetchStatus\n    }\n  }\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  position: BetPosition\n  failed: boolean\n  startAt: number\n  startBlock: number\n  startHash: string\n  lockAt: number\n  lockBlock: number\n  lockHash: string\n  lockPrice: number\n  lockRoundId: string\n  closeAt: number\n  closeBlock: number\n  closeHash: string\n  closePrice: number\n  closeRoundId: string\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bullAmount: number\n  bearBets: number\n  bearAmount: number\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedAt: number\n  claimedBlock: number\n  claimedHash: string\n  claimedBNB: number\n  claimedNetBNB: number\n  createdAt: number\n  updatedAt: number\n  user?: PredictionUser\n  round?: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  createdAt: number\n  updatedAt: number\n  block: number\n  totalBets: number\n  totalBetsBull: number\n  totalBetsBear: number\n  totalBNB: number\n  totalBNBBull: number\n  totalBNBBear: number\n  totalBetsClaimed: number\n  totalBNBClaimed: number\n  winRate: number\n  averageBNB: number\n  netBNB: number\n  bets?: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n  lockOracleId: string\n  closeOracleId: string\n}\n\nexport interface NodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: ethers.BigNumber | null\n  closePrice: ethers.BigNumber | null\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n  closeOracleId: string\n  lockOracleId: string\n}\n\nexport enum LeaderboardLoadingState {\n  INITIAL,\n  LOADING,\n  IDLE,\n}\n\nexport type LeaderboardFilterTimePeriod = '1d' | '7d' | '1m' | 'all'\n\nexport interface LeaderboardFilter {\n  address?: string\n  orderBy?: string\n  timePeriod?: LeaderboardFilterTimePeriod\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  intervalSeconds: number\n  minBetAmount: string\n  bufferSeconds: number\n  lastOraclePrice: string\n  history: Bet[]\n  totalHistory: number\n  currentHistoryPage: number\n  hasHistoryLoaded: boolean\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n  leaderboard: {\n    selectedAddress: string\n    loadingState: LeaderboardLoadingState\n    filters: LeaderboardFilter\n    skip: number\n    hasMoreResults: boolean\n    addressResults: {\n      [key: string]: PredictionUser\n    }\n    results: PredictionUser[]\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: SerializedFarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  voting: VotingState\n  lottery: LotteryState\n  nftMarket: NftMarketState\n}\n","import { ChainId, JSBI, Percent, Token } from '@pancakeswap/sdk'\nimport { mainnetTokens, testnetTokens } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [\n    mainnetTokens.wbnb,\n    mainnetTokens.cake,\n    mainnetTokens.busd,\n    mainnetTokens.usdt,\n    mainnetTokens.btcb,\n    mainnetTokens.ust,\n    mainnetTokens.eth,\n    mainnetTokens.usdc,\n  ],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [mainnetTokens.busd, mainnetTokens.cake, mainnetTokens.btcb],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [mainnetTokens.wbnb, mainnetTokens.dai, mainnetTokens.busd, mainnetTokens.usdt],\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [mainnetTokens.cake, mainnetTokens.wbnb],\n    [mainnetTokens.busd, mainnetTokens.usdt],\n    [mainnetTokens.dai, mainnetTokens.usdt],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 1200\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { createAction } from '@reduxjs/toolkit'\nimport { SerializedToken } from 'config/constants/types'\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport enum ViewMode {\n  TABLE = 'TABLE',\n  CARD = 'CARD',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\nexport const updateUserPoolStakedOnly = createAction<{ userPoolStakedOnly: boolean }>('user/updateUserPoolStakedOnly')\nexport const updateUserPoolsViewMode = createAction<{ userPoolsViewMode: ViewMode }>('user/updateUserPoolsViewMode')\nexport const updateUserFarmsViewMode = createAction<{ userFarmsViewMode: ViewMode }>('user/updateUserFarmsViewMode')\nexport const updateUserPredictionAcceptedRisk = createAction<{ userAcceptedRisk: boolean }>(\n  'user/updateUserPredictionAcceptedRisk',\n)\nexport const updateUserPredictionChartDisclaimerShow = createAction<{ userShowDisclaimer: boolean }>(\n  'user/updateUserPredictionChartDisclaimerShow',\n)\nexport const updateUserExpertModeAcknowledgementShow = createAction<{ userExpertModeAcknowledgementShow: boolean }>(\n  'user/updateUserExpertModeAcknowledgementShow',\n)\nexport const updateUserUsernameVisibility = createAction<{ userUsernameVisibility: boolean }>(\n  'user/updateUserUsernameVisibility',\n)\nexport const updateGasPrice = createAction<{ gasPrice: string }>('user/updateGasPrice')\n\nexport const addWatchlistToken = createAction<{ address: string }>('user/addWatchlistToken')\nexport const addWatchlistPool = createAction<{ address: string }>('user/addWatchlistPool')\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport tokens from 'config/constants/tokens'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getBunnySpecialLotteryAddress,\n  getFarmAuctionAddress,\n  getAnniversaryAchievement,\n  getNftMarketAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport anniversaryAchievementAbi from 'config/abi/anniversaryAchievement.json'\nimport nftMarketAbi from 'config/abi/nftMarket.json'\n\nimport { ChainLinkOracleContract, FarmAuctionContract, PancakeProfileContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, tokens.mad.address, signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer) as PancakeProfileContract\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getBunnySpecialLotteryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialLotteryAbi, getBunnySpecialLotteryAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\nexport const getAnniversaryAchievementContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(anniversaryAchievementAbi, getAnniversaryAchievement(), signer)\n}\nexport const getNftMarketContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(nftMarketAbi, getNftMarketAddress(), signer)\n}\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n  getBunnySpecialLotteryContract,\n  getAnniversaryAchievementContract,\n  getNftMarketContract,\n} from 'utils/contractHelpers'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport multiCallAbi from '../config/abi/Multicall.json'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialLotteryContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialLotteryContract(library.getSigner()), [library])\n}\n\nexport const useAnniversaryAchievementContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getAnniversaryAchievementContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnected or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\nexport const useNftMarketContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getNftMarketContract(library.getSigner()), [library])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  return useContract(getMulticallAddress(), multiCallAbi, false)\n}\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport default Balance\n","import { ChainId, Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  updateGasPrice,\n  addWatchlistToken,\n  addWatchlistPool,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  ViewMode,\n  updateUserFarmsViewMode,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserPredictionAcceptedRisk,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n} from '../actions'\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserPoolStakedOnly(): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPoolStakedOnly = useSelector<AppState, AppState['user']['userPoolStakedOnly']>((state) => {\n    return state.user.userPoolStakedOnly\n  })\n\n  const setUserPoolStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      dispatch(updateUserPoolStakedOnly({ userPoolStakedOnly: stakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolStakedOnly, setUserPoolStakedOnly]\n}\n\nexport function useUserPoolsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPoolsViewMode = useSelector<AppState, AppState['user']['userPoolsViewMode']>((state) => {\n    return state.user.userPoolsViewMode\n  })\n\n  const setUserPoolsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserPoolsViewMode({ userPoolsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolsViewMode, setUserPoolsViewMode]\n}\n\nexport function useUserFarmsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmsViewMode = useSelector<AppState, AppState['user']['userFarmsViewMode']>((state) => {\n    return state.user.userFarmsViewMode\n  })\n\n  const setUserFarmsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserFarmsViewMode({ userFarmsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userFarmsViewMode, setUserFarmsViewMode]\n}\n\nexport function useUserPredictionAcceptedRisk(): [boolean, (acceptedRisk: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPredictionAcceptedRisk = useSelector<AppState, AppState['user']['userPredictionAcceptedRisk']>((state) => {\n    return state.user.userPredictionAcceptedRisk\n  })\n\n  const setUserPredictionAcceptedRisk = useCallback(\n    (acceptedRisk: boolean) => {\n      dispatch(updateUserPredictionAcceptedRisk({ userAcceptedRisk: acceptedRisk }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionAcceptedRisk, setUserPredictionAcceptedRisk]\n}\n\nexport function useUserPredictionChartDisclaimerShow(): [boolean, (showDisclaimer: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPredictionChartDisclaimerShow = useSelector<\n    AppState,\n    AppState['user']['userPredictionChartDisclaimerShow']\n  >((state) => {\n    return state.user.userPredictionChartDisclaimerShow\n  })\n\n  const setPredictionUserChartDisclaimerShow = useCallback(\n    (showDisclaimer: boolean) => {\n      dispatch(updateUserPredictionChartDisclaimerShow({ userShowDisclaimer: showDisclaimer }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionChartDisclaimerShow, setPredictionUserChartDisclaimerShow]\n}\n\nexport function useUserExpertModeAcknowledgementShow(): [boolean, (showAcknowledgement: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userExpertModeAcknowledgementShow = useSelector<\n    AppState,\n    AppState['user']['userExpertModeAcknowledgementShow']\n  >((state) => {\n    return state.user.userExpertModeAcknowledgementShow\n  })\n\n  const setUserExpertModeAcknowledgementShow = useCallback(\n    (showAcknowledgement: boolean) => {\n      dispatch(updateUserExpertModeAcknowledgementShow({ userExpertModeAcknowledgementShow: showAcknowledgement }))\n    },\n    [dispatch],\n  )\n\n  return [userExpertModeAcknowledgementShow, setUserExpertModeAcknowledgementShow]\n}\n\nexport function useUserUsernameVisibility(): [boolean, (usernameVisibility: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userUsernameVisibility = useSelector<AppState, AppState['user']['userUsernameVisibility']>((state) => {\n    return state.user.userUsernameVisibility\n  })\n\n  const setUserUsernameVisibility = useCallback(\n    (usernameVisibility: boolean) => {\n      dispatch(updateUserUsernameVisibility({ userUsernameVisibility: usernameVisibility }))\n    },\n    [dispatch],\n  )\n\n  return [userUsernameVisibility, setUserUsernameVisibility]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useGasPrice(): string {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const userGas = useSelector<AppState, AppState['user']['gasPrice']>((state) => state.user.gasPrice)\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport function useGasPriceManager(): [string, (userGasPrice: string) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userGasPrice = useGasPrice()\n\n  const setGasPrice = useCallback(\n    (gasPrice: string) => {\n      dispatch(updateGasPrice({ gasPrice }))\n    },\n    [dispatch],\n  )\n\n  return [userGasPrice, setGasPrice]\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n\nexport const useWatchlistTokens = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedTokens = useSelector((state: AppState) => state.user.watchlistTokens) ?? []\n  const updatedSavedTokens = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistToken({ address }))\n    },\n    [dispatch],\n  )\n  return [savedTokens, updatedSavedTokens]\n}\n\nexport const useWatchlistPools = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedPools = useSelector((state: AppState) => state.user.watchlistPools) ?? []\n  const updateSavedPools = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistPool({ address }))\n    },\n    [dispatch],\n  )\n  return [savedPools, updateSavedPools]\n}\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return includes a boolean whether the call was successful e.g. [wasSuccessful, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { getApy } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 5000\nconst MANUAL_POOL_AUTO_COMPOUND_FREQUENCY = 0\n\nexport const getAprData = (pool: DeserializedPool, performanceFee: number) => {\n  const { isAutoVault, apr } = pool\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const autoCompoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_AUTO_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const autoApr = getApy(apr, AUTO_VAULT_COMPOUND_FREQUENCY, 365, performanceFee) * 100\n    return { apr: autoApr, autoCompoundFrequency }\n  }\n  return { apr, autoCompoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: DeserializedPool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { Currency } from '@pancakeswap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const API_PROFILE = process.env.REACT_APP_API_PROFILE\nexport const API_NFT = process.env.REACT_APP_API_NFT\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n\n/**\n * V1 will be deprecated but is still used to claim old rounds\n */\nexport const GRAPH_API_PREDICTION_V1 = 'https://api.thegraph.com/subgraphs/name/pancakeswap/prediction'\n\nexport const INFO_CLIENT = 'https://bsc.streamingfast.io/subgraphs/name/pancakeswap/exchange-v2'\nexport const BLOCKS_CLIENT = 'https://api.thegraph.com/subgraphs/name/pancakeswap/blocks'\nexport const GRAPH_API_NFTMARKET = process.env.REACT_APP_GRAPH_API_NFT_MARKET\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n  PredictionUser,\n  HistoryFilter,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  UserResponse,\n} from './queries'\nimport { ROUNDS_PER_PAGE } from './config'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  HOUSE = 'house',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nconst getRoundPosition = (positionResponse: string) => {\n  if (positionResponse === 'Bull') {\n    return BetPosition.BULL\n  }\n\n  if (positionResponse === 'Bear') {\n    return BetPosition.BEAR\n  }\n\n  if (positionResponse === 'House') {\n    return BetPosition.HOUSE\n  }\n\n  return null\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    block: numberOrNull(betResponse.block),\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedAt: numberOrNull(betResponse.claimedAt),\n    claimedBlock: numberOrNull(betResponse.claimedBlock),\n    claimedHash: betResponse.claimedHash,\n    claimedBNB: betResponse.claimedBNB ? parseFloat(betResponse.claimedBNB) : 0,\n    claimedNetBNB: betResponse.claimedNetBNB ? parseFloat(betResponse.claimedNetBNB) : 0,\n    createdAt: numberOrNull(betResponse.createdAt),\n    updatedAt: numberOrNull(betResponse.updatedAt),\n  } as Bet\n\n  if (betResponse.user) {\n    bet.user = transformUserResponse(betResponse.user)\n  }\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformUserResponse = (userResponse: UserResponse): PredictionUser => {\n  const {\n    id,\n    createdAt,\n    updatedAt,\n    block,\n    totalBets,\n    totalBetsBull,\n    totalBetsBear,\n    totalBNB,\n    totalBNBBull,\n    totalBNBBear,\n    totalBetsClaimed,\n    totalBNBClaimed,\n    winRate,\n    averageBNB,\n    netBNB,\n  } = userResponse\n\n  return {\n    id,\n    createdAt: numberOrNull(createdAt),\n    updatedAt: numberOrNull(updatedAt),\n    block: numberOrNull(block),\n    totalBets: numberOrNull(totalBets),\n    totalBetsBull: numberOrNull(totalBetsBull),\n    totalBetsBear: numberOrNull(totalBetsBear),\n    totalBNB: totalBNB ? parseFloat(totalBNB) : 0,\n    totalBNBBull: totalBNBBull ? parseFloat(totalBNBBull) : 0,\n    totalBNBBear: totalBNBBear ? parseFloat(totalBNBBear) : 0,\n    totalBetsClaimed: numberOrNull(totalBetsClaimed),\n    totalBNBClaimed: totalBNBClaimed ? parseFloat(totalBNBClaimed) : 0,\n    winRate: winRate ? parseFloat(winRate) : 0,\n    averageBNB: averageBNB ? parseFloat(averageBNB) : 0,\n    netBNB: netBNB ? parseFloat(netBNB) : 0,\n  }\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    position,\n    startAt,\n    startBlock,\n    startHash,\n    lockAt,\n    lockBlock,\n    lockHash,\n    lockPrice,\n    lockRoundId,\n    closeAt,\n    closeBlock,\n    closeHash,\n    closePrice,\n    closeRoundId,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bullAmount,\n    bearBets,\n    bearAmount,\n    bets = [],\n  } = roundResponse\n\n  return {\n    id,\n    failed,\n    startHash,\n    lockHash,\n    lockRoundId,\n    closeRoundId,\n    closeHash,\n    position: getRoundPosition(position),\n    epoch: numberOrNull(epoch),\n    startAt: numberOrNull(startAt),\n    startBlock: numberOrNull(startBlock),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : 0,\n    closeAt: numberOrNull(closeAt),\n    closeBlock: numberOrNull(closeBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : 0,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bullAmount: bullAmount ? parseFloat(bullAmount) : 0,\n    bearBets: numberOrNull(bearBets),\n    bearAmount: bearAmount ? parseFloat(bearAmount) : 0,\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n\n  if (bet.round.position === BetPosition.HOUSE) {\n    return Result.HOUSE\n  }\n\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\nexport const getFilteredBets = (bets: Bet[], filter: HistoryFilter) => {\n  switch (filter) {\n    case HistoryFilter.COLLECTED:\n      return bets.filter((bet) => bet.claimed === true)\n    case HistoryFilter.UNCOLLECTED:\n      return bets.filter((bet) => {\n        return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n      })\n    case HistoryFilter.ALL:\n    default:\n      return bets\n  }\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const { market } = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n      }\n    `,\n  )) as { market: TotalWonMarketResponse }\n\n  const totalBNB = market.totalBNB ? parseFloat(market.totalBNB) : 0\n  const totalBNBTreasury = market.totalBNBTreasury ? parseFloat(market.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - totalBNBTreasury, 0)\n}\n\ntype WhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (where: WhereClause = {}, first = 1000, skip = 0): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const LEADERBOARD_RESULTS_PER_PAGE = 20\n\ninterface GetPredictionUsersOptions {\n  skip?: number\n  first?: number\n  orderBy?: string\n  orderDir?: string\n  where?: WhereClause\n}\n\nconst defaultPredictionUserOptions = {\n  skip: 0,\n  first: LEADERBOARD_RESULTS_PER_PAGE,\n  orderBy: 'createdAt',\n  orderDir: 'desc',\n}\n\nexport const getPredictionUsers = async (options: GetPredictionUsersOptions = {}): Promise<UserResponse[]> => {\n  const { first, skip, where, orderBy, orderDir } = { ...defaultPredictionUserOptions, ...options }\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUsers($first: Int!, $skip: Int!, $where: User_filter, $orderBy: User_orderBy, $orderDir: OrderDirection) {\n        users(first: $first, skip: $skip, where: $where, orderBy: $orderBy, orderDirection: $orderDir) {\n          ${getUserBaseFields()} \n        }\n      }\n    `,\n    { first, skip, where, orderBy, orderDir },\n  )\n  return response.users\n}\n\nexport const getPredictionUser = async (account: string): Promise<UserResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUser($id: ID!) {\n        user(id: $id) {\n          ${getUserBaseFields()}\n        }\n      }\n  `,\n    {\n      id: account.toLowerCase(),\n    },\n  )\n  return response.user\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalSeconds' | 'minBetAmount' | 'bufferSeconds'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalSeconds', 'minBetAmount', 'paused', 'bufferSeconds'].map((method) => ({\n    address,\n    name: method,\n  }))\n  const [[currentEpoch], [intervalSeconds], [minBetAmount], [paused], [bufferSeconds]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalSeconds: intervalSeconds.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    bufferSeconds: bufferSeconds.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startTimestamp: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startTimestamp,\n    lockTimestamp: null,\n    closeTimestamp: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n    lockOracleId: null,\n    closeOracleId: null,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startTimestamp,\n    lockTimestamp,\n    closeTimestamp,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardBaseCalAmount,\n    rewardAmount,\n    oracleCalled,\n    lockOracleId,\n    closeOracleId,\n  } = response\n\n  return {\n    oracleCalled,\n    epoch: epoch.toNumber(),\n    startTimestamp: startTimestamp.eq(0) ? null : startTimestamp.toNumber(),\n    lockTimestamp: lockTimestamp.eq(0) ? null : lockTimestamp.toNumber(),\n    closeTimestamp: closeTimestamp.eq(0) ? null : closeTimestamp.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    lockOracleId: lockOracleId.toString(),\n    closeOracleId: closeOracleId.toString(),\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n\nexport const fetchUsersRoundsLength = async (account: string) => {\n  try {\n    const contract = getPredictionsContract()\n    const length = await contract.getUserRoundsLength(account)\n    return length\n  } catch {\n    return ethers.BigNumber.from(0)\n  }\n}\n\n/**\n * Fetches rounds a user has participated in\n */\nexport const fetchUserRounds = async (\n  account: string,\n  cursor = 0,\n  size = ROUNDS_PER_PAGE,\n): Promise<{ [key: string]: ReduxNodeLedger }> => {\n  const contract = getPredictionsContract()\n\n  try {\n    const [rounds, ledgers] = await contract.getUserRounds(account, cursor, size)\n\n    return rounds.reduce((accum, round, index) => {\n      return {\n        ...accum,\n        [round.toString()]: serializePredictionsLedgerResponse(ledgers[index]),\n      }\n    }, {})\n  } catch {\n    // When the results run out the contract throws an error.\n    return null\n  }\n}\n","export interface UserResponse {\n  id: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  totalBets: string\n  totalBetsBull: string\n  totalBetsBear: string\n  totalBNB: string\n  totalBNBBull: string\n  totalBNBBear: string\n  totalBetsClaimed: string\n  totalBNBClaimed: string\n  winRate: string\n  averageBNB: string\n  netBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedAt: string\n  claimedBlock: string\n  claimedHash: string\n  claimedBNB: string\n  claimedNetBNB: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  position: string\n  failed: boolean\n  startAt: string\n  startBlock: string\n  startHash: string\n  lockAt: string\n  lockBlock: string\n  lockHash: string\n  lockPrice: string\n  lockRoundId: string\n  closeAt: string\n  closeBlock: string\n  closeHash: string\n  closePrice: string\n  closeRoundId: string\n  totalBets: string\n  totalAmount: string\n  bullBets: string\n  bullAmount: string\n  bearBets: string\n  bearAmount: string\n  bets?: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  position\n  failed\n  startAt\n  startBlock\n  startHash\n  lockAt\n  lockBlock\n  lockHash\n  lockPrice\n  lockRoundId\n  closeAt\n  closeBlock\n  closeHash\n  closePrice\n  closeRoundId\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n`\n\nexport const getBetBaseFields = () => `\n id\n hash  \n amount\n position\n claimed\n claimedAt\n claimedHash\n claimedBlock\n claimedBNB\n claimedNetBNB\n createdAt\n updatedAt\n`\n\nexport const getUserBaseFields = () => `\n  id\n  createdAt\n  updatedAt\n  block\n  totalBets\n  totalBetsBull\n  totalBetsBear\n  totalBNB\n  totalBNBBull\n  totalBNBBear\n  totalBetsClaimed\n  totalBNBClaimed\n  winRate\n  averageBNB\n  netBNB\n`\n","import { Token } from '@pancakeswap/sdk'\nimport { SerializedToken } from 'config/constants/types'\nimport { parseUnits } from 'ethers/lib/utils'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n    projectLink: token.projectLink,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n    serializedToken.projectLink,\n  )\n}\n\nexport enum GAS_PRICE {\n  default = '5',\n  fast = '6',\n  instant = '7',\n  testnet = '10',\n}\n\nexport const GAS_PRICE_GWEI = {\n  default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\n  fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\n  instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\n  testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString(),\n}\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlock } from 'state/block/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, currentBlock))\n  }, [fragment, contract, results, currentBlock])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, currentBlock))\n  }, [fragment, results, contractInterface, currentBlock])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, currentBlock)\n  }, [result, contract, fragment, currentBlock])\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 15 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = 40\nexport const BLOCKS_PER_YEAR = (60 / BSC_BLOCK_TIME) * 60 * 24 * 365 // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK * BLOCKS_PER_YEAR\nexport const BASE_URL = 'https://dex.madtoken.org'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\nexport const IPFS_GATEWAY = 'https://ipfs.io/ipfs'\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport { InfoState } from './types'\nimport {\n  updateProtocolData,\n  updateProtocolChartData,\n  updateProtocolTransactions,\n  updatePoolData,\n  addPoolKeys,\n  updatePoolChartData,\n  updatePoolTransactions,\n  updateTokenData,\n  addTokenKeys,\n  addTokenPoolAddresses,\n  updateTokenChartData,\n  updateTokenPriceData,\n  updateTokenTransactions,\n} from './actions'\n\nconst initialState: InfoState = {\n  protocol: {\n    overview: undefined,\n    chartData: undefined,\n    transactions: undefined,\n  },\n  pools: { byAddress: {} },\n  tokens: { byAddress: {} },\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    // Protocol actions\n    .addCase(updateProtocolData, (state, { payload: { protocolData } }) => {\n      state.protocol.overview = protocolData\n    })\n    .addCase(updateProtocolChartData, (state, { payload: { chartData } }) => {\n      state.protocol.chartData = chartData\n    })\n    .addCase(updateProtocolTransactions, (state, { payload: { transactions } }) => {\n      state.protocol.transactions = transactions\n    })\n    // Pools actions\n    .addCase(updatePoolData, (state, { payload: { pools } }) => {\n      pools.forEach((poolData) => {\n        state.pools.byAddress[poolData.address] = {\n          ...state.pools.byAddress[poolData.address],\n          data: poolData,\n        }\n      })\n    })\n    .addCase(addPoolKeys, (state, { payload: { poolAddresses } }) => {\n      poolAddresses.forEach((address) => {\n        if (!state.pools.byAddress[address]) {\n          state.pools.byAddress[address] = {\n            data: undefined,\n            chartData: undefined,\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(updatePoolChartData, (state, { payload: { poolAddress, chartData } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], chartData }\n    })\n    .addCase(updatePoolTransactions, (state, { payload: { poolAddress, transactions } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], transactions }\n    })\n    // Tokens actions\n    .addCase(updateTokenData, (state, { payload: { tokens } }) => {\n      tokens.forEach((tokenData) => {\n        state.tokens.byAddress[tokenData.address] = {\n          ...state.tokens.byAddress[tokenData.address],\n          data: tokenData,\n        }\n      })\n    })\n    .addCase(addTokenKeys, (state, { payload: { tokenAddresses } }) => {\n      tokenAddresses.forEach((address) => {\n        if (!state.tokens.byAddress[address]) {\n          state.tokens.byAddress[address] = {\n            poolAddresses: undefined,\n            data: undefined,\n            chartData: undefined,\n            priceData: {},\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(addTokenPoolAddresses, (state, { payload: { tokenAddress, poolAddresses } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], poolAddresses }\n    })\n    .addCase(updateTokenChartData, (state, { payload: { tokenAddress, chartData } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], chartData }\n    })\n    .addCase(updateTokenTransactions, (state, { payload: { tokenAddress, transactions } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], transactions }\n    })\n    .addCase(\n      updateTokenPriceData,\n      (state, { payload: { tokenAddress, secondsInterval, priceData, oldestFetchedTimestamp } }) => {\n        state.tokens.byAddress[tokenAddress] = {\n          ...state.tokens.byAddress[tokenAddress],\n          priceData: {\n            ...state.tokens.byAddress[tokenAddress].priceData,\n            [secondsInterval]: priceData,\n            oldestFetchedTimestamp,\n          },\n        }\n      },\n    ),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { SerializedToken } from 'config/constants/types'\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  addWatchlistPool,\n  addWatchlistToken,\n  FarmStakedOnly,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  muteAudio,\n  toggleTheme,\n  unmuteAudio,\n  updateGasPrice,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserFarmsViewMode,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  ViewMode,\n  updateUserPredictionAcceptedRisk,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n} from './actions'\nimport { GAS_PRICE_GWEI } from './hooks/helpers'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n  userPoolStakedOnly: boolean\n  userPoolsViewMode: ViewMode\n  userFarmsViewMode: ViewMode\n  userPredictionAcceptedRisk: boolean\n  userPredictionChartDisclaimerShow: boolean\n  userExpertModeAcknowledgementShow: boolean\n  userUsernameVisibility: boolean\n  gasPrice: string\n  watchlistTokens: string[]\n  watchlistPools: string[]\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n  userPoolStakedOnly: false,\n  userPoolsViewMode: ViewMode.TABLE,\n  userFarmsViewMode: ViewMode.TABLE,\n  userPredictionAcceptedRisk: false,\n  userPredictionChartDisclaimerShow: true,\n  userExpertModeAcknowledgementShow: true,\n  userUsernameVisibility: false,\n  gasPrice: GAS_PRICE_GWEI.default,\n  watchlistTokens: [],\n  watchlistPools: [],\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    })\n    .addCase(updateUserPoolStakedOnly, (state, { payload: { userPoolStakedOnly } }) => {\n      state.userPoolStakedOnly = userPoolStakedOnly\n    })\n    .addCase(updateUserPoolsViewMode, (state, { payload: { userPoolsViewMode } }) => {\n      state.userPoolsViewMode = userPoolsViewMode\n    })\n    .addCase(updateUserFarmsViewMode, (state, { payload: { userFarmsViewMode } }) => {\n      state.userFarmsViewMode = userFarmsViewMode\n    })\n    .addCase(updateUserPredictionAcceptedRisk, (state, { payload: { userAcceptedRisk } }) => {\n      state.userPredictionAcceptedRisk = userAcceptedRisk\n    })\n    .addCase(updateUserPredictionChartDisclaimerShow, (state, { payload: { userShowDisclaimer } }) => {\n      state.userPredictionChartDisclaimerShow = userShowDisclaimer\n    })\n    .addCase(updateUserExpertModeAcknowledgementShow, (state, { payload: { userExpertModeAcknowledgementShow } }) => {\n      state.userExpertModeAcknowledgementShow = userExpertModeAcknowledgementShow\n    })\n    .addCase(updateUserUsernameVisibility, (state, { payload: { userUsernameVisibility } }) => {\n      state.userUsernameVisibility = userUsernameVisibility\n    })\n    .addCase(updateGasPrice, (state, action) => {\n      state.gasPrice = action.payload.gasPrice\n    })\n    .addCase(addWatchlistToken, (state, { payload: { address } }) => {\n      // state.watchlistTokens can be undefined for pre-loaded localstorage user state\n      const tokenWatchlist = state.watchlistTokens ?? []\n      if (!tokenWatchlist.includes(address)) {\n        state.watchlistTokens = [...tokenWatchlist, address]\n      } else {\n        // Remove token from watchlist\n        const newTokens = state.watchlistTokens.filter((x) => x !== address)\n        state.watchlistTokens = newTokens\n      }\n    })\n    .addCase(addWatchlistPool, (state, { payload: { address } }) => {\n      // state.watchlistPools can be undefined for pre-loaded localstorage user state\n      const poolsWatchlist = state.watchlistPools ?? []\n      if (!poolsWatchlist.includes(address)) {\n        state.watchlistPools = [...poolsWatchlist, address]\n      } else {\n        // Remove pool from watchlist\n        const newPools = state.watchlistPools.filter((x) => x !== address)\n        state.watchlistPools = newPools\n      }\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport infoReducer from './info'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\nimport nftMarketReducer from './nftMarket/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists', 'profile']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n    info: infoReducer,\n    nftMarket: nftMarketReducer,\n\n    // Exchange\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return callWithGasPrice(\n      tokenContract,\n      'approve',\n      [spender, useExact ? amountToApprove.raw.toString() : MaxUint256],\n      {\n        gasLimit: calculateGasMargin(estimatedGas),\n      },\n    )\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction, callWithGasPrice])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\nimport tokens from 'config/constants/tokens'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: poolConfig.stakingToken.address,\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: tokens.wbnb.address,\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((pool) => pool.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((pool) => ({\n    address: pool.stakingToken.address,\n    name: 'allowance',\n    params: [account, getAddress(pool.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((pool) => ({\n    address: pool.stakingToken.address,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, SerializedPool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? pool.stakingToken.address.toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? pool.earningToken.address.toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: SerializedPool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps, Placement } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n  placement?: Placement\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, placement = 'right-end', ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement, trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_NFTMARKET, API_NFT } from 'config/constants/endpoints'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { ethers } from 'ethers'\nimport map from 'lodash/map'\nimport { pancakeBunniesAddress } from 'views/Nft/market/constants'\nimport {\n  TokenMarketData,\n  ApiCollections,\n  TokenIdWithCollectionAddress,\n  NftToken,\n  NftLocation,\n  Collection,\n  ApiResponseCollectionTokens,\n  ApiResponseSpecificToken,\n  ApiCollection,\n  CollectionMarketDataBaseFields,\n  Transaction,\n  AskOrder,\n} from './types'\nimport { getBaseNftFields, getBaseTransactionFields, getCollectionBaseFields } from './queries'\n\n/**\n * API HELPERS\n */\n\n/**\n * Fetch static data from all collections using the API\n * @returns\n */\nexport const getCollectionsApi = async (): Promise<ApiCollection[]> => {\n  const res = await fetch(`${API_NFT}/collections`)\n  if (res.ok) {\n    const json = await res.json()\n    return json.data\n  }\n  console.error('Failed to fetch NFT collections', res.statusText)\n  return []\n}\n\n/**\n * Fetch static data from a collection using the API\n * @returns\n */\nexport const getCollectionApi = async (collectionAddress: string): Promise<ApiCollection> => {\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}`)\n  if (res.ok) {\n    const json = await res.json()\n    return json.data\n  }\n  console.error(`API: Failed to fetch NFT collection ${collectionAddress}`, res.statusText)\n  return null\n}\n\n/**\n * Fetch static data for all nfts in a collection using the API\n * @param collectionAddress\n * @returns\n */\nexport const getNftsFromCollectionApi = async (collectionAddress: string): Promise<ApiResponseCollectionTokens> => {\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}/tokens`)\n  if (res.ok) {\n    const data = await res.json()\n    return data\n  }\n  console.error(`API: Failed to fetch NFT tokens for ${collectionAddress} collection`, res.statusText)\n  return null\n}\n\n/**\n * Fetch a single NFT using the API\n * @param collectionAddress\n * @param tokenId\n * @returns NFT from API\n */\nexport const getNftApi = async (\n  collectionAddress: string,\n  tokenId: string,\n): Promise<ApiResponseSpecificToken['data']> => {\n  const res = await fetch(`${API_NFT}/collections/${collectionAddress}/tokens/${tokenId}`)\n  if (res.ok) {\n    const json = await res.json()\n    return json.data\n  }\n\n  console.error(`API: Can't fetch NFT token ${tokenId} in ${collectionAddress}`, res.status)\n  return null\n}\n\n/**\n * Fetch a list of NFT from different collections\n * @param from Array of { collectionAddress: string; tokenId: string }\n * @returns Array of NFT from API\n */\nexport const getNftsFromDifferentCollectionsApi = async (\n  from: { collectionAddress: string; tokenId: string }[],\n): Promise<NftToken[]> => {\n  const promises = from.map((nft) => getNftApi(nft.collectionAddress, nft.tokenId))\n  const responses = await Promise.all(promises)\n  // Sometimes API can't find some tokens (e.g. 404 response)\n  // at least return the ones that returned successfully\n  return responses\n    .filter((resp) => resp)\n    .map((res, index) => ({\n      tokenId: res.tokenId,\n      name: res.name,\n      collectionName: res.collection.name,\n      collectionAddress: from[index].collectionAddress,\n      description: res.description,\n      attributes: res.attributes,\n      createdAt: res.createdAt,\n      updatedAt: res.updatedAt,\n      image: {\n        original: res.image?.original,\n        thumbnail: res.image?.thumbnail,\n      },\n    }))\n}\n\n/**\n * SUBGRAPH HELPERS\n */\n\n/**\n * Fetch market data from a collection using the Subgraph\n * @returns\n */\nexport const getCollectionSg = async (collectionAddress: string): Promise<CollectionMarketDataBaseFields> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getCollectionData($collectionAddress: String!) {\n          collection(id: $collectionAddress) {\n            ${getCollectionBaseFields()}\n          }\n        }\n      `,\n      { collectionAddress: collectionAddress.toLowerCase() },\n    )\n    return res.collection\n  } catch (error) {\n    console.error('Failed to fetch collection', error)\n    return null\n  }\n}\n\n/**\n * Fetch market data from all collections using the Subgraph\n * @returns\n */\nexport const getCollectionsSg = async (): Promise<CollectionMarketDataBaseFields[]> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        {\n          collections {\n            ${getCollectionBaseFields()}\n          }\n        }\n      `,\n    )\n    return res.collections\n  } catch (error) {\n    console.error('Failed to fetch NFT collections', error)\n    return []\n  }\n}\n\n/**\n * Fetch market data for all nfts in a collection using the Subgraph\n * @param collectionAddress\n * @returns\n */\nexport const getNftsFromCollectionSg = async (collectionAddress: string): Promise<TokenMarketData[]> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getNftCollectionMarketData($collectionAddress: String!) {\n          collection(id: $collectionAddress) {\n            id\n            nfts {\n             ${getBaseNftFields()}\n            }\n          }\n        }\n      `,\n      { collectionAddress: collectionAddress.toLowerCase() },\n    )\n    return res.collection.nfts\n  } catch (error) {\n    console.error('Failed to fetch NFTs from collection', error)\n    return []\n  }\n}\n\n/**\n * Fetch market data for PancakeBunnies NFTs by bunny id using the Subgraph\n * @param bunnyId - bunny id to query\n * @param existingTokenIds - tokens that are already loaded into redux\n * @returns\n */\nexport const getNftsByBunnyIdSg = async (\n  bunnyId: string,\n  existingTokenIds: string[],\n  orderDirection: 'asc' | 'desc',\n): Promise<TokenMarketData[]> => {\n  try {\n    const where =\n      existingTokenIds.length > 0\n        ? { otherId: bunnyId, isTradable: true, tokenId_not_in: existingTokenIds }\n        : { otherId: bunnyId, isTradable: true }\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getNftsByBunnyIdSg($collectionAddress: String!, $where: NFT_filter, $orderDirection: String!) {\n          nfts(first: 30, where: $where, orderBy: currentAskPrice, orderDirection: $orderDirection) {\n            ${getBaseNftFields()}\n          }\n        }\n      `,\n      {\n        collectionAddress: pancakeBunniesAddress.toLowerCase(),\n        where,\n        orderDirection,\n      },\n    )\n    return res.nfts\n  } catch (error) {\n    console.error(`Failed to fetch collection NFTs for bunny id ${bunnyId}`, error)\n    return []\n  }\n}\n\n/**\n * Fetch market data for PancakeBunnies NFTs by bunny id using the Subgraph\n * @param bunnyId - bunny id to query\n * @param existingTokenIds - tokens that are already loaded into redux\n * @returns\n */\nexport const getMarketDataForTokenIds = async (\n  collectionAddress: string,\n  existingTokenIds: string[],\n): Promise<TokenMarketData[]> => {\n  try {\n    if (existingTokenIds.length === 0) {\n      return []\n    }\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getMarketDataForTokenIds($collectionAddress: String!, $where: NFT_filter) {\n          nfts(first: 1000, where: $where) {\n            ${getBaseNftFields()}\n          }\n        }\n      `,\n      {\n        collectionAddress: collectionAddress.toLowerCase(),\n        where: { tokenId_not_in: existingTokenIds },\n      },\n    )\n    return res.nfts\n  } catch (error) {\n    console.error(`Failed to fetch market data for NFTs stored tokens`, error)\n    return []\n  }\n}\n\nexport const getNftsMarketData = async (\n  where = {},\n  first = 1000,\n  orderBy = 'id',\n  orderDirection: 'asc' | 'desc' = 'desc',\n  skip = 0,\n): Promise<TokenMarketData[]> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getNftsMarketData($first: Int, $skip: Int!, $where: NFT_filter, $orderBy: NFT_orderBy, $orderDirection: OrderDirection) {\n          nfts(where: $where, orderBy: $orderBy, orderDirection: $orderDirection, skip: $skip) {\n            ${getBaseNftFields()}\n            transactionHistory {\n              ${getBaseTransactionFields()}\n            }\n          }\n        }\n      `,\n      { where, first, skip, orderBy, orderDirection },\n    )\n\n    return res.nfts\n  } catch (error) {\n    console.error('Failed to fetch NFTs market data', error)\n    return []\n  }\n}\n\nexport const getAllPancakeBunniesLowestPrice = async (bunnyIds: string[]): Promise<Record<string, number>> => {\n  try {\n    const singlePancakeBunnySubQueries = bunnyIds.map(\n      (\n        bunnyId,\n      ) => `b${bunnyId}:nfts(first: 1, where: { otherId: ${bunnyId}, isTradable: true }, orderBy: currentAskPrice, orderDirection: asc) {\n        currentAskPrice\n      }\n    `,\n    )\n    const rawResponse: Record<string, { currentAskPrice: string }[]> = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getAllPancakeBunniesLowestPrice {\n          ${singlePancakeBunnySubQueries}\n        }\n      `,\n    )\n    return Object.keys(rawResponse).reduce((lowestPricesData, subQueryKey) => {\n      const bunnyId = subQueryKey.split('b')[1]\n      return {\n        ...lowestPricesData,\n        [bunnyId]:\n          rawResponse[subQueryKey].length > 0 ? parseFloat(rawResponse[subQueryKey][0].currentAskPrice) : Infinity,\n      }\n    }, {})\n  } catch (error) {\n    console.error('Failed to fetch PancakeBunnies lowest prices', error)\n    return {}\n  }\n}\n\nexport const getAllPancakeBunniesRecentUpdatedAt = async (bunnyIds: string[]): Promise<Record<string, number>> => {\n  try {\n    const singlePancakeBunnySubQueries = bunnyIds.map(\n      (\n        bunnyId,\n      ) => `b${bunnyId}:nfts(first: 1, where: { otherId: ${bunnyId}, isTradable: true }, orderBy: updatedAt, orderDirection: desc) {\n        updatedAt\n      }\n    `,\n    )\n    const rawResponse: Record<string, { updatedAt: string }[]> = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getAllPancakeBunniesLowestPrice {\n          ${singlePancakeBunnySubQueries}\n        }\n      `,\n    )\n    return Object.keys(rawResponse).reduce((updatedAtData, subQueryKey) => {\n      const bunnyId = subQueryKey.split('b')[1]\n      return {\n        ...updatedAtData,\n        [bunnyId]: rawResponse[subQueryKey].length > 0 ? Number(rawResponse[subQueryKey][0].updatedAt) : -Infinity,\n      }\n    }, {})\n  } catch (error) {\n    console.error('Failed to fetch PancakeBunnies latest market updates', error)\n    return {}\n  }\n}\n\n/**\n * Returns the lowest price of any NFT in a collection\n */\nexport const getLowestPriceInCollection = async (collectionAddress: string) => {\n  try {\n    const response = await getNftsMarketData(\n      { collection: collectionAddress.toLowerCase(), isTradable: true },\n      1,\n      'currentAskPrice',\n      'asc',\n    )\n\n    if (response.length === 0) {\n      return 0\n    }\n\n    const [nftSg] = response\n    return parseFloat(nftSg.currentAskPrice)\n  } catch (error) {\n    console.error(`Failed to lowest price NFTs in collection ${collectionAddress}`, error)\n    return 0\n  }\n}\n\n/**\n * Fetch user trading data for buyTradeHistory, sellTradeHistory and askOrderHistory from the Subgraph\n * @param where a User_filter where condition\n * @returns a UserActivity object\n */\nexport const getUserActivity = async (\n  address: string,\n): Promise<{ askOrderHistory: AskOrder[]; buyTradeHistory: Transaction[]; sellTradeHistory: Transaction[] }> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getUserActivity($address: String!) {\n          user(id: $address) {\n            buyTradeHistory(first: 250, orderBy: timestamp, orderDirection: desc) {\n              ${getBaseTransactionFields()}\n              nft {\n                ${getBaseNftFields()}\n              }\n            }\n            sellTradeHistory(first: 250, orderBy: timestamp, orderDirection: desc) {\n              ${getBaseTransactionFields()}\n              nft {\n                ${getBaseNftFields()}\n              }\n            }\n            askOrderHistory(first: 500, orderBy: timestamp, orderDirection: desc) {\n              id\n              block\n              timestamp\n              orderType\n              askPrice\n              nft {\n                ${getBaseNftFields()}\n              }\n            }\n          }\n        }\n      `,\n      { address },\n    )\n\n    return res.user || { askOrderHistory: [], buyTradeHistory: [], sellTradeHistory: [] }\n  } catch (error) {\n    console.error('Failed to fetch user Activity', error)\n    return {\n      askOrderHistory: [],\n      buyTradeHistory: [],\n      sellTradeHistory: [],\n    }\n  }\n}\n\n/**\n * Get the most recently listed NFTs\n * @param first Number of nfts to retrieve\n * @returns NftTokenSg[]\n */\nexport const getLatestListedNfts = async (first: number): Promise<TokenMarketData[]> => {\n  try {\n    const res = await request(\n      GRAPH_API_NFTMARKET,\n      gql`\n        query getLatestNftMarketData($first: Int) {\n          nfts(where: { isTradable: true }, orderBy: updatedAt , orderDirection: desc, first: $first) {\n            ${getBaseNftFields()}\n            collection {\n              id\n            }\n          }\n        }\n      `,\n      { first },\n    )\n\n    return res.nfts\n  } catch (error) {\n    console.error('Failed to fetch NFTs market data', error)\n    return []\n  }\n}\n\n/**\n * OTHER HELPERS\n */\n\nexport const fetchWalletTokenIdsForCollections = async (\n  account: string,\n  collections: ApiCollections,\n): Promise<TokenIdWithCollectionAddress[]> => {\n  const walletNftPromises = map(collections, async (collection): Promise<TokenIdWithCollectionAddress[]> => {\n    const { address: collectionAddress } = collection\n    const contract = getErc721Contract(collectionAddress)\n    let balanceOfResponse\n\n    try {\n      balanceOfResponse = await contract.balanceOf(account)\n    } catch (e) {\n      console.error(e)\n      return []\n    }\n\n    const balanceOf = balanceOfResponse.toNumber()\n\n    // User has no NFTs for this collection\n    if (balanceOfResponse.eq(0)) {\n      return []\n    }\n\n    const getTokenId = async (index: number) => {\n      try {\n        const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n        const tokenId = tokenIdBn.toString()\n        return tokenId\n      } catch (error) {\n        console.error('getTokenIdAndData', error)\n        return null\n      }\n    }\n\n    const tokenIdPromises = []\n\n    // For each index get the tokenId\n    for (let i = 0; i < balanceOf; i++) {\n      tokenIdPromises.push(getTokenId(i))\n    }\n\n    const tokenIds = await Promise.all(tokenIdPromises)\n    const nftLocation = NftLocation.WALLET\n    const tokensWithCollectionAddress = tokenIds.map((tokenId) => {\n      return { tokenId, collectionAddress, nftLocation }\n    })\n\n    return tokensWithCollectionAddress\n  })\n\n  const walletNfts = await Promise.all(walletNftPromises)\n  return walletNfts.flat()\n}\n\n/**\n * Helper to combine data from the collections' API and subgraph\n */\nexport const combineCollectionData = (\n  collectionApiData: ApiCollection[],\n  collectionSgData: CollectionMarketDataBaseFields[],\n): Record<string, Collection> => {\n  const collectionsMarketObj: Record<string, CollectionMarketDataBaseFields> = collectionSgData.reduce(\n    (prev, current) => ({ ...prev, [current.id]: { ...current } }),\n    {},\n  )\n\n  return collectionApiData.reduce((accum, current) => {\n    const collectionMarket = collectionsMarketObj[current.address.toLowerCase()]\n    const collection: Collection = {\n      ...current,\n      ...collectionMarket,\n    }\n\n    return {\n      ...accum,\n      [current.address]: collection,\n    }\n  }, {})\n}\n\n/**\n * Evaluate whether a market NFT is in a users wallet, their profile picture, or on sale\n * @param tokenId string\n * @param tokenIdsInWallet array of tokenIds in wallet\n * @param tokenIdsForSale array of tokenIds on sale\n * @param profileNftId Optional tokenId of users' profile picture\n * @returns NftLocation enum value\n */\nexport const getNftLocationForMarketNft = (\n  tokenId: string,\n  tokenIdsInWallet: string[],\n  tokenIdsForSale: string[],\n  profileNftId?: string,\n): NftLocation => {\n  if (tokenId === profileNftId) {\n    return NftLocation.PROFILE\n  }\n  if (tokenIdsForSale.includes(tokenId)) {\n    return NftLocation.FORSALE\n  }\n  if (tokenIdsInWallet.includes(tokenId)) {\n    return NftLocation.WALLET\n  }\n  console.error(`Cannot determine location for tokenID ${tokenId}, defaulting to NftLocation.WALLET`)\n  return NftLocation.WALLET\n}\n\n/**\n * Construct complete TokenMarketData entities with a users' wallet NFT ids and market data for their wallet NFTs\n * @param walletNfts TokenIdWithCollectionAddress\n * @param marketDataForWalletNfts TokenMarketData[]\n * @returns TokenMarketData[]\n */\nexport const attachMarketDataToWalletNfts = (\n  walletNfts: TokenIdWithCollectionAddress[],\n  marketDataForWalletNfts: TokenMarketData[],\n): TokenMarketData[] => {\n  const walletNftsWithMarketData = walletNfts.map((walletNft) => {\n    const marketData = marketDataForWalletNfts.find((marketNft) => marketNft.tokenId === walletNft.tokenId)\n    return (\n      marketData ?? {\n        tokenId: walletNft.tokenId,\n        collection: {\n          id: walletNft.collectionAddress.toLowerCase(),\n        },\n        nftLocation: walletNft.nftLocation,\n        metadataUrl: null,\n        transactionHistory: null,\n        currentSeller: null,\n        isTradable: null,\n        currentAskPrice: null,\n        latestTradedPriceInBNB: null,\n        tradeVolumeBNB: null,\n        totalTrades: null,\n        otherId: null,\n      }\n    )\n  })\n  return walletNftsWithMarketData\n}\n\n/**\n * Attach TokenMarketData and location to NftToken\n * @param nftsWithMetadata NftToken[] with API metadata\n * @param nftsForSale  market data for nfts that are on sale (i.e. not in a user's wallet)\n * @param walletNfts makret data for nfts in a user's wallet\n * @param tokenIdsInWallet array of token ids in user's wallet\n * @param tokenIdsForSale array of token ids of nfts that are on sale\n * @param profileNftId profile picture token id\n * @returns NFT[]\n */\nexport const combineNftMarketAndMetadata = (\n  nftsWithMetadata: NftToken[],\n  nftsForSale: TokenMarketData[],\n  walletNfts: TokenMarketData[],\n  tokenIdsInWallet: string[],\n  tokenIdsForSale: string[],\n  profileNftId?: string,\n): NftToken[] => {\n  const completeNftData = nftsWithMetadata.map<NftToken>((nft) => {\n    // Get metadata object\n    const isOnSale = nftsForSale.filter((forSaleNft) => forSaleNft.tokenId === nft.tokenId).length > 0\n    let marketData\n    if (isOnSale) {\n      marketData = nftsForSale.find((marketNft) => marketNft.tokenId === nft.tokenId)\n    } else {\n      marketData = walletNfts.find((marketNft) => marketNft.tokenId === nft.tokenId)\n    }\n    const location = getNftLocationForMarketNft(nft.tokenId, tokenIdsInWallet, tokenIdsForSale, profileNftId)\n    return { ...nft, marketData, location }\n  })\n  return completeNftData\n}\n\n/**\n * Get in-wallet, on-sale & profile pic NFT metadata, complete with market data for a given account\n * @param account\n * @param collections\n * @param profileNftWithCollectionAddress\n * @returns Promise<NftToken[]>\n */\nexport const getCompleteAccountNftData = async (\n  account: string,\n  collections: ApiCollections,\n  profileNftWithCollectionAddress?: TokenIdWithCollectionAddress,\n): Promise<NftToken[]> => {\n  const walletNftIds = await fetchWalletTokenIdsForCollections(account, collections)\n  if (profileNftWithCollectionAddress?.tokenId) {\n    walletNftIds.push(profileNftWithCollectionAddress)\n  }\n  const tokenIds = walletNftIds.map((nft) => nft.tokenId)\n\n  const marketDataForWalletNfts = await getNftsMarketData({ tokenId_in: tokenIds })\n  const walletNftsWithMarketData = attachMarketDataToWalletNfts(walletNftIds, marketDataForWalletNfts)\n\n  const tokenIdsInWallet = walletNftIds\n    .filter((walletNft) => {\n      // Profile Pic NFT is included in walletNftIds array, hence this filter\n      return profileNftWithCollectionAddress?.tokenId !== walletNft.tokenId\n    })\n    .map((nft) => nft.tokenId)\n\n  const marketDataForSaleNfts = await getNftsMarketData({ currentSeller: account.toLowerCase() })\n  const tokenIdsForSale = marketDataForSaleNfts.map((nft) => nft.tokenId)\n\n  const forSaleNftIds = marketDataForSaleNfts.map((nft) => {\n    return { collectionAddress: nft.collection.id, tokenId: nft.tokenId }\n  })\n\n  const metadataForAllNfts = await getNftsFromDifferentCollectionsApi([...walletNftIds, ...forSaleNftIds])\n\n  const completeNftData = combineNftMarketAndMetadata(\n    metadataForAllNfts,\n    marketDataForSaleNfts,\n    walletNftsWithMarketData,\n    tokenIdsInWallet,\n    tokenIdsForSale,\n    profileNftWithCollectionAddress?.tokenId,\n  )\n\n  return completeNftData\n}\n","export const getBaseNftFields = () => `\n  tokenId\n  metadataUrl\n  currentAskPrice\n  currentSeller\n  latestTradedPriceInBNB\n  tradeVolumeBNB\n  totalTrades\n  isTradable\n  updatedAt\n  otherId\n  collection {\n    id\n  }\n`\n\nexport const getBaseTransactionFields = () => `\n  id\n  block\n  timestamp\n  askPrice\n  netPrice\n  withBNB\n  buyer {\n    id\n  }\n  seller {\n    id\n  }\n`\n\nexport const getCollectionBaseFields = () => `\n  id\n  name\n  symbol\n  active\n  totalTrades\n  totalVolumeBNB\n  numberTokensListed\n  creatorAddress\n  tradingFee\n  creatorFee\n  whitelistChecker\n`\n","import { CurrencyAmount, Fraction, JSBI, Percent, Price, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n\n/**\n * Helper to multiply a Price object by an arbitrary amount\n */\nexport const multiplyPriceByAmount = (price: Price, amount: number, significantDigits = 18) => {\n  if (!price) {\n    return 0\n  }\n\n  return parseFloat(price.toSignificant(significantDigits)) * amount\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { BigNumberish } from 'ethers'\n\n// Collections -> Nfts -> Transactions\n// Users -> Nft tokens IDs\n\n// TODO: Handle the error state on the UI\nexport enum NFTMarketInitializationState {\n  UNINITIALIZED = 'UNINITIALIZED',\n  INITIALIZED = 'INITIALIZED',\n  ERROR = 'ERROR',\n}\n\nexport enum UserNftInitializationState {\n  UNINITIALIZED = 'UNINITIALIZED',\n  INITIALIZING = 'INITIALIZING',\n  INITIALIZED = 'INITIALIZED',\n  ERROR = 'ERROR',\n}\n\nexport interface State {\n  initializationState: NFTMarketInitializationState\n  data: {\n    collections: Record<string, Collection> // string is the address\n    nfts: Record<string, NftToken[]> // string is the collection address\n    isFetchingMoreNfts: boolean\n    latestFetchAt: number\n    lastUpdateAt: number\n    users: Record<string, User> // string is the address\n    user: UserNftsState\n  }\n}\n\nexport interface UserNftsState {\n  userNftsInitializationState: UserNftInitializationState\n  nfts: NftToken[]\n  activity: UserActivity\n}\n\nexport interface Transaction {\n  id: string\n  block: string\n  timestamp: string\n  askPrice: string\n  netPrice: string\n  buyer: { id: string }\n  seller: { id: string }\n  withBNB: boolean\n  nft?: TokenMarketData\n}\n\nexport enum AskOrderType {\n  NEW = 'NEW',\n  MODIFY = 'MODIFY',\n  CANCEL = 'CANCEL',\n}\n\nexport interface AskOrder {\n  id: string\n  block: string\n  timestamp: string\n  askPrice: string\n  orderType: AskOrderType\n  nft?: TokenMarketData\n}\n\nexport interface Image {\n  original: string\n  thumbnail: string\n  mp4?: string\n  webm?: string\n  gif?: string\n}\n\nexport enum NftLocation {\n  FORSALE = 'For Sale',\n  PROFILE = 'Profile Pic',\n  WALLET = 'In Wallet',\n}\n\n// Market data regarding specific token ID, acquired via subgraph\nexport interface TokenMarketData {\n  tokenId: string\n  metadataUrl: string\n  currentAskPrice: string\n  currentSeller: string\n  latestTradedPriceInBNB: string\n  tradeVolumeBNB: string\n  totalTrades: string\n  isTradable: boolean\n  otherId: string\n  collection?: {\n    id: string\n  }\n  updatedAt?: string\n  transactionHistory?: Transaction[]\n}\n\n// Represents single NFT token, either Squad-like NFT or single PancakeBunny.\nexport interface NftToken {\n  tokenId: string\n  name: string\n  description: string\n  collectionName: string\n  collectionAddress: string\n  image: Image\n  attributes?: NftAttribute[]\n  createdAt?: string // API createdAt\n  updatedAt?: string // API updatedAt\n  marketData?: TokenMarketData\n  location?: NftLocation\n  meta?: Record<string, string | number>\n}\n\nexport interface TokenIdWithCollectionAddress {\n  collectionAddress: string\n  tokenId: string\n  nftLocation?: NftLocation\n}\n\nexport interface NftAttribute {\n  traitType: string\n  value: string | number\n  displayType: string\n}\n\n// Internal type used to refer to a collection\n// Most fields are populated from API (via ApiCollection type)\nexport interface Collection {\n  id: string\n  address: string\n  name: string\n  description?: string\n  symbol: string\n  active: boolean\n  totalVolumeBNB: string\n  numberTokensListed: string\n  tradingFee: string\n  creatorFee: string\n  owner: string\n  totalSupply: string\n  verified: boolean\n  avatar: string\n  banner: {\n    large: string\n    small: string\n  }\n  attributes?: NftAttribute[]\n}\n\nexport interface ApiCollections {\n  [key: string]: Collection\n}\n\nexport interface User {\n  address: string\n  numberTokensListed: BigNumberish\n  numberTokensPurchased: BigNumberish\n  numberTokensSold: BigNumberish\n  nfts: Record<string, BigNumberish> // String is an address, BigNumberish is a tokenID\n}\n\n/**\n * API RESPONSES\n */\n\nexport interface ApiCollection {\n  address: string\n  owner: string\n  name: string\n  description: string\n  symbol: string\n  totalSupply: string\n  verified: boolean\n  createdAt: string\n  updatedAt: string\n  avatar: string\n  banner: {\n    large: string\n    small: string\n  }\n  attributes?: NftAttribute[] // returned for specific collection but not for all collections\n}\n\n// Get all collections\n// ${API_NFT}/collections/\nexport interface ApiCollectionsReponse {\n  total: number\n  data: ApiCollection[]\n}\n\n// Get single collection\n// ${API_NFT}/collections/${collectionAddress}\nexport interface ApiSingleCollectionResponse {\n  data: ApiCollection\n}\n\nexport interface ApiSingleTokenData {\n  name: string\n  description: string\n  image: Image\n  collection: {\n    name: string\n  }\n}\n\n// Get tokens within collection\n// ${API_NFT}/collections/${collectionAddress}/tokens\nexport interface ApiResponseCollectionTokens {\n  total: number\n  attributesDistribution: Record<string, number>\n  data: Record<string, ApiSingleTokenData>\n}\n\n// Get specific token data\n// ${API_NFT}/collections/${collectionAddress}/tokens/${tokenId}\nexport interface ApiResponseSpecificToken {\n  data: {\n    tokenId: string\n    name: string\n    description: string\n    image: Image\n    createdAt: string\n    updatedAt: string\n    attributes: NftAttribute[]\n    collection: {\n      name: string\n    }\n  }\n}\n\n/**\n * SUBGRAPH RESPONSES\n */\n\nexport interface CollectionMarketDataBaseFields {\n  id: string\n  name: string\n  symbol: string\n  active: boolean\n  totalTrades: string\n  totalVolumeBNB: string\n  numberTokensListed: string\n  creatorAddress: string\n  tradingFee: string\n  creatorFee: string\n  whitelistChecked: string\n}\n\nexport interface UserActivity {\n  askOrderHistory: AskOrder[]\n  buyTradeHistory: Transaction[]\n  sellTradeHistory: Transaction[]\n  initializationState: UserNftInitializationState\n}\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import { serializeTokens } from './tokens'\nimport { SerializedPoolConfig, PoolCategory } from './types'\n\nconst serializedTokens = serializeTokens()\n\nconst pools: SerializedPoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 1,\n    isFinished: false,\n  },\n  {\n    sousId: 221,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.nft,\n    contractAddress: {\n      97: '',\n      56: '0x8d018823d13c56d62ffb795151a9e629c21e047b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '173727',\n  },\n  {\n    sousId: 220,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.chess,\n    contractAddress: {\n      97: '',\n      56: '0x4D1Ec426d0d7fb6bF344Dd372d0502EDD71c8d88',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0861',\n  },\n  {\n    sousId: 219,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tlos,\n    contractAddress: {\n      97: '',\n      56: '0xCB41a72067c227D6Ed7bc7CFAcd13eCe47Dfe5E9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3616',\n  },\n  {\n    sousId: 218,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.stephero,\n    contractAddress: {\n      97: '',\n      56: '0xcecba456fefe5b18d43df23419e7ab755b436655',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1851',\n  },\n  {\n    sousId: 217,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bp,\n    contractAddress: {\n      97: '',\n      56: '0x8ed7acf12b08274d5cdaf03d43d0e54bcbdd487e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.217',\n  },\n  {\n    sousId: 216,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cvp,\n    contractAddress: {\n      97: '',\n      56: '0xC4b15117BC0be030c20754FF36197641477af5d1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.14',\n  },\n  {\n    sousId: 215,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.qbt,\n    contractAddress: {\n      97: '',\n      56: '0xB72dEf58D0832f747d6B7197471Fe20AeA7EB463',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.412',\n  },\n  {\n    sousId: 214,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.naos,\n    contractAddress: {\n      97: '',\n      56: '0xb38b78529bCc895dA16CE2978D6cD6C56e8CfFC3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1736',\n  },\n  {\n    sousId: 213,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pha,\n    contractAddress: {\n      97: '',\n      56: '0x2E101b5F7f910F2609e5AcE5f43bD274b1DE09AA',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.28',\n  },\n  {\n    sousId: 212,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bel,\n    contractAddress: {\n      97: '',\n      56: '0x52733Ad7b4D09BF613b0389045e33E2F287afa04',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.101',\n  },\n  {\n    sousId: 211,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0x401b9b97bdbc3197c1adfab9652dc78040bd1e13',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.9837',\n  },\n  {\n    sousId: 210,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pots,\n    contractAddress: {\n      97: '',\n      56: '0xBeDb490970204cb3CC7B0fea94463BeD67d5364D',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0868',\n  },\n  {\n    sousId: 209,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tusd,\n    contractAddress: {\n      97: '',\n      56: '0xb6e510ae2da1ab4e350f837c70823ab75091780e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.5787',\n  },\n  {\n    sousId: 208,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.revv,\n    contractAddress: {\n      97: '',\n      56: '0x8aa5b2c67852ed5334c8a7f0b5eb0ef975106793',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.331',\n  },\n  {\n    sousId: 207,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.btt,\n    contractAddress: {\n      97: '',\n      56: '0x3b804460c3c62f0f565af593984159f13b1ac976',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '263',\n  },\n  {\n    sousId: 206,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.skill,\n    contractAddress: {\n      97: '',\n      56: '0x455f4d4cc4d6ca15441a93c631e82aaf338ad843',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00289',\n  },\n  {\n    sousId: 205,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.win,\n    contractAddress: {\n      97: '',\n      56: '0xde4aef42bb27a2cb45c746acde4e4d8ab711d27c',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1815.39',\n  },\n  {\n    sousId: 204,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.if,\n    contractAddress: {\n      97: '',\n      56: '0x57d3524888ded4085d9124a422f13b27c8a43de7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.02835',\n  },\n  {\n    sousId: 203,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.sps,\n    contractAddress: {\n      97: '',\n      56: '0xb56299d8fbf46c509014b103a164ad1fc65ea222',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '12.86',\n  },\n  {\n    sousId: 202,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.c98,\n    contractAddress: {\n      97: '',\n      56: '0x5e49531BA07bE577323e55666D46C6217164119E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 201,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.axs,\n    contractAddress: {\n      97: '',\n      56: '0xBB472601B3CB32723d0755094BA80B73F67f2AF3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00744',\n  },\n  {\n    sousId: 200,\n    stakingToken: serializedTokens.axs,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x583A36816F3b8401C4fdf682203E0caDA6997740',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00992',\n  },\n  {\n    sousId: 199,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pmon,\n    contractAddress: {\n      97: '',\n      56: '0x28050e8f024e05f9ddbef5f60dd49f536dba0cf0',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.02696',\n  },\n  {\n    sousId: 198,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.trx,\n    contractAddress: {\n      97: '',\n      56: '0xb2b62f88ab82ed0bb4ab4da60d9dc9acf9e816e5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '9.6643',\n  },\n  {\n    sousId: 197,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.chess,\n    contractAddress: {\n      97: '',\n      56: '0xd1812e7e28c39e78727592de030fc0e7c366d61a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4286',\n  },\n  {\n    sousId: 196,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.titan,\n    contractAddress: {\n      97: '',\n      56: '0x97058cf9b36c9ef1622485cef22e72d6fea32a36',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.08912',\n  },\n  {\n    sousId: 195,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.harmony,\n    contractAddress: {\n      97: '',\n      56: '0xe595456846155e23b24cc9cbee910ee97027db6d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.0092',\n  },\n  {\n    sousId: 194,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mask,\n    contractAddress: {\n      97: '',\n      56: '0xae611c6d4d3ca2cee44cd34eb7aac29d5a387fcf',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.06423',\n  },\n  {\n    sousId: 193,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dvi,\n    contractAddress: {\n      97: '',\n      56: '0x135827eaf9746573c0b013f18ee12f138b9b0384',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.7233',\n  },\n  {\n    sousId: 192,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.gum,\n    contractAddress: {\n      97: '',\n      56: '0x09b8a5f51c9e245402057851ada274174fa00e2a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.67129',\n  },\n  {\n    sousId: 191,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.adx,\n    contractAddress: {\n      97: '',\n      56: '0x53a2d1db049b5271c6b6db020dba0e8a7c4eb90d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.7523',\n  },\n  {\n    sousId: 190,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.suter,\n    contractAddress: {\n      97: '',\n      56: '0x4da8da81647ee0aa7350e9959f3e4771eb753da0',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '69.9074',\n  },\n  {\n    sousId: 189,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bscpad,\n    contractAddress: {\n      97: '',\n      56: '0x0446b8f8474c590d2249a4acdd6eedbc2e004bca',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3877',\n  },\n  {\n    sousId: 188,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.rabbit,\n    contractAddress: {\n      97: '',\n      56: '0x391240A007Bfd8A59bA74978D691219a76c64c5C',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.993',\n  },\n  {\n    sousId: 187,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.waultx,\n    contractAddress: {\n      97: '',\n      56: '0x017DEa5C58c2Bcf57FA73945073dF7AD4052a71C',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '7.9108',\n  },\n  {\n    sousId: 186,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.wex,\n    contractAddress: {\n      97: '',\n      56: '0x6Bd94783caCef3fb7eAa9284f1631c464479829f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '11.574',\n  },\n  {\n    sousId: 185,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.form,\n    contractAddress: {\n      97: '',\n      56: '0x7c71723fB1F9Cfb250B702cfc4eBd5D9Ab2E83d9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.4467',\n  },\n  {\n    sousId: 184,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.orbs,\n    contractAddress: {\n      97: '',\n      56: '0x9C8813d7D0A61d30610a7A5FdEF9109e196a3D77',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.8946',\n  },\n  {\n    sousId: 183,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.$dg,\n    contractAddress: {\n      97: '',\n      56: '0xa07a91da6d10173f33c294803684bceede325957',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00135',\n  },\n  {\n    sousId: 182,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.woo,\n    contractAddress: {\n      97: '',\n      56: '0x88c321d444c88acf3e747dc90f20421b97648903',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3854',\n  },\n  {\n    sousId: 181,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.woo,\n    contractAddress: {\n      97: '',\n      56: '0x3c7234c496d76133b48bd6a342e7aea4f8d87fc8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0003854',\n  },\n  {\n    sousId: 180,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.htb,\n    contractAddress: {\n      97: '',\n      56: '0x64473c33c360f315cab38674f1633505d1d8dcb2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '5.2083',\n  },\n  {\n    sousId: 179,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.jgn,\n    contractAddress: {\n      97: '',\n      56: '0x5cc7a19a50be2a6b2540ebcd55bd728e732e59c3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1001',\n  },\n  {\n    sousId: 178,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dft,\n    contractAddress: {\n      97: '',\n      56: '0x2666e2494e742301ffc8026e476acc1710a775ed',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 177,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hai,\n    contractAddress: {\n      97: '',\n      56: '0x6ac2213F09A404c86AFf506Aa51B6a5BF1F6e24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.3078',\n  },\n  {\n    sousId: 176,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.o3,\n    contractAddress: {\n      97: '',\n      56: '0x35BD47263f7E57368Df76339903C53bAa99076e1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.107638',\n  },\n  {\n    sousId: 175,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ampl,\n    contractAddress: {\n      97: '',\n      56: '0x62dEc3A560D2e8A84D30752bA454f97b26757877',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.398',\n  },\n  {\n    sousId: 174,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0x44d1f81e80e43e935d66d65874354ef91e5e49f6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4843',\n  },\n  {\n    sousId: 173,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x4ea43fce546975aae120c9eeceb172500be4a02b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6741',\n  },\n  {\n    sousId: 172,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.marsh,\n    contractAddress: {\n      97: '',\n      56: '0x567fd708e788e51b68666b9310ee9df163d60fae',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1108',\n  },\n  {\n    sousId: 171,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mbox,\n    contractAddress: {\n      97: '',\n      56: '0x36f9452083fc9bc469a31e7966b873f402292433',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4803',\n  },\n  {\n    sousId: 170,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ata,\n    contractAddress: {\n      97: '',\n      56: '0xc612680457751d0d01b5d901ad08132a3b001900',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 169,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mx,\n    contractAddress: {\n      97: '',\n      56: '0x336bcd59f2b6eb7221a99f7a50fd03c6bf9a306b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.27777',\n  },\n  {\n    sousId: 168,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bcfx,\n    contractAddress: {\n      97: '',\n      56: '0x2b3974dda76b2d408b7d680a27fbb0393e3cf0e1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6944',\n  },\n  {\n    sousId: 167,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.qkc,\n    contractAddress: {\n      97: '',\n      56: '0xfa67f97eeee6de55d179ecabbfe701f27d9a1ed9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '15.9143',\n  },\n  {\n    sousId: 166,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ktn,\n    contractAddress: {\n      97: '',\n      56: '0x48852322a185dc5fc733ff8c8d7c6dcbd2b3b2a2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01215',\n  },\n  {\n    sousId: 165,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mtrg,\n    contractAddress: {\n      97: '',\n      56: '0xf4d0f71698f58f221911515781b05e808a8635cb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.05613',\n  },\n  {\n    sousId: 164,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tusd,\n    contractAddress: {\n      97: '',\n      56: '0x9dceb1d92f7e0361d0766f3d98482424df857654',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.5787',\n  },\n  {\n    sousId: 163,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.vrt,\n    contractAddress: {\n      97: '',\n      56: '0xb77f1425ec3a7c78b1a1e892f72332c8b5e8ffcb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '40.5092',\n  },\n  {\n    sousId: 162,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.kalm,\n    contractAddress: {\n      97: '',\n      56: '0xb9ff4da0954b300542e722097671ead8cf337c17',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0868',\n  },\n  {\n    sousId: 161,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ez,\n    contractAddress: {\n      97: '',\n      56: '0xb19395702460261e51edf7a7b130109c64f13af9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01736',\n  },\n  {\n    sousId: 160,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.kalm,\n    contractAddress: {\n      97: '',\n      56: '0x6e113ecb9ff2d271140f124c2cc5b5e4b5700c9f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    isFinished: true,\n    tokenPerBlock: '0.00868',\n  },\n  {\n    sousId: 159,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.popen,\n    contractAddress: {\n      97: '',\n      56: '0x7baf1763ce5d0da8c9d85927f08a8be9c481ce50',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.19097',\n  },\n  {\n    sousId: 158,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x2b8d6c9c62bfc1bed84724165d3000e61d332cab',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.023148',\n  },\n  {\n    sousId: 157,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.well,\n    contractAddress: {\n      97: '',\n      56: '0x8a06ff2748edcba3fb4e44a6bfda4e46769e557b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2025',\n    sortOrder: 999,\n  },\n  {\n    sousId: 156,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.deri,\n    contractAddress: {\n      97: '',\n      56: '0x3eba95f5493349bbe0cad33eaae05dc6a7e26b90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '1.6087',\n    sortOrder: 999,\n  },\n  {\n    sousId: 155,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.chr,\n    contractAddress: {\n      97: '',\n      56: '0x593edbd14a5b7eec828336accca9c16cc12f04be',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '1.655',\n    sortOrder: 999,\n  },\n  {\n    sousId: 154,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cyc,\n    contractAddress: {\n      97: '',\n      56: '0xD714738837944C3c592477249E8edB724A76e068',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00015914',\n    sortOrder: 999,\n  },\n  {\n    sousId: 153,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xend,\n    contractAddress: {\n      97: '',\n      56: '0x8ea9f2482b2f7b12744a831f81f8d08714adc093',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.31828',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 152,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hget,\n    contractAddress: {\n      97: '',\n      56: '0x8e8125f871eb5ba9d55361365f5391ab437f9acc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.03553',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 151,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hotcross,\n    contractAddress: {\n      97: '',\n      56: '0x0e09205e993f78cd5b3a5df355ae98ee7d0b5834',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: false,\n  },\n  {\n    sousId: 150,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.rfox,\n    contractAddress: {\n      97: '',\n      56: '0xf9f00d41b1f4b3c531ff750a9b986c1a530f33d9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n    isFinished: false,\n  },\n  {\n    sousId: 149,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.wmass,\n    contractAddress: {\n      97: '',\n      56: '0x4Af531EcD50167a9402Ce921ee6436dd4cFC04FD',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.24942',\n    isFinished: false,\n  },\n  {\n    sousId: 148,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ubxt,\n    contractAddress: {\n      97: '',\n      56: '0x9b4bac2d8f69853aa29cb45478c77fc54532ac22',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.4074',\n    isFinished: false,\n  },\n  {\n    sousId: 147,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.btr,\n    contractAddress: {\n      97: '',\n      56: '0x20ee70a07ae1b475cb150dec27930d97915726ea',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.8935',\n    isFinished: false,\n  },\n  {\n    sousId: 146,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.τdoge,\n    contractAddress: {\n      97: '',\n      56: '0x017556dffb8c6a52fd7f4788adf6fb339309c81b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.868',\n    isFinished: false,\n  },\n  {\n    sousId: 145,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pmon,\n    contractAddress: {\n      97: '',\n      56: '0xdaa711ecf2ac0bff5c82fceeae96d0008791cc49',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01261',\n    isFinished: false,\n  },\n  {\n    sousId: 144,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.one,\n    contractAddress: {\n      97: '',\n      56: '0x74af842ecd0b6588add455a47aa21ed9ba794108',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '57.87',\n    isFinished: false,\n  },\n  {\n    sousId: 143,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.fine,\n    contractAddress: {\n      97: '',\n      56: '0x42d41749d6e9a1c5b47e27f690d4531f181b2159',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1342',\n    isFinished: false,\n  },\n  {\n    sousId: 142,\n    stakingToken: serializedTokens.doge,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xbebd44824631b55991fa5f2bf5c7a4ec96ff805b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01388',\n    isFinished: false,\n  },\n  {\n    sousId: 141,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bmxx,\n    contractAddress: {\n      97: '',\n      56: '0x55131f330c886e3f0cae389cedb23766ac9aa3ed',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01331',\n    isFinished: false,\n  },\n  {\n    sousId: 140,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.oin,\n    contractAddress: {\n      97: '',\n      56: '0x01453a74a94687fa3f99b80762435855a13664f4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: false,\n  },\n  {\n    sousId: 139,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hyfi,\n    contractAddress: {\n      97: '',\n      56: '0x0032ceb978fe5fc8a5d5d6f5adfc005e76397e29',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.8935',\n    isFinished: false,\n  },\n  {\n    sousId: 138,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.kun,\n    contractAddress: {\n      97: '',\n      56: '0x439b46d467402cebc1a2fa05038b5b696b1f4417',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.23148',\n    isFinished: false,\n  },\n  {\n    sousId: 137,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.math,\n    contractAddress: {\n      97: '',\n      56: '0x377ae5f933aa4cfa41fa03e2cae8a2befccf53b2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.15798',\n    isFinished: false,\n  },\n  {\n    sousId: 136,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ust,\n    contractAddress: {\n      97: '',\n      56: '0xce3ebac3f549ebf1a174a6ac3b390c179422b5f6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.17361',\n    isFinished: false,\n  },\n  {\n    sousId: 135,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.win,\n    contractAddress: {\n      97: '',\n      56: '0xd26dec254c699935c286cd90e9841dcabf1af72d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '462.96',\n    isFinished: false,\n  },\n  {\n    sousId: 134,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.trx,\n    contractAddress: {\n      97: '',\n      56: '0x93e2867d9b74341c2d19101b7fbb81d6063cca4d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '4.0509',\n    isFinished: false,\n  },\n  {\n    sousId: 133,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.btt,\n    contractAddress: {\n      97: '',\n      56: '0x3b644e44033cff70bd6b771904225f3dd69dfb6d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '79.86',\n    isFinished: false,\n  },\n  {\n    sousId: 132,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lmt,\n    contractAddress: {\n      97: '',\n      56: '0x0a687d7b951348d681f7ed5eea84c0ba7b9566dc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.66145',\n    isFinished: false,\n  },\n  {\n    sousId: 131,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pnt,\n    contractAddress: {\n      97: '',\n      56: '0x417df1c0e6a498eb1f2247f99032a01d4fafe922',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.09548',\n    isFinished: false,\n  },\n  {\n    sousId: 130,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xmark,\n    contractAddress: {\n      97: '',\n      56: '0xdc8943d806f9dd64312d155284abf780455fd345',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0298',\n    isFinished: false,\n  },\n  {\n    sousId: 129,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0xa90a894e5bc20ab2be46c7e033a38f8b8eaa771a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4861',\n    isFinished: true,\n  },\n  {\n    sousId: 128,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hakka,\n    contractAddress: {\n      97: '',\n      56: '0x34ac807e34e534fe426da1e11f816422774aae1c',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: false,\n  },\n  {\n    sousId: 127,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pbtc,\n    contractAddress: {\n      97: '',\n      56: '0x31fa2f516b77c4273168b284ac6d9def5aa6dafb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0000031',\n    isFinished: false,\n  },\n  {\n    sousId: 126,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x7112f8988f075c7784666ab071927ae4109a8076',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.003472',\n    isFinished: false,\n  },\n  {\n    sousId: 125,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bbadger,\n    contractAddress: {\n      97: '',\n      56: '0x126dfbcef85c5bf335f8be99ca4006037f417892',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00265278',\n    isFinished: false,\n  },\n  {\n    sousId: 124,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bdigg,\n    contractAddress: {\n      97: '',\n      56: '0x4f0ad2332b1f9983e8f63cbee617523bb7de5031',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000403',\n    isFinished: false,\n  },\n  {\n    sousId: 123,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x9483ca44324de06802576866b9d296f7614f45ac',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4629',\n    isFinished: false,\n  },\n  {\n    sousId: 122,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xed,\n    contractAddress: {\n      97: '',\n      56: '0x72ceec6e2a142678e703ab0710de78bc819f4ce0',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: false,\n  },\n  {\n    sousId: 121,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cgg,\n    contractAddress: {\n      97: '',\n      56: '0x1c6ed21d3313822ae73ed0d94811ffbbe543f341',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.10918',\n    isFinished: false,\n  },\n  {\n    sousId: 120,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.perl,\n    contractAddress: {\n      97: '',\n      56: '0x1ac0d0333640f57327c83053c581340ebc829e30',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n    isFinished: false,\n  },\n  {\n    sousId: 119,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.arpa,\n    contractAddress: {\n      97: '',\n      56: '0xc707e5589aeb1dc117b0bb5a3622362f1812d4fc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.949',\n    isFinished: false,\n  },\n  {\n    sousId: 118,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0x22106cdcf9787969e1672d8e6a9c03a889cda9c5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.11284',\n    isFinished: false,\n  },\n  {\n    sousId: 117,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dexe,\n    contractAddress: {\n      97: '',\n      56: '0x999b86e8bba3d4f05afb8155963999db70afa97f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.009837',\n    isFinished: true,\n  },\n  {\n    sousId: 116,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dfd,\n    contractAddress: {\n      97: '',\n      56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.46296',\n    isFinished: false,\n  },\n  {\n    sousId: 115,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mad,\n    contractAddress: {\n      97: '',\n      56: '0xf73fdeb26a8c7a4abf3809d3db11a06ba5c13d0e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.22743',\n    isFinished: false,\n  },\n  {\n    sousId: 114,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.τbtc,\n    contractAddress: {\n      97: '',\n      56: '0xaac7171afc93f4b75e1268d208040b152ac65e32',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000608',\n    isFinished: false,\n  },\n  {\n    sousId: 113,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.τbtc,\n    contractAddress: {\n      97: '',\n      56: '0x2c6017269b4324d016ca5d8e3267368652c18905',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000608',\n    isFinished: true,\n  },\n  {\n    sousId: 112,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.swingby,\n    contractAddress: {\n      97: '',\n      56: '0x675434c68f2672c983e36cf10ed13a4014720b79',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.21527',\n  },\n  {\n    sousId: 111,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xed,\n    contractAddress: {\n      97: '',\n      56: '0x05d6c2d1d687eacfb5e6440d5a3511e91f2201a8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 110,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hakka,\n    contractAddress: {\n      97: '',\n      56: '0xd623a32da4a632ce01766c317d07cb2cad56949b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 109,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cgg,\n    contractAddress: {\n      97: '',\n      56: '0xdf75f38dbc98f9f26377414e567abcb8d57cca33',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.10918',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 108,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mix,\n    contractAddress: {\n      97: '',\n      56: '0xce64a930884b2c68cd93fc1c7c7cdc221d427692',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3721',\n  },\n  {\n    sousId: 107,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.suter,\n    contractAddress: {\n      97: '',\n      56: '0xc1E70edd0141c454b834Deac7ddDeA413424aEf9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '15.3356',\n  },\n  {\n    sousId: 106,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.broobee,\n    contractAddress: {\n      97: '',\n      56: '0x189d8228CdfDc404Bd9e5bD65ff958cb5fd8855c',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '14.4675',\n  },\n  {\n    sousId: 105,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hzn,\n    contractAddress: {\n      97: '',\n      56: '0x0196c582216e2463f052E2B07Ef8667Bec9Fb17a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6944',\n  },\n  {\n    sousId: 104,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.alpa,\n    contractAddress: {\n      97: '',\n      56: '0x8f84106286c9c8A42bc3555C835E6e2090684ab7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.23495',\n  },\n  {\n    sousId: 103,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.perl,\n    contractAddress: {\n      97: '',\n      56: '0xa8d32b31ECB5142f067548Bf0424389eE98FaF26',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 102,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tlm,\n    contractAddress: {\n      97: '',\n      56: '0xC59aa49aE508050c2dF653E77bE13822fFf02E9A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '17.361',\n  },\n  {\n    sousId: 101,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.jgn,\n    contractAddress: {\n      97: '',\n      56: '0x14AeA62384789EDA98f444cCb970F6730877d3F9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.08796',\n  },\n  {\n    sousId: 100,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.eps,\n    contractAddress: {\n      97: '',\n      56: '0xebb87dF24D65977cbe62538E4B3cFBD5d0308642',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.07716',\n  },\n  {\n    sousId: 99,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.arpa,\n    contractAddress: {\n      97: '',\n      56: '0x40918EF8efFF4aA061656013a81E0e5A8A702eA7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.949',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 98,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.itam,\n    contractAddress: {\n      97: '',\n      56: '0x44eC1B26035865D9A7C130fD872670CD7Ebac2bC',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.096',\n  },\n  {\n    sousId: 97,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x1329ad151dE6C441184E32E108401126AE850937',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4629',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 96,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tko,\n    contractAddress: {\n      97: '',\n      56: '0x9bbDc92474a7e7321B78dcDA5EF35f4981438760',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n  },\n  {\n    sousId: 95,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.apys,\n    contractAddress: {\n      97: '',\n      56: '0x46530d79b238f809e80313e73715b160c66677aF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.09953',\n  },\n  {\n    sousId: 94,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hoo,\n    contractAddress: {\n      97: '',\n      56: '0x47fD853D5baD391899172892F91FAa6d0cd8A2Aa',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.489',\n  },\n  {\n    sousId: 93,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0xe25aB6F05BBF6C1be953BF2d7df15B3e01b8e5a5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.11284',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 92,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.easy,\n    contractAddress: {\n      97: '',\n      56: '0xEB8Fd597921E3Dd37B0F103a2625F855e2C9b9B5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0072338',\n  },\n  {\n    sousId: 91,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.nrv,\n    contractAddress: {\n      97: '',\n      56: '0xABFd8d1942628124aB971937154f826Bce86DcbC',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.15046',\n  },\n  {\n    sousId: 90,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dego,\n    contractAddress: {\n      97: '',\n      56: '0x526d3c204255f807C95a99b69596f2f9f72345e5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00405',\n  },\n  {\n    sousId: 89,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.gum,\n    contractAddress: {\n      97: '',\n      56: '0xAa2082BeE04fc518300ec673F9497ffa6F669dB8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.08912',\n  },\n  {\n    sousId: 88,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pbtc,\n    contractAddress: {\n      97: '',\n      56: '0x9096625Bc0d36F5EDa6d44e511641667d89C28f4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0000031',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 87,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dft,\n    contractAddress: {\n      97: '',\n      56: '0x78BD4dB48F8983c3C36C8EAFbEF38f6aC7B55285',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6811',\n  },\n  {\n    sousId: 86,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.swth,\n    contractAddress: {\n      97: '',\n      56: '0x35418e14F5aA615C4f020eFBa6e01C5DbF15AdD2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.3148',\n  },\n  {\n    sousId: 85,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x3c7cC49a35942fbD3C2ad428a6c22490cd709d03',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.003472',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 84,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.zil,\n    contractAddress: {\n      97: '',\n      56: '0xF795739737ABcFE0273f4Dced076460fdD024Dd9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.0995',\n  },\n  {\n    sousId: 83,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.pcws,\n    contractAddress: {\n      97: '',\n      56: '0x06FF8960F7F4aE572A3f57FAe77B2882BE94Bf90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00434',\n  },\n  {\n    sousId: 82,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bbadger,\n    contractAddress: {\n      97: '',\n      56: '0xe4dD0C50fb314A8B2e84D211546F5B57eDd7c2b9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00265278',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 81,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bdigg,\n    contractAddress: {\n      97: '',\n      56: '0xb627A7e33Db571bE792B0b69c5C2f5a8160d5500',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000403',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 80,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lto,\n    contractAddress: {\n      97: '',\n      56: '0xadBfFA25594AF8Bc421ecaDF54D057236a99781e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.2893',\n  },\n  {\n    sousId: 79,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mir,\n    contractAddress: {\n      97: '',\n      56: '0x3e31488f08EBcE6F2D8a2AA512aeFa49a3C7dFa7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01273',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 78,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.mir,\n    contractAddress: {\n      97: '',\n      56: '0x453a75908fb5a36d482d5f8fe88eca836f32ead5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01273',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 77,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.trade,\n    contractAddress: {\n      97: '',\n      56: '0x509C99D73FB54b2c20689708b3F824147292D38e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4484',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 76,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dusk,\n    contractAddress: {\n      97: '',\n      56: '0xF1bd5673Ea4a1C415ec84fa3E402F2F7788E7717',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4629',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 75,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bifi,\n    contractAddress: {\n      97: '',\n      56: '0xB4C68A1C565298834360BbFF1652284275120D47',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00007234',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 74,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.txl,\n    contractAddress: {\n      97: '',\n      56: '0x153e62257F1AAe05d5d253a670Ca7585c8D3F94F',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.434027',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 73,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.cos,\n    contractAddress: {\n      97: '',\n      56: '0xF682D186168b4114ffDbF1291F19429310727151',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '5.787',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 72,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bunny,\n    contractAddress: {\n      97: '',\n      56: '0xaDdAE5f4dB84847ac9d947AED1304A8e7D19f7cA',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00289',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 71,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.alice,\n    contractAddress: {\n      97: '',\n      56: '0x4C32048628D0d32d4D6c52662FB4A92747782B56',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.14467',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 70,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.for,\n    contractAddress: {\n      97: '',\n      56: '0x47642101e8D8578C42765d7AbcFd0bA31868c523',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '2.8935',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 69,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bux,\n    contractAddress: {\n      97: '',\n      56: '0x07F8217c68ed9b838b0b8B58C19c79bACE746e9A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5787',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 68,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.nuls,\n    contractAddress: {\n      97: '',\n      56: '0x580DC9bB9260A922E3A4355b9119dB990F09410d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0868',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 67,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.belt,\n    contractAddress: {\n      97: '',\n      56: '0x6f0037d158eD1AeE395e1c12d21aE8583842F472',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00868',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 66,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0x423382f989C6C289c8D441000e1045e231bd7d90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4861',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 65,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bfi,\n    contractAddress: {\n      97: '',\n      56: '0x0A595623b58dFDe6eB468b613C11A7A8E84F09b9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0001157',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 64,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dexe,\n    contractAddress: {\n      97: '',\n      56: '0x9E6dA246d369a41DC44673ce658966cAf487f7b2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.009837',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 63,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bel,\n    contractAddress: {\n      97: '',\n      56: '0x2C0f449387b15793B9da27c2d945dBed83ab1B07',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0549',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 62,\n    stakingToken: serializedTokens.tpt,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x0c3D6892aa3b23811Af3bd1bbeA8b0740E8e4528',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0462',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 61,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.tpt,\n    contractAddress: {\n      97: '',\n      56: '0x75C91844c5383A68b7d3A427A44C32E3ba66Fe45',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3.616',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 60,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.watch,\n    contractAddress: {\n      97: '',\n      56: '0xC58954199E268505fa3D3Cb0A00b7207af8C2D1d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.3472',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 59,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.xmark,\n    contractAddress: {\n      97: '',\n      56: '0xA5137e08C48167E363Be8Ec42A68f4F54330964E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0413',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 58,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bmxx,\n    contractAddress: {\n      97: '',\n      56: '0x6F31B87f51654424Ce57E9F8243E27ed13846CDB',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00248',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 57,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.iotx,\n    contractAddress: {\n      97: '',\n      56: '0xCE54BA909d23B9d4BE0Ff0d84e5aE83F0ADD8D9a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '6.365',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 56,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bor,\n    contractAddress: {\n      97: '',\n      56: '0x3e677dC00668d69c2A7724b9AFA7363e8A56994e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.000395',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 55,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bopen,\n    contractAddress: {\n      97: '',\n      56: '0x5Ac8406498dC1921735d559CeC271bEd23B294A7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0723',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 54,\n    stakingToken: serializedTokens.sushi,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xb69b6e390cba1F68442A886bC89E955048DAe7E3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0367',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 53,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.dodo,\n    contractAddress: {\n      97: '',\n      56: '0xae3001ddb18A6A57BEC2C19D71680437CA87bA1D',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0578',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 52,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.swingby,\n    contractAddress: {\n      97: '',\n      56: '0x02aa767e855b8e80506fb47176202aA58A95315a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.13',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 51,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bry,\n    contractAddress: {\n      97: '',\n      56: '0x1c736F4FB20C7742Ee83a4099fE92abA61dFca41',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1157',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 50,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.zee,\n    contractAddress: {\n      97: '',\n      56: '0x02861B607a5E87daf3FD6ec19DFB715F1b371379',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1736',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 49,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.swgb,\n    contractAddress: {\n      97: '',\n      56: '0x73e4E8d010289267dEe3d1Fc48974B60363963CE',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.899',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 48,\n    stakingToken: serializedTokens.comp,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xE0565fBb109A3f3f8097D8A9D931277bfd795072',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.055',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 47,\n    stakingToken: serializedTokens.comp,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xc3693e3cbc3514d5d07EA5b27A721F184F617900',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.55',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 46,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.sfp,\n    contractAddress: {\n      97: '',\n      56: '0x2B02d43967765b18E31a9621da640588f3550EFD',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.6',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 45,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lina,\n    contractAddress: {\n      97: '',\n      56: '0x212bb602418C399c29D52C55100fD6bBa12bea05',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.983',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 44,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lina,\n    contractAddress: {\n      97: '',\n      56: '0x04aE8ca68A116278026fB721c06dCe709eD7013C',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0983',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 43,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.lit,\n    contractAddress: {\n      97: '',\n      56: '0x1714bAAE9DD4738CDEA07756427FA8d4F08D9479',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.231',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 42,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hget,\n    contractAddress: {\n      97: '',\n      56: '0xcCD0b93cC6ce3dC6dFaA9DB68f70e5C8455aC5bd',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0138',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 41,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bdo,\n    contractAddress: {\n      97: '',\n      56: '0x9cB24e9460351bC51d4066BC6AEd1F3809b02B78',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.075',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 40,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.egld,\n    contractAddress: {\n      97: '',\n      56: '0x2dcf4cDFf4Dd954683Fe0a6123077f8a025b66cF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.001215',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 39,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ust,\n    contractAddress: {\n      97: '',\n      56: '0x6EFa207ACdE6e1caB77c1322CbdE9628929ba88F',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1157',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 38,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.wsote,\n    contractAddress: {\n      97: '',\n      56: '0xD0b738eC507571176D40f28bd56a0120E375f73a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.23',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 37,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.front,\n    contractAddress: {\n      97: '',\n      56: '0xf7a31366732F08E8e6B88519dC3E827e04616Fc9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2546',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 36,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.helmet,\n    contractAddress: {\n      97: '',\n      56: '0x9F23658D5f4CEd69282395089B0f8E4dB85C6e79',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.81',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 35,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.btcst,\n    contractAddress: {\n      97: '',\n      56: '0xB6fd2724cc9c90DD31DA35DbDf0300009dceF97d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.011574',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 34,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bscx,\n    contractAddress: {\n      97: '',\n      56: '0x108BFE84Ca8BCe0741998cb0F60d313823cEC143',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.17361',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 33,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ten,\n    contractAddress: {\n      97: '',\n      56: '0x4A26b082B432B060B1b00A84eE4E823F04a6f69a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.05787',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 32,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.balbt,\n    contractAddress: {\n      97: '',\n      56: '0x3cc08B7C6A31739CfEd9d8d38b484FDb245C79c8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4166',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 31,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.asr,\n    contractAddress: {\n      97: '',\n      56: '0xd18E1AEb349ef0a6727eCe54597D98D263e05CAB',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 30,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.atm,\n    contractAddress: {\n      97: '',\n      56: '0x68C7d180bD8F7086D91E65A422c59514e4aFD638',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 29,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.og,\n    contractAddress: {\n      97: '',\n      56: '0xbE65d7e42E05aD2c4ad28769dc9c5b4b6EAff2C7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 28,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.reef,\n    contractAddress: {\n      97: '',\n      56: '0x1500fa1afbfe4f4277ed0345cdf12b2c9ca7e139',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '115.74',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 27,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ditto,\n    contractAddress: {\n      97: '',\n      56: '0x624ef5C2C6080Af188AF96ee5B3160Bb28bb3E02',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01157',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 26,\n    stakingToken: serializedTokens.twt,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x0554a5D083Abf2f056ae3F6029e1714B9A655174',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.248',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 24,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.juv,\n    contractAddress: {\n      97: '',\n      56: '0x543467B17cA5De50c8BF7285107A36785Ab57E56',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 25,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.psg,\n    contractAddress: {\n      97: '',\n      56: '0x65aFEAFaec49F23159e897EFBDCe19D94A86A1B6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 21,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.vai,\n    contractAddress: {\n      97: '',\n      56: '0x1AD34D8d4D79ddE88c9B6b8490F8fC67831f2CAe',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.104',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 20,\n    stakingToken: serializedTokens.bnb,\n    earningToken: serializedTokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x555Ea72d7347E82C614C16f005fA91cAf06DCB5a',\n    },\n    poolCategory: PoolCategory.BINANCE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 19,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.bnb,\n    contractAddress: {\n      97: '',\n      56: '0x326D754c64329aD7cb35744770D56D0E1f3B3124',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0041',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 18,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.blink,\n    contractAddress: {\n      97: '',\n      56: '0x42Afc29b2dEa792974d1e9420696870f1Ca6d18b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '23.14',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 17,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.blink,\n    contractAddress: {\n      97: '',\n      56: '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '23.14',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 16,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.unfi,\n    contractAddress: {\n      97: '',\n      56: '0xFb1088Dae0f03C5123587d2babb3F307831E6367',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02893',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 15,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.twt,\n    contractAddress: {\n      97: '',\n      56: '0x9c4EBADa591FFeC4124A7785CAbCfb7068fED2fb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 14,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.hard,\n    contractAddress: {\n      97: '',\n      56: '0x90F995b9d46b32c4a1908A8c6D0122e392B3Be97',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.346',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 13,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.broobee,\n    contractAddress: {\n      97: '',\n      56: '0xdc8c45b7F3747Ca9CaAEB3fa5e0b5FCE9430646b',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '12.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 12,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.stax,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xFF02241a2A1d2a7088A344309400E9fE74772815',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '0.2',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 11,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.nar,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xDc938BA1967b06d666dA79A7B1E31a8697D1565E',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '1',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 10,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.nya,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x07a0A5B67136d40F4d7d95Bc8e0583bafD7A81b9',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '10',\n    isFinished: true,\n  },\n  {\n    sousId: 9,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.ctk,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0x21A9A53936E812Da06B7623802DEc9A1f94ED23a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 8,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.twt,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0xe7f9A439Aa7292719aC817798DDd1c4D35934aAF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '20',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 7,\n    stakingToken: serializedTokens.cake,\n    earningToken: serializedTokens.inj,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0xcec2671C81a0Ecf7F8Ee796EFa6DBDc5Cb062693',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.25',\n    sortOrder: 999,\n    isFinished: true,\n  },\n]\n\nexport default pools\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { deserializeToken } from 'state/user/hooks/helpers'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, SerializedFarm, DeserializedFarmUserData, DeserializedFarm, DeserializedFarmsState } from '../types'\n\nconst deserializeFarmUserData = (farm: SerializedFarm): DeserializedFarmUserData => {\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\nconst deserializeFarm = (farm: SerializedFarm): DeserializedFarm => {\n  const { lpAddresses, lpSymbol, pid, dual, multiplier, isCommunity, quoteTokenPriceBusd, tokenPriceBusd } = farm\n\n  return {\n    lpAddresses,\n    lpSymbol,\n    pid,\n    dual,\n    multiplier,\n    isCommunity,\n    quoteTokenPriceBusd,\n    tokenPriceBusd,\n    token: deserializeToken(farm.token),\n    quoteToken: deserializeToken(farm.quoteToken),\n    userData: deserializeFarmUserData(farm),\n    tokenAmountTotal: farm.tokenAmountTotal ? new BigNumber(farm.tokenAmountTotal) : BIG_ZERO,\n    lpTotalInQuoteToken: farm.lpTotalInQuoteToken ? new BigNumber(farm.lpTotalInQuoteToken) : BIG_ZERO,\n    lpTotalSupply: farm.lpTotalSupply ? new BigNumber(farm.lpTotalSupply) : BIG_ZERO,\n    tokenPriceVsQuote: farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO,\n    poolWeight: farm.poolWeight ? new BigNumber(farm.poolWeight) : BIG_ZERO,\n  }\n}\n\nexport const usePollFarmsPublicData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n  }, [includeArchive, dispatch, slowRefresh])\n}\n\nexport const usePollFarmsWithUserData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([251, 252]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): DeserializedFarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  const deserializedFarmsData = farms.data.map(deserializeFarm)\n  const { loadArchivedFarmsData, userDataLoaded } = farms\n  return {\n    loadArchivedFarmsData,\n    userDataLoaded,\n    data: deserializedFarmsData,\n  }\n}\n\nexport const useFarmFromPid = (pid: number): DeserializedFarm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return deserializeFarm(farm)\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): DeserializedFarm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return deserializeFarm(farm)\n}\n\nexport const useFarmUser = (pid): DeserializedFarmUserData => {\n  const { userData } = useFarmFromPid(pid)\n  const { allowance, tokenBalance, stakedBalance, earnings } = userData\n  return {\n    allowance,\n    tokenBalance,\n    stakedBalance,\n    earnings,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.tokenPriceBusd)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply.gt(0) && farm.lpTotalInQuoteToken.gt(0)) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(farm.lpTotalSupply)\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(251)\n\n  const cakePriceBusdAsString = cakeBnbFarm.tokenPriceBusd\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout, t)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Connect Wallet')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import { ReactNode } from 'react'\n\nexport const types = {\n  SUCCESS: 'success',\n  DANGER: 'danger',\n  WARNING: 'warning',\n  INFO: 'info',\n}\n\nexport type Types = typeof types[keyof typeof types]\n\nexport interface Toast {\n  id: string\n  type: Types\n  title: string\n  description?: ReactNode\n}\n\nexport interface ToastContainerProps {\n  toasts: Toast[]\n  stackSpacing?: number\n  ttl?: number\n  onRemove: (id: string) => void\n}\n\nexport interface ToastProps {\n  toast: Toast\n  onRemove: ToastContainerProps['onRemove']\n  ttl: number\n  style: Partial<CSSStyleDeclaration>\n}\n","import React, { useCallback, useEffect, useRef } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport styled from 'styled-components'\nimport { Alert, alertVariants } from '@pancakeswap/uikit'\nimport { ToastProps, types } from './types'\n\nconst alertTypeMap = {\n  [types.INFO]: alertVariants.INFO,\n  [types.SUCCESS]: alertVariants.SUCCESS,\n  [types.DANGER]: alertVariants.DANGER,\n  [types.WARNING]: alertVariants.WARNING,\n}\n\nconst StyledToast = styled.div`\n  right: 16px;\n  position: fixed;\n  max-width: calc(100% - 32px);\n  transition: all 250ms ease-in;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 400px;\n  }\n`\n\nconst Toast: React.FC<ToastProps> = ({ toast, onRemove, style, ttl, ...props }) => {\n  const timer = useRef<number>()\n  const ref = useRef(null)\n  const removeHandler = useRef(onRemove)\n  const { id, title, description, type } = toast\n\n  const handleRemove = useCallback(() => removeHandler.current(id), [id, removeHandler])\n\n  const handleMouseEnter = () => {\n    clearTimeout(timer.current)\n  }\n\n  const handleMouseLeave = () => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n  }\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n\n    return () => {\n      clearTimeout(timer.current)\n    }\n  }, [timer, ttl, handleRemove])\n\n  return (\n    <CSSTransition nodeRef={ref} timeout={250} style={style} {...props}>\n      <StyledToast ref={ref} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n        <Alert title={title} variant={alertTypeMap[type]} onClick={handleRemove}>\n          {description}\n        </Alert>\n      </StyledToast>\n    </CSSTransition>\n  )\n}\n\nexport default Toast\n","import React from 'react'\nimport { TransitionGroup } from 'react-transition-group'\nimport styled from 'styled-components'\nimport Toast from './Toast'\nimport { ToastContainerProps } from './types'\n\nconst ZINDEX = 1000\nconst TOP_POSITION = 80 // Initial position from the top\n\nconst StyledToastContainer = styled.div`\n  .enter,\n  .appear {\n    opacity: 0.01;\n  }\n\n  .enter.enter-active,\n  .appear.appear-active {\n    opacity: 1;\n    transition: opacity 250ms ease-in;\n  }\n\n  .exit {\n    opacity: 1;\n  }\n\n  .exit.exit-active {\n    opacity: 0.01;\n    transition: opacity 250ms ease-out;\n  }\n`\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onRemove, ttl = 6000, stackSpacing = 24 }) => {\n  return (\n    <StyledToastContainer>\n      <TransitionGroup>\n        {toasts.map((toast, index) => {\n          const zIndex = (ZINDEX - index).toString()\n          const top = TOP_POSITION + index * stackSpacing\n\n          return (\n            <Toast key={toast.id} toast={toast} onRemove={onRemove} ttl={ttl} style={{ top: `${top}px`, zIndex }} />\n          )\n        })}\n      </TransitionGroup>\n    </StyledToastContainer>\n  )\n}\n\nexport default ToastContainer\n","import React from 'react'\nimport { Link, Text } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport truncateHash from 'utils/truncateHash'\n\ninterface DescriptionWithTxProps {\n  description?: string\n  txHash?: string\n}\n\nconst DescriptionWithTx: React.FC<DescriptionWithTxProps> = ({ txHash, children }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  return (\n    <>\n      {typeof children === 'string' ? <Text as=\"p\">{children}</Text> : children}\n      {txHash && (\n        <Link external href={getBscScanLink(txHash, 'transaction', chainId)}>\n          {t('View on BscScan')}: {truncateHash(txHash, 8, 0)}\n        </Link>\n      )}\n    </>\n  )\n}\n\nexport default DescriptionWithTx\n","import { useEffect, useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const timer = useRef(null)\n  const dispatch = useAppDispatch()\n  const isWindowVisible = useIsWindowVisible()\n\n  useEffect(() => {\n    if (isWindowVisible) {\n      timer.current = setInterval(async () => {\n        const blockNumber = await simpleRpcProvider.getBlockNumber()\n        dispatch(setBlock(blockNumber))\n      }, 6000)\n    } else {\n      clearInterval(timer.current)\n    }\n\n    return () => clearInterval(timer.current)\n  }, [dispatch, timer, isWindowVisible])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","export const REWARD_RATE = 0.97\n\n// Estimated number of seconds it takes to submit a transaction (3 blocks) in seconds\nexport const ROUND_BUFFER = 9\n\nexport const PAST_ROUND_COUNT = 5\nexport const FUTURE_ROUND_COUNT = 2\n\nexport const ROUNDS_PER_PAGE = 1000\nexport const LEADERBOARD_MIN_ROUNDS_PLAYED = 10\n","import { createAction } from '@reduxjs/toolkit'\nimport { Transaction } from 'state/info/types'\nimport { ProtocolData, TokenData, PoolData, ChartEntry, PriceChartEntry } from './types'\n\nexport const updateProtocolData = createAction<{ protocolData: ProtocolData }>('info/protocol/updateProtocolData')\nexport const updateProtocolChartData = createAction<{ chartData: ChartEntry[] }>(\n  'info/protocol/updateProtocolChartData',\n)\nexport const updateProtocolTransactions = createAction<{ transactions: Transaction[] }>(\n  'info/protocol/updateProtocolTransactions',\n)\n\nexport const updatePoolData = createAction<{ pools: PoolData[] }>('info/pools/updatePoolData')\nexport const addPoolKeys = createAction<{ poolAddresses: string[] }>('info/pools/addPoolKeys')\nexport const updatePoolChartData = createAction<{ poolAddress: string; chartData: ChartEntry[] }>(\n  'info/pools/updatePoolChartData',\n)\nexport const updatePoolTransactions = createAction<{ poolAddress: string; transactions: Transaction[] }>(\n  'info/pools/updatePoolTransactions',\n)\n\nexport const updateTokenData = createAction<{ tokens: TokenData[] }>('info/tokens/updateTokenData')\nexport const addTokenKeys = createAction<{ tokenAddresses: string[] }>('info/tokens/addTokenKeys')\nexport const addTokenPoolAddresses = createAction<{ tokenAddress: string; poolAddresses: string[] }>(\n  'info/tokens/addTokenPoolAddresses',\n)\nexport const updateTokenChartData = createAction<{ tokenAddress: string; chartData: ChartEntry[] }>(\n  'info/tokens/updateTokenChartData',\n)\nexport const updateTokenTransactions = createAction<{ tokenAddress: string; transactions: Transaction[] }>(\n  'info/tokens/updateTokenTransactions',\n)\nexport const updateTokenPriceData = createAction<{\n  tokenAddress: string\n  secondsInterval: number\n  priceData?: PriceChartEntry[]\n  oldestFetchedTimestamp: number\n}>('info/tokens/updateTokenPriceData')\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 2px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 2px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","// 1 day, 7 days, 30 days, 1 year, 5 years\nconst DAYS_TO_CALCULATE_AGAINST = [1, 7, 30, 365, 1825]\n\n/**\n *\n * @param principalInUSD - amount user wants to invest in USD\n * @param apr - farm or pool apr as percentage. If its farm APR its only cake rewards APR without LP rewards APR\n * @param earningTokenPrice - price of reward token\n * @param compoundFrequency - how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @param performanceFee - performance fee as percentage\n * @returns an array of token values earned as interest, with each element representing interest earned over a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getInterestBreakdown = ({\n  principalInUSD,\n  apr,\n  earningTokenPrice,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}: {\n  principalInUSD: number\n  apr: number\n  earningTokenPrice: number\n  compoundFrequency?: number\n  performanceFee?: number\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const aprAsDecimal = apr / 100\n\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  // and also cause rounding errors\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimalsNew = isHighValueToken ? 5 : 3\n\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const daysAsDecimalOfYear = days / 365\n    // Calculate the starting TOKEN balance with a dollar balance of principalInUSD.\n    const principal = principalInUSD / earningTokenPrice\n    let interestEarned = principal * aprAsDecimal * (days / 365)\n    if (timesCompounded !== 0) {\n      // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n      const accruedAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n      // To get the TOKEN amount earned, deduct the amount after compounding (accruedAmount) from the starting TOKEN balance (principal)\n      interestEarned = accruedAmount - principal\n      if (performanceFee) {\n        const performanceFeeAsDecimal = performanceFee / 100\n        const performanceFeeAsAmount = interestEarned * performanceFeeAsDecimal\n        interestEarned -= performanceFeeAsAmount\n      }\n    }\n    return parseFloat(interestEarned.toFixed(roundingDecimalsNew))\n  })\n}\n\n/**\n * @param interest how much USD amount you aim to make\n * @param apr APR of farm/pool\n * @param compoundingFrequency how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @returns an array of principal values needed to reach target interest, with each element representing principal needed for a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getPrincipalForInterest = (\n  interest: number,\n  apr: number,\n  compoundingFrequency: number,\n  performanceFee = 0,\n) => {\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const apyAsDecimal = getApy(apr, compoundingFrequency, days, performanceFee)\n    // console.log('inside', interest, apyAsDecimal)\n    // const apyAsBN = new BigNumber(apyAsDecimal).decimalPlaces(6, BigNumber.ROUND_DOWN).toNumber()\n    return parseFloat((interest / apyAsDecimal).toFixed(2))\n  })\n}\n\n/**\n * Given APR returns APY\n * @param apr APR as percentage\n * @param compoundFrequency how many compounds per day\n * @param days if other than 365 adjusts (A)PY for period less than a year\n * @param performanceFee performance fee as percentage\n * @returns APY as decimal\n */\nexport const getApy = (apr: number, compoundFrequency = 1, days = 365, performanceFee = 0) => {\n  const daysAsDecimalOfYear = days / 365\n  const aprAsDecimal = apr / 100\n  const timesCompounded = 365 * compoundFrequency\n  let apyAsDecimal = (apr / 100) * daysAsDecimalOfYear\n  if (timesCompounded > 0) {\n    apyAsDecimal = (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear) - 1\n  }\n  if (performanceFee) {\n    const performanceFeeAsDecimal = performanceFee / 100\n    const takenAsPerformanceFee = apyAsDecimal * performanceFeeAsDecimal\n    apyAsDecimal -= takenAsPerformanceFee\n  }\n  return apyAsDecimal\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }: { amountEarned: number; amountInvested: number }) => {\n  if (amountInvested === 0) {\n    return 0\n  }\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport store from 'state'\nimport { GAS_PRICE_GWEI } from 'state/user/hooks/helpers'\n\n/**\n * Function to return gasPrice outwith a react component\n */\nconst getGasPrice = (): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const state = store.getState()\n  const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport default getGasPrice\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState, ProfileAvatarFetchStatus } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport { NftToken } from 'state/nftMarket/types'\nimport { getProfile, getProfileAvatar, GetProfileResponse, getUsername } from './helpers'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n  profileAvatars: {},\n}\n\nexport const fetchProfileAvatar = createAsyncThunk<{ account: string; nft: NftToken; hasRegistered: boolean }, string>(\n  'profile/fetchProfileAvatar',\n  async (account) => {\n    const { nft, hasRegistered } = await getProfileAvatar(account)\n    return { account, nft, hasRegistered }\n  },\n)\n\nexport const fetchProfileUsername = createAsyncThunk<\n  { account: string; username: string },\n  { account: string; hasRegistered: boolean }\n>('profile/fetchProfileUsername', async ({ account, hasRegistered }) => {\n  if (!hasRegistered) {\n    return { account, username: '' }\n  }\n  const username = await getUsername(account)\n  return { account, username }\n})\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      state.isInitialized = true\n      state.isLoading = false\n      state.hasRegistered = hasRegistered\n      state.data = profile\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchProfileUsername.pending, (state, action) => {\n      const { account } = action.meta.arg\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHING,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          hasRegistered: false,\n          username: null,\n          nft: null,\n          // I think in theory this else should never be reached since we only check for username after we checked for profile/avatar\n          // just in case I set isFetchingAvatar will be ProfileAvatarFetchStatus.FETCHED at this point to avoid refetching\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHING,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n    builder.addCase(fetchProfileUsername.fulfilled, (state, action) => {\n      const { account, username } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          username,\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username,\n          nft: null,\n          hasRegistered: true,\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n          // I think in theory this else should never be reached since we only check for username after we checked for profile/avatar\n          // just in case I set isFetchingAvatar will be ProfileAvatarFetchStatus.FETCHED at this point to avoid refetching\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n    builder.addCase(fetchProfileUsername.rejected, (state, action) => {\n      const { account } = action.meta.arg\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          username: '',\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          hasRegistered: false,\n          username: '',\n          nft: null,\n          usernameFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.pending, (state, action) => {\n      const account = action.meta.arg\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          hasRegistered: false,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHING,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username: null,\n          nft: null,\n          hasRegistered: false,\n          usernameFetchStatus: ProfileAvatarFetchStatus.NOT_FETCHED,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHING,\n        }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.fulfilled, (state, action) => {\n      const { account, nft, hasRegistered } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          nft,\n          hasRegistered,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username: null,\n          nft,\n          hasRegistered,\n          usernameFetchStatus: ProfileAvatarFetchStatus.NOT_FETCHED,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.rejected, (state, action) => {\n      const account = action.meta.arg\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          nft: null,\n          hasRegistered: false,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      } else {\n        state.profileAvatars[account] = {\n          username: null,\n          nft: null,\n          hasRegistered: false,\n          usernameFetchStatus: ProfileAvatarFetchStatus.NOT_FETCHED,\n          avatarFetchStatus: ProfileAvatarFetchStatus.FETCHED,\n        }\n      }\n    })\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (e) {\n    console.error(e)\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import tokens from './tokens'\nimport { SerializedFarmConfig } from './types'\n\nconst priceHelperLps: SerializedFarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absence of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { SerializedFarm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: SerializedFarm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: token.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: quoteToken.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: token.address,\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: quoteToken.address,\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of quoteToken in the LP that are staked in the MC\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { SerializedFarm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: SerializedFarm): Promise<SerializedFarm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { SerializedFarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: SerializedFarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      const serializedFarm = { ...farm, token: farm.token, quoteToken: farm.quoteToken }\n      return serializedFarm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { SerializedFarm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (\n  farms: SerializedFarm[],\n  preferredQuoteTokens: string[] = ['BUSD', 'WBNB'],\n): SerializedFarm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { SerializedFarm } from 'state/types'\nimport tokens from 'config/constants/tokens'\n\nconst getFarmFromTokenSymbol = (\n  farms: SerializedFarm[],\n  tokenSymbol: string,\n  preferredQuoteTokens?: string[],\n): SerializedFarm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (\n  farm: SerializedFarm,\n  quoteTokenFarm: SerializedFarm,\n  bnbPriceBusd: BigNumber,\n): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === tokens.busd.symbol) {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === tokens.wbnb.symbol) {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or WBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === tokens.wbnb.symbol) {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === tokens.busd.symbol) {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/WBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (\n  farm: SerializedFarm,\n  quoteTokenFarm: SerializedFarm,\n  bnbPriceBusd: BigNumber,\n): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'WBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'WBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms: SerializedFarm[]) => {\n  const bnbBusdFarm = farms.find((farm) => farm.pid === 252)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const tokenPriceBusd = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPriceBusd = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n\n    return {\n      ...farm,\n      tokenPriceBusd: tokenPriceBusd.toJSON(),\n      quoteTokenPriceBusd: quoteTokenPriceBusd.toJSON(),\n    }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { SerializedFarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { SerializedFarmsState, SerializedFarm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: SerializedFarmsState = {\n  data: noAccountFarmConfig,\n  loadArchivedFarmsData: false,\n  userDataLoaded: false,\n}\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<SerializedFarm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: SerializedFarm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import { Address } from '../types'\n\nexport enum CollectionKey {\n  PANCAKE = 'pancake',\n  SQUAD = 'pancakeSquad',\n}\n\nexport type Collection = {\n  name: string\n  description?: string\n  slug: string\n  address: Address\n}\n\nexport type Collections = {\n  [key in CollectionKey]: Collection\n}\n","import { Collections, CollectionKey } from './types'\n\nconst collections: Collections = {\n  [CollectionKey.PANCAKE]: {\n    name: 'Pancake Bunnies',\n    slug: 'pancake-bunnies',\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n  },\n  [CollectionKey.SQUAD]: {\n    name: 'Pancake Squad',\n    description: \"PancakeSwap's first official generative NFT collection.. Join the squad.\",\n    slug: 'pancake-squad',\n    address: {\n      56: '',\n      97: '0xEf12ef570300bFA65c4F022deAaA3dfF4f5d5c91',\n    },\n  },\n}\n\nexport default collections\n","import collections from 'config/constants/nftsCollections'\nimport { CollectionKey } from 'config/constants/nftsCollections/types'\nimport { getAddress } from 'utils/addressHelpers'\n\nexport const nftsBaseUrl = '/nfts'\n\n// @TODO This will be removed when more collections are added\nexport const pancakeBunniesAddress = getAddress(collections[CollectionKey.PANCAKE].address)\n\n// @TODO Remove after the V1\nexport const TMP_SEE_ALL_LINK = `${nftsBaseUrl}/collections/${pancakeBunniesAddress}`\n","import { useCallback } from 'react'\nimport ethers, { Contract, CallOverrides } from 'ethers'\nimport { useGasPrice } from 'state/user/hooks'\nimport { get } from 'lodash'\n\n/**\n * Perform a contract call with a gas price returned from useGasPrice\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport function useCallWithGasPrice() {\n  const gasPrice = useGasPrice()\n\n  const callWithGasPrice = useCallback(\n    async (\n      contract: Contract,\n      methodName: string,\n      methodArgs: any[] = [],\n      overrides: CallOverrides = null,\n    ): Promise<ethers.providers.TransactionResponse> => {\n      const contractMethod = get(contract, methodName)\n      const hasManualGasPriceOverride = overrides?.gasPrice\n\n      const tx = await contractMethod(\n        ...methodArgs,\n        hasManualGasPriceOverride ? { ...overrides } : { ...overrides, gasPrice },\n      )\n\n      return tx\n    },\n    [gasPrice],\n  )\n\n  return { callWithGasPrice }\n}\n","import { useEffect, useState } from 'react'\nimport { ethers } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport tokens from 'config/constants/tokens'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [balance, setBalance] = useState(ethers.BigNumber.from(0))\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const walletBalance = await simpleRpcProvider.getBalance(account)\n        setBalance(walletBalance)\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch {\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance, setFetchStatus])\n\n  return { balance, fetchStatus, refresh: setLastUpdated }\n}\n\nexport const useGetCakeBalance = () => {\n  const { balance, fetchStatus } = useTokenBalance(tokens.mad.address)\n\n  // TODO: Remove ethers conversion once useTokenBalance is converted to ethers.BigNumber\n  return { balance: ethers.BigNumber.from(balance.toString()), fetchStatus }\n}\n\nexport default useTokenBalance\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","const getTokenLogoURL = (address: string) =>\n  `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\n\nexport default getTokenLogoURL\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { serializeTokens } from './tokens'\nimport { SerializedFarmConfig } from './types'\n\nconst serializedTokens = serializeTokens()\n\nconst farms: SerializedFarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n  {\n    pid: 0,\n    lpSymbol: 'MAD',\n    lpAddresses: {\n      97: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n      56: '0xdCa2b8A804ca21bffF0ca56d9163b40269A06B35',\n    },\n    token: serializedTokens.mad,\n    quoteToken: serializedTokens.wbnb,\n  },\n  {\n    pid: 251,\n    lpSymbol: 'HEART-BNB LP',\n    lpAddresses: {\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n      56: '0xe9F98F83c88123b6c0C89dB033bA631d58651fd3',\n    },\n    token: serializedTokens.mad,\n    quoteToken: serializedTokens.wbnb,\n  },\n\n  {\n    pid: 1,\n    lpSymbol: 'MAD-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xe9F98F83c88123b6c0C89dB033bA631d58651fd3',\n    },\n    token: serializedTokens.mad,\n    quoteToken: serializedTokens.wbnb,\n  },\n]\n\nexport default farms\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","/**\n * Truncate a transaction or address hash\n */\nconst truncateHash = (address: string, startLength = 4, endLength = 4) => {\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateHash\n","import { useEffect, useReducer, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getInterestBreakdown, getPrincipalForInterest, getRoi } from 'utils/compoundApyHelpers'\n\n/**\n * This hook is handling all the calculator state and calculations.\n * UI connected to it is merely representation of the data and buttons to trigger actions\n */\n\n// Mapping from the compounding frequency button index to actual compounding frequency\n// in number of compounds per day\nconst compoundingIndexToFrequency = {\n  0: 1,\n  1: 0.142857142,\n  2: 0.071428571, // once every 7 days\n  3: 0.033333333, // once every 30 days\n}\n\nconst TOKEN_PRECISION = 10\nconst USD_PRECISION = 2\n\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\nexport enum EditingCurrency {\n  TOKEN,\n  USD,\n}\n\n// Calculator works in 2 modes\nexport enum CalculatorMode {\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\n}\n\nexport interface RoiCalculatorReducerState {\n  controls: {\n    compounding: boolean // Compounding checkbox state\n    compoundingFrequency: number // Compounding frequency in number of compounds per day\n    activeCompoundingIndex: number // index of active compounding button in ButtonMenu\n    stakingDuration: number // index of active staking duration button in ButtonMenu\n    mode: CalculatorMode\n    editingCurrency: EditingCurrency\n  }\n  data: {\n    principalAsToken: string // Used as value for Inputs\n    principalAsUSD: string // Used as value for Inputs\n    roiUSD: number\n    roiTokens: number\n    roiPercentage: number // ROI expressed in percentage relative to principal\n  }\n}\n\nconst initialState: RoiCalculatorReducerState = {\n  controls: {\n    compounding: true,\n    compoundingFrequency: 1, // how many compound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\n    activeCompoundingIndex: 0, // active compounding selected in\n    stakingDuration: 3,\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\n    editingCurrency: EditingCurrency.USD,\n  },\n  data: {\n    principalAsToken: '0.00',\n    principalAsUSD: '',\n    roiUSD: 0,\n    roiTokens: 0,\n    roiPercentage: 0,\n  },\n}\n\nconst roiCalculatorReducer = (\n  state: RoiCalculatorReducerState,\n  action: { type: string; payload?: any },\n): RoiCalculatorReducerState => {\n  switch (action.type) {\n    case 'setStakingDuration': {\n      const controls = { ...state.controls, stakingDuration: action.payload }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'toggleCompounding': {\n      const toggledCompounding = !state.controls.compounding\n      const controls = { ...state.controls, compounding: toggledCompounding }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setCompoundingFrequency': {\n      const { index, autoCompoundFrequency } = action.payload\n      if (autoCompoundFrequency) {\n        return {\n          ...state,\n          controls: {\n            ...state.controls,\n            compoundingFrequency: autoCompoundFrequency,\n          },\n        }\n      }\n      const compoundingFrequency = compoundingIndexToFrequency[index]\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setPrincipal': {\n      const { principalAsUSD, principalAsToken } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken }\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL }\n      return {\n        controls,\n        data,\n      }\n    }\n    case 'setPrincipalForTargetRoi': {\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage }\n      return {\n        ...state,\n        data,\n      }\n    }\n    case 'setCalculatorMode': {\n      const mode = action.payload\n      const controls = { ...state.controls, mode }\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION))\n        const data = { ...state.data, roiUSD }\n        return { controls, data }\n      }\n      return { ...state, controls }\n    }\n    case 'setRoi': {\n      const data = { ...state.data, ...action.payload }\n      return { ...state, data }\n    }\n    case 'setTargetRoi': {\n      const { roiUSD, roiTokens } = action.payload\n      const data = { ...state.data, roiUSD, roiTokens }\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI }\n      return { controls, data }\n    }\n    case 'toggleEditingCurrency': {\n      const currencyAfterChange =\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange }\n      return { ...state, controls }\n    }\n    default:\n      return state\n  }\n}\n\nconst useRoiCalculatorReducer = (\n  stakingTokenPrice: number,\n  earningTokenPrice: number,\n  apr: number,\n  autoCompoundFrequency: number,\n  performanceFee: number,\n) => {\n  const [state, dispatch] = useReducer(roiCalculatorReducer, initialState)\n  const { principalAsUSD, roiUSD } = state.data\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls\n\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\n  useEffect(() => {\n    if (autoCompoundFrequency > 0) {\n      dispatch({ type: 'setCompoundingFrequency', payload: { autoCompoundFrequency } })\n    }\n  }, [autoCompoundFrequency])\n\n  // Calculates and sets ROI whenever related values change\n  useEffect(() => {\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\n      const principalInUSDAsNumber = parseFloat(principalAsUSD)\n      const compoundFrequency = compounding ? compoundingFrequency : 0\n      const interestBreakdown = getInterestBreakdown({\n        principalInUSD: principalInUSDAsNumber,\n        apr,\n        earningTokenPrice,\n        compoundFrequency,\n        performanceFee,\n      })\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration])\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0\n      const roiPercentage = hasInterest\n        ? getRoi({\n            amountEarned: roiAsUSD,\n            amountInvested: principalInUSDAsNumber,\n          })\n        : 0\n      dispatch({ type: 'setRoi', payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } })\n    }\n  }, [principalAsUSD, apr, stakingDuration, earningTokenPrice, performanceFee, compounding, compoundingFrequency, mode])\n\n  // Calculates and sets principal based on expected ROI value\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n      const principalForExpectedRoi = getPrincipalForInterest(\n        roiUSD,\n        apr,\n        compounding ? compoundingFrequency : 0,\n        performanceFee,\n      )\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\n        ? principalForExpectedRoi[stakingDuration]\n        : 0\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice)\n      const roiPercentage = getRoi({\n        amountEarned: roiUSD,\n        amountInvested: principalUSD,\n      })\n      dispatch({\n        type: 'setPrincipalForTargetRoi',\n        payload: {\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\n          roiPercentage,\n        },\n      })\n    }\n  }, [stakingDuration, apr, compounding, compoundingFrequency, mode, roiUSD, stakingTokenPrice, performanceFee])\n\n  // Handler for compounding frequency buttons\n  const setCompoundingFrequency = (index: number) => {\n    dispatch({ type: 'setCompoundingFrequency', payload: { index } })\n  }\n\n  // Handler for principal input when in USD mode\n  const setPrincipalFromUSDValue = (amount: string) => {\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice)\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : '0.00'\n    dispatch({ type: 'setPrincipal', payload: { principalAsUSD: amount, principalAsToken } })\n  }\n\n  // Handler for principal input when in Token mode\n  const setPrincipalFromTokenValue = useCallback(\n    (amount: string) => {\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice)\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : '0.00'\n      dispatch({\n        type: 'setPrincipal',\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\n      })\n    },\n    [stakingTokenPrice],\n  )\n\n  // Handler for staking duration buttons\n  const setStakingDuration = (stakingDurationIndex: number) => {\n    dispatch({ type: 'setStakingDuration', payload: stakingDurationIndex })\n  }\n\n  // Handler for compounding checkbox\n  const toggleCompounding = () => {\n    dispatch({ type: 'toggleCompounding' })\n  }\n\n  // Handler for principal input mode switch\n  const toggleEditingCurrency = () => {\n    dispatch({ type: 'toggleEditingCurrency' })\n  }\n\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\n    dispatch({ type: 'setCalculatorMode', payload: modeToSet })\n  }\n\n  // Handler for ROI input\n  const setTargetRoi = (amount: string) => {\n    const targetRoiAsTokens = new BigNumber(amount).div(earningTokenPrice)\n    dispatch({\n      type: 'setTargetRoi',\n      payload: { roiUSD: amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\n    })\n  }\n\n  return {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  }\n}\n\nexport default useRoiCalculatorReducer\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Text, ExpandableLabel, LinkExternal, Grid, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getApy } from 'utils/compoundApyHelpers'\n\nconst Footer = styled(Flex)`\n  width: 100%;\n  background: ${({ theme }) => theme.colors.dropdown};\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin-top: 16px;\n  padding: 0;\n  li {\n    margin: 0;\n    padding: 0;\n  }\n  li::before {\n    content: '•';\n    margin-right: 4px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n  li::marker {\n    font-size: 12px;\n  }\n`\n\ninterface RoiCalculatorFooterProps {\n  isFarm: boolean\n  apr: number\n  displayApr: string\n  autoCompoundFrequency: number\n  multiplier: string\n  linkLabel: string\n  linkHref: string\n  performanceFee: number\n}\n\nconst RoiCalculatorFooter: React.FC<RoiCalculatorFooterProps> = ({\n  isFarm,\n  apr,\n  displayApr,\n  autoCompoundFrequency,\n  multiplier,\n  linkLabel,\n  linkHref,\n  performanceFee,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const {\n    targetRef: multiplierRef,\n    tooltip: multiplierTooltip,\n    tooltipVisible: multiplierTooltipVisible,\n  } = useTooltip(\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of CAKE rewards each farm receives, as a proportion of the CAKE produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 CAKE per block, a 40x farm would receive 40 CAKE per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>,\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const gridRowCount = isFarm ? 4 : 2\n  const apy = (getApy(apr, autoCompoundFrequency > 0 ? autoCompoundFrequency : 1, 365, performanceFee) * 100).toFixed(2)\n\n  return (\n    <Footer p=\"16px\" flexDirection=\"column\">\n      <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n        {isExpanded ? t('Hide') : t('Details')}\n      </ExpandableLabel>\n      {isExpanded && (\n        <Box px=\"8px\">\n          <Grid gridTemplateColumns=\"2.5fr 1fr\" gridRowGap=\"8px\" gridTemplateRows={`repeat(${gridRowCount}, auto)`}>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('APR (incl. LP rewards)')}\n                </Text>\n                <Text small textAlign=\"right\">\n                  {displayApr}%\n                </Text>\n              </>\n            )}\n            <Text color=\"textSubtle\" small>\n              {isFarm ? t('Base APR (CAKE yield only)') : t('APR')}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apr.toFixed(2)}%\n            </Text>\n            <Text color=\"textSubtle\" small>\n              {t('APY (%compoundTimes%x daily compound)', {\n                compoundTimes: autoCompoundFrequency > 0 ? autoCompoundFrequency : 1,\n              })}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apy}%\n            </Text>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('Farm Multiplier')}\n                </Text>\n                <Flex justifyContent=\"flex-end\" alignItems=\"flex-end\">\n                  <Text small textAlign=\"right\" mr=\"4px\">\n                    {multiplier}\n                  </Text>\n                  <span ref={multiplierRef}>\n                    <HelpIcon color=\"textSubtle\" width=\"16px\" height=\"16px\" />\n                  </span>\n                  {multiplierTooltipVisible && multiplierTooltip}\n                </Flex>\n              </>\n            )}\n          </Grid>\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n          <Flex justifyContent=\"center\" mt=\"24px\">\n            <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n          </Flex>\n        </Box>\n      )}\n    </Footer>\n  )\n}\n\nexport default RoiCalculatorFooter\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Text, Input, CheckmarkIcon, PencilIcon, IconButton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst MILLION = 1000000\nconst TRILLION = 1000000000000\n\nconst RoiCardWrapper = styled(Box)`\n  background: linear-gradient(180deg, #53dee9, #7645d9);\n  padding: 1px;\n  width: 100%;\n  border-radius: ${({ theme }) => theme.radii.default};\n`\n\nconst RoiCardInner = styled(Box)`\n  height: 120px;\n  padding: 24px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst RoiInputContainer = styled(Box)`\n  position: relative;\n  & > input {\n    padding-left: 28px;\n    max-width: 70%;\n  }\n  &:before {\n    position: absolute;\n    content: '$';\n    color: ${({ theme }) => theme.colors.textSubtle};\n    left: 16px;\n    top: 8px;\n  }\n`\n\nconst RoiDisplayContainer = styled(Flex)`\n  max-width: 82%;\n  margin-right: 8px;\n`\n\nconst RoiDollarAmount = styled(Text)<{ fadeOut: boolean }>`\n  position: relative;\n  overflow-x: auto;\n  &::-webkit-scrollbar {\n    height: 0px;\n  }\n\n  ${({ fadeOut, theme }) =>\n    fadeOut &&\n    `\n      &:after {\n        background: linear-gradient(\n          to right,\n          ${theme.colors.background}00,\n          ${theme.colors.background}E6\n        );\n        content: '';\n        height: 100%;\n        pointer-events: none;\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 40px;\n      }\n  `}\n`\n\ninterface RoiCardProps {\n  earningTokenSymbol: string\n  calculatorState: RoiCalculatorReducerState\n  setTargetRoi: (amount: string) => void\n  setCalculatorMode: (mode: CalculatorMode) => void\n}\n\nconst RoiCard: React.FC<RoiCardProps> = ({ earningTokenSymbol, calculatorState, setTargetRoi, setCalculatorMode }) => {\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const { roiUSD, roiTokens, roiPercentage } = calculatorState.data\n  const { mode } = calculatorState.controls\n\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI && inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [mode])\n\n  const onEnterEditing = () => {\n    setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI)\n  }\n\n  const onExitRoiEditing = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n  const handleExpectedRoiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTargetRoi(event.currentTarget.value)\n  }\n  return (\n    <RoiCardWrapper>\n      <RoiCardInner>\n        <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\n          {t('ROI at current rates')}\n        </Text>\n        <Flex justifyContent=\"space-between\" mt=\"4px\" height=\"36px\">\n          {mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI ? (\n            <>\n              <RoiInputContainer>\n                <Input\n                  ref={inputRef}\n                  type=\"number\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  value={roiUSD}\n                  placeholder=\"0.0\"\n                  onChange={handleExpectedRoiChange}\n                />\n              </RoiInputContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onExitRoiEditing}>\n                <CheckmarkIcon color=\"primary\" />\n              </IconButton>\n            </>\n          ) : (\n            <>\n              <RoiDisplayContainer onClick={onEnterEditing}>\n                {/* Dollar sign is separate cause its not supposed to scroll with a number if number is huge */}\n                <Text fontSize=\"24px\" bold>\n                  $\n                </Text>\n                <RoiDollarAmount fontSize=\"24px\" bold fadeOut={roiUSD > TRILLION}>\n                  {roiUSD.toLocaleString('en', {\n                    minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                    maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                  })}\n                </RoiDollarAmount>\n              </RoiDisplayContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onEnterEditing}>\n                <PencilIcon color=\"primary\" />\n              </IconButton>\n            </>\n          )}\n        </Flex>\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          ~ {roiTokens} {earningTokenSymbol} (\n          {roiPercentage.toLocaleString('en', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n          %)\n        </Text>\n      </RoiCardInner>\n    </RoiCardWrapper>\n  )\n}\n\nexport default RoiCard\n","import React, { useState, useEffect } from 'react'\nimport { Flex, ArrowDownIcon, ArrowUpIcon } from '@pancakeswap/uikit'\nimport styled, { keyframes } from 'styled-components'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst rotate = keyframes`\n  0% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n  50% {\n    transform: scale(1.3);\n    stroke-width: 2;\n  }\n  100% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n`\n\nconst ArrowContainer = styled(Flex)`\n  & > svg {\n    animation: 0.2s ${rotate} linear;\n    stroke: ${({ theme }) => `${theme.colors.primary}3D`};\n    stroke-width: 0;\n  }\n`\n\ninterface AnimatedArrowProps {\n  calculatorState: RoiCalculatorReducerState\n}\n\nconst AnimatedArrow: React.FC<AnimatedArrowProps> = ({ calculatorState }) => {\n  const [key, setKey] = useState('roiArrow-0')\n  const { mode } = calculatorState.controls\n\n  // Trigger animation on state change\n  useEffect(() => {\n    setKey((prevKey) => {\n      const prevId = parseInt(prevKey.split('-')[1], 10)\n      return `roiArrow-${prevId + 1}`\n    })\n  }, [calculatorState])\n\n  return (\n    <ArrowContainer justifyContent=\"center\" my=\"24px\" key={key}>\n      {mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL ? (\n        <ArrowDownIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      ) : (\n        <ArrowUpIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      )}\n    </ArrowContainer>\n  )\n}\n\nexport default AnimatedArrow\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Button,\n  Flex,\n  ButtonMenu,\n  Checkbox,\n  BalanceInput,\n  HelpIcon,\n  ButtonMenuItem,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport RoiCalculatorFooter from './RoiCalculatorFooter'\nimport RoiCard from './RoiCard'\nimport useRoiCalculatorReducer, { CalculatorMode, EditingCurrency } from './useRoiCalculatorReducer'\nimport AnimatedArrow from './AnimatedArrow'\n\ninterface RoiCalculatorModalProps {\n  onDismiss?: () => void\n  onBack?: () => void\n  earningTokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  stakingTokenBalance: BigNumber\n  stakingTokenSymbol: string\n  stakingTokenPrice: number\n  earningTokenSymbol?: string\n  multiplier?: string\n  autoCompoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n  initialValue?: string\n}\n\nconst StyledModal = styled(Modal)`\n  width: 345px;\n  & > :nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ScrollableContainer = styled.div`\n  padding: 24px;\n  max-height: 500px;\n  overflow-y: auto;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\n  width: 100%;\n\n  & > button {\n    width: 100%;\n  }\n\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n`\n\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = ({\n  onDismiss,\n  onBack,\n  earningTokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  stakingTokenBalance,\n  stakingTokenSymbol,\n  stakingTokenPrice,\n  multiplier,\n  initialValue,\n  earningTokenSymbol = 'CAKE',\n  autoCompoundFrequency = 0,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useActiveWeb3React()\n  const balanceInputRef = useRef<HTMLInputElement | null>(null)\n\n  const {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  } = useRoiCalculatorReducer(stakingTokenPrice, earningTokenPrice, apr, autoCompoundFrequency, performanceFee)\n\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls\n  const { principalAsUSD, principalAsToken } = state.data\n\n  // Auto-focus input on opening modal\n  useEffect(() => {\n    if (balanceInputRef.current) {\n      balanceInputRef.current.focus()\n    }\n  }, [])\n\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\n  useEffect(() => {\n    if (initialValue) {\n      setPrincipalFromTokenValue(initialValue)\n    }\n  }, [initialValue, setPrincipalFromTokenValue])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    isFarm\n      ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.')\n      : t(\n          '“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.',\n          { assetSymbol: stakingTokenSymbol },\n        ),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const onBalanceFocus = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD'\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue\n\n  return (\n    <StyledModal\n      title={t('ROI Calculator')}\n      onDismiss={onBack || onDismiss}\n      onBack={onBack ?? null}\n      headerBackground=\"gradients.cardHeader\"\n    >\n      <ScrollableContainer>\n        <Flex flexDirection=\"column\" mb=\"8px\">\n          <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('%asset% staked', { asset: stakingTokenSymbol })}\n          </Text>\n          <BalanceInput\n            currencyValue={`${conversionValue} ${conversionUnit}`}\n            innerRef={balanceInputRef}\n            placeholder=\"0.00\"\n            value={editingValue}\n            unit={editingUnit}\n            onUserInput={onUserInput}\n            switchEditingUnits={toggleEditingCurrency}\n            onFocus={onBalanceFocus}\n          />\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('100')}\n            >\n              $100\n            </Button>\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('1000')}\n            >\n              $1000\n            </Button>\n            <Button\n              disabled={stakingTokenBalance.lte(0) || !account}\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"128px\"\n              variant=\"tertiary\"\n              onClick={() =>\n                setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString())\n              }\n            >\n              {t('My Balance').toLocaleUpperCase()}\n            </Button>\n            <span ref={targetRef}>\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"textSubtle\" />\n            </span>\n            {tooltipVisible && tooltip}\n          </Flex>\n          <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('Staked for')}\n          </Text>\n          <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\n            <ButtonMenuItem variant=\"tertiary\">{t('1D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('7D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('30D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('1Y')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('5Y')}</ButtonMenuItem>\n          </FullWidthButtonMenu>\n          {autoCompoundFrequency === 0 && (\n            <>\n              <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                {t('Compounding every')}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Flex flex=\"1\">\n                  <Checkbox scale=\"sm\" checked={compounding} onChange={toggleCompounding} />\n                </Flex>\n                <Flex flex=\"6\">\n                  <FullWidthButtonMenu\n                    disabled={!compounding}\n                    activeIndex={activeCompoundingIndex}\n                    onItemClick={setCompoundingFrequency}\n                    scale=\"sm\"\n                  >\n                    <ButtonMenuItem>{t('1D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('7D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('14D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('30D')}</ButtonMenuItem>\n                  </FullWidthButtonMenu>\n                </Flex>\n              </Flex>\n            </>\n          )}\n        </Flex>\n        <AnimatedArrow calculatorState={state} />\n        <Flex>\n          <RoiCard\n            earningTokenSymbol={earningTokenSymbol}\n            calculatorState={state}\n            setTargetRoi={setTargetRoi}\n            setCalculatorMode={setCalculatorMode}\n          />\n        </Flex>\n      </ScrollableContainer>\n      <RoiCalculatorFooter\n        isFarm={isFarm}\n        apr={apr}\n        displayApr={displayApr}\n        autoCompoundFrequency={autoCompoundFrequency}\n        multiplier={multiplier}\n        linkLabel={linkLabel}\n        linkHref={linkHref}\n        performanceFee={performanceFee}\n      />\n    </StyledModal>\n  )\n}\n\nexport default RoiCalculatorModal\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { useCallback } from 'react'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\nimport { clearAllTransactions } from 'state/transactions/actions'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { chainId, activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n    window.localStorage.removeItem(connectorLocalStorageKey)\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }, [deactivate, dispatch, chainId])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'MAD Token',\n  description:\n    'MAD Token',\n  image: 'https://MADex.finance/images/hero.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  let basePath\n  if (path.startsWith('/swap')) {\n    basePath = '/swap'\n  } else if (path.startsWith('/add')) {\n    basePath = '/add'\n  } else if (path.startsWith('/remove')) {\n    basePath = '/remove'\n  } else if (path.startsWith('/teams')) {\n    basePath = '/teams'\n  } else if (path.startsWith('/voting/proposal') && path !== '/voting/proposal/create') {\n    basePath = '/voting/proposal'\n  } else if (path.startsWith('/nfts/collections')) {\n    basePath = '/nfts/collections'\n  } else if (path.startsWith('/nfts/profile')) {\n    basePath = '/nfts/profile'\n  } else {\n    basePath = path\n  }\n\n  switch (basePath) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('MADex')}`,\n      }\n    case '/swap':\n      return {\n        title: `${t('Exchange')} | ${t('MADex')}`,\n      }\n    case '/add':\n      return {\n        title: `${t('Add Liquidity')} | ${t('MADex')}`,\n      }\n    case '/remove':\n      return {\n        title: `${t('Remove Liquidity')} | ${t('MAD Token')}`,\n      }\n    case '/liquidity':\n      return {\n        title: `${t('Liquidity')} | ${t('MADex')}`,\n      }\n    case '/find':\n      return {\n        title: `${t('Import Pool')} | ${t('MADex')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('MADex')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('MADex')}`,\n      }\n    case '/prediction/leaderboard':\n      return {\n        title: `${t('Leaderboard')} | ${t('MADex')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('MADex')}`,\n      }\n    case '/farms/auction':\n      return {\n        title: `${t('Farm Auctions')} | ${t('MADex')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('MADex')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('MADex')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('MADex')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('MADex')}`,\n      }\n    case '/voting':\n      return {\n        title: `${t('Voting')} | ${t('MADex')}`,\n      }\n    case '/voting/proposal':\n      return {\n        title: `${t('Proposals')} | ${t('MADex')}`,\n      }\n    case '/voting/proposal/create':\n      return {\n        title: `${t('Make a Proposal')} | ${t('MADex')}`,\n      }\n    case '/info':\n      return {\n        title: `${t('Overview')} | ${t('MADex Info & Analytics')}`,\n        description: 'View statistics for MADex exchanges.',\n      }\n    case '/info/pools':\n      return {\n        title: `${t('Pools')} | ${t('MADex Info & Analytics')}`,\n        description: 'View statistics for MADex exchanges.',\n      }\n    case '/info/tokens':\n      return {\n        title: `${t('Tokens')} | ${t('MADex Info & Analytics')}`,\n        description: 'View statistics for MADex exchanges.',\n      }\n    case '/nfts':\n      return {\n        title: `${t('Overview')} | ${t('MADex')}`,\n      }\n    case '/nfts/collections':\n      return {\n        title: `${t('Collections')} | ${t('MADex')}`,\n      }\n    case '/nfts/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('MADex')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { useCakeBusdPrice } from 'hooks/useBUSDPrice'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 116px;\n  padding-bottom: 116px;\n  // background-image :url('./images/MAD_main.svg')\n  \n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n    // background-image :url('./images/MAD_main.svg')\n \n    \n  }\n`\n\nexport const PageMeta: React.FC<{ symbol?: string }> = ({ symbol }) => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = 6666666666\n  const cakePriceUsdDisplay = cakePriceUsd ? `$${cakePriceUsd.toFixed(3)}` : '...'\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  let pageTitle = cakePriceUsdDisplay ? [title].join('  -  -  -  - ') : title\n  if (symbol) {\n    pageTitle = [symbol, title].join(' - ')\n  }\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\ninterface PageProps extends React.HTMLAttributes<HTMLDivElement> {\n  symbol?: string\n}\n\nconst Page: React.FC<PageProps> = ({ children, symbol, ...props }) => {\n  return (\n    <>\n      <PageMeta symbol={symbol} />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { ethers, Contract, Overrides } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  overrides: Overrides = {},\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n    ...overrides,\n  })\n  return tx\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  const gasPrice = getGasPrice()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking('0', { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { orderBy } from 'lodash'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\nimport ConnectWalletButton from '../../ConnectWalletButton'\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = orderBy(\n    Object.values(allTransactions).filter(isTransactionRecent),\n    'addedTime',\n    'desc',\n  )\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\n      {account ? (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      ) : (\n        <ConnectWalletButton />\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"textSubtle\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport GlobalSettings from 'components/Menu/GlobalSettings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  // border-bottom: 2px solid ${({ theme }) => theme.colors.cardBorder};\n\n \n  \n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" placement=\"top-start\" />}\n            <Text color=\"textSubtle\" fontSize=\"24px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex alignItems=\"center\">\n          <NotificationDot show={expertMode}>\n            <GlobalSettings />\n          </NotificationDot>\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const BodyWrapper = styled(Card)`\n  border-radius: 24px;\n  border: 4px solid #ff1100;\n\n  max-width: 555px;\n  width: 100%;\n\n  // background-image:'../../public/images/MAD_main.svg'\n \n  \n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import sample from 'lodash/sample'\n\nif (!process.env.REACT_APP_NODE_1 || !process.env.REACT_APP_NODE_2 || !process.env.REACT_APP_NODE_3) {\n  throw Error('One base RPC URL is undefined')\n}\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nif (process.env.NODE_ENV === 'production' && process.env.REACT_APP_NODE_ALT) {\n  nodes.push(process.env.REACT_APP_NODE_ALT)\n}\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { createContext, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from 'components/Toast'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from 'components/Toast'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency\n                    ? t('Balance: %balance%', { balance: selectedCurrencyBalance?.toSignificant(6) ?? t('Loading') })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import Cookies from 'js-cookie'\nimport { Profile } from 'state/types'\nimport { GetUserProfileResponse } from 'utils/types'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { getTeam } from 'state/teams/helpers'\nimport { NftToken } from 'state/nftMarket/types'\nimport { getNftApi } from 'state/nftMarket/helpers'\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst transformProfileResponse = (profileResponse: GetUserProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: collectionAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: userId.toNumber(),\n    points: numberPoints.toNumber(),\n    teamId: teamId.toNumber(),\n    tokenId: tokenId.toNumber(),\n    collectionAddress,\n    isActive,\n  }\n}\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport const getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address.toLowerCase()}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\n/**\n * Intended to be used for getting a profile avatar\n */\nexport const getProfileAvatar = async (address: string) => {\n  try {\n    const hasRegistered = await profileContract.hasRegistered(address)\n\n    if (!hasRegistered) {\n      return null\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { tokenId, collectionAddress, isActive } = transformProfileResponse(profileResponse)\n\n    let nft = null\n    if (isActive) {\n      const apiRes = await getNftApi(collectionAddress, tokenId.toString())\n\n      nft = {\n        tokenId: apiRes.tokenId,\n        name: apiRes.name,\n        collectionName: apiRes.collection.name,\n        collectionAddress,\n        description: apiRes.description,\n        attributes: apiRes.attributes,\n        createdAt: apiRes.createdAt,\n        updatedAt: apiRes.updatedAt,\n        image: {\n          original: apiRes.image?.original,\n          thumbnail: apiRes.image?.thumbnail,\n        },\n      }\n    }\n\n    return { nft, hasRegistered }\n  } catch {\n    return { nft: null, hasRegistered: false }\n  }\n}\n\nexport const getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = await profileContract.hasRegistered(address)\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, collectionAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n    let nftToken: NftToken\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    if (isActive) {\n      const apiRes = await getNftApi(collectionAddress, tokenId.toString())\n\n      nftToken = {\n        tokenId: apiRes.tokenId,\n        name: apiRes.name,\n        collectionName: apiRes.collection.name,\n        collectionAddress,\n        description: apiRes.description,\n        attributes: apiRes.attributes,\n        createdAt: apiRes.createdAt,\n        updatedAt: apiRes.updatedAt,\n        image: {\n          original: apiRes.image?.original,\n          thumbnail: apiRes.image?.thumbnail,\n        },\n      }\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `${nftToken.image.thumbnail}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      collectionAddress,\n      isActive,\n      nft: nftToken,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (e) {\n    console.error(e)\n    return null\n  }\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n  {\n    id: '515010001',\n    type: 'participation',\n    title: 'Lottie',\n    description: 'Joined a round in the early days of Lottery V2',\n    badge: 'lottie.svg',\n  },\n  {\n    id: '515020001',\n    type: 'participation',\n    title: 'Lucky',\n    description: 'Won a round in the early days of Lottery V2',\n    badge: 'lucky.svg',\n  },\n  {\n    id: '515030001',\n    type: 'participation',\n    title: 'Baller',\n    description: 'Top 100 ticket buyer in the early days of Lottery V2',\n    badge: 'baller.svg',\n  },\n  {\n    id: '516010001',\n    type: 'participation',\n    title: '1 Year',\n    description: 'Joined PancakeSwap during the first year of our journey!',\n    badge: '1-year.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubstrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> substring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubstrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubstrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import { IPFS_GATEWAY } from '../index'\nimport { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png`,\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png`,\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png`,\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" background=\"transparent\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { isAddress } from 'utils'\nimport { useAppDispatch } from 'state'\nimport usePreviousValue from 'hooks/usePreviousValue'\nimport { getAchievements } from 'state/achievements/helpers'\nimport { State, ProfileState, Achievement, ProfileAvatarFetchStatus } from '../types'\nimport { fetchProfile, fetchProfileAvatar, fetchProfileUsername } from '.'\nimport { getProfile, GetProfileResponse } from './helpers'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchProfile(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useProfileForAddress = (address: string) => {\n  const [profileState, setProfileState] = useState<{ profile: GetProfileResponse; isFetching: boolean }>({\n    profile: null,\n    isFetching: true,\n  })\n  const previousAddress = usePreviousValue(address)\n  const hasAddressChanged = previousAddress !== address\n\n  useEffect(() => {\n    const fetchProfileForAddress = async () => {\n      try {\n        const profile = await getProfile(address)\n        setProfileState({ profile, isFetching: false })\n      } catch (error) {\n        console.error(`Failed to fetch profile for address ${address}`, error)\n        setProfileState({ profile: null, isFetching: false })\n      }\n    }\n    if (hasAddressChanged || (!profileState.isFetching && !profileState.profile)) {\n      fetchProfileForAddress()\n    }\n  }, [profileState, address, hasAddressChanged])\n\n  // Clear state on account switch\n  useEffect(() => {\n    setProfileState({ profile: null, isFetching: true })\n  }, [address])\n\n  return profileState\n}\n\nexport const useAchievementsForAddress = (address: string) => {\n  const [state, setState] = useState<{ achievements: Achievement[]; isFetching: boolean }>({\n    achievements: [],\n    isFetching: false,\n  })\n  const previousAddress = usePreviousValue(address)\n  const hasAddressChanged = previousAddress !== address\n\n  useEffect(() => {\n    const fetchProfileForAddress = async () => {\n      setState({ achievements: [], isFetching: true })\n      try {\n        const achievements = await getAchievements(address)\n        setState({ achievements, isFetching: false })\n      } catch (error) {\n        console.error(`Failed to fetch achievements for address ${address}`, error)\n        setState({ achievements: [], isFetching: false })\n      }\n    }\n    if (hasAddressChanged || (!state.isFetching && !state.achievements)) {\n      fetchProfileForAddress()\n    }\n  }, [state, address, hasAddressChanged])\n\n  // Clear state on account switch\n  useEffect(() => {\n    setState({ achievements: [], isFetching: true })\n  }, [address])\n\n  return state\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\nexport const useGetProfileAvatar = (account: string) => {\n  const profileAvatar = useSelector((state: State) => state.profile.profileAvatars[account])\n  const { username, nft, hasRegistered, usernameFetchStatus, avatarFetchStatus } = profileAvatar || {}\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const address = isAddress(account)\n\n    if (!nft && avatarFetchStatus !== ProfileAvatarFetchStatus.FETCHED && address) {\n      dispatch(fetchProfileAvatar(account))\n    }\n\n    if (\n      !username &&\n      avatarFetchStatus === ProfileAvatarFetchStatus.FETCHED &&\n      usernameFetchStatus !== ProfileAvatarFetchStatus.FETCHED &&\n      address\n    ) {\n      dispatch(fetchProfileUsername({ account, hasRegistered }))\n    }\n  }, [account, nft, username, hasRegistered, avatarFetchStatus, usernameFetchStatus, dispatch])\n\n  return { username, nft, usernameFetchStatus, avatarFetchStatus }\n}\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from '@pancakeswap/sdk'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = token.symbol === 'BNB' ? tokens.wbnb.address : token.address\n  return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport Footer from 'components/Menu/Footer'\nimport { PageMeta } from 'components/Layout/Page'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n  // background-image :url('./images/////'); \n  \n  \n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n    // background-image :url('./images/////')\n \n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n    background-image :url('./images/MAD_main/svg')\n \n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>\n        {children}\n        <Flex flexGrow={1} />\n        {/* <Footer /> */}\n      </StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import { Token, ChainId } from '@pancakeswap/sdk'\nimport tokens from './tokens'\nimport farms from './farms'\nimport { Ifo } from './types'\n\nconst cakeBnbLpToken = new Token(ChainId.MAINNET, farms[1].lpAddresses[ChainId.MAINNET], 18, farms[1].lpSymbol)\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","import { useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  if (!VISIBILITY_STATE_SUPPORTED) {\n    return true\n  }\n\n  return document.visibilityState === 'visible'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible() {\n  const [isVisible, setIsVisible] = useState(isWindowVisible())\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    const handleVisibilityChange = () => {\n      setIsVisible(isWindowVisible())\n    }\n\n    document.addEventListener('visibilitychange', handleVisibilityChange)\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange)\n    }\n  }, [setIsVisible])\n\n  return isVisible\n}\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import BigNumber from 'bignumber.js'\nimport { SerializedFarm, DeserializedPool, SerializedPool } from 'state/types'\nimport { deserializeToken } from 'state/user/hooks/helpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | DeserializedPool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: SerializedPool): DeserializedPool => {\n  const { totalStaked, stakingLimit, userData, stakingToken, earningToken, ...rest } = pool\n\n  return {\n    ...rest,\n    stakingToken: deserializeToken(stakingToken),\n    earningToken: deserializeToken(earningToken),\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  }\n}\n\nexport const getTokenPricesFromFarm = (farms: SerializedFarm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = farm.quoteToken.address.toLocaleLowerCase()\n    const tokenAddress = farm.token.address.toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteTokenPriceBusd).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.tokenPriceBusd).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nexport const MAX_USER_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype UserLotteriesWhere = { lottery_in?: string[] }\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const nodeRoundsWithGraphData = userNodeData.map((userNodeRound) => {\n    const userGraphRound = userGraphData.find(\n      (graphResponseRound) => graphResponseRound.lotteryId === userNodeRound.roundId,\n    )\n    const nodeRoundData = lotteryNodeData.find((nodeRound) => nodeRound.lotteryId === userNodeRound.roundId)\n    return {\n      endTime: nodeRoundData.endTime,\n      status: nodeRoundData.status,\n      lotteryId: nodeRoundData.lotteryId.toString(),\n      claimed: hasRoundBeenClaimed(userNodeRound.userTickets),\n      totalTickets: userGraphRound?.totalTickets || userNodeRound.userTickets.length.toString(),\n      tickets: userNodeRound.userTickets,\n    }\n  })\n\n  // Return the rounds with combined data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = userGraphData\n    .map((graphRound) => graphRound?.lotteryId)\n    .indexOf(lastCombinedDataRound?.lotteryId)\n  const remainingSubgraphRounds = userGraphData ? userGraphData.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteryUser = async (\n  account: string,\n  first = MAX_USER_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: UserLotteriesWhere = {},\n): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!, $first: Int!, $skip: Int!, $where: Round_filter) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase(), first, skip, where },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status.toLowerCase(),\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport truncateHash from 'utils/truncateHash'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address ? `${truncateHash(token.address)}` : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserSlippageTolerance, useUserTransactionTTL } from 'state/user/hooks'\nimport QuestionHelper from '../../QuestionHelper'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nconst SlippageTabs = () => {\n  const [userSlippageTolerance, setUserSlippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (userSlippageTolerance / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (ttl / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && userSlippageTolerance < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && userSlippageTolerance > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  const parseCustomSlippage = (value: string) => {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setUserSlippageTolerance(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const parseCustomDeadline = (value: string) => {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setTtl(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\" mb=\"24px\">\n        <Flex mb=\"12px\">\n          <Text>{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t(\n              'Setting a high slippage tolerance can help transactions succeed, but you may not get such a good price. Use with caution.',\n            )}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex flexWrap=\"wrap\">\n         \n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(50)\n            }}\n            variant={userSlippageTolerance === 50 ? 'primary' : 'tertiary'}\n          >\n            0.5%\n          </Button>\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(100)\n            }}\n            variant={userSlippageTolerance === 100 ? 'primary' : 'tertiary'}\n          >\n            1.0%\n          </Button>\n          <Button\n            mr=\"4px\"\n            mt=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(1200)\n            }}\n            variant={userSlippageTolerance === 1200 ? 'primary' : 'tertiary'}\n          >\n            12.0%\n          </Button>\n          <Flex alignItems=\"center\">\n            <Box width=\"76px\" mt=\"4px\">\n              <Input\n                scale=\"sm\"\n                placeholder={(userSlippageTolerance / 100).toFixed(2)}\n                value={slippageInput}\n                onBlur={() => {\n                  parseCustomSlippage((userSlippageTolerance / 100).toFixed(2))\n                }}\n                onChange={(e) => parseCustomSlippage(e.target.value)}\n                isWarning={!slippageInputIsValid}\n                isSuccess={![10, 50, 1200].includes(userSlippageTolerance)}\n              />\n            </Box>\n            <Text color=\"primary\" bold ml=\"2px\">\n              %\n            </Text>\n          </Flex>\n        </Flex>\n        {!!slippageError && (\n          <Text fontSize=\"14px\" color={slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E'} mt=\"8px\">\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('')}\n          </Text>\n        )}\n      </Flex>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Flex alignItems=\"center\">\n          <Text>{t('Tx deadline (mins)')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if it is left confirming for longer than this time.')}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex>\n          <Box width=\"52px\" mt=\"4px\">\n            <Input\n              scale=\"sm\"\n              color={deadlineError ? 'red' : undefined}\n              onBlur={() => {\n                parseCustomDeadline((ttl / 60).toString())\n              }}\n              placeholder={(ttl / 60).toString()}\n              value={deadlineInput}\n              onChange={(e) => parseCustomDeadline(e.target.value)}\n            />\n          </Box>\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default SlippageTabs\n","import React, { useState } from 'react'\nimport { Button, Text, Flex, Message, Modal, InjectedModalProps, Checkbox } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ExpertModalProps extends InjectedModalProps {\n  setShowConfirmExpertModal: (boolean) => void\n  setShowExpertModeAcknowledgement: (boolean) => void\n}\n\nconst ExpertModal: React.FC<ExpertModalProps> = ({ setShowConfirmExpertModal, setShowExpertModeAcknowledgement }) => {\n  const [, toggleExpertMode] = useExpertModeManager()\n  const [isRememberChecked, setIsRememberChecked] = useState(false)\n\n  const { t } = useTranslation()\n\n  return (\n    <Modal\n      title={t('Expert Mode')}\n      onBack={() => setShowConfirmExpertModal(false)}\n      onDismiss={() => setShowConfirmExpertModal(false)}\n      headerBackground=\"gradients.cardHeader\"\n      style={{ maxWidth: '360px' }}\n    >\n      <Message variant=\"warning\" mb=\"24px\">\n        <Text>\n          {t(\n            \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n          )}\n        </Text>\n      </Message>\n      <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n      <Flex alignItems=\"center\" mb=\"24px\">\n        <Checkbox\n          name=\"confirmed\"\n          type=\"checkbox\"\n          checked={isRememberChecked}\n          onChange={() => setIsRememberChecked(!isRememberChecked)}\n          scale=\"sm\"\n        />\n        <Text ml=\"10px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n          {t('Don’t show this again')}\n        </Text>\n      </Flex>\n      <Button\n        mb=\"8px\"\n        id=\"confirm-expert-mode\"\n        onClick={() => {\n          // eslint-disable-next-line no-alert\n          if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n            toggleExpertMode()\n            setShowConfirmExpertModal(false)\n            if (isRememberChecked) {\n              setShowExpertModeAcknowledgement(false)\n            }\n          }\n        }}\n      >\n        {t('Turn On Expert Mode')}\n      </Button>\n      <Button\n        variant=\"secondary\"\n        onClick={() => {\n          setShowConfirmExpertModal(false)\n        }}\n      >\n        {t('Cancel')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default ExpertModal\n","import React from 'react'\nimport { Flex, Button, Text } from '@pancakeswap/uikit'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport { GAS_PRICE_GWEI, GAS_PRICE } from 'state/user/hooks/helpers'\nimport { useGasPriceManager } from 'state/user/hooks'\n\nconst GasSettings = () => {\n  const { t } = useTranslation()\n  const [gasPrice, setGasPrice] = useGasPriceManager()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex mb=\"12px\" alignItems=\"center\">\n        <Text>{t('Default Transaction Speed (GWEI)')}</Text>\n        <QuestionHelper\n          text={t(\n            'Adjusts the gas price (transaction fee) for your transaction. Higher GWEI = higher speed = higher fees',\n          )}\n          placement=\"top-start\"\n          ml=\"4px\"\n        />\n      </Flex>\n      <Flex flexWrap=\"wrap\">\n        <Button\n          mt=\"4px\"\n          mr=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.default)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.default ? 'primary' : 'tertiary'}\n        >\n          {t('Standard (%gasPrice%)', { gasPrice: GAS_PRICE.default })}\n        </Button>\n        <Button\n          mt=\"4px\"\n          mr=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.fast)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.fast ? 'primary' : 'tertiary'}\n        >\n          {t('Fast (%gasPrice%)', { gasPrice: GAS_PRICE.fast })}\n        </Button>\n        <Button\n          mr=\"4px\"\n          mt=\"4px\"\n          scale=\"sm\"\n          onClick={() => {\n            setGasPrice(GAS_PRICE_GWEI.instant)\n          }}\n          variant={gasPrice === GAS_PRICE_GWEI.instant ? 'primary' : 'tertiary'}\n        >\n          {t('Instant (%gasPrice%)', { gasPrice: GAS_PRICE.instant })}\n        </Button>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default GasSettings\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, PancakeToggle, Toggle, Flex, Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport {\n  useAudioModeManager,\n  useExpertModeManager,\n  useUserExpertModeAcknowledgementShow,\n  useUserSingleHopOnly,\n} from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport useTheme from 'hooks/useTheme'\nimport QuestionHelper from '../../QuestionHelper'\nimport TransactionSettings from './TransactionSettings'\nimport ExpertModal from './ExpertModal'\nimport GasSettings from './GasSettings'\n\nconst ScrollableContainer = styled(Flex)`\n  flex-direction: column;\n  max-height: 400px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [showExpertModeAcknowledgement, setShowExpertModeAcknowledgement] = useUserExpertModeAcknowledgementShow()\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n  const { theme, isDark, toggleTheme } = useTheme()\n\n  if (showConfirmExpertModal) {\n    return (\n      <ExpertModal\n        setShowConfirmExpertModal={setShowConfirmExpertModal}\n        onDismiss={onDismiss}\n        setShowExpertModeAcknowledgement={setShowExpertModeAcknowledgement}\n      />\n    )\n  }\n\n  const handleExpertModeToggle = () => {\n    if (expertMode) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else if (!showExpertModeAcknowledgement) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else {\n      setShowConfirmExpertModal(true)\n    }\n  }\n\n  return (\n    <Modal\n      title={t('Settings')}\n      headerBackground=\"gradients.cardHeader\"\n      onDismiss={onDismiss}\n      style={{ maxWidth: '420px' }}\n    >\n      <ScrollableContainer>\n        <Flex pb=\"24px\" flexDirection=\"column\">\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Global')}\n          </Text>\n          <Flex justifyContent=\"space-between\">\n            {/* <Text mb=\"24px\">{t('Dark mode')}</Text> */}\n            {/* <ThemeSwitcher isDark={isDark} toggleTheme={toggleTheme} /> */}\n          </Flex>\n          <GasSettings />\n        </Flex>\n        <Flex pt=\"24px\" flexDirection=\"column\" borderTop={`1px ${theme.colors.cardBorder} solid`}>\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Swaps & Liquidity')}\n          </Text>\n          <TransactionSettings />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Expert Mode')}</Text>\n            <QuestionHelper\n              text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n              placement=\"top-start\"\n              ml=\"4px\"\n            />\n          </Flex>\n          <Toggle id=\"toggle-expert-mode-button\" scale=\"md\" checked={expertMode} onChange={handleExpertModeToggle} />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Disable Multihops')}</Text>\n            <QuestionHelper text={t('Restricts swaps to direct pairs only.')} placement=\"top-start\" ml=\"4px\" />\n          </Flex>\n          <Toggle\n            id=\"toggle-disable-multihop-button\"\n            checked={singleHopOnly}\n            scale=\"md\"\n            onChange={() => {\n              setSingleHopOnly(!singleHopOnly)\n            }}\n          />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          {/* <Flex alignItems=\"center\">\n            <Text>{t('Flippy sounds')}</Text>\n            <QuestionHelper\n              text={t('Fun sounds ')}\n              placement=\"top-start\"\n              ml=\"4px\"\n            />\n          </Flex>\n          <PancakeToggle checked={audioPlay} onChange={toggleSetAudioMode} scale=\"md\" /> */}\n        </Flex>\n      </ScrollableContainer>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Flex, IconButton, CogIcon, useModal } from '@pancakeswap/uikit'\nimport SettingsModal from './SettingsModal'\n\nconst GlobalSettings = () => {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n\n  return (\n    <Flex>\n      <IconButton onClick={onPresentSettingsModal} variant=\"text\" scale=\"sm\" mr=\"8px\" id=\"open-settings-dialog-button\">\n        <CogIcon height={34} width={34} color=\"textSubtle\" />\n      </IconButton>\n    </Flex>\n  )\n}\n\nexport default GlobalSettings\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { ethers } from 'ethers'\nimport { Campaign, TranslatableText } from 'config/constants/types'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\n    return {\n      address: getPointCenterIfoAddress(),\n      name: 'checkClaimStatus',\n      params: [account, address],\n    }\n  })\n\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\n    | [boolean][]\n    | null\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\n      if (claimStatusArr === null) {\n        return accum\n      }\n\n      const [claimStatus] = claimStatusArr\n\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { useTranslation } from 'contexts/Localization'\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = t('Connect Wallet')\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? t('Invalid pair')\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? t('Enter an amount')\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = t('Insufficient %symbol% balance', { symbol: currencies[Field.CURRENCY_A]?.symbol })\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = t('Insufficient %symbol% balance', { symbol: currencies[Field.CURRENCY_B]?.symbol })\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from '@pancakeswap/uikit'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from '../../state'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field, resetMintState } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useGasPrice, useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const gasPrice = useGasPrice()\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  useEffect(() => {\n    if (!currencyIdA && !currencyIdB) {\n      dispatch(resetMintState())\n    }\n  }, [dispatch, currencyIdA, currencyIdB])\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n          gasPrice,\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else if (currencyIdB) {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport {\n  Bet,\n  LedgerData,\n  HistoryFilter,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeRound,\n  BetPosition,\n  LeaderboardLoadingState,\n  PredictionUser,\n  LeaderboardFilter,\n  State,\n} from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  FUTURE_ROUND_COUNT,\n  LEADERBOARD_MIN_ROUNDS_PLAYED,\n  PAST_ROUND_COUNT,\n  ROUNDS_PER_PAGE,\n  ROUND_BUFFER,\n} from './config'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n  fetchUsersRoundsLength,\n  fetchUserRounds,\n  getPredictionUsers,\n  transformUserResponse,\n  LEADERBOARD_RESULTS_PER_PAGE,\n  getPredictionUser,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  intervalSeconds: 300,\n  minBetAmount: '10000000000000',\n  bufferSeconds: 60,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: [],\n  totalHistory: 0,\n  currentHistoryPage: 1,\n  hasHistoryLoaded: false,\n  ledgers: {},\n  claimableStatuses: {},\n  leaderboard: {\n    selectedAddress: null,\n    loadingState: LeaderboardLoadingState.INITIAL,\n    filters: {\n      address: null,\n      orderBy: 'netBNB',\n      timePeriod: 'all',\n    },\n    skip: 0,\n    hasMoreResults: true,\n    addressResults: {},\n    results: [],\n  },\n}\n\n// Thunks\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalSeconds'\n  | 'minBetAmount'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n  | 'bufferSeconds'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs =\n      marketData.currentEpoch > PAST_ROUND_COUNT\n        ? range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n        : [marketData.currentEpoch]\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const fetchNodeHistory = createAsyncThunk<\n  { bets: Bet[]; claimableStatuses: PredictionsState['claimableStatuses']; page?: number; totalHistory: number },\n  { account: string; page?: number }\n>('predictions/fetchNodeHistory', async ({ account, page = 1 }) => {\n  const userRoundsLength = await fetchUsersRoundsLength(account)\n  const emptyResult = { bets: [], claimableStatuses: {}, totalHistory: userRoundsLength.toNumber() }\n  const maxPages = userRoundsLength.lte(ROUNDS_PER_PAGE) ? 1 : Math.ceil(userRoundsLength.toNumber() / ROUNDS_PER_PAGE)\n\n  if (userRoundsLength.eq(0)) {\n    return emptyResult\n  }\n\n  if (page > maxPages) {\n    return emptyResult\n  }\n\n  const cursor = userRoundsLength.sub(ROUNDS_PER_PAGE * page)\n\n  // If the page request is the final one we only want to retrieve the amount of rounds up to the next cursor.\n  const size =\n    maxPages === page\n      ? userRoundsLength\n          .sub(ROUNDS_PER_PAGE * (page - 1)) // Previous page's cursor\n          .toNumber()\n      : ROUNDS_PER_PAGE\n  const userRounds = await fetchUserRounds(account, cursor.lt(0) ? 0 : cursor.toNumber(), size)\n\n  if (!userRounds) {\n    return emptyResult\n  }\n\n  const epochs = Object.keys(userRounds).map((epochStr) => Number(epochStr))\n  const roundData = await getRoundsData(epochs)\n  const claimableStatuses = await getClaimStatuses(account, epochs)\n\n  // Turn the data from the node into an Bet object that comes from the graph\n  const bets: Bet[] = roundData.reduce((accum, round) => {\n    const reduxRound = serializePredictionsRoundsResponse(round)\n    const ledger = userRounds[reduxRound.epoch]\n    const ledgerAmount = ethers.BigNumber.from(ledger.amount)\n    const closePrice = round.closePrice ? parseFloat(formatUnits(round.closePrice, 8)) : null\n    const lockPrice = round.lockPrice ? parseFloat(formatUnits(round.lockPrice, 8)) : null\n\n    const getRoundPosition = () => {\n      if (!closePrice) {\n        return null\n      }\n\n      if (round.closePrice.eq(round.lockPrice)) {\n        return BetPosition.HOUSE\n      }\n\n      return round.closePrice.gt(round.lockPrice) ? BetPosition.BULL : BetPosition.BEAR\n    }\n\n    return [\n      ...accum,\n      {\n        id: null,\n        hash: null,\n        amount: parseFloat(formatUnits(ledgerAmount)),\n        position: ledger.position,\n        claimed: ledger.claimed,\n        claimedAt: null,\n        claimedHash: null,\n        claimedBNB: 0,\n        claimedNetBNB: 0,\n        createdAt: null,\n        updatedAt: null,\n        block: 0,\n        round: {\n          id: null,\n          epoch: round.epoch.toNumber(),\n          failed: false,\n          startBlock: null,\n          startAt: round.startTimestamp ? round.startTimestamp.toNumber() : null,\n          startHash: null,\n          lockAt: round.lockTimestamp ? round.lockTimestamp.toNumber() : null,\n          lockBlock: null,\n          lockPrice,\n          lockHash: null,\n          lockRoundId: round.lockOracleId ? round.lockOracleId.toString() : null,\n          closeRoundId: round.closeOracleId ? round.closeOracleId.toString() : null,\n          closeHash: null,\n          closeAt: null,\n          closePrice,\n          closeBlock: null,\n          totalBets: 0,\n          totalAmount: parseFloat(formatUnits(round.totalAmount)),\n          bullBets: 0,\n          bullAmount: parseFloat(formatUnits(round.bullAmount)),\n          bearBets: 0,\n          bearAmount: parseFloat(formatUnits(round.bearAmount)),\n          position: getRoundPosition(),\n        },\n      },\n    ]\n  }, [])\n\n  return { bets, claimableStatuses, page, totalHistory: userRoundsLength.toNumber() }\n})\n\n// Leaderboard\nexport const filterLeaderboard = createAsyncThunk<{ results: PredictionUser[] }, { filters: LeaderboardFilter }>(\n  'predictions/filterLeaderboard',\n  async ({ filters }) => {\n    const usersResponse = await getPredictionUsers({\n      skip: 0,\n      orderBy: filters.orderBy,\n      where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${filters.orderBy}_gt`]: 0 },\n    })\n\n    return { results: usersResponse.map(transformUserResponse) }\n  },\n)\n\nexport const fetchAddressResult = createAsyncThunk<\n  { account: string; data: PredictionUser },\n  string,\n  { rejectValue: string }\n>('predictions/fetchAddressResult', async (account, { rejectWithValue }) => {\n  const userResponse = await getPredictionUser(account)\n\n  if (!userResponse) {\n    return rejectWithValue(account)\n  }\n\n  return { account, data: transformUserResponse(userResponse) }\n})\n\nexport const filterNextPageLeaderboard = createAsyncThunk<\n  { results: PredictionUser[]; skip: number },\n  number,\n  { state: State }\n>('predictions/filterNextPageLeaderboard', async (skip, { getState }) => {\n  const state = getState()\n  const usersResponse = await getPredictionUsers({\n    skip,\n    orderBy: state.predictions.leaderboard.filters.orderBy,\n    where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${state.predictions.leaderboard.filters.orderBy}_gt`]: 0 },\n  })\n\n  return { results: usersResponse.map(transformUserResponse), skip }\n})\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setLeaderboardFilter: (state, action: PayloadAction<Partial<LeaderboardFilter>>) => {\n      state.leaderboard.filters = {\n        ...state.leaderboard.filters,\n        ...action.payload,\n      }\n\n      // Anytime we filters change we need to reset back to page 1\n      state.leaderboard.skip = 0\n      state.leaderboard.hasMoreResults = true\n    },\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markAsCollected: (state, action: PayloadAction<{ [key: string]: boolean }>) => {\n      state.claimableStatuses = { ...state.claimableStatuses, ...action.payload }\n    },\n    setSelectedAddress: (state, action: PayloadAction<string>) => {\n      state.leaderboard.selectedAddress = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    // Leaderboard filter\n    builder.addCase(filterLeaderboard.pending, (state) => {\n      // Only mark as loading if we come from IDLE. This allows initialization.\n      if (state.leaderboard.loadingState === LeaderboardLoadingState.IDLE) {\n        state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n      }\n    })\n    builder.addCase(filterLeaderboard.fulfilled, (state, action) => {\n      const { results } = action.payload\n\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.results = results\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n\n      // Populate address results to reduce calls\n      state.leaderboard.addressResults = {\n        ...state.leaderboard.addressResults,\n        ...results.reduce((accum, result) => {\n          return {\n            ...accum,\n            [result.id]: result,\n          }\n        }, {}),\n      }\n    })\n\n    // Leaderboard account result\n    builder.addCase(fetchAddressResult.pending, (state) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n    })\n    builder.addCase(fetchAddressResult.fulfilled, (state, action) => {\n      const { account, data } = action.payload\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.addressResults[account] = data\n    })\n    builder.addCase(fetchAddressResult.rejected, (state, action) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.addressResults[action.payload] = null\n    })\n\n    // Leaderboard next page\n    builder.addCase(filterNextPageLeaderboard.pending, (state) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n    })\n    builder.addCase(filterNextPageLeaderboard.fulfilled, (state, action) => {\n      const { results, skip } = action.payload\n\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.results = [...state.leaderboard.results, ...results]\n      state.leaderboard.skip = skip\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n    })\n\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, minBetAmount } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startTimestamp + intervalSeconds + ROUND_BUFFER,\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalSeconds = intervalSeconds\n      state.minBetAmount = minBetAmount\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, bufferSeconds, rounds, claimableStatuses, ledgers } =\n        action.payload\n      const futureRounds: ReduxNodeRound[] = []\n      const currentRound = rounds[currentEpoch]\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(makeFutureRoundResponse(currentEpoch + i, currentRound.startTimestamp + intervalSeconds * i))\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        intervalSeconds,\n        bufferSeconds,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = merge([], state.history[account] ?? [], bets)\n    })\n\n    // History from the node\n    builder.addCase(fetchNodeHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchNodeHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchNodeHistory.fulfilled, (state, action) => {\n      const { bets, claimableStatuses, page, totalHistory } = action.payload\n\n      state.isFetchingHistory = false\n      state.history = page === 1 ? bets : [...state.history, ...bets]\n      state.claimableStatuses = { ...state.claimableStatuses, ...claimableStatuses }\n      state.hasHistoryLoaded = state.history.length === totalHistory || bets.length === 0\n      state.totalHistory = totalHistory\n      state.currentHistoryPage = page\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markAsCollected,\n  setLeaderboardFilter,\n  setSelectedAddress,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { pancakeBunniesAddress } from 'views/Nft/market/constants'\nimport {\n  getNftsFromCollectionApi,\n  getNftsFromCollectionSg,\n  getNftsMarketData,\n  getCollectionsApi,\n  getCollectionsSg,\n  getUserActivity,\n  combineCollectionData,\n  getCollectionSg,\n  getCollectionApi,\n  getNftsFromDifferentCollectionsApi,\n  getCompleteAccountNftData,\n  getNftsByBunnyIdSg,\n  getMarketDataForTokenIds,\n} from './helpers'\nimport {\n  State,\n  Collection,\n  ApiCollections,\n  TokenIdWithCollectionAddress,\n  NFTMarketInitializationState,\n  UserNftInitializationState,\n  NftToken,\n  NftLocation,\n  ApiSingleTokenData,\n} from './types'\n\nconst initialState: State = {\n  initializationState: NFTMarketInitializationState.UNINITIALIZED,\n  data: {\n    collections: {},\n    nfts: {},\n    isFetchingMoreNfts: false,\n    latestFetchAt: 0,\n    lastUpdateAt: Date.now(),\n    users: {},\n    user: {\n      userNftsInitializationState: UserNftInitializationState.UNINITIALIZED,\n      nfts: [],\n      activity: {\n        initializationState: UserNftInitializationState.UNINITIALIZED,\n        askOrderHistory: [],\n        buyTradeHistory: [],\n        sellTradeHistory: [],\n      },\n    },\n  },\n}\n\n/**\n * Fetch all collections data by combining data from the API (static metadata) and the Subgraph (dynamic market data)\n */\nexport const fetchCollections = createAsyncThunk<Record<string, Collection>>('nft/fetchCollections', async () => {\n  const [collections, collectionsMarket] = await Promise.all([getCollectionsApi(), getCollectionsSg()])\n  return combineCollectionData(collections, collectionsMarket)\n})\n\n/**\n * Fetch collection data by combining data from the API (static metadata) and the Subgraph (dynamic market data)\n */\nexport const fetchCollection = createAsyncThunk<Record<string, Collection>, string>(\n  'nft/fetchCollection',\n  async (collectionAddress) => {\n    const [collection, collectionMarket] = await Promise.all([\n      getCollectionApi(collectionAddress),\n      getCollectionSg(collectionAddress),\n    ])\n\n    return combineCollectionData([collection], [collectionMarket])\n  },\n)\n\n/**\n * Fetch all NFT data for a collections by combining data from the API (static metadata)\n * and the Subgraph (dynamic market data)\n * @param collectionAddress\n */\nexport const fetchNftsFromCollections = createAsyncThunk(\n  'nft/fetchNftsFromCollections',\n  async (collectionAddress: string) => {\n    try {\n      const [nfts, nftsMarket] = await Promise.all([\n        getNftsFromCollectionApi(collectionAddress),\n        getNftsFromCollectionSg(collectionAddress),\n      ])\n\n      if (!nfts?.data) {\n        return []\n      }\n\n      if (collectionAddress === pancakeBunniesAddress) {\n        return nftsMarket.map((marketData) => {\n          // The fallback is just for the testnet where some bunnies don't exist\n          const apiMetadata = nfts.data[marketData.otherId] ?? {\n            name: '',\n            description: '',\n            collection: { name: 'Pancake Bunnies' },\n            image: {\n              original: '',\n              thumbnail: '',\n            },\n          }\n          // Generating attributes field that is not returned by API but can be \"faked\" since objects are keyed with bunny id\n          const attributes = [\n            {\n              traitType: 'bunnyId',\n              value: marketData.otherId,\n              displayType: null,\n            },\n          ]\n          return {\n            tokenId: marketData.tokenId,\n            name: apiMetadata.name,\n            description: apiMetadata.description,\n            collectionName: apiMetadata.collection.name,\n            collectionAddress,\n            image: apiMetadata.image,\n            marketData,\n            attributes,\n          }\n        })\n      }\n\n      // TODO: revisit this for other collecitons\n      return []\n    } catch (error) {\n      console.error(`Failed to fetch collection NFTs for ${collectionAddress}`, error)\n      return []\n    }\n  },\n)\n\n/**\n * Fetch fresh marketdata for existing tokens in the store\n */\nexport const updateNftTokensData = createAsyncThunk<\n  NftToken[],\n  { collectionAddress: string; existingTokenIds: string[] }\n>('nft/updateNftTokensData', async ({ collectionAddress, existingTokenIds }) => {\n  try {\n    // TODO: this kinda should work for other collections too, but doublecheck during Squad integration\n    const [nfts, nftsMarket] = await Promise.all([\n      getNftsFromCollectionApi(collectionAddress),\n      getMarketDataForTokenIds(collectionAddress, existingTokenIds),\n    ])\n\n    if (!nfts?.data) {\n      return []\n    }\n\n    return nftsMarket.map((marketData) => {\n      // The fallback is just for the testnet where some bunnies don't exist\n      const apiMetadata = nfts.data[marketData.otherId] ?? {\n        name: '',\n        description: '',\n        collection: { name: 'Pancake Bunnies' },\n        image: {\n          original: '',\n          thumbnail: '',\n        },\n      }\n      // Generating attributes field that is not returned by API but can be \"faked\" since objects are keyed with bunny id\n      const attributes = [\n        {\n          traitType: 'bunnyId',\n          value: marketData.otherId,\n          displayType: null,\n        },\n      ]\n      return {\n        tokenId: marketData.tokenId,\n        name: apiMetadata.name,\n        description: apiMetadata.description,\n        collectionName: apiMetadata.collection.name,\n        collectionAddress: pancakeBunniesAddress,\n        image: apiMetadata.image,\n        marketData,\n        attributes,\n      }\n    })\n  } catch (error) {\n    console.error(`Failed to update collection NFTs for ${collectionAddress}`, error)\n    return []\n  }\n})\n\n/**\n * Fetch all 30 on sale NFTs with specified bunny id\n */\nexport const fetchNftsByBunnyId = createAsyncThunk<\n  NftToken[],\n  { bunnyId: string; existingTokenIds: string[]; existingMetadata: ApiSingleTokenData; orderDirection: 'asc' | 'desc' }\n>('nft/fetchNftsByBunnyId', async ({ bunnyId, existingTokenIds, existingMetadata, orderDirection }) => {\n  try {\n    let nfts = { data: { [bunnyId]: existingMetadata } }\n    if (!existingMetadata) {\n      nfts = await getNftsFromCollectionApi(pancakeBunniesAddress)\n    }\n    const nftsMarket = await getNftsByBunnyIdSg(bunnyId, existingTokenIds, orderDirection)\n\n    if (!nfts?.data) {\n      return []\n    }\n\n    return nftsMarket.map((marketData) => {\n      // The fallback is just for the testnet where some bunnies don't exist\n      const apiMetadata = nfts.data[marketData.otherId] ?? {\n        name: '',\n        description: '',\n        collection: { name: 'Pancake Bunnies' },\n        image: {\n          original: '',\n          thumbnail: '',\n        },\n      }\n      // Generating attributes field that is not returned by API but can be \"faked\" since objects are keyed with bunny id\n      const attributes = [\n        {\n          traitType: 'bunnyId',\n          value: marketData.otherId,\n          displayType: null,\n        },\n      ]\n      return {\n        tokenId: marketData.tokenId,\n        name: apiMetadata.name,\n        description: apiMetadata.description,\n        collectionName: apiMetadata.collection.name,\n        collectionAddress: pancakeBunniesAddress,\n        image: apiMetadata.image,\n        marketData,\n        attributes,\n      }\n    })\n  } catch (error) {\n    console.error(`Failed to fetch collection NFTs for bunny id ${bunnyId}`, error)\n    return []\n  }\n})\n\nexport const fetchUserNfts = createAsyncThunk<\n  NftToken[],\n  { account: string; profileNftWithCollectionAddress?: TokenIdWithCollectionAddress; collections: ApiCollections }\n>('nft/fetchUserNfts', async ({ account, profileNftWithCollectionAddress, collections }) => {\n  const completeNftData = await getCompleteAccountNftData(account, collections, profileNftWithCollectionAddress)\n  return completeNftData\n})\n\nexport const updateUserNft = createAsyncThunk<\n  NftToken,\n  { tokenId: string; collectionAddress: string; location?: NftLocation }\n>('nft/updateUserNft', async ({ tokenId, collectionAddress, location = NftLocation.WALLET }) => {\n  const marketDataForNft = await getNftsMarketData({ tokenId_in: [tokenId] })\n  const metadataForNft = await getNftsFromDifferentCollectionsApi([{ tokenId, collectionAddress }])\n  const completeNftData = { ...metadataForNft[0], location, marketData: marketDataForNft[0] }\n\n  return completeNftData\n})\n\nexport const removeUserNft = createAsyncThunk<string, { tokenId: string }>(\n  'nft/removeUserNft',\n  async ({ tokenId }) => tokenId,\n)\n\nexport const addUserNft = createAsyncThunk<\n  NftToken,\n  { tokenId: string; collectionAddress: string; nftLocation?: NftLocation }\n>('nft/addUserNft', async ({ tokenId, collectionAddress, nftLocation = NftLocation.WALLET }) => {\n  const marketDataForNft = await getNftsMarketData({ tokenId_in: [tokenId] })\n  const metadataForNft = await getNftsFromDifferentCollectionsApi([{ tokenId, collectionAddress }])\n\n  const tokens = { [tokenId]: { ...marketDataForNft[0], nftLocation } }\n  const completeNftData = { ...metadataForNft[0], tokens }\n\n  return completeNftData\n})\n\nexport const fetchUserActivity = createAsyncThunk('nft/fetchUserActivity', async (address: string) => {\n  const userActivity = await getUserActivity(address.toLocaleLowerCase())\n  return userActivity\n})\n\nexport const NftMarket = createSlice({\n  name: 'NftMarket',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchCollection.fulfilled, (state, action) => {\n      state.data.collections = { ...state.data.collections, ...action.payload }\n    })\n    builder.addCase(fetchCollections.fulfilled, (state, action) => {\n      state.data.collections = action.payload\n      state.initializationState = NFTMarketInitializationState.INITIALIZED\n    })\n    builder.addCase(fetchNftsFromCollections.fulfilled, (state, action) => {\n      state.data.nfts[action.meta.arg] = action.payload\n    })\n    builder.addCase(updateNftTokensData.fulfilled, (state, action) => {\n      if (action.payload.length > 0) {\n        state.data.nfts[action.meta.arg.collectionAddress] = action.payload\n        state.data.lastUpdateAt = Date.now()\n      }\n    })\n    builder.addCase(updateNftTokensData.rejected, (state) => {\n      state.data.lastUpdateAt = Date.now()\n    })\n    builder.addCase(fetchNftsByBunnyId.pending, (state) => {\n      state.data.isFetchingMoreNfts = true\n    })\n    builder.addCase(fetchNftsByBunnyId.fulfilled, (state, action) => {\n      const existingNftsInState = state.data.nfts[pancakeBunniesAddress] || []\n      state.data.nfts[pancakeBunniesAddress] = [...existingNftsInState, ...action.payload]\n      state.data.isFetchingMoreNfts = false\n      state.data.latestFetchAt = Date.now()\n    })\n    builder.addCase(fetchNftsByBunnyId.rejected, (state) => {\n      state.data.isFetchingMoreNfts = false\n    })\n    builder.addCase(fetchUserNfts.rejected, (state) => {\n      state.data.user.userNftsInitializationState = UserNftInitializationState.ERROR\n    })\n    builder.addCase(fetchUserNfts.pending, (state) => {\n      state.data.user.userNftsInitializationState = UserNftInitializationState.INITIALIZING\n    })\n    builder.addCase(fetchUserNfts.fulfilled, (state, action) => {\n      state.data.user.nfts = action.payload\n      state.data.user.userNftsInitializationState = UserNftInitializationState.INITIALIZED\n    })\n    builder.addCase(updateUserNft.fulfilled, (state, action) => {\n      const userNftsState: NftToken[] = state.data.user.nfts\n      const nftToUpdate = userNftsState.find((nft) => nft.tokenId === action.payload.tokenId)\n      const indexInState = userNftsState.indexOf(nftToUpdate)\n      state.data.user.nfts[indexInState] = action.payload\n    })\n    builder.addCase(removeUserNft.fulfilled, (state, action) => {\n      const copyOfState: NftToken[] = [...state.data.user.nfts]\n      const nftToRemove = copyOfState.find((nft) => nft.tokenId === action.payload)\n      const indexInState = copyOfState.indexOf(nftToRemove)\n      copyOfState.splice(indexInState, 1)\n      state.data.user.nfts = copyOfState\n    })\n    builder.addCase(addUserNft.fulfilled, (state, action) => {\n      state.data.user.nfts = [...state.data.user.nfts, action.payload]\n    })\n    builder.addCase(fetchUserActivity.fulfilled, (state, action) => {\n      state.data.user.activity = { ...action.payload, initializationState: UserNftInitializationState.INITIALIZED }\n    })\n    builder.addCase(fetchUserActivity.rejected, (state) => {\n      state.data.user.activity.initializationState = UserNftInitializationState.ERROR\n    })\n    builder.addCase(fetchUserActivity.pending, (state) => {\n      state.data.user.activity.initializationState = UserNftInitializationState.INITIALIZING\n    })\n  },\n})\n\nexport default NftMarket.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\nimport { PageHeaderProps } from './types'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<PageHeaderProps> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData, { getGraphLotteryUser } from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const fetchAdditionalUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; skip?: number }\n>('lottery/fetchAdditionalUserLotteries', async ({ account, skip }) => {\n  const additionalUserLotteries = await getGraphLotteryUser(account, undefined, skip)\n  return additionalUserLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(fetchAdditionalUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      const mergedRounds = [...state.userLotteryData.rounds, ...action.payload.rounds]\n      state.userLotteryData.rounds = mergedRounds\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\n  cursor: pointer;\n  width: 100%;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n  z-index: 20;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps extends BoxProps {\n  options: OptionProps[]\n  onOptionChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onOptionChange, ...props }) => {\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onOptionChange) {\n      onOptionChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} {...props}>\n      <DropDownHeader onClick={toggling}>\n        <Text>{options[selectedOptionIndex].label}</Text>\n      </DropDownHeader>\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype LotteriesWhere = { id_in?: string[] }\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  // Populate all nodeRound data with supplementary graphResponse round data when available\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\n    return {\n      endTime: nodeRoundData.endTime,\n      finalNumber: nodeRoundData.finalNumber.toString(),\n      startTime: nodeRoundData.startTime,\n      status: nodeRoundData.status,\n      id: nodeRoundData.lotteryId,\n      ticketPrice: graphRoundData?.ticketPrice,\n      totalTickets: graphRoundData?.totalTickets,\n      totalUsers: graphRoundData?.totalUsers,\n      winningTickets: graphRoundData?.winningTickets,\n    }\n  })\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = graphResponse\n    .map((graphRound) => graphRound?.id)\n    .indexOf(lastCombinedDataRound?.id)\n\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: LotteriesWhere = {},\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first, where },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @param farmAddress Farm Address\n * @returns Farm Apr\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = poolWeight ? poolWeight.times(CAKE_PER_YEAR) : new BigNumber(NaN)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import { useEffect, useRef, useState } from 'react'\n\nconst useIntersectionObserver = () => {\n  const observerRef = useRef<HTMLDivElement>(null)\n  const intersectionObserverRef = useRef<IntersectionObserver>(null)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const [isIntersecting, setIsIntersecting] = useState(false)\n\n  useEffect(() => {\n    const checkObserverIsIntersecting = ([entry]: IntersectionObserverEntry[]) => {\n      setIsIntersecting(entry.isIntersecting)\n    }\n\n    if (!observerIsSet) {\n      intersectionObserverRef.current = new IntersectionObserver(checkObserverIsIntersecting, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      intersectionObserverRef.current.observe(observerRef.current)\n      setObserverIsSet(true)\n    }\n\n    return () => {\n      if (intersectionObserverRef.current && observerIsSet) {\n        intersectionObserverRef.current.disconnect()\n      }\n    }\n  }, [observerIsSet])\n\n  return { observerRef, isIntersecting }\n}\n\nexport default useIntersectionObserver\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n    // background-image :url('./images/////')\n \n  }\n`\n\nexport default FlexLayout\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { SUGGESTED_BASES } from '../../config/constants'\nimport { AutoColumn } from '../Layout/Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontSize=\"14px\">{t('Common bases')}</Text>\n        <QuestionHelper text={t('These tokens are commonly paired with other tokens.')} ml=\"4px\" />\n      </AutoRow>\n      <AutoRow gap=\"auto\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER)\n            }\n          }}\n          disable={selectedCurrency === ETHER}\n        >\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\n          <Text>BNB</Text>\n        </BaseWrapper>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n              <Text>{token.symbol}</Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // globals\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          )}\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local list\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n  overflow-y: auto;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showCommonBases={showCommonBases}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n        {modalView === CurrencyModalView.search && (\n          <Footer>\n            <Button\n              scale=\"sm\"\n              variant=\"text\"\n              onClick={() => setModalView(CurrencyModalView.manage)}\n              className=\"list-token-manage-button\"\n            >\n              {t('Manage Tokens')}\n            </Button>\n          </Footer>\n        )}\n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React from 'react'\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from '@pancakeswap/uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <InputWrapper>\n      <StyledInput value={searchText} onChange={onChange} placeholder={t(placeholder)} />\n    </InputWrapper>\n  )\n}\n\nexport default SearchInput\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useBlock } from 'state/block/hooks'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param currentBlock the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  currentBlock: number | undefined,\n): string[] {\n  if (!chainId || !currentBlock) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = currentBlock - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const { currentBlock } = useBlock()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, currentBlock)\n  }, [chainId, state.callResults, listeningKeys, currentBlock])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!currentBlock || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== currentBlock) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: currentBlock,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: currentBlock,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, currentBlock), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: currentBlock }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', currentBlock)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: currentBlock,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, currentBlock])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport useToast from 'hooks/useToast'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  currentBlock: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = currentBlock - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const { currentBlock } = useBlock()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !currentBlock) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(currentBlock, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                t('Transaction receipt'),\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      {t('View on BscScan')}\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: currentBlock }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, currentBlock, dispatch, toastSuccess, toastError, t])\n\n  return null\n}\n","import React, { useState } from 'react'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  CloseIcon,\n  Heading,\n  IconButton,\n  InjectedModalProps,\n  ModalBody,\n  ModalContainer,\n  ModalHeader as UIKitModalHeader,\n  ModalTitle,\n} from '@pancakeswap/uikit'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport WalletInfo from './WalletInfo'\nimport WalletTransactions from './WalletTransactions'\n\nexport enum WalletView {\n  WALLET_INFO,\n  TRANSACTIONS,\n}\n\ninterface WalletModalProps extends InjectedModalProps {\n  initialView?: WalletView\n}\n\nexport const LOW_BNB_BALANCE = parseUnits('2', 'gwei')\n\nconst ModalHeader = styled(UIKitModalHeader)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst Tabs = styled.div`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 16px 24px;\n`\n\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\n  const [view, setView] = useState(initialView)\n  const { t } = useTranslation()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  const handleClick = (newIndex: number) => {\n    setView(newIndex)\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Your Wallet')}</Heading>\n        </ModalTitle>\n        <IconButton variant=\"text\" onClick={onDismiss}>\n          <CloseIcon width=\"24px\" color=\"text\" />\n        </IconButton>\n      </ModalHeader>\n      <Tabs>\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\n        </ButtonMenu>\n      </Tabs>\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default WalletModal\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { useEffect } from 'react'\n\nconst useUserAgent = () => {\n  useEffect(() => {\n    document.documentElement.setAttribute('data-useragent', navigator.userAgent)\n  }, [])\n}\n\nexport default useUserAgent\n","import { useEffect } from 'react'\nimport history from 'routerHistory'\n\nconst useScrollOnRouteChange = () => {\n  useEffect(() => {\n    const unlisten = history.listen((args) => {\n      if (args.hash === '') {\n        setTimeout(() => {\n          window.scroll({\n            top: 0,\n            left: 0,\n            behavior: 'smooth',\n          })\n        }, 50)\n      }\n    })\n\n    return () => unlisten()\n  }, [])\n}\n\nexport default useScrollOnRouteChange\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n// import MADmain from './MAD_main.svg'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme { }\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  page {\n    margin-top: 200px;\n    \n\n    // background-image :url('./images/MAD_main.svg')\n\n\n  }\n  \nbody {\n    margin-top: 1px;\n    background-position: center center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-attachment: fixed;\n    background-image :url('./images/bg1.png') \n \n  \n  }\n  .Iframe {\n    \n    border: 4px solid #ff1100;\n    max-width: 551px;\n    width: 100%;\n    border-radius: 12px;\n    background: transparent;\n  }\n.Banner {\n height: 120px;\n width: 100%;\n \n\n background-image :url('./bannerbg.png') \n\n\n}\n.center {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n}\n\n    img {\n      height: 100%;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuItemsType, DropdownMenuItemType } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\n\nexport type ConfigMenuItemsType = MenuItemsType & { hideSubNav?: boolean }\n\nconst config: (t: ContextApi['t']) => ConfigMenuItemsType[] = (t) => [\n  {\n    label: t(''),\n    icon: '',\n    href: '/swap',\n    showItemsOnMobile: false,\n    items: [\n      {\n        label: t('Exchange'),\n        href: '/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: '/liquidity',\n      },\n    ],\n  },\n  // {\n  //   label: t('Earn'),\n  //   href: '/farms',\n  //   icon: 'Earn',\n  //   items: [\n  //     {\n  //       label: t('Farms'),\n  //       href: '/farms',\n  //     },\n  //     {\n  //       label: t('Pools'),\n  //       href: '/pools',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: t('Win'),\n  //   href: '/prediction',\n  //   icon: 'Trophy',\n  //   items: [\n  //     {\n  //       label: t('Prediction (BETA)'),\n  //       href: '/prediction',\n  //     },\n  //     {\n  //       label: t('Lottery'),\n  //       href: '/lottery',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: t('NFT'),\n  //   href: `${nftsBaseUrl}`,\n  //   icon: 'Nft',\n  //   items: [\n  //     {\n  //       label: t('Overview'),\n  //       href: `${nftsBaseUrl}`,\n  //       status: {\n  //         text: t('Live'),\n  //         color: 'failure',\n  //       },\n  //     },\n  //     {\n  //       label: t('Collections'),\n  //       href: `${nftsBaseUrl}/collections`,\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: '',\n  //   href: '/info',\n  //   icon: 'More',\n  //   hideSubNav: true,\n  //   items: [\n  //     {\n  //       label: t('Info'),\n  //       href: '/info',\n  //     },\n  //     {\n  //       label: t('IFO'),\n  //       href: '/ifo',\n  //     },\n  //     {\n  //       label: t('Voting'),\n  //       href: '/voting',\n  //     },\n  //     {\n  //       type: DropdownMenuItemType.DIVIDER,\n  //     },\n  //     {\n  //       label: t('Leaderboard'),\n  //       href: '/teams',\n  //     },\n  //     {\n  //       type: DropdownMenuItemType.DIVIDER,\n  //     },\n  //     {\n  //       label: t('Blog'),\n  //       href: 'https://pancakeswap.medium.com',\n  //       type: DropdownMenuItemType.EXTERNAL_LINK,\n  //     },\n  //     {\n  //       label: t('Docs'),\n  //       href: 'https://docs.pancakeswap.finance',\n  //       type: DropdownMenuItemType.EXTERNAL_LINK,\n  //     },\n  //   ],\n  // },\n]\n\nexport default config\n","import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyAddressProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    background: linear-gradient(\n      to right,\n      ${({ theme }) => theme.colors.background}00,\n      ${({ theme }) => theme.colors.background}E6\n    );\n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <IconButton variant=\"text\" onClick={copyAddress}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n","import React from 'react'\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance, { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport { getFullDisplayBalance, formatBigNumber } from 'utils/formatBalance'\nimport tokens from 'config/constants/tokens'\nimport CopyAddress from './CopyAddress'\n\ninterface WalletInfoProps {\n  hasLowBnbBalance: boolean\n  onDismiss: InjectedModalProps['onDismiss']\n}\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { balance: cakeBalance, fetchStatus: cakeFetchStatus } = useTokenBalance(tokens.mad.address)\n  const { logout } = useAuth()\n\n  const handleLogout = () => {\n    onDismiss()\n    logout()\n  }\n\n  return (\n    <>\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\n        {t('Your Address')}\n      </Text>\n      <CopyAddress account={account} mb=\"24px\" />\n      {hasLowBnbBalance && (\n        <Message variant=\"warning\" mb=\"24px\">\n          <Box>\n            <Text fontWeight=\"bold\">{t('BNB Balance Low')}</Text>\n            <Text as=\"p\">{t('You need BNB for transaction fees.')}</Text>\n          </Box>\n        </Message>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('BNB Balance')}</Text>\n        {fetchStatus !== FetchStatus.SUCCESS ? (\n          <Skeleton height=\"22px\" width=\"60px\" />\n        ) : (\n          <Text>{formatBigNumber(balance, 6)}</Text>\n        )}\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"textSubtle\">{t('MAD Balance')}</Text>\n        {cakeFetchStatus !== FetchStatus.SUCCESS ? (\n          <Skeleton height=\"22px\" width=\"60px\" />\n        ) : (\n          <Text>{getFullDisplayBalance(cakeBalance, 9, 3)}</Text>\n        )}\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"end\" mb=\"24px\">\n        <LinkExternal href={getBscScanLink(account, 'address')}>{t('View on BscScan')}</LinkExternal>\n      </Flex>\n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\n        {t('Disconnect Wallet')}\n      </Button>\n    </>\n  )\n}\n\nexport default WalletInfo\n","import React from 'react'\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\n\ninterface TransactionRowProps {\n  txn: TransactionDetails\n}\n\nconst TxnIcon = styled(Flex)`\n  align-items: center;\n  flex: none;\n  width: 24px;\n`\n\nconst Summary = styled.div`\n  flex: 1;\n  padding: 0 8px;\n`\n\nconst TxnLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst renderIcon = (txn: TransactionDetails) => {\n  if (!txn.receipt) {\n    return <RefreshIcon spin width=\"24px\" />\n  }\n\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\n  ) : (\n    <BlockIcon color=\"failure\" width=\"24px\" />\n  )\n}\n\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!txn) {\n    return null\n  }\n\n  return (\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\n      <Summary>{txn.summary ?? txn.hash}</Summary>\n      <TxnIcon>\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\n      </TxnIcon>\n    </TxnLink>\n  )\n}\n\nexport default TransactionRow\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Box, Button, Flex, Text } from '@pancakeswap/uikit'\nimport { AppDispatch } from 'state'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { orderBy } from 'lodash'\nimport TransactionRow from './TransactionRow'\n\nconst WalletTransactions: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const allTransactions = useAllTransactions()\n  const sortedTransactions = orderBy(Object.values(allTransactions).filter(isTransactionRecent), 'addedTime', 'desc')\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }\n\n  return (\n    <Box minHeight=\"120px\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\n          {t('Recent Transactions')}\n        </Text>\n        {sortedTransactions.length > 0 && (\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Flex>\n      {sortedTransactions.length > 0 ? (\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\n      ) : (\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\n      )}\n    </Box>\n  )\n}\n\nexport default WalletTransactions\n","import React from 'react'\nimport { Flex, UserMenuItem, WarningIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface WalletUserMenuItemProps {\n  hasLowBnbBalance: boolean\n  onPresentWalletModal: () => void\n}\n\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\n  const { t } = useTranslation()\n\n  return (\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n        {t('Wallet')}\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\n      </Flex>\n    </UserMenuItem>\n  )\n}\n\nexport default WalletUserMenuItem\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Flex,\n  LogoutIcon,\n  useModal,\n  UserMenu as UIKitUserMenu,\n  UserMenuDivider,\n  UserMenuItem,\n} from '@pancakeswap/uikit'\nimport history from 'routerHistory'\nimport useAuth from 'hooks/useAuth'\nimport { useProfile } from 'state/profile/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\nimport WalletUserMenuItem from './WalletUserMenuItem'\n\nconst UserMenu = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { isInitialized, isLoading, profile } = useProfile()\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n  const hasProfile = isInitialized && !!profile\n  const avatarSrc = profile?.nft?.image?.thumbnail\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  if (!account) {\n    return <ConnectWalletButton scale=\"sm\" />\n  }\n\n  return (\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\n        {t('Transactions')}\n      </UserMenuItem>\n      <UserMenuDivider />\n    \n      <UserMenuDivider />\n      <UserMenuItem as=\"button\" onClick={logout}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Disconnect')}\n          <LogoutIcon />\n        </Flex>\n      </UserMenuItem>\n    </UIKitUserMenu>\n  )\n}\n\nexport default UserMenu\n","import { ConfigMenuItemsType } from './config/config'\n\nexport const getActiveMenuItem = ({ pathname, menuConfig }: { pathname: string; menuConfig: ConfigMenuItemsType[] }) =>\n  menuConfig.find((menuItem) => pathname.startsWith(menuItem.href) || getActiveSubMenuItem({ menuItem, pathname }))\n\nexport const getActiveSubMenuItem = ({ pathname, menuItem }: { pathname: string; menuItem?: ConfigMenuItemsType }) => {\n  const activeSubMenuItems = menuItem?.items.filter((subMenuItem) => pathname.startsWith(subMenuItem.href)) ?? []\n\n  // Pathname doesn't include any submenu item href - return undefined\n  if (!activeSubMenuItems || activeSubMenuItems.length === 0) {\n    return undefined\n  }\n\n  // Pathname includes one sub menu item href - return it\n  if (activeSubMenuItems.length === 1) {\n    return activeSubMenuItems[0]\n  }\n\n  // Pathname includes multiple sub menu item hrefs - find the most specific match\n  const mostSpecificMatch = activeSubMenuItems.sort(\n    (subMenuItem1, subMenuItem2) => subMenuItem2.href.length - subMenuItem1.href.length,\n  )[0]\n\n  return mostSpecificMatch\n}\n","import React from 'react'\nimport { useLocation } from 'react-router'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport config from './config/config'\nimport UserMenu from './UserMenu'\nimport GlobalSettings from './GlobalSettings'\nimport { getActiveMenuItem, getActiveSubMenuItem } from './utils'\nimport { footerLinks } from './config/footerConfig'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n  const { pathname } = useLocation()\n\n  const activeMenuItem = getActiveMenuItem({ menuConfig: config(t), pathname })\n  const activeSubMenuItem = getActiveSubMenuItem({ menuItem: activeMenuItem, pathname })\n\n  return (\n    <UikitMenu\n      userMenu={<UserMenu />}\n      globalMenu={<GlobalSettings />}\n      // isDark={isDark}\n      // toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd=\"MAD\"\n      links={config(t)}\n      subLinks={activeMenuItem?.hideSubNav ? [] : activeMenuItem?.items}\n      // footerLinks={footerLinks(t)}\n      activeItem={activeMenuItem?.href}\n      activeSubItem={activeSubMenuItem?.href}\n      // buyCakeLabel={t('Buy CAKE')}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React, { useEffect, useState } from 'react'\nimport { AutoRenewIcon, Box, Button, Flex, InjectedModalProps, Modal, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport confetti from 'canvas-confetti'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAnniversaryAchievementContract } from 'hooks/useContract'\nimport { delay } from 'lodash'\n\nconst AnniversaryImage = styled.img`\n  border-radius: 50%;\n  height: 128px;\n  margin-bottom: 24px;\n  margin-right: 8px;\n  width: 128px;\n`\n\nconst showConfetti = () => {\n  confetti({\n    particleCount: 200,\n    startVelocity: 30,\n    gravity: 0.5,\n    spread: 350,\n    origin: {\n      x: 0.5,\n      y: 0.3,\n    },\n  })\n}\n\nconst AnniversaryAchievementModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { t } = useTranslation()\n  const [isLoading, setIsLoading] = useState(false)\n  const { claimAnniversaryPoints } = useAnniversaryAchievementContract()\n\n  const handleClick = async () => {\n    setIsLoading(true)\n    try {\n      await claimAnniversaryPoints()\n    } finally {\n      onDismiss()\n    }\n  }\n\n  useEffect(() => {\n    delay(showConfetti, 100)\n  }, [])\n\n  return (\n    <Modal title={t('Congratulations!')} onDismiss={onDismiss}>\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n        <Box>\n          <AnniversaryImage src=\"/images/achievements/1-year.svg\" />\n        </Box>\n        <Text textAlign=\"center\" bold color=\"secondary\" maxWidth=\"400px\" fontSize=\"16px\" mb=\"24px\">\n          {t('You won points for joining PancakeSwap during the first year of our journey!')}\n        </Text>\n        <Button\n          disabled={isLoading}\n          onClick={handleClick}\n          endIcon={isLoading ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n        >\n          {isLoading ? t('Claiming...') : t('Claim now')}\n        </Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default AnniversaryAchievementModal\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useModal } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { getAnniversaryAchievementContract } from 'utils/contractHelpers'\nimport AnniversaryAchievementModal from './AnniversaryAchievementModal'\n\ninterface GlobalCheckClaimStatusProps {\n  excludeLocations: string[]\n}\n\n/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */\nconst GlobalCheckClaimStatus: React.FC<GlobalCheckClaimStatusProps> = ({ excludeLocations }) => {\n  const hasDisplayedModal = useRef(false)\n  const [canClaimAnniversaryPoints, setCanClaimAnniversaryPoints] = useState(false)\n  const { account } = useWeb3React()\n  const { pathname } = useLocation()\n  const [onPresentAnniversaryModal] = useModal(<AnniversaryAchievementModal />)\n\n  // Check claim status\n  useEffect(() => {\n    const fetchClaimAnniversaryStatus = async () => {\n      const { canClaim } = getAnniversaryAchievementContract()\n      const canClaimAnniversary = await canClaim(account)\n      setCanClaimAnniversaryPoints(canClaimAnniversary)\n    }\n\n    if (account) {\n      fetchClaimAnniversaryStatus()\n    }\n  }, [account])\n\n  // Check if we need to display the modal\n  useEffect(() => {\n    const matchesSomeLocations = excludeLocations.some((location) => pathname.includes(location))\n\n    if (canClaimAnniversaryPoints && !matchesSomeLocations && !hasDisplayedModal.current) {\n      onPresentAnniversaryModal()\n      hasDisplayedModal.current = true\n    }\n  }, [pathname, excludeLocations, hasDisplayedModal, onPresentAnniversaryModal, canClaimAnniversaryPoints])\n\n  // Reset the check flag when account changes\n  useEffect(() => {\n    hasDisplayedModal.current = false\n  }, [account, hasDisplayedModal])\n\n  return null\n}\n\nexport default GlobalCheckClaimStatus\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, DeserializedPool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useFetchUserPools = (account) => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n}\n\nexport const usePools = (): { pools: DeserializedPool[]; userDataLoaded: boolean } => {\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { DeserializedPool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprRowProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, stakedBalance, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, stakingTokenPrice, userData, isAutoVault } =\n    pool\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      stakingTokenSymbol={stakingToken.symbol}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <ApyLabelContainer alignItems=\"center\" onClick={onPresentApyModal}>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            onClick={onPresentApyModal}\n          />\n          <IconButton variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </ApyLabelContainer>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: DeserializedPool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address || ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  {t('Blocks')}\n                </Text>\n                <TimerIcon ml=\"4px\" color=\"primary\" />\n              </Link>\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            {performanceFee ? (\n              <Text ml=\"4px\" small>\n                {performanceFee / 100}%\n              </Text>\n            ) : (\n              <Skeleton width=\"90px\" height=\"21px\" />\n            )}\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`/info/token/${earningToken.address}`} bold={false} small>\n          {t('See Token Info')}\n        </LinkExternal>\n      </Flex>\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: DeserializedPool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { TokenPairImage, ImageProps } from '@pancakeswap/uikit'\nimport { mainnetTokens } from 'config/constants/tokens'\n\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\n  const primaryTokenSrc = `/images/tokens/${mainnetTokens.cake.address}.svg`\n\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\n}\n\nexport default CakeVaultTokenPairImage\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\nimport { Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const isCakePool = earningToken.symbol === 'CAKE' && stakingToken.symbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        {isAutoVault ? (\n          <CakeVaultTokenPairImage width={64} height={64} />\n        ) : (\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n        )}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { ToastDescriptionWithTx } from 'components/Toast'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await callWithGasPrice(lpContract, 'approve', [sousChefContract.address, ethers.constants.MaxUint256])\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol })}\n          </ToastDescriptionWithTx>,\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [\n    account,\n    dispatch,\n    lpContract,\n    sousChefContract,\n    sousId,\n    earningTokenSymbol,\n    t,\n    toastError,\n    toastSuccess,\n    callWithGasPrice,\n  ])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await callWithGasPrice(cakeContract, 'approve', [cakeVaultContract.address, ethers.constants.MaxUint256])\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(\n        t('Contract Enabled'),\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' })}\n        </ToastDescriptionWithTx>,\n      )\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const currentAllowance = await cakeContract.allowance(account, cakeVaultContract.address)\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { DeserializedPool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: DeserializedPool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address || '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst sousUnstake = async (sousChefContract: any, amount: string, decimals: number) => {\n  const gasPrice = getGasPrice()\n  const units = parseUnits(amount, decimals)\n\n  const tx = await sousChefContract.withdraw(units.toString(), {\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract: any) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.emergencyWithdraw({ gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId: number, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  Link,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, earningTokenPrice, apr, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n  const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n  const userNotEnoughToken = isRemovingStake\n    ? userData.stakedBalance.lt(fullDecimalStakeAmount)\n    : userData.stakingTokenBalance.lt(fullDecimalStakeAmount)\n\n  const usdValueStaked = new BigNumber(stakeAmount).times(stakingTokenPrice)\n  const formattedUsdValueStaked = !usdValueStaked.isNaN() && formatNumber(usdValueStaked.toNumber())\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [\n    stakeAmount,\n    stakingLimit,\n    userData,\n    stakingToken,\n    isRemovingStake,\n    setHasReachedStakedLimit,\n    fullDecimalStakeAmount,\n  ])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      if (isRemovingStake) {\n        // unstaking\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n      } else {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n      }\n      setPendingTx(false)\n      onDismiss()\n    } catch (e) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={userData.stakedBalance.plus(stakingTokenBalance)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      minWidth=\"346px\"\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.address}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${formattedUsdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit || userNotEnoughToken}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      {userNotEnoughToken && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Insufficient %symbol% balance', {\n            symbol: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit || userNotEnoughToken}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={getTokenLink}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport getGasPrice from 'utils/getGasPrice'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit('0', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from '@pancakeswap/sdk'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from '@pancakeswap/sdk'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { DeserializedPool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { DeserializedPool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: DeserializedPool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        isStaking={accountHasStakedBalance}\n        earningToken={earningToken}\n        stakingToken={stakingToken}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} stakedBalance={stakedBalance} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { DeserializedPool } from 'state/types'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { convertCakeToShares, convertSharesToCake } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: DeserializedPool\n  stakingMax: BigNumber\n  performanceFee?: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({\n  pool,\n  stakingMax,\n  performanceFee,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken, earningToken, apr, stakingTokenPrice, earningTokenPrice } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked = new BigNumber(stakeAmount).times(cakePriceBusd)\n  const formattedUsdValueStaked = cakePriceBusd.gt(0) && stakeAmount ? formatNumber(usdValueStaked.toNumber()) : ''\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n    performanceFee,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await callWithGasPrice(cakeVaultContract, 'withdrawAll', undefined, callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(\n            t('Unstaked!'),\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your earnings have also been harvested to your wallet')}\n            </ToastDescriptionWithTx>,\n          )\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await callWithGasPrice(\n          cakeVaultContract,\n          'withdraw',\n          [shareStakeToWithdraw.sharesAsBigNumber.toString()],\n          callOptions,\n        )\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(\n            t('Unstaked!'),\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your earnings have also been harvested to your wallet')}\n            </ToastDescriptionWithTx>,\n          )\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await callWithGasPrice(cakeVaultContract, 'deposit', [convertedStakeAmount.toString()], callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(\n          t('Staked!'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('Your funds have been staked in the pool')}\n          </ToastDescriptionWithTx>,\n        )\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={cakeAsBigNumber.plus(stakingMax)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n        performanceFee={performanceFee}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.address}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${formattedUsdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={getTokenLink} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  performanceFee: number\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance, performanceFee }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} performanceFee={performanceFee} pool={pool} />,\n  )\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  performanceFee: number\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  performanceFee,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} performanceFee={performanceFee} />,\n  )\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} performanceFee={performanceFee} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: DeserializedPool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n  performanceFee: number\n}> = ({ pool, accountHasSharesStaked, isLoading, performanceFee }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n            performanceFee={performanceFee}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport tokens from 'config/constants/tokens'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: DeserializedPool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        isStaking={accountHasSharesStaked}\n        isAutoVault\n        earningToken={tokens.cake}\n        stakingToken={tokens.cake}\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} stakedBalance={cakeAsBigNumber} performanceFee={performanceFeeAsDecimal} />\n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions\n              pool={pool}\n              accountHasSharesStaked={accountHasSharesStaked}\n              isLoading={isLoading}\n              performanceFee={performanceFeeAsDecimal}\n            />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\nimport { ViewMode } from 'state/user/actions'\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ViewMode } from 'state/user/actions'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem id=\"finished-pools-button\" as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport Balance from 'components/Balance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await callWithGasPrice(cakeVaultContract, 'harvest', undefined, { gasLimit: 300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(\n          t('Bounty collected!'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('CAKE bounty has been sent to your wallet.')}\n          </ToastDescriptionWithTx>,\n        )\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" CAKE\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" CAKE\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <ConnectWalletButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto CAKE Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto CAKE pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto CAKE Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst Container = styled.div`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <Container>\n      <StyledLink external href=\"https://docs.pancakeswap.finance/syrup-pools/syrup-pool\">\n        <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n          <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n            {t('Help')}\n          </ButtonText>\n          <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n        </Button>\n      </StyledLink>\n    </Container>\n  )\n}\n\nexport default HelpButton\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isMobile)\n\n  if (isAutoVault) {\n    title = t('Auto CAKE')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual CAKE')\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      {isAutoVault ? (\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\n      ) : (\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\n      )}\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isMobile} small={isMobile}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: DeserializedPool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const labelText = t('%asset% Earned', { asset: earningToken.symbol })\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport Balance from 'components/Balance'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst AprLabelContainer = styled(Flex)`\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprProps extends FlexProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, stakedBalance, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, stakingTokenPrice, userData, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      apr={apr}\n      stakingTokenSymbol={stakingToken.symbol}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <AprLabelContainer alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            onClick={openRoiModal}\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n          {!isFinished && showIcon && (\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n            </Button>\n          )}\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </AprLabelContainer>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { userData } = pool\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APR')}\n        </Text>\n        <Apr pool={pool} stakedBalance={stakedBalance} showIcon={!isMobile} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { DeserializedPool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { DeserializedPool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div<{ isAutoVault?: boolean }>`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: ${({ isAutoVault }) => (isAutoVault ? '130px' : 'auto')};\n  }\n}\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { DeserializedPool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface HarvestActionProps extends DeserializedPool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const actionTitle = (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n          {isCompoundPool ? t('Collect') : t('Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: DeserializedPool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address || '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer isAutoVault={isAutoVault}>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport { Text, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface AutoHarvestActionProps extends DeserializedPool {\n  userDataLoaded: boolean\n}\n\nconst AutoHarvestAction: React.FunctionComponent<AutoHarvestActionProps> = ({ userDataLoaded, earningTokenPrice }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const earningTokenBalance = autoCakeToDisplay\n  const earningTokenDollarBalance = autoUsdToDisplay\n  const hasEarnings = hasAutoEarnings\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent CAKE profit')}\n    </Text>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer isAutoVault>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n          <UnstakingFeeCountdownRow isTableVariant />\n          <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n            {tooltipVisible && tooltip}\n            <TooltipText ref={targetRef} small>\n              {t('Performance Fee')}\n            </TooltipText>\n            <Flex alignItems=\"center\">\n              <Text ml=\"4px\" small>\n                {performanceFee / 100}%\n              </Text>\n            </Flex>\n          </Flex>\n        </Flex>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default AutoHarvestAction\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { convertSharesToCake, getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\nimport AutoHarvest from './AutoHarvest'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n  isXxl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: DeserializedPool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    userData,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address || ''\n\n  const {\n    totalCakeInVault,\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const poolStakingTokenBalance = isAutoVault\n    ? cakeAsBigNumber.plus(stakingTokenBalance)\n    : stakedBalance.plus(stakingTokenBalance)\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr\n        pool={pool}\n        showIcon\n        stakedBalance={poolStakingTokenBalance}\n        performanceFee={isAutoVault ? performanceFeeAsDecimal : 0}\n      />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`/info/token/${earningToken.address}`} bold={false}>\n            {t('See Token Info')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\n          </Text>\n        )}\n        {pool.isAutoVault ? (\n          <AutoHarvest {...pool} userDataLoaded={userDataLoaded} />\n        ) : (\n          <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        )}\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface AutoEarningsCellProps {\n  pool: DeserializedPool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst AutoEarningsCell: React.FC<AutoEarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { earningTokenPrice } = pool\n\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const labelText = t('Recent CAKE profit')\n  const earningTokenBalance = autoCakeToDisplay\n  const hasEarnings = hasAutoEarnings\n  const earningTokenDollarBalance = autoUsdToDisplay\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\">\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {hasEarnings && !isMobile && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoEarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\nimport { convertSharesToCake } from '../../../helpers'\n\ninterface AprCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AutoAprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n\n  const {\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APY')}\n        </Text>\n        <Apr\n          pool={pool}\n          stakedBalance={cakeAsBigNumber}\n          performanceFee={performanceFeeAsDecimal}\n          showIcon={!isMobile}\n        />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoAprCell\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\nimport AutoEarningsCell from './Cells/AutoEarningsCell'\nimport AutoAprCell from './Cells/AutoAprCell'\n\ninterface PoolRowProps {\n  pool: DeserializedPool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl, isXxl, isTablet, isDesktop } = useMatchBreakpoints()\n  const isLargerScreen = isLg || isXl || isXxl\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        {pool.isAutoVault ? (\n          <AutoEarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        ) : (\n          <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        )}\n        {pool.isAutoVault ? <AutoAprCell pool={pool} /> : <AprCell pool={pool} />}\n        {isLargerScreen && <TotalStakedCell pool={pool} />}\n        {isDesktop && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isTablet || isDesktop} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl, isXxl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: DeserializedPool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  scroll-margin-top: 64px;\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable id=\"pools-table\" role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport {\n  useFetchPublicPoolsData,\n  usePools,\n  useFetchUserPools,\n  useFetchCakeVault,\n  useCakeVault,\n} from 'state/pools/hooks'\nimport { usePollFarmsPublicData } from 'state/farms/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { DeserializedPool } from 'state/types'\nimport { useUserPoolStakedOnly, useUserPoolsViewMode } from 'state/user/hooks'\nimport { ViewMode } from 'state/user/actions'\nimport Loading from 'components/Loading'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools()\n  const [stakedOnly, setStakedOnly] = useUserPoolStakedOnly()\n  const [viewMode, setViewMode] = useUserPoolsViewMode()\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsPublicData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n  useFetchUserPools(account)\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n        if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n          return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n        }\n        return poolsCurrentlyVisible\n      })\n    }\n  }, [isIntersecting])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: DeserializedPool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: DeserializedPool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: DeserializedPool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: DeserializedPool) => {\n            let totalStaked = Number.NaN\n            if (pool.isAutoVault) {\n              if (totalCakeInVault.isFinite()) {\n                totalStaked = +formatUnits(\n                  ethers.BigNumber.from(totalCakeInVault.toString()),\n                  pool.stakingToken.decimals,\n                )\n              }\n            } else if (pool.sousId === 0) {\n              if (pool.totalStaked?.isFinite() && totalCakeInVault.isFinite()) {\n                const manualCakeTotalMinusAutoVault = ethers.BigNumber.from(pool.totalStaked.toString()).sub(\n                  totalCakeInVault.toString(),\n                )\n                totalStaked = +formatUnits(manualCakeTotalMinusAutoVault, pool.stakingToken.decimals)\n              }\n            } else if (pool.totalStaked?.isFinite()) {\n              totalStaked = +formatUnits(ethers.BigNumber.from(pool.totalStaked.toString()), pool.stakingToken.decimals)\n            }\n            return Number.isFinite(totalStaked) ? totalStaked : 0\n          },\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Syrup Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onOptionChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={observerRef} />\n        <Image\n          mx=\"auto\"\n          mt=\"12px\"\n          src=\"/images/decorations/3d-syrup-bunnies.png\"\n          alt=\"Pancake illustration\"\n          width={192}\n          height={184.5}\n        />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import { Token } from '@pancakeswap/sdk'\nimport tokens from 'config/constants/tokens'\n\nconst { bondly, safemoon } = tokens\n\ninterface WarningTokenList {\n  [key: string]: Token\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  safemoon,\n  bondly,\n}\n\nexport default SwapWarningTokens\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n  \n\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 11px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: 2px solid #ff1100;\n\n  border-radius: 20%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const { t } = useTranslation()\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">{t('Price')}</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? t('Minimum received') : t('Maximum sold')}\n            </Text>\n            <QuestionHelper\n              text={t(\n                'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\n              )}\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">{t('Price Impact')}</Text>\n            <QuestionHelper\n              text={t('The difference between the market price and your price due to trade size.')}\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">{t('Liquidity Provider Fee')}</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">{t('For each trade a %amount% fee is paid', { amount: '0.25%' })}</Text>\n                  <Text>- {t('%amount% to LP token holders', { amount: '0.17%' })}</Text>\n                  <Text>- {t('%amount% to the Treasury', { amount: '0.03%' })}</Text>\n                  <Text>- {t('%amount% towards CAKE buyback and burn', { amount: '0.05%' })}</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? t('Swap Anyway') : t('Confirm Swap')}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport truncateHash from 'utils/truncateHash'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const { t } = useTranslation()\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  const amount =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)\n      : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)\n  const symbol =\n    trade.tradeType === TradeType.EXACT_INPUT ? trade.outputAmount.currency.symbol : trade.inputAmount.currency.symbol\n\n  const tradeInfoText =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? t('Output is estimated. You will receive at least %amount% %symbol% or the transaction will revert.', {\n          amount,\n          symbol,\n        })\n      : t('Input is estimated. You will sell at most %amount% %symbol% or the transaction will revert.', {\n          amount,\n          symbol,\n        })\n\n  const [estimatedText, transactionRevertText] = tradeInfoText.split(`${amount} ${symbol}`)\n\n  const truncatedRecipient = recipient ? truncateHash(recipient) : ''\n\n  const recipientInfoText = t('Output will be sent to %recipient%', {\n    recipient: truncatedRecipient,\n  })\n\n  const [recipientSentToText, postSentToText] = recipientInfoText.split(truncatedRecipient)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> {t('Price Updated')}</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>{t('Accept')}</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n          {estimatedText}\n          <b>\n            {amount} {symbol}\n          </b>\n          {transactionRevertText}\n        </Text>\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            {recipientSentToText}\n            <b title={recipient}>{truncatedRecipient}</b>\n            {postSentToText}\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { t } = useTranslation()\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? t('Minimum received') : t('Maximum sold')}\n          </Text>\n          <QuestionHelper\n            text={t(\n              'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\n            )}\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {t('Price Impact')}\n          </Text>\n          <QuestionHelper\n            text={t('The difference between the market price and estimated price due to trade size.')}\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {t('Liquidity Provider Fee')}\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">{t('For each trade a %amount% fee is paid', { amount: '0.25%' })}</Text>\n                <Text>- {t('%amount% to LP token holders', { amount: '0.17%' })}</Text>\n                <Text>- {t('%amount% to the Treasury', { amount: '0.03%' })}</Text>\n                <Text>- {t('%amount% towards CAKE buyback and burn', { amount: '0.05%' })}</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const { t } = useTranslation()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    {t('Route')}\n                  </Text>\n                  <QuestionHelper\n                    text={t('Routing through these tokens resulted in the best price for your trade.')}\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  const { t } = useTranslation()\n  return (\n    <Modal\n      title={t('Import Token')}\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useGasPrice } from 'state/user/hooks'\nimport truncateHash from 'utils/truncateHash'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n  const gasPrice = useGasPrice()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          gasPrice,\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? truncateHash(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction, gasPrice])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'deposit', undefined, {\n                    value: `0x${inputAmount.raw.toString(16)}`,\n                  })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'withdraw', [\n                    `0x${inputAmount.raw.toString(16)}`,\n                  ])\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction, callWithGasPrice])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [SwapWarningTokensConfig.safemoon.address]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [SwapWarningTokensConfig.bondly.address]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.gradients.cardHeader}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal } from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nexport default function Swap({ history }: RouteComponentProps) {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee, t)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm, t])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      return swapCurrency.address === warningTokenData.address\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Swap to / from MAD')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact Too High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n       <div className= \"Iframe\">\n <iframe\n            src=\"https://widget.onramper.com?defaultCrypto=BNB&color=FF1100&apiKey=pk_prod_EMEhKOXNuUfrHnqu9Xg2w3hUVBPuurn8sHoPYvbbf4s0\"\n            height=\"595px\"\n            width=\"540px\"\n            title=\"Onramper widget\"\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; camera; gyroscope; payment\"\n          >\n            <a href=\"https://widget.onramper.com\" target=\"_blank\" rel=\"noreferrer\">\n              Buy crypto\n            </a>\n          </iframe>\n    </div>\n    \n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap/sdk'\nimport { ContextApi } from 'contexts/Localization/types'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n * @param t Translation\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent, t: ContextApi['t']): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    const confirmWord = 'confirm'\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        t(\n          'This swap has a price impact of at least %amount%%. Please type the word \"%word%\" to continue with this swap.',\n          {\n            amount: PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(0),\n            word: confirmWord,\n          },\n        ),\n      ) === confirmWord\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      t(\n        'This swap has a price impact of at least %amount%%. Please confirm that you would like to continue with this swap.',\n        {\n          amount: ALLOWED_PRICE_IMPACT_HIGH.toFixed(0),\n        },\n      ),\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\n  const {\n    match: {\n      params: { currencyIdA },\n    },\n  } = props\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity {...props} />\n}\n\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const {\n    match: {\n      params: { currencyIdA, currencyIdB },\n    },\n  } = props\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity {...props} />\n}\n","import React from 'react'\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure({\n  match: {\n    params: { tokens },\n  },\n}: RouteComponentProps<{ tokens: string }>) {\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\n  const {\n    location,\n    location: { search },\n    match: {\n      params: { outputCurrency },\n    },\n  } = props\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport useUserAgent from 'hooks/useUserAgent'\nimport useScrollOnRouteChange from 'hooks/useScrollOnRouteChange'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport GlobalCheckClaimStatus from './components/GlobalCheckClaimStatus'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\nconst PredictionsLeaderboard = lazy(() => import('./views/Predictions/Leaderboard'))\nconst Voting = lazy(() => import('./views/Voting'))\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\nconst Info = lazy(() => import('./views/Info'))\nconst NftMarket = lazy(() => import('./views/Nft/market'))\nconst ProfileCreation = lazy(() => import('./views/ProfileCreation'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account } = useWeb3React()\n\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n  useScrollOnRouteChange()\n  useUserAgent()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <div className=\"Banner\">\n     <img src=\"./logo.svg\" alt=\"MAD\" className=\"center\" />\n\n     </div>\n\n      <GlobalStyle />\n    \n\n      <GlobalCheckClaimStatus excludeLocations={[]} />\n      <Menu>  \n   \n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/create-profile\">\n              <ProfileCreation />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route exact path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route path=\"/prediction/leaderboard\">\n              <PredictionsLeaderboard />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route>\n\n            {/* NFT */}\n            <Route path=\"/nfts\">\n              <NftMarket />\n            </Route>\n\n            {/* Info pages */}\n            <Route path=\"/info\">\n              <Info />\n            </Route>\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\" component={Swap} />\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n            <Route exact strict path=\"/find\" component={PoolFinder} />\n            <Route exact strict path=\"/liquidity\" component={Liquidity} />\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n            <Route exact path=\"/add\" component={AddLiquidity} />\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact path=\"/create\" component={AddLiquidity} />\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Redirect to=\"/nfts\" />\n            </Route>\n            <Route path=\"/profile\">\n              <Redirect to={`${nftsBaseUrl}/profile/${account?.toLowerCase() || ''}`} />\n            </Route>\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}