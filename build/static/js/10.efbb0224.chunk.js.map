{"version":3,"sources":["../node_modules/lodash/sum.js","../node_modules/lodash/_baseSum.js","components/CollapsibleCard/index.tsx","views/Nft/market/Collection/Traits/styles.tsx","views/Nft/market/Collection/Traits/PancakeBunniesTraits.tsx","views/Nft/market/Collection/Traits/utils.tsx","views/Nft/market/Collection/Traits/index.tsx","../node_modules/lodash/times.js","../node_modules/lodash/toInteger.js","../node_modules/lodash/_castFunction.js","components/AddressInputSelect/index.tsx","views/Nft/market/components/MarketPageHeader.tsx","views/Nft/market/components/StatBox.tsx","views/Nft/market/components/CollectibleCard/styles.tsx","views/Nft/market/components/BannerHeader/AvatarImage.tsx","views/Nft/market/components/SearchBar.tsx","views/Nft/market/components/MarketPageTitle.tsx","views/Nft/market/components/BaseSubMenu.tsx","views/Nft/market/components/BannerHeader/BannerImage.tsx","views/Nft/market/components/BannerHeader/index.tsx","views/Nft/market/hooks/useGetLowestPrice.ts","views/Nft/market/Collection/TopBar.tsx","views/Nft/market/Collection/LowestPriceStatBoxItem.tsx","views/Nft/market/Collection/Header.tsx"],"names":["baseSum","require","identity","module","exports","array","length","iteratee","result","index","current","undefined","CollapsibleCard","initialOpenState","title","children","props","useState","isOpen","setIsOpen","p","alignItems","justifyContent","as","variant","scale","onClick","width","StyledSortButton","styled","button","theme","colors","secondary","NftImage","Image","ClickableRow","tr","TableWrapper","div","NftName","thumbnailSrc","name","src","height","mr","LowestPriceCell","bunnyId","useGetLowestPriceFromBunnyId","isFetching","lowestPrice","amount","PancakeBunniesTraits","collectionAddress","tokenApiResponse","setTokenApiResponse","raritySort","setRaritySort","t","useTranslation","push","useHistory","useEffect","a","getNftsFromCollectionApi","apiResponse","fetchTokens","totalMinted","sum","Object","values","attributesDistribution","sortedBunnieKeys","useMemo","keys","data","sort","bunnyIdA","bunnyIdB","bunnyCountA","bunnyCountB","sortBunniesByRarityBuilder","textAlign","type","currentValue","color","map","nft","count","percentage","nftsBaseUrl","image","thumbnail","formatNumber","times","bunnyCnt","Traits","useParams","dispatch","useAppDispatch","collection","useGetCollection","address","fetchCollection","Header","Container","py","baseTimes","castFunction","toInteger","MAX_ARRAY_LENGTH","nativeMin","Math","min","n","toFinite","value","remainder","ResultStatus","SubMenu","input","inputSecondary","radii","default","AddressLink","Text","initialState","resultFound","NOT_VALID","defaultValidAddressHandler","Promise","resolve","AddressInputSelect","onValidAddress","onAddressClick","state","setState","isAddress","prevState","hasResults","FOUND","NOT_FOUND","validAddressHandler","position","placeholder","subject","toLowerCase","onChange","evt","newValue","target","style","zIndex","paddingRight","top","right","px","fontWeight","MarketPageHeader","background","useTheme","isDark","StatBoxItem","stat","fontSize","mx","StatBox","Flex","invertedContrast","cardBorder","card","BNBAmountLabel","toLocaleString","minimumFractionDigits","maximumFractionDigits","CostLabel","cost","bnbBusdPrice","priceInUsd","multiplyPriceByAmount","MetaRow","maxWidth","ellipsis","StyledCollectibleCard","Card","mediaQueries","lg","LowestPriceMetaRow","AvatarImage","attrs","alt","borderColor","SearchBar","history","MarketPageTitle","description","gridGap","gridTemplateColumns","mb","BaseSubMenu","SubMenuItems","StyledBannerImage","sm","md","BannerHeader","bannerImage","bannerAlt","avatar","flexDirection","pb","BannerImage","bottom","left","getBunnyIdFromNft","attributes","find","attr","traitType","toString","setIsFetching","setLowestPrice","getNftsMarketData","otherId","isTradable","response","tokenMarketData","parseFloat","currentAskPrice","fetchLowestPrice","useGetLowestPriceFromNft","isPancakeBunny","pancakeBunniesAddress","bunnyIdAttr","BackLink","RouterLink","primary","TopBar","to","LowestPriceStatBoxItem","getLowestPriceInCollection","lowestCollectionPrice","formattedLowestPrice","symbol","totalSupply","numberTokensListed","totalVolumeBNB","banner","useLocation","pathname","hash","volume","itemsConfig","label","href","large","Number","items","activeItem","mt"],"mappings":"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","file":"static/js/10.efbb0224.chunk.js","sourcesContent":["var baseSum = require('./_baseSum'),\n    identity = require('./identity');\n\n/**\n * Computes the sum of the values in `array`.\n *\n * @static\n * @memberOf _\n * @since 3.4.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {number} Returns the sum.\n * @example\n *\n * _.sum([4, 2, 8, 6]);\n * // => 20\n */\nfunction sum(array) {\n  return (array && array.length)\n    ? baseSum(array, identity)\n    : 0;\n}\n\nmodule.exports = sum;\n","/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseSum;\n","import React, { useState } from 'react'\nimport {\n  CardProps,\n  CardHeader,\n  Card,\n  Flex,\n  Heading,\n  IconButton,\n  ChevronUpIcon,\n  ChevronDownIcon,\n} from '@pancakeswap/uikit'\n\ninterface CollapsibleCardProps extends CardProps {\n  initialOpenState?: boolean\n  title: string\n}\n\nconst CollapsibleCard: React.FC<CollapsibleCardProps> = ({ initialOpenState = true, title, children, ...props }) => {\n  const [isOpen, setIsOpen] = useState(initialOpenState)\n\n  const toggleOpen = () => setIsOpen(!isOpen)\n\n  return (\n    <Card {...props}>\n      <CardHeader p=\"16px\">\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Heading as=\"h3\">{title}</Heading>\n          <IconButton variant=\"text\" scale=\"sm\" onClick={toggleOpen}>\n            {isOpen ? <ChevronUpIcon width=\"44px\" /> : <ChevronDownIcon width=\"24px\" />}\n          </IconButton>\n        </Flex>\n      </CardHeader>\n      {isOpen && children}\n    </Card>\n  )\n}\n\nexport default CollapsibleCard\n","import styled from 'styled-components'\n\nexport const StyledSortButton = styled.button`\n  border: none;\n  cursor: pointer;\n  background: none;\n  color: ${({ theme }) => theme.colors.secondary};\n  font-weight: bold;\n`\n","import React, { useEffect, useMemo, useState } from 'react'\nimport { Skeleton, Table, Td, Th, Image, Flex, Text, ArrowUpIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { useHistory } from 'react-router'\nimport styled from 'styled-components'\nimport times from 'lodash/times'\nimport sum from 'lodash/sum'\nimport { formatNumber } from 'utils/formatBalance'\nimport { getNftsFromCollectionApi } from 'state/nftMarket/helpers'\nimport { ApiResponseCollectionTokens } from 'state/nftMarket/types'\nimport { useTranslation } from 'contexts/Localization'\nimport CollapsibleCard from 'components/CollapsibleCard'\nimport { useGetLowestPriceFromBunnyId } from '../../hooks/useGetLowestPrice'\nimport { BNBAmountLabel } from '../../components/CollectibleCard/styles'\nimport { StyledSortButton } from './styles'\nimport { sortBunniesByRarityBuilder } from './utils'\nimport { nftsBaseUrl } from '../../constants'\nimport { SortType } from '../../types'\n\ninterface PancakeBunniesTraitsProps {\n  collectionAddress: string\n}\n\nconst NftImage = styled(Image)`\n  flex: none;\n  & > img {\n    border-radius: 8px;\n  }\n`\n\nconst ClickableRow = styled.tr`\n  cursor: pointer;\n\n  &:hover {\n    td {\n      opacity: 0.65;\n    }\n  }\n`\n\nconst TableWrapper = styled.div`\n  -webkit-overflow-scrolling: touch;\n  min-width: 320px;\n  overflow-x: auto;\n`\n\nconst NftName: React.FC<{ thumbnailSrc: string; name: string }> = ({ thumbnailSrc, name }) => (\n  <Flex alignItems=\"center\">\n    <NftImage src={thumbnailSrc} width={48} height={48} mr=\"8px\" />\n    <Text>{name}</Text>\n  </Flex>\n)\n\nconst LowestPriceCell: React.FC<{ bunnyId: string }> = ({ bunnyId }) => {\n  const { isFetching, lowestPrice } = useGetLowestPriceFromBunnyId(bunnyId)\n\n  if (isFetching) {\n    return (\n      <Flex justifyContent=\"flex-end\" width=\"100px\">\n        <Skeleton height=\"24px\" width=\"48px\" />\n      </Flex>\n    )\n  }\n\n  if (!lowestPrice) {\n    return null\n  }\n\n  return <BNBAmountLabel justifyContent=\"flex-end\" amount={lowestPrice} width=\"100px\" />\n}\n\nconst PancakeBunniesTraits: React.FC<PancakeBunniesTraitsProps> = ({ collectionAddress }) => {\n  const [tokenApiResponse, setTokenApiResponse] = useState<ApiResponseCollectionTokens>(null)\n  const [raritySort, setRaritySort] = useState<SortType>('asc')\n  const { t } = useTranslation()\n  const { push } = useHistory()\n\n  useEffect(() => {\n    const fetchTokens = async () => {\n      const apiResponse = await getNftsFromCollectionApi(collectionAddress)\n      setTokenApiResponse(apiResponse)\n    }\n\n    fetchTokens()\n  }, [collectionAddress, setTokenApiResponse])\n\n  const totalMinted = tokenApiResponse ? sum(Object.values(tokenApiResponse.attributesDistribution)) : 0\n\n  const sortedBunnieKeys = useMemo(() => {\n    if (!tokenApiResponse) return []\n\n    return Object.keys(tokenApiResponse.data).sort(sortBunniesByRarityBuilder({ raritySort, data: tokenApiResponse }))\n  }, [raritySort, tokenApiResponse])\n\n  const toggleRaritySort = () => {\n    setRaritySort((currentValue) => (currentValue === 'asc' ? 'desc' : 'asc'))\n  }\n\n  return (\n    <>\n      {tokenApiResponse ? (\n        <CollapsibleCard title=\"Bunny Id\">\n          <TableWrapper>\n            <Table>\n              <thead>\n                <tr>\n                  <Th textAlign=\"left\">{t('Name')}</Th>\n                  <Th>{t('Count')}</Th>\n                  <Th>\n                    <StyledSortButton type=\"button\" onClick={toggleRaritySort}>\n                      <Flex alignItems=\"center\">\n                        {t('Rarity')}\n                        {raritySort === 'asc' ? <ArrowUpIcon color=\"secondary\" /> : <ArrowDownIcon color=\"secondary\" />}\n                      </Flex>\n                    </StyledSortButton>\n                  </Th>\n                  <Th textAlign=\"right\">{t('Lowest')}</Th>\n                </tr>\n              </thead>\n              <tbody>\n                {sortedBunnieKeys.map((bunnyId) => {\n                  const nft = tokenApiResponse.data[bunnyId]\n                  if (!nft) {\n                    // Some bunnies don't exist on testnet\n                    return null\n                  }\n                  const count: number = tokenApiResponse.attributesDistribution[bunnyId] ?? 0\n                  const percentage = (count / totalMinted) * 100\n                  const handleClick = () => {\n                    push(`${nftsBaseUrl}/collections/${collectionAddress}/${bunnyId}`)\n                  }\n\n                  return (\n                    <ClickableRow key={bunnyId} onClick={handleClick} title={t('Click to view NFT')}>\n                      <Td>\n                        <NftName thumbnailSrc={nft.image.thumbnail} name={nft.name} />\n                      </Td>\n                      <Td textAlign=\"center\">{formatNumber(count, 0, 0)}</Td>\n                      <Td textAlign=\"center\">{`${formatNumber(percentage, 0, 2)}%`}</Td>\n                      <Td textAlign=\"right\" width=\"100px\">\n                        <LowestPriceCell bunnyId={bunnyId} />\n                      </Td>\n                    </ClickableRow>\n                  )\n                })}\n              </tbody>\n            </Table>\n          </TableWrapper>\n        </CollapsibleCard>\n      ) : (\n        <CollapsibleCard title={t('Loading...')}>\n          <Table>\n            <thead>\n              <tr>\n                <Th textAlign=\"left\">{t('Name')}</Th>\n                <Th>{t('Count')}</Th>\n                <Th>{t('Rarity')}</Th>\n                <Th>{t('Lowest')}</Th>\n              </tr>\n            </thead>\n            <tbody>\n              {times(19).map((bunnyCnt) => (\n                <tr key={bunnyCnt}>\n                  <Td>\n                    <Flex alignItems=\"center\">\n                      <Skeleton height=\"48px\" width=\"48px\" mr=\"8px\" />\n                      <Skeleton width=\"100px\" />\n                    </Flex>\n                  </Td>\n                  <Td>\n                    <Skeleton />\n                  </Td>\n                  <Td>\n                    <Skeleton />\n                  </Td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </CollapsibleCard>\n      )}\n    </>\n  )\n}\n\nexport default PancakeBunniesTraits\n","import { ApiResponseCollectionTokens } from 'state/nftMarket/types'\n\ntype sortBuilder = {\n  data: ApiResponseCollectionTokens\n  raritySort: string\n}\n\nexport const sortBunniesByRarityBuilder =\n  ({ raritySort, data }: sortBuilder) =>\n  (bunnyIdA, bunnyIdB) => {\n    const bunnyCountA = data.attributesDistribution[bunnyIdA] ?? 0\n    const bunnyCountB = data.attributesDistribution[bunnyIdB] ?? 0\n\n    return raritySort === 'asc' ? bunnyCountA - bunnyCountB : bunnyCountB - bunnyCountA\n  }\n","import React, { useEffect } from 'react'\nimport { useParams } from 'react-router'\nimport Container from 'components/Layout/Container'\nimport { useAppDispatch } from 'state'\nimport { useGetCollection } from 'state/nftMarket/hooks'\nimport { fetchCollection } from 'state/nftMarket/reducer'\nimport Header from '../Header'\nimport PancakeBunniesTraits from './PancakeBunniesTraits'\n\nconst Traits = () => {\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\n  const dispatch = useAppDispatch()\n  const collection = useGetCollection(collectionAddress)\n  const { address } = collection || {}\n\n  useEffect(() => {\n    if (address) {\n      dispatch(fetchCollection(address))\n    }\n  }, [address, dispatch])\n\n  return (\n    <>\n      <Header collection={collection} />\n      <Container py=\"40px\">\n        <PancakeBunniesTraits collectionAddress={address} />\n      </Container>\n    </>\n  )\n}\n\nexport default Traits\n","var baseTimes = require('./_baseTimes'),\n    castFunction = require('./_castFunction'),\n    toInteger = require('./toInteger');\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Invokes the iteratee `n` times, returning an array of the results of\n * each invocation. The iteratee is invoked with one argument; (index).\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n * @example\n *\n * _.times(3, String);\n * // => ['0', '1', '2']\n *\n *  _.times(4, _.constant(0));\n * // => [0, 0, 0, 0]\n */\nfunction times(n, iteratee) {\n  n = toInteger(n);\n  if (n < 1 || n > MAX_SAFE_INTEGER) {\n    return [];\n  }\n  var index = MAX_ARRAY_LENGTH,\n      length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n  iteratee = castFunction(iteratee);\n  n -= MAX_ARRAY_LENGTH;\n\n  var result = baseTimes(length, iteratee);\n  while (++index < n) {\n    iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = times;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var identity = require('./identity');\n\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nmodule.exports = castFunction;\n","import React, { ChangeEvent, useState, useEffect } from 'react'\nimport { Box, BoxProps, Text, Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { isAddress } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport CircleLoader from 'components/Loader/CircleLoader'\n\nenum ResultStatus {\n  NOT_VALID,\n  FOUND,\n  NOT_FOUND,\n}\n\ninterface AddressInputSelectProps extends BoxProps {\n  onValidAddress?: (value: string) => Promise<boolean>\n  onAddressClick: (value: string) => void\n}\n\nconst SubMenu = styled.div<{ isOpen: boolean }>`\n  align-items: center;\n  background: ${({ theme }) => theme.colors.input};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 0 0 ${({ theme }) => theme.radii.default} ${({ theme }) => theme.radii.default};\n  left: 0;\n  padding-bottom: 8px;\n  padding-top: 16px;\n  position: absolute;\n  top: calc(100% - 12px);\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  width: 100%;\n  z-index: 15;\n\n  ${({ isOpen }) =>\n    isOpen &&\n    `\n    height: auto;\n    opacity: 1;\n    transform: scaleY(1);\n  `}\n`\n\nconst AddressLink = styled(Text)`\n  cursor: pointer;\n  overflow-wrap: break-word;\n  font-weight: bold;\n  padding-left: 16px;\n  padding-right: 16px;\n`\n\nconst initialState = {\n  isFetching: false,\n  resultFound: ResultStatus.NOT_VALID,\n  value: '',\n}\n\nconst defaultValidAddressHandler = () => Promise.resolve(true)\n\nconst AddressInputSelect: React.FC<AddressInputSelectProps> = ({\n  onValidAddress = defaultValidAddressHandler,\n  onAddressClick,\n  ...props\n}) => {\n  const [state, setState] = useState(initialState)\n  const { t } = useTranslation()\n  const { isFetching, resultFound, value } = state\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { value: newValue } = evt.target\n    setState((prevState) => ({\n      ...prevState,\n      value: newValue,\n    }))\n  }\n\n  const handleClick = () => {\n    setState(initialState)\n    onAddressClick(state.value)\n  }\n\n  // When we have a valid address fetch the data\n  useEffect(() => {\n    const isValidAddress = isAddress(value) !== false\n\n    const validAddressHandler = async () => {\n      try {\n        setState((prevState) => ({ ...prevState, isFetching: true }))\n        const hasResults = await onValidAddress(value)\n\n        setState((prevState) => ({\n          ...prevState,\n          isFetching: false,\n          resultFound: hasResults ? ResultStatus.FOUND : ResultStatus.NOT_FOUND,\n        }))\n      } catch {\n        setState((prevState) => ({ ...prevState, isFetching: false }))\n      }\n    }\n\n    if (isValidAddress) {\n      validAddressHandler()\n    } else {\n      setState((prevState) => ({ ...prevState, resultFound: ResultStatus.NOT_VALID }))\n    }\n  }, [value, onValidAddress, setState])\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Input\n        placeholder={t('Search %subject%', { subject: t('Address').toLowerCase() })}\n        value={state.value}\n        onChange={handleChange}\n        style={{ position: 'relative', zIndex: 16, paddingRight: '40px' }}\n      />\n      {isFetching && (\n        <Box position=\"absolute\" top=\"12px\" right=\"16px\" style={{ zIndex: 17 }}>\n          <CircleLoader />\n        </Box>\n      )}\n      <SubMenu isOpen={resultFound !== ResultStatus.NOT_VALID}>\n        {resultFound === ResultStatus.FOUND ? (\n          <AddressLink onClick={handleClick}>{state.value}</AddressLink>\n        ) : (\n          <Text px=\"16px\" fontWeight=\"bold\">\n            {t('No results found.')}\n          </Text>\n        )}\n      </SubMenu>\n    </Box>\n  )\n}\n\nexport default AddressInputSelect\n","import React from 'react'\nimport PageHeader, { PageHeaderProps } from 'components/PageHeader'\nimport useTheme from 'hooks/useTheme'\n\nconst MarketPageHeader: React.FC<PageHeaderProps> = (props) => {\n  const { theme } = useTheme()\n  const background = theme.isDark\n    ? 'linear-gradient(166.77deg, #3B4155 0%, #3A3045 100%)'\n    : 'linear-gradient(111.68deg, #f2ecf2 0%, #e8f2f6 100%)'\n  return <PageHeader background={background} {...props} />\n}\n\nexport default MarketPageHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, BoxProps, Flex, Skeleton, Text } from '@pancakeswap/uikit'\n\nexport interface StatBoxItemProps extends BoxProps {\n  title: string\n  stat: string\n}\n\nexport const StatBoxItem: React.FC<StatBoxItemProps> = ({ title, stat, ...props }) => (\n  <Box {...props}>\n    <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"center\">\n      {title}\n    </Text>\n    {stat === null ? (\n      <Skeleton height=\"24px\" width=\"50%\" mx=\"auto\" />\n    ) : (\n      <Text fontWeight=\"600\" textAlign=\"center\">\n        {stat}\n      </Text>\n    )}\n  </Box>\n)\n\nconst StatBox = styled(Flex)`\n  align-items: center;\n  background: ${({ theme }) => theme.colors.invertedContrast};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: ${({ theme }) => theme.radii.card};\n  justify-content: space-around;\n  padding: 8px;\n  width: 100%;\n`\n\nexport default StatBox\n","import React, { ReactElement } from 'react'\nimport {\n  Card,\n  BinanceIcon,\n  Box,\n  BoxProps,\n  CameraIcon,\n  Flex,\n  FlexProps,\n  SellIcon,\n  Text,\n  WalletFilledIcon,\n  Skeleton,\n} from '@pancakeswap/uikit'\nimport { Price } from '@pancakeswap/sdk'\nimport { useTranslation } from 'contexts/Localization'\nimport { multiplyPriceByAmount } from 'utils/prices'\nimport styled from 'styled-components'\n\nexport const Footer: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box borderTop={[null, null, null, '1px solid']} borderColor=\"cardBorder\" pt=\"8px\" {...props}>\n    {children}\n  </Box>\n)\n\ninterface BNBAmountLabelProps extends FlexProps {\n  amount: number\n}\n\nexport const BNBAmountLabel: React.FC<BNBAmountLabelProps> = ({ amount, ...props }) => (\n  <Flex alignItems=\"center\" {...props}>\n    <BinanceIcon width=\"16px\" mx=\"4px\" />\n    <Text fontWeight=\"600\">\n      {amount.toLocaleString(undefined, {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 4,\n      })}\n    </Text>\n  </Flex>\n)\n\ninterface CostLabelProps extends FlexProps {\n  cost: number\n  bnbBusdPrice: Price\n}\n\nexport const CostLabel: React.FC<CostLabelProps> = ({ cost, bnbBusdPrice, ...props }) => {\n  const priceInUsd = multiplyPriceByAmount(bnbBusdPrice, cost)\n\n  return (\n    <Flex alignItems=\"center\" {...props}>\n      {priceInUsd > 0 && (\n        <Text fontSize=\"12px\" color=\"textSubtle\">{`($${priceInUsd.toLocaleString(undefined, {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        })})`}</Text>\n      )}\n      <BNBAmountLabel amount={cost} />\n    </Flex>\n  )\n}\n\ninterface MetaRowProps extends FlexProps {\n  title: string\n}\n\nexport const MetaRow: React.FC<MetaRowProps> = ({ title, children, ...props }) => (\n  <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n    <Text fontSize=\"12px\" color=\"textSubtle\" maxWidth=\"120px\" ellipsis title={title}>\n      {title}\n    </Text>\n    <Box>{children}</Box>\n  </Flex>\n)\n\nexport interface NftTagProps extends FlexProps {\n  icon?: ReactElement\n  color?: string\n}\n\nexport const NftTag: React.FC<NftTagProps> = ({ icon, color = 'text', children, ...props }) => (\n  <Flex display=\"inline-flex\" alignItems=\"center\" height=\"24px\" {...props}>\n    {icon}\n    <Text color={color} fontSize=\"14px\" fontWeight=\"600\">\n      {children}\n    </Text>\n  </Flex>\n)\n\nexport const ProfileNftTag: React.FC<NftTagProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <NftTag icon={<CameraIcon mr=\"4px\" width=\"16px\" color=\"textSubtle\" />} color=\"textSubtle\" {...props}>\n      {t('Profile')}\n    </NftTag>\n  )\n}\n\nexport const WalletNftTag: React.FC<NftTagProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <NftTag icon={<WalletFilledIcon mr=\"4px\" width=\"16px\" color=\"secondary\" />} color=\"secondary\" {...props}>\n      {t('Wallet')}\n    </NftTag>\n  )\n}\n\nexport const SellingNftTag: React.FC<NftTagProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <NftTag icon={<SellIcon mr=\"4px\" width=\"16px\" color=\"failure\" />} color=\"failure\" {...props}>\n      {t('Selling')}\n    </NftTag>\n  )\n}\n\nexport const StyledCollectibleCard = styled(Card)`\n  border-radius: 8px;\n  max-width: 320px;\n  transition: opacity 200ms;\n\n  & > div {\n    border-radius: 8px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    &:hover {\n      cursor: pointer;\n      opacity: 0.6;\n    }\n  }\n`\ninterface LowestPriceMetaRowProps {\n  lowestPrice: number\n  isFetching: boolean\n  bnbBusdPrice: Price\n}\n\nexport const LowestPriceMetaRow = ({ lowestPrice, isFetching, bnbBusdPrice }: LowestPriceMetaRowProps) => {\n  const { t } = useTranslation()\n\n  if (!isFetching && !lowestPrice) {\n    return null\n  }\n\n  return (\n    <MetaRow title={t('Lowest price')}>\n      {isFetching ? (\n        <Skeleton height=\"24px\" width=\"30px\" />\n      ) : (\n        <CostLabel cost={lowestPrice} bnbBusdPrice={bnbBusdPrice} />\n      )}\n    </MetaRow>\n  )\n}\n","import styled from 'styled-components'\n\ninterface AvatarImageProps {\n  src: string\n  borderColor?: string\n  alt?: string\n}\n\nconst AvatarImage = styled.div.attrs<AvatarImageProps>(({ alt }) => ({\n  alt,\n}))<AvatarImageProps>`\n  background: url('${({ src }) => src}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 96px;\n  height: 96px;\n  border: 4px ${({ borderColor }) => borderColor || '#f2ecf2'} solid;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n\nexport default AvatarImage\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport AddressInputSelect from 'components/AddressInputSelect'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\n\nconst SearchBar: React.FC = (props) => {\n  const history = useHistory()\n\n  const handleAddressClick = (value: string) => {\n    history.push(`${nftsBaseUrl}/profile/${value}`)\n  }\n\n  return <AddressInputSelect onAddressClick={handleAddressClick} {...props} />\n}\n\nexport default SearchBar\n","import React, { ReactNode } from 'react'\nimport { Box, Grid, GridProps, Heading } from '@pancakeswap/uikit'\n\ninterface MarketPageTitleProps extends GridProps {\n  title: string\n  description?: ReactNode\n}\n\nconst MarketPageTitle: React.FC<MarketPageTitleProps> = ({ title, description, children, ...props }) => (\n  <Grid gridGap=\"16px\" alignItems=\"center\" gridTemplateColumns={['1fr', null, null, null, 'repeat(2, 1fr)']} {...props}>\n    <Box>\n      <Heading as=\"h1\" scale=\"xl\" color=\"secondary\" mb=\"16px\">\n        {title}\n      </Heading>\n      {description}\n    </Box>\n    <Box>{children}</Box>\n  </Grid>\n)\n\nexport default MarketPageTitle\n","import { SubMenuItems } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseSubMenu = styled(SubMenuItems)`\n  background-color: transparent;\n  border-bottom: 1px ${({ theme }) => theme.colors.cardBorder} solid;\n`\n\nexport default BaseSubMenu\n","import styled from 'styled-components'\n\ninterface StyledBannerImageProps {\n  src: string\n  alt?: string\n}\n\nconst StyledBannerImage = styled.div.attrs<StyledBannerImageProps>(({ alt }) => ({\n  alt,\n}))<StyledBannerImageProps>`\n  ${({ src, theme }) => (src ? `background-image: url('${src}')` : `background-color: ${theme.colors.cardBorder}`)};\n  background-image: url('${({ src }) => src}');\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 100%;\n  border-radius: 32px;\n  height: 123px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 192px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    height: 256px;\n  }\n`\n\nexport default StyledBannerImage\n","import React, { ReactNode } from 'react'\nimport { Flex, Box, FlexProps } from '@pancakeswap/uikit'\nimport BannerImage from './BannerImage'\n\ninterface BannerHeaderProps extends FlexProps {\n  bannerImage: string\n  bannerAlt?: string\n  avatar?: ReactNode\n}\n\nconst BannerHeader: React.FC<BannerHeaderProps> = ({ bannerImage, bannerAlt, avatar, children, ...props }) => {\n  return (\n    <Flex flexDirection=\"column\" mb=\"24px\" {...props}>\n      <Box position=\"relative\" pb=\"56px\">\n        <BannerImage src={bannerImage} alt={bannerAlt} />\n        <Box position=\"absolute\" bottom={0} left={-4}>\n          <Flex alignItems=\"flex-end\">\n            {avatar}\n            {children}\n          </Flex>\n        </Box>\n      </Box>\n    </Flex>\n  )\n}\n\nexport default BannerHeader\n","import { useEffect, useState } from 'react'\nimport { getNftsMarketData } from 'state/nftMarket/helpers'\nimport { NftToken } from 'state/nftMarket/types'\nimport { pancakeBunniesAddress } from '../constants'\n\nexport interface LowestNftPrice {\n  isFetching: boolean\n  lowestPrice: number\n}\n\nconst getBunnyIdFromNft = (nft: NftToken): string => {\n  const bunnyId = nft.attributes?.find((attr) => attr.traitType === 'bunnyId')?.value\n  return bunnyId ? bunnyId.toString() : null\n}\n\nexport const useGetLowestPriceFromBunnyId = (bunnyId: string): LowestNftPrice => {\n  const [isFetching, setIsFetching] = useState<boolean>(false)\n  const [lowestPrice, setLowestPrice] = useState<number>(null)\n\n  useEffect(() => {\n    const fetchLowestPrice = async () => {\n      try {\n        setIsFetching(true)\n        const response = await getNftsMarketData({ otherId: bunnyId, isTradable: true }, 1, 'currentAskPrice', 'asc')\n\n        if (response.length > 0) {\n          const [tokenMarketData] = response\n          setLowestPrice(parseFloat(tokenMarketData.currentAskPrice))\n        }\n      } finally {\n        setIsFetching(false)\n      }\n    }\n\n    if (bunnyId) {\n      fetchLowestPrice()\n    }\n  }, [bunnyId])\n\n  return { isFetching, lowestPrice }\n}\n\nexport const useGetLowestPriceFromNft = (nft: NftToken): LowestNftPrice => {\n  const [isFetching, setIsFetching] = useState<boolean>(false)\n  const [lowestPrice, setLowestPrice] = useState<number>(null)\n  const isPancakeBunny = nft.collectionAddress?.toLowerCase() === pancakeBunniesAddress.toLowerCase()\n\n  useEffect(() => {\n    const fetchLowestPrice = async () => {\n      const bunnyIdAttr = getBunnyIdFromNft(nft)\n      try {\n        setIsFetching(true)\n        const response = await getNftsMarketData(\n          { otherId: bunnyIdAttr, isTradable: true },\n          1,\n          'currentAskPrice',\n          'asc',\n        )\n\n        if (response.length > 0) {\n          const [tokenMarketData] = response\n          setLowestPrice(parseFloat(tokenMarketData.currentAskPrice))\n        }\n      } finally {\n        setIsFetching(false)\n      }\n    }\n\n    if (isPancakeBunny && nft) {\n      fetchLowestPrice()\n    }\n  }, [isPancakeBunny, nft])\n\n  return { isFetching, lowestPrice }\n}\n","import React from 'react'\nimport { Box, ChevronLeftIcon, Flex } from '@pancakeswap/uikit'\nimport { Link as RouterLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport SearchBar from '../components/SearchBar'\n\nconst BackLink = styled(RouterLink)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: inline-flex;\n  font-weight: 600;\n`\n\nconst TopBar: React.FC = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n      <BackLink to={nftsBaseUrl}>\n        <ChevronLeftIcon color=\"primary\" width=\"24px\" />\n        {t('All Collections')}\n      </BackLink>\n      <Box>\n        <SearchBar />\n      </Box>\n    </Flex>\n  )\n}\n\nexport default TopBar\n","import React, { useEffect, useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { getLowestPriceInCollection } from 'state/nftMarket/helpers'\nimport { StatBoxItem, StatBoxItemProps } from '../components/StatBox'\n\ninterface LowestPriceStatBoxItemProps extends Omit<StatBoxItemProps, 'title' | 'stat'> {\n  collectionAddress: string\n}\n\nconst LowestPriceStatBoxItem: React.FC<LowestPriceStatBoxItemProps> = ({ collectionAddress, ...props }) => {\n  const [lowestPrice, setLowestPrice] = useState<number>(null)\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    const fetchLowestPrice = async () => {\n      const lowestCollectionPrice = await getLowestPriceInCollection(collectionAddress)\n      setLowestPrice(lowestCollectionPrice)\n    }\n\n    fetchLowestPrice()\n  }, [collectionAddress, setLowestPrice])\n\n  const formattedLowestPrice =\n    lowestPrice === null\n      ? null\n      : lowestPrice.toLocaleString(undefined, {\n          minimumFractionDigits: 3,\n          maximumFractionDigits: 3,\n        })\n\n  return <StatBoxItem title={t('Lowest (%symbol%)', { symbol: 'BNB' })} stat={formattedLowestPrice} {...props} />\n}\n\nexport default LowestPriceStatBoxItem\n","import React from 'react'\nimport { useLocation, useParams } from 'react-router'\nimport { Text } from '@pancakeswap/uikit'\nimport { Collection } from 'state/nftMarket/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport MarketPageHeader from '../components/MarketPageHeader'\nimport MarketPageTitle from '../components/MarketPageTitle'\nimport StatBox, { StatBoxItem } from '../components/StatBox'\nimport BannerHeader from '../components/BannerHeader'\nimport AvatarImage from '../components/BannerHeader/AvatarImage'\nimport BaseSubMenu from '../components/BaseSubMenu'\nimport { nftsBaseUrl } from '../constants'\nimport TopBar from './TopBar'\nimport LowestPriceStatBoxItem from './LowestPriceStatBoxItem'\n\ninterface HeaderProps {\n  collection: Collection\n}\n\nconst DEFAULT_TABS = '#items'\n\nconst Header: React.FC<HeaderProps> = ({ collection }) => {\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\n  const { totalSupply, numberTokensListed, totalVolumeBNB, banner, avatar } = collection\n  const { t } = useTranslation()\n  const { pathname, hash } = useLocation()\n\n  const volume = parseFloat(totalVolumeBNB).toLocaleString(undefined, {\n    minimumFractionDigits: 3,\n    maximumFractionDigits: 3,\n  })\n\n  const itemsConfig = [\n    {\n      label: t('Items'),\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#items`,\n    },\n    {\n      label: t('Traits'),\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#traits`,\n    },\n  ]\n\n  return (\n    <>\n      <MarketPageHeader>\n        <TopBar />\n        <BannerHeader bannerImage={banner.large} avatar={<AvatarImage src={avatar} />} />\n        <MarketPageTitle\n          title={collection.name}\n          description={collection.description ? <Text color=\"textSubtle\">{t(collection.description)}</Text> : null}\n        >\n          <StatBox>\n            <StatBoxItem title={t('Items')} stat={formatNumber(Number(totalSupply), 0, 0)} />\n            <StatBoxItem title={t('Items listed')} stat={formatNumber(Number(numberTokensListed), 0, 0)} />\n            <LowestPriceStatBoxItem collectionAddress={collection.address} />\n            <StatBoxItem title={t('Vol. (%symbol%)', { symbol: 'BNB' })} stat={volume} />\n          </StatBox>\n        </MarketPageTitle>\n      </MarketPageHeader>\n      <Container>\n        <BaseSubMenu items={itemsConfig} activeItem={`${pathname}${hash || DEFAULT_TABS}`} mt=\"24px\" mb=\"8px\" />\n      </Container>\n    </>\n  )\n}\n\nexport default Header\n"],"sourceRoot":""}