{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/components/Toast/DescriptionWithTx.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link, Text } from '@pancakeswap/uikit';\nimport { getBscScanLink } from 'utils';\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\nimport { useTranslation } from 'contexts/Localization';\nimport truncateHash from 'utils/truncateHash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DescriptionWithTx = ({\n  txHash,\n  children\n}) => {\n  _s();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [typeof children === 'string' ? /*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 39\n    }, this) : children, txHash && /*#__PURE__*/_jsxDEV(Link, {\n      external: true,\n      href: getBscScanLink(txHash, 'transaction', chainId),\n      children: [t('View on BscScan'), \": \", truncateHash(txHash, 8, 0)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DescriptionWithTx, \"p6ezRbZe5OmboNhzOkUiBlsWvK0=\", false, function () {\n  return [useActiveWeb3React, useTranslation];\n});\n\n_c = DescriptionWithTx;\nexport default DescriptionWithTx;\n\nvar _c;\n\n$RefreshReg$(_c, \"DescriptionWithTx\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/components/Toast/DescriptionWithTx.tsx"],"names":["React","Link","Text","getBscScanLink","useActiveWeb3React","useTranslation","truncateHash","DescriptionWithTx","txHash","children","chainId","t"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,oBAA3B;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,OAAOC,kBAAP,MAA+B,0BAA/B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;;;AAOA,MAAMC,iBAAmD,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA0B;AAAA;;AACpF,QAAM;AAAEC,IAAAA;AAAF,MAAcN,kBAAkB,EAAtC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAQN,cAAc,EAA5B;AAEA,sBACE;AAAA,eACG,OAAOI,QAAP,KAAoB,QAApB,gBAA+B,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA,gBAAcA;AAAd;AAAA;AAAA;AAAA;AAAA,YAA/B,GAAgEA,QADnE,EAEGD,MAAM,iBACL,QAAC,IAAD;AAAM,MAAA,QAAQ,MAAd;AAAe,MAAA,IAAI,EAAEL,cAAc,CAACK,MAAD,EAAS,aAAT,EAAwBE,OAAxB,CAAnC;AAAA,iBACGC,CAAC,CAAC,iBAAD,CADJ,QAC2BL,YAAY,CAACE,MAAD,EAAS,CAAT,EAAY,CAAZ,CADvC;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADF;AAUD,CAdD;;GAAMD,iB;UACgBH,kB,EACNC,c;;;KAFVE,iB;AAgBN,eAAeA,iBAAf","sourcesContent":["import React from 'react'\nimport { Link, Text } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport truncateHash from 'utils/truncateHash'\n\ninterface DescriptionWithTxProps {\n  description?: string\n  txHash?: string\n}\n\nconst DescriptionWithTx: React.FC<DescriptionWithTxProps> = ({ txHash, children }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  return (\n    <>\n      {typeof children === 'string' ? <Text as=\"p\">{children}</Text> : children}\n      {txHash && (\n        <Link external href={getBscScanLink(txHash, 'transaction', chainId)}>\n          {t('View on BscScan')}: {truncateHash(txHash, 8, 0)}\n        </Link>\n      )}\n    </>\n  )\n}\n\nexport default DescriptionWithTx\n"]},"metadata":{},"sourceType":"module"}