{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Collection/Traits/PancakeBunniesTraits.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Skeleton, Table, Td, Th, Image, Flex, Text, ArrowUpIcon, ArrowDownIcon } from '@pancakeswap/uikit';\nimport { useHistory } from 'react-router';\nimport styled from 'styled-components';\nimport times from 'lodash/times';\nimport sum from 'lodash/sum';\nimport { formatNumber } from 'utils/formatBalance';\nimport { getNftsFromCollectionApi } from 'state/nftMarket/helpers';\nimport { useTranslation } from 'contexts/Localization';\nimport CollapsibleCard from 'components/CollapsibleCard';\nimport { useGetLowestPriceFromBunnyId } from '../../hooks/useGetLowestPrice';\nimport { BNBAmountLabel } from '../../components/CollectibleCard/styles';\nimport { StyledSortButton } from './styles';\nimport { sortBunniesByRarityBuilder } from './utils';\nimport { nftsBaseUrl } from '../../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NftImage = styled(Image)`\n  flex: none;\n  & > img {\n    border-radius: 8px;\n  }\n`;\n_c = NftImage;\nconst ClickableRow = styled.tr`\n  cursor: pointer;\n\n  &:hover {\n    td {\n      opacity: 0.65;\n    }\n  }\n`;\n_c2 = ClickableRow;\nconst TableWrapper = styled.div`\n  -webkit-overflow-scrolling: touch;\n  min-width: 320px;\n  overflow-x: auto;\n`;\n_c3 = TableWrapper;\n\nconst NftName = ({\n  thumbnailSrc,\n  name\n}) => /*#__PURE__*/_jsxDEV(Flex, {\n  alignItems: \"center\",\n  children: [/*#__PURE__*/_jsxDEV(NftImage, {\n    src: thumbnailSrc,\n    width: 48,\n    height: 48,\n    mr: \"8px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Text, {\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 47,\n  columnNumber: 3\n}, this);\n\n_c4 = NftName;\n\nconst LowestPriceCell = ({\n  bunnyId\n}) => {\n  _s();\n\n  const {\n    isFetching,\n    lowestPrice\n  } = useGetLowestPriceFromBunnyId(bunnyId);\n\n  if (isFetching) {\n    return /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"flex-end\",\n      width: \"100px\",\n      children: /*#__PURE__*/_jsxDEV(Skeleton, {\n        height: \"24px\",\n        width: \"48px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!lowestPrice) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(BNBAmountLabel, {\n    justifyContent: \"flex-end\",\n    amount: lowestPrice,\n    width: \"100px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 10\n  }, this);\n};\n\n_s(LowestPriceCell, \"nE/hHvvBL+uv19KCV5A/5wDgaXo=\", false, function () {\n  return [useGetLowestPriceFromBunnyId];\n});\n\n_c5 = LowestPriceCell;\n\nconst PancakeBunniesTraits = ({\n  collectionAddress\n}) => {\n  _s2();\n\n  const [tokenApiResponse, setTokenApiResponse] = useState(null);\n  const [raritySort, setRaritySort] = useState('asc');\n  const {\n    t\n  } = useTranslation();\n  const {\n    push\n  } = useHistory();\n  useEffect(() => {\n    const fetchTokens = async () => {\n      const apiResponse = await getNftsFromCollectionApi(collectionAddress);\n      setTokenApiResponse(apiResponse);\n    };\n\n    fetchTokens();\n  }, [collectionAddress, setTokenApiResponse]);\n  const totalMinted = tokenApiResponse ? sum(Object.values(tokenApiResponse.attributesDistribution)) : 0;\n  const sortedBunnieKeys = useMemo(() => {\n    if (!tokenApiResponse) return [];\n    return Object.keys(tokenApiResponse.data).sort(sortBunniesByRarityBuilder({\n      raritySort,\n      data: tokenApiResponse\n    }));\n  }, [raritySort, tokenApiResponse]);\n\n  const toggleRaritySort = () => {\n    setRaritySort(currentValue => currentValue === 'asc' ? 'desc' : 'asc');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tokenApiResponse ? /*#__PURE__*/_jsxDEV(CollapsibleCard, {\n      title: \"Bunny Id\",\n      children: /*#__PURE__*/_jsxDEV(TableWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(Th, {\n                textAlign: \"left\",\n                children: t('Name')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: t('Count')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                children: /*#__PURE__*/_jsxDEV(StyledSortButton, {\n                  type: \"button\",\n                  onClick: toggleRaritySort,\n                  children: /*#__PURE__*/_jsxDEV(Flex, {\n                    alignItems: \"center\",\n                    children: [t('Rarity'), raritySort === 'asc' ? /*#__PURE__*/_jsxDEV(ArrowUpIcon, {\n                      color: \"secondary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 49\n                    }, this) : /*#__PURE__*/_jsxDEV(ArrowDownIcon, {\n                      color: \"secondary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 85\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Th, {\n                textAlign: \"right\",\n                children: t('Lowest')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: sortedBunnieKeys.map(bunnyId => {\n              var _tokenApiResponse$att;\n\n              const nft = tokenApiResponse.data[bunnyId];\n\n              if (!nft) {\n                // Some bunnies don't exist on testnet\n                return null;\n              }\n\n              const count = (_tokenApiResponse$att = tokenApiResponse.attributesDistribution[bunnyId]) !== null && _tokenApiResponse$att !== void 0 ? _tokenApiResponse$att : 0;\n              const percentage = count / totalMinted * 100;\n\n              const handleClick = () => {\n                push(`${nftsBaseUrl}/collections/${collectionAddress}/${bunnyId}`);\n              };\n\n              return /*#__PURE__*/_jsxDEV(ClickableRow, {\n                onClick: handleClick,\n                title: t('Click to view NFT'),\n                children: [/*#__PURE__*/_jsxDEV(Td, {\n                  children: /*#__PURE__*/_jsxDEV(NftName, {\n                    thumbnailSrc: nft.image.thumbnail,\n                    name: nft.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Td, {\n                  textAlign: \"center\",\n                  children: formatNumber(count, 0, 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Td, {\n                  textAlign: \"center\",\n                  children: `${formatNumber(percentage, 0, 2)}%`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Td, {\n                  textAlign: \"right\",\n                  width: \"100px\",\n                  children: /*#__PURE__*/_jsxDEV(LowestPriceCell, {\n                    bunnyId: bunnyId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 23\n                }, this)]\n              }, bunnyId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CollapsibleCard, {\n      title: t('Loading...'),\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              textAlign: \"left\",\n              children: t('Name')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: t('Count')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: t('Rarity')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: t('Lowest')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: times(19).map(bunnyCnt => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Td, {\n              children: /*#__PURE__*/_jsxDEV(Flex, {\n                alignItems: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: \"48px\",\n                  width: \"48px\",\n                  mr: \"8px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n                  width: \"100px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Td, {\n              children: /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this)]\n          }, bunnyCnt, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s2(PancakeBunniesTraits, \"QtupSmXokw5X8FwjQzsdQUaXFEE=\", false, function () {\n  return [useTranslation, useHistory];\n});\n\n_c6 = PancakeBunniesTraits;\nexport default PancakeBunniesTraits;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"NftImage\");\n$RefreshReg$(_c2, \"ClickableRow\");\n$RefreshReg$(_c3, \"TableWrapper\");\n$RefreshReg$(_c4, \"NftName\");\n$RefreshReg$(_c5, \"LowestPriceCell\");\n$RefreshReg$(_c6, \"PancakeBunniesTraits\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Collection/Traits/PancakeBunniesTraits.tsx"],"names":["React","useEffect","useMemo","useState","Skeleton","Table","Td","Th","Image","Flex","Text","ArrowUpIcon","ArrowDownIcon","useHistory","styled","times","sum","formatNumber","getNftsFromCollectionApi","useTranslation","CollapsibleCard","useGetLowestPriceFromBunnyId","BNBAmountLabel","StyledSortButton","sortBunniesByRarityBuilder","nftsBaseUrl","NftImage","ClickableRow","tr","TableWrapper","div","NftName","thumbnailSrc","name","LowestPriceCell","bunnyId","isFetching","lowestPrice","PancakeBunniesTraits","collectionAddress","tokenApiResponse","setTokenApiResponse","raritySort","setRaritySort","t","push","fetchTokens","apiResponse","totalMinted","Object","values","attributesDistribution","sortedBunnieKeys","keys","data","sort","toggleRaritySort","currentValue","map","nft","count","percentage","handleClick","image","thumbnail","bunnyCnt"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\nimport { Skeleton, Table, Td, Th, Image, Flex, Text, ArrowUpIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { useHistory } from 'react-router'\nimport styled from 'styled-components'\nimport times from 'lodash/times'\nimport sum from 'lodash/sum'\nimport { formatNumber } from 'utils/formatBalance'\nimport { getNftsFromCollectionApi } from 'state/nftMarket/helpers'\nimport { ApiResponseCollectionTokens } from 'state/nftMarket/types'\nimport { useTranslation } from 'contexts/Localization'\nimport CollapsibleCard from 'components/CollapsibleCard'\nimport { useGetLowestPriceFromBunnyId } from '../../hooks/useGetLowestPrice'\nimport { BNBAmountLabel } from '../../components/CollectibleCard/styles'\nimport { StyledSortButton } from './styles'\nimport { sortBunniesByRarityBuilder } from './utils'\nimport { nftsBaseUrl } from '../../constants'\nimport { SortType } from '../../types'\n\ninterface PancakeBunniesTraitsProps {\n  collectionAddress: string\n}\n\nconst NftImage = styled(Image)`\n  flex: none;\n  & > img {\n    border-radius: 8px;\n  }\n`\n\nconst ClickableRow = styled.tr`\n  cursor: pointer;\n\n  &:hover {\n    td {\n      opacity: 0.65;\n    }\n  }\n`\n\nconst TableWrapper = styled.div`\n  -webkit-overflow-scrolling: touch;\n  min-width: 320px;\n  overflow-x: auto;\n`\n\nconst NftName: React.FC<{ thumbnailSrc: string; name: string }> = ({ thumbnailSrc, name }) => (\n  <Flex alignItems=\"center\">\n    <NftImage src={thumbnailSrc} width={48} height={48} mr=\"8px\" />\n    <Text>{name}</Text>\n  </Flex>\n)\n\nconst LowestPriceCell: React.FC<{ bunnyId: string }> = ({ bunnyId }) => {\n  const { isFetching, lowestPrice } = useGetLowestPriceFromBunnyId(bunnyId)\n\n  if (isFetching) {\n    return (\n      <Flex justifyContent=\"flex-end\" width=\"100px\">\n        <Skeleton height=\"24px\" width=\"48px\" />\n      </Flex>\n    )\n  }\n\n  if (!lowestPrice) {\n    return null\n  }\n\n  return <BNBAmountLabel justifyContent=\"flex-end\" amount={lowestPrice} width=\"100px\" />\n}\n\nconst PancakeBunniesTraits: React.FC<PancakeBunniesTraitsProps> = ({ collectionAddress }) => {\n  const [tokenApiResponse, setTokenApiResponse] = useState<ApiResponseCollectionTokens>(null)\n  const [raritySort, setRaritySort] = useState<SortType>('asc')\n  const { t } = useTranslation()\n  const { push } = useHistory()\n\n  useEffect(() => {\n    const fetchTokens = async () => {\n      const apiResponse = await getNftsFromCollectionApi(collectionAddress)\n      setTokenApiResponse(apiResponse)\n    }\n\n    fetchTokens()\n  }, [collectionAddress, setTokenApiResponse])\n\n  const totalMinted = tokenApiResponse ? sum(Object.values(tokenApiResponse.attributesDistribution)) : 0\n\n  const sortedBunnieKeys = useMemo(() => {\n    if (!tokenApiResponse) return []\n\n    return Object.keys(tokenApiResponse.data).sort(sortBunniesByRarityBuilder({ raritySort, data: tokenApiResponse }))\n  }, [raritySort, tokenApiResponse])\n\n  const toggleRaritySort = () => {\n    setRaritySort((currentValue) => (currentValue === 'asc' ? 'desc' : 'asc'))\n  }\n\n  return (\n    <>\n      {tokenApiResponse ? (\n        <CollapsibleCard title=\"Bunny Id\">\n          <TableWrapper>\n            <Table>\n              <thead>\n                <tr>\n                  <Th textAlign=\"left\">{t('Name')}</Th>\n                  <Th>{t('Count')}</Th>\n                  <Th>\n                    <StyledSortButton type=\"button\" onClick={toggleRaritySort}>\n                      <Flex alignItems=\"center\">\n                        {t('Rarity')}\n                        {raritySort === 'asc' ? <ArrowUpIcon color=\"secondary\" /> : <ArrowDownIcon color=\"secondary\" />}\n                      </Flex>\n                    </StyledSortButton>\n                  </Th>\n                  <Th textAlign=\"right\">{t('Lowest')}</Th>\n                </tr>\n              </thead>\n              <tbody>\n                {sortedBunnieKeys.map((bunnyId) => {\n                  const nft = tokenApiResponse.data[bunnyId]\n                  if (!nft) {\n                    // Some bunnies don't exist on testnet\n                    return null\n                  }\n                  const count: number = tokenApiResponse.attributesDistribution[bunnyId] ?? 0\n                  const percentage = (count / totalMinted) * 100\n                  const handleClick = () => {\n                    push(`${nftsBaseUrl}/collections/${collectionAddress}/${bunnyId}`)\n                  }\n\n                  return (\n                    <ClickableRow key={bunnyId} onClick={handleClick} title={t('Click to view NFT')}>\n                      <Td>\n                        <NftName thumbnailSrc={nft.image.thumbnail} name={nft.name} />\n                      </Td>\n                      <Td textAlign=\"center\">{formatNumber(count, 0, 0)}</Td>\n                      <Td textAlign=\"center\">{`${formatNumber(percentage, 0, 2)}%`}</Td>\n                      <Td textAlign=\"right\" width=\"100px\">\n                        <LowestPriceCell bunnyId={bunnyId} />\n                      </Td>\n                    </ClickableRow>\n                  )\n                })}\n              </tbody>\n            </Table>\n          </TableWrapper>\n        </CollapsibleCard>\n      ) : (\n        <CollapsibleCard title={t('Loading...')}>\n          <Table>\n            <thead>\n              <tr>\n                <Th textAlign=\"left\">{t('Name')}</Th>\n                <Th>{t('Count')}</Th>\n                <Th>{t('Rarity')}</Th>\n                <Th>{t('Lowest')}</Th>\n              </tr>\n            </thead>\n            <tbody>\n              {times(19).map((bunnyCnt) => (\n                <tr key={bunnyCnt}>\n                  <Td>\n                    <Flex alignItems=\"center\">\n                      <Skeleton height=\"48px\" width=\"48px\" mr=\"8px\" />\n                      <Skeleton width=\"100px\" />\n                    </Flex>\n                  </Td>\n                  <Td>\n                    <Skeleton />\n                  </Td>\n                  <Td>\n                    <Skeleton />\n                  </Td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </CollapsibleCard>\n      )}\n    </>\n  )\n}\n\nexport default PancakeBunniesTraits\n"]},"metadata":{},"sourceType":"module"}