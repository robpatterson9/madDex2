{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useEffect,useState}from'react';import{useWeb3React}from'@web3-react/core';import{ethers}from'ethers';import{useAppDispatch}from'state';import{updateUserAllowance}from'state/actions';import{useTranslation}from'contexts/Localization';import{useCake,useSousChef,useCakeVaultContract}from'hooks/useContract';import useToast from'hooks/useToast';import useLastUpdated from'hooks/useLastUpdated';import{useCallWithGasPrice}from'hooks/useCallWithGasPrice';import{ToastDescriptionWithTx}from'components/Toast';import{jsx as _jsx}from\"react/jsx-runtime\";export var useApprovePool=function useApprovePool(lpContract,sousId,earningTokenSymbol){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),requestedApproval=_useState2[0],setRequestedApproval=_useState2[1];var _useToast=useToast(),toastSuccess=_useToast.toastSuccess,toastError=_useToast.toastError;var _useCallWithGasPrice=useCallWithGasPrice(),callWithGasPrice=_useCallWithGasPrice.callWithGasPrice;var _useTranslation=useTranslation(),t=_useTranslation.t;var dispatch=useAppDispatch();var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var sousChefContract=useSousChef(sousId);var handleApprove=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var tx,receipt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;setRequestedApproval(true);_context.next=4;return callWithGasPrice(lpContract,'approve',[sousChefContract.address,ethers.constants.MaxUint256]);case 4:tx=_context.sent;_context.next=7;return tx.wait();case 7:receipt=_context.sent;dispatch(updateUserAllowance(sousId,account));if(receipt.status){toastSuccess(t('Contract Enabled'),/*#__PURE__*/_jsx(ToastDescriptionWithTx,{txHash:receipt.transactionHash,children:t('You can now stake in the %symbol% pool!',{symbol:earningTokenSymbol})}));setRequestedApproval(false);}else{// user rejected tx or didn't go thru\ntoastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));setRequestedApproval(false);}_context.next=16;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);console.error(_context.t0);toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));case 16:case\"end\":return _context.stop();}}},_callee,null,[[0,12]]);})),[account,dispatch,lpContract,sousChefContract,sousId,earningTokenSymbol,t,toastError,toastSuccess,callWithGasPrice]);return{handleApprove:handleApprove,requestedApproval:requestedApproval};};// Approve CAKE auto pool\nexport var useVaultApprove=function useVaultApprove(setLastUpdated){var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),requestedApproval=_useState4[0],setRequestedApproval=_useState4[1];var _useTranslation2=useTranslation(),t=_useTranslation2.t;var _useToast2=useToast(),toastSuccess=_useToast2.toastSuccess,toastError=_useToast2.toastError;var cakeVaultContract=useCakeVaultContract();var _useCallWithGasPrice2=useCallWithGasPrice(),callWithGasPrice=_useCallWithGasPrice2.callWithGasPrice;var cakeContract=useCake();var handleApprove=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var tx,receipt;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return callWithGasPrice(cakeContract,'approve',[cakeVaultContract.address,ethers.constants.MaxUint256]);case 2:tx=_context2.sent;setRequestedApproval(true);_context2.next=6;return tx.wait();case 6:receipt=_context2.sent;if(receipt.status){toastSuccess(t('Contract Enabled'),/*#__PURE__*/_jsx(ToastDescriptionWithTx,{txHash:receipt.transactionHash,children:t('You can now stake in the %symbol% vault!',{symbol:'CAKE'})}));setLastUpdated();setRequestedApproval(false);}else{toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));setRequestedApproval(false);}case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function handleApprove(){return _ref2.apply(this,arguments);};}();return{handleApprove:handleApprove,requestedApproval:requestedApproval};};export var useCheckVaultApprovalStatus=function useCheckVaultApprovalStatus(){var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isVaultApproved=_useState6[0],setIsVaultApproved=_useState6[1];var _useWeb3React2=useWeb3React(),account=_useWeb3React2.account;var cakeContract=useCake();var cakeVaultContract=useCakeVaultContract();var _useLastUpdated=useLastUpdated(),lastUpdated=_useLastUpdated.lastUpdated,setLastUpdated=_useLastUpdated.setLastUpdated;useEffect(function(){var checkApprovalStatus=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var currentAllowance;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return cakeContract.allowance(account,cakeVaultContract.address);case 3:currentAllowance=_context3.sent;setIsVaultApproved(currentAllowance.gt(0));_context3.next=10;break;case 7:_context3.prev=7;_context3.t0=_context3[\"catch\"](0);setIsVaultApproved(false);case 10:case\"end\":return _context3.stop();}}},_callee3,null,[[0,7]]);}));return function checkApprovalStatus(){return _ref3.apply(this,arguments);};}();checkApprovalStatus();},[account,cakeContract,cakeVaultContract,lastUpdated]);return{isVaultApproved:isVaultApproved,setLastUpdated:setLastUpdated};};","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Pools/hooks/useApprove.tsx"],"names":["React","useCallback","useEffect","useState","useWeb3React","ethers","useAppDispatch","updateUserAllowance","useTranslation","useCake","useSousChef","useCakeVaultContract","useToast","useLastUpdated","useCallWithGasPrice","ToastDescriptionWithTx","useApprovePool","lpContract","sousId","earningTokenSymbol","requestedApproval","setRequestedApproval","toastSuccess","toastError","callWithGasPrice","t","dispatch","account","sousChefContract","handleApprove","address","constants","MaxUint256","tx","wait","receipt","status","transactionHash","symbol","console","error","useVaultApprove","setLastUpdated","cakeVaultContract","cakeContract","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","lastUpdated","checkApprovalStatus","allowance","currentAllowance","gt"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { ToastDescriptionWithTx } from 'components/Toast'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await callWithGasPrice(lpContract, 'approve', [sousChefContract.address, ethers.constants.MaxUint256])\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol })}\n          </ToastDescriptionWithTx>,\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [\n    account,\n    dispatch,\n    lpContract,\n    sousChefContract,\n    sousId,\n    earningTokenSymbol,\n    t,\n    toastError,\n    toastSuccess,\n    callWithGasPrice,\n  ])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await callWithGasPrice(cakeContract, 'approve', [cakeVaultContract.address, ethers.constants.MaxUint256])\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(\n        t('Contract Enabled'),\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' })}\n        </ToastDescriptionWithTx>,\n      )\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const currentAllowance = await cakeContract.allowance(account, cakeVaultContract.address)\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n"]},"metadata":{},"sourceType":"module"}