{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useState,useEffect}from'react';import styled from'styled-components';import BigNumber from'bignumber.js';import{Flex,Skeleton,Heading,Box,Text}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{usePriceCakeBusd}from'state/farms/hooks';import{useGetLotteryGraphDataById}from'state/lottery/hooks';import{getGraphLotteries}from'state/lottery/getLotteriesData';import{formatNumber,getBalanceNumber}from'utils/formatBalance';import Balance from'components/Balance';import RewardBrackets from'../RewardBrackets';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var NextDrawWrapper=styled(Flex)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  padding: 24px;\\n  flex-direction: column;\\n\\n  \",\" {\\n    flex-direction: row;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.background;},function(_ref2){var theme=_ref2.theme;return theme.mediaQueries.sm;});var PreviousRoundCardFooter=function PreviousRoundCardFooter(_ref3){var lotteryNodeData=_ref3.lotteryNodeData,lotteryId=_ref3.lotteryId;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(),_useState2=_slicedToArray(_useState,2),fetchedLotteryGraphData=_useState2[0],setFetchedLotteryGraphData=_useState2[1];var lotteryGraphDataFromState=useGetLotteryGraphDataById(lotteryId);var cakePriceBusd=usePriceCakeBusd();useEffect(function(){var getGraphData=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var fetchedGraphData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getGraphLotteries(undefined,undefined,{id_in:[lotteryId]});case 2:fetchedGraphData=_context.sent;setFetchedLotteryGraphData(fetchedGraphData[0]);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getGraphData(){return _ref4.apply(this,arguments);};}();if(!lotteryGraphDataFromState){getGraphData();}},[lotteryGraphDataFromState,lotteryId]);var prizeInBusd=new BigNumber(NaN);if(lotteryNodeData){var amountCollectedInCake=lotteryNodeData.amountCollectedInCake;prizeInBusd=amountCollectedInCake.times(cakePriceBusd);}var getTotalUsers=function getTotalUsers(){if(!lotteryGraphDataFromState&&fetchedLotteryGraphData){var _fetchedLotteryGraphD;return fetchedLotteryGraphData===null||fetchedLotteryGraphData===void 0?void 0:(_fetchedLotteryGraphD=fetchedLotteryGraphData.totalUsers)===null||_fetchedLotteryGraphD===void 0?void 0:_fetchedLotteryGraphD.toLocaleString();}if(lotteryGraphDataFromState){var _lotteryGraphDataFrom;return lotteryGraphDataFromState===null||lotteryGraphDataFromState===void 0?void 0:(_lotteryGraphDataFrom=lotteryGraphDataFromState.totalUsers)===null||_lotteryGraphDataFrom===void 0?void 0:_lotteryGraphDataFrom.toLocaleString();}return null;};var getPrizeBalances=function getPrizeBalances(){return/*#__PURE__*/_jsxs(_Fragment,{children:[prizeInBusd.isNaN()?/*#__PURE__*/_jsx(Skeleton,{my:\"7px\",height:40,width:200}):/*#__PURE__*/_jsxs(Heading,{scale:\"xl\",lineHeight:\"1\",color:\"secondary\",children:[\"~$\",formatNumber(getBalanceNumber(prizeInBusd),0,0)]}),prizeInBusd.isNaN()?/*#__PURE__*/_jsx(Skeleton,{my:\"2px\",height:14,width:90}):/*#__PURE__*/_jsx(Balance,{fontSize:\"14px\",color:\"textSubtle\",unit:\" CAKE\",value:getBalanceNumber(lotteryNodeData===null||lotteryNodeData===void 0?void 0:lotteryNodeData.amountCollectedInCake),decimals:0})]});};return/*#__PURE__*/_jsxs(NextDrawWrapper,{children:[/*#__PURE__*/_jsxs(Flex,{mr:\"24px\",flexDirection:\"column\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Heading,{children:t('Prize pot')}),getPrizeBalances()]}),/*#__PURE__*/_jsx(Box,{mb:\"24px\",children:/*#__PURE__*/_jsx(Flex,{children:/*#__PURE__*/_jsxs(Text,{fontSize:\"14px\",display:\"inline\",children:[t('Total players this round'),\":\",' ',lotteryNodeData&&(lotteryGraphDataFromState||fetchedLotteryGraphData)?getTotalUsers():/*#__PURE__*/_jsx(Skeleton,{height:14,width:31})]})})})]}),/*#__PURE__*/_jsx(RewardBrackets,{lotteryNodeData:lotteryNodeData,isHistoricRound:true})]});};export default PreviousRoundCardFooter;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Lottery/components/PreviousRoundCard/FooterExpanded.tsx"],"names":["React","useState","useEffect","styled","BigNumber","Flex","Skeleton","Heading","Box","Text","useTranslation","usePriceCakeBusd","useGetLotteryGraphDataById","getGraphLotteries","formatNumber","getBalanceNumber","Balance","RewardBrackets","NextDrawWrapper","theme","colors","background","mediaQueries","sm","PreviousRoundCardFooter","lotteryNodeData","lotteryId","t","fetchedLotteryGraphData","setFetchedLotteryGraphData","lotteryGraphDataFromState","cakePriceBusd","getGraphData","undefined","id_in","fetchedGraphData","prizeInBusd","NaN","amountCollectedInCake","times","getTotalUsers","totalUsers","toLocaleString","getPrizeBalances","isNaN"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Flex, Skeleton, Heading, Box, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { LotteryRound, LotteryRoundGraphEntity } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useGetLotteryGraphDataById } from 'state/lottery/hooks'\nimport { getGraphLotteries } from 'state/lottery/getLotteriesData'\nimport { formatNumber, getBalanceNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport RewardBrackets from '../RewardBrackets'\n\nconst NextDrawWrapper = styled(Flex)`\n  background: ${({ theme }) => theme.colors.background};\n  padding: 24px;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst PreviousRoundCardFooter: React.FC<{ lotteryNodeData: LotteryRound; lotteryId: string }> = ({\n  lotteryNodeData,\n  lotteryId,\n}) => {\n  const { t } = useTranslation()\n  const [fetchedLotteryGraphData, setFetchedLotteryGraphData] = useState<LotteryRoundGraphEntity>()\n  const lotteryGraphDataFromState = useGetLotteryGraphDataById(lotteryId)\n  const cakePriceBusd = usePriceCakeBusd()\n\n  useEffect(() => {\n    const getGraphData = async () => {\n      const fetchedGraphData = await getGraphLotteries(undefined, undefined, { id_in: [lotteryId] })\n      setFetchedLotteryGraphData(fetchedGraphData[0])\n    }\n    if (!lotteryGraphDataFromState) {\n      getGraphData()\n    }\n  }, [lotteryGraphDataFromState, lotteryId])\n\n  let prizeInBusd = new BigNumber(NaN)\n  if (lotteryNodeData) {\n    const { amountCollectedInCake } = lotteryNodeData\n    prizeInBusd = amountCollectedInCake.times(cakePriceBusd)\n  }\n\n  const getTotalUsers = (): string => {\n    if (!lotteryGraphDataFromState && fetchedLotteryGraphData) {\n      return fetchedLotteryGraphData?.totalUsers?.toLocaleString()\n    }\n\n    if (lotteryGraphDataFromState) {\n      return lotteryGraphDataFromState?.totalUsers?.toLocaleString()\n    }\n\n    return null\n  }\n\n  const getPrizeBalances = () => {\n    return (\n      <>\n        {prizeInBusd.isNaN() ? (\n          <Skeleton my=\"7px\" height={40} width={200} />\n        ) : (\n          <Heading scale=\"xl\" lineHeight=\"1\" color=\"secondary\">\n            ~${formatNumber(getBalanceNumber(prizeInBusd), 0, 0)}\n          </Heading>\n        )}\n        {prizeInBusd.isNaN() ? (\n          <Skeleton my=\"2px\" height={14} width={90} />\n        ) : (\n          <Balance\n            fontSize=\"14px\"\n            color=\"textSubtle\"\n            unit=\" CAKE\"\n            value={getBalanceNumber(lotteryNodeData?.amountCollectedInCake)}\n            decimals={0}\n          />\n        )}\n      </>\n    )\n  }\n\n  return (\n    <NextDrawWrapper>\n      <Flex mr=\"24px\" flexDirection=\"column\" justifyContent=\"space-between\">\n        <Box>\n          <Heading>{t('Prize pot')}</Heading>\n          {getPrizeBalances()}\n        </Box>\n        <Box mb=\"24px\">\n          <Flex>\n            <Text fontSize=\"14px\" display=\"inline\">\n              {t('Total players this round')}:{' '}\n              {lotteryNodeData && (lotteryGraphDataFromState || fetchedLotteryGraphData) ? (\n                getTotalUsers()\n              ) : (\n                <Skeleton height={14} width={31} />\n              )}\n            </Text>\n          </Flex>\n        </Box>\n      </Flex>\n      <RewardBrackets lotteryNodeData={lotteryNodeData} isHistoricRound />\n    </NextDrawWrapper>\n  )\n}\n\nexport default PreviousRoundCardFooter\n"]},"metadata":{},"sourceType":"module"}