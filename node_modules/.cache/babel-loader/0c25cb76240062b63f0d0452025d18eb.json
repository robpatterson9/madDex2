{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from'react';import styled from'styled-components';import{Box,Flex,BunnyPlaceholderIcon,Skeleton,Text}from'@pancakeswap/uikit';import truncateHash from'utils/truncateHash';import{useGetProfileAvatar}from'state/profile/hooks';import{ProfileAvatarFetchStatus}from'state/types';import{Link}from'react-router-dom';import{nftsBaseUrl}from'../constants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Avatar=styled.img(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-right: 4px;\\n  width: 32px;\\n  height: 32px;\\n  border-radius: 50%;\\n\\n  \",\" {\\n    margin-right: 12px;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.mediaQueries.md;});var StyledFlex=styled(Flex)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  transition: opacity 200ms ease-in;\\n\\n  &:hover {\\n    opacity: 0.5;\\n  }\\n\"])));var ProfileCell=function ProfileCell(_ref2){var accountAddress=_ref2.accountAddress;var _useGetProfileAvatar=useGetProfileAvatar(accountAddress),username=_useGetProfileAvatar.username,profileNft=_useGetProfileAvatar.nft,usernameFetchStatus=_useGetProfileAvatar.usernameFetchStatus,avatarFetchStatus=_useGetProfileAvatar.avatarFetchStatus;var profileName=username||'-';var sellerProfilePicComponent=/*#__PURE__*/_jsx(Skeleton,{width:\"32px\",height:\"32px\",mr:['4px',null,'12px']});if(avatarFetchStatus===ProfileAvatarFetchStatus.FETCHED){var _profileNft$image;if(profileNft===null||profileNft===void 0?void 0:(_profileNft$image=profileNft.image)===null||_profileNft$image===void 0?void 0:_profileNft$image.thumbnail){var _profileNft$image2;sellerProfilePicComponent=/*#__PURE__*/_jsx(Avatar,{src:profileNft===null||profileNft===void 0?void 0:(_profileNft$image2=profileNft.image)===null||_profileNft$image2===void 0?void 0:_profileNft$image2.thumbnail});}else{sellerProfilePicComponent=/*#__PURE__*/_jsx(BunnyPlaceholderIcon,{width:\"32px\",height:\"32px\",mr:['4px',null,'12px']});}}return/*#__PURE__*/_jsx(Link,{to:\"\".concat(nftsBaseUrl,\"/profile/\").concat(accountAddress),children:/*#__PURE__*/_jsxs(StyledFlex,{children:[sellerProfilePicComponent,/*#__PURE__*/_jsxs(Box,{display:\"inline\",children:[/*#__PURE__*/_jsx(Text,{lineHeight:\"1.25\",children:truncateHash(accountAddress)}),usernameFetchStatus!==ProfileAvatarFetchStatus.FETCHED?/*#__PURE__*/_jsx(Skeleton,{}):/*#__PURE__*/_jsx(Text,{lineHeight:\"1.25\",children:profileName})]})]})});};export default ProfileCell;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/components/ProfileCell.tsx"],"names":["React","styled","Box","Flex","BunnyPlaceholderIcon","Skeleton","Text","truncateHash","useGetProfileAvatar","ProfileAvatarFetchStatus","Link","nftsBaseUrl","Avatar","img","theme","mediaQueries","md","StyledFlex","ProfileCell","accountAddress","username","profileNft","nft","usernameFetchStatus","avatarFetchStatus","profileName","sellerProfilePicComponent","FETCHED","image","thumbnail"],"mappings":"6MAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,GAAT,CAAcC,IAAd,CAAoBC,oBAApB,CAA0CC,QAA1C,CAAoDC,IAApD,KAAgE,oBAAhE,CACA,MAAOC,CAAAA,YAAP,KAAyB,oBAAzB,CACA,OAASC,mBAAT,KAAoC,qBAApC,CACA,OAASC,wBAAT,KAAyC,aAAzC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,WAAT,KAA4B,cAA5B,C,wFAEA,GAAMC,CAAAA,MAAM,CAAGX,MAAM,CAACY,GAAV,0LAMR,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,YAAN,CAAmBC,EAAlC,EANQ,CAAZ,CAWA,GAAMC,CAAAA,UAAU,CAAGhB,MAAM,CAACE,IAAD,CAAT,0KAAhB,CASA,GAAMe,CAAAA,WAAiD,CAAG,QAApDA,CAAAA,WAAoD,OAAwB,IAArBC,CAAAA,cAAqB,OAArBA,cAAqB,CAChF,yBAA8EX,mBAAmB,CAACW,cAAD,CAAjG,CAAQC,QAAR,sBAAQA,QAAR,CAAuBC,UAAvB,sBAAkBC,GAAlB,CAAmCC,mBAAnC,sBAAmCA,mBAAnC,CAAwDC,iBAAxD,sBAAwDA,iBAAxD,CACA,GAAMC,CAAAA,WAAW,CAAGL,QAAQ,EAAI,GAAhC,CAEA,GAAIM,CAAAA,yBAAyB,cAAG,KAAC,QAAD,EAAU,KAAK,CAAC,MAAhB,CAAuB,MAAM,CAAC,MAA9B,CAAqC,EAAE,CAAE,CAAC,KAAD,CAAQ,IAAR,CAAc,MAAd,CAAzC,EAAhC,CACA,GAAIF,iBAAiB,GAAKf,wBAAwB,CAACkB,OAAnD,CAA4D,uBAC1D,GAAIN,UAAJ,SAAIA,UAAJ,oCAAIA,UAAU,CAAEO,KAAhB,4CAAI,kBAAmBC,SAAvB,CAAkC,wBAChCH,yBAAyB,cAAG,KAAC,MAAD,EAAQ,GAAG,CAAEL,UAAF,SAAEA,UAAF,qCAAEA,UAAU,CAAEO,KAAd,6CAAE,mBAAmBC,SAAhC,EAA5B,CACD,CAFD,IAEO,CACLH,yBAAyB,cAAG,KAAC,oBAAD,EAAsB,KAAK,CAAC,MAA5B,CAAmC,MAAM,CAAC,MAA1C,CAAiD,EAAE,CAAE,CAAC,KAAD,CAAQ,IAAR,CAAc,MAAd,CAArD,EAA5B,CACD,CACF,CAED,mBACE,KAAC,IAAD,EAAM,EAAE,WAAKf,WAAL,qBAA4BQ,cAA5B,CAAR,uBACE,MAAC,UAAD,YACGO,yBADH,cAEE,MAAC,GAAD,EAAK,OAAO,CAAC,QAAb,wBACE,KAAC,IAAD,EAAM,UAAU,CAAC,MAAjB,UAAyBnB,YAAY,CAACY,cAAD,CAArC,EADF,CAEGI,mBAAmB,GAAKd,wBAAwB,CAACkB,OAAjD,cACC,KAAC,QAAD,IADD,cAGC,KAAC,IAAD,EAAM,UAAU,CAAC,MAAjB,UAAyBF,WAAzB,EALJ,GAFF,GADF,EADF,CAeD,CA5BD,CA8BA,cAAeP,CAAAA,WAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, BunnyPlaceholderIcon, Skeleton, Text } from '@pancakeswap/uikit'\nimport truncateHash from 'utils/truncateHash'\nimport { useGetProfileAvatar } from 'state/profile/hooks'\nimport { ProfileAvatarFetchStatus } from 'state/types'\nimport { Link } from 'react-router-dom'\nimport { nftsBaseUrl } from '../constants'\n\nconst Avatar = styled.img`\n  margin-right: 4px;\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 12px;\n  }\n`\n\nconst StyledFlex = styled(Flex)`\n  align-items: center;\n  transition: opacity 200ms ease-in;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\nconst ProfileCell: React.FC<{ accountAddress: string }> = ({ accountAddress }) => {\n  const { username, nft: profileNft, usernameFetchStatus, avatarFetchStatus } = useGetProfileAvatar(accountAddress)\n  const profileName = username || '-'\n\n  let sellerProfilePicComponent = <Skeleton width=\"32px\" height=\"32px\" mr={['4px', null, '12px']} />\n  if (avatarFetchStatus === ProfileAvatarFetchStatus.FETCHED) {\n    if (profileNft?.image?.thumbnail) {\n      sellerProfilePicComponent = <Avatar src={profileNft?.image?.thumbnail} />\n    } else {\n      sellerProfilePicComponent = <BunnyPlaceholderIcon width=\"32px\" height=\"32px\" mr={['4px', null, '12px']} />\n    }\n  }\n\n  return (\n    <Link to={`${nftsBaseUrl}/profile/${accountAddress}`}>\n      <StyledFlex>\n        {sellerProfilePicComponent}\n        <Box display=\"inline\">\n          <Text lineHeight=\"1.25\">{truncateHash(accountAddress)}</Text>\n          {usernameFetchStatus !== ProfileAvatarFetchStatus.FETCHED ? (\n            <Skeleton />\n          ) : (\n            <Text lineHeight=\"1.25\">{profileName}</Text>\n          )}\n        </Box>\n      </StyledFlex>\n    </Link>\n  )\n}\n\nexport default ProfileCell\n"]},"metadata":{},"sourceType":"module"}