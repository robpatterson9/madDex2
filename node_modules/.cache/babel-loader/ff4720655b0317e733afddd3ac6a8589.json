{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{useLocation,Link,useRouteMatch}from'react-router-dom';import{ButtonMenu,ButtonMenuItem,NotificationDot}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FarmTabButtons=function FarmTabButtons(_ref){var hasStakeInFinishedFarms=_ref.hasStakeInFinishedFarms;var _useRouteMatch=useRouteMatch(),url=_useRouteMatch.url;var location=useLocation();var _useTranslation=useTranslation(),t=_useTranslation.t;var activeIndex;switch(location.pathname){case'/farms':activeIndex=0;break;case'/farms/history':activeIndex=1;break;case'/farms/archived':activeIndex=2;break;default:activeIndex=0;break;}return/*#__PURE__*/_jsx(Wrapper,{children:/*#__PURE__*/_jsxs(ButtonMenu,{activeIndex:activeIndex,scale:\"sm\",variant:\"subtle\",children:[/*#__PURE__*/_jsx(ButtonMenuItem,{as:Link,to:\"\".concat(url),children:t('Live')}),/*#__PURE__*/_jsx(NotificationDot,{show:hasStakeInFinishedFarms,children:/*#__PURE__*/_jsx(ButtonMenuItem,{id:\"finished-farms-button\",as:Link,to:\"\".concat(url,\"/history\"),children:t('Finished')})})]})});};export default FarmTabButtons;var Wrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n\\n  a {\\n    padding-left: 12px;\\n    padding-right: 12px;\\n  }\\n\\n  \",\" {\\n    margin-left: 16px;\\n  }\\n\"])),function(_ref2){var theme=_ref2.theme;return theme.mediaQueries.sm;});","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Farms/components/FarmTabButtons/index.tsx"],"names":["React","styled","useLocation","Link","useRouteMatch","ButtonMenu","ButtonMenuItem","NotificationDot","useTranslation","FarmTabButtons","hasStakeInFinishedFarms","url","location","t","activeIndex","pathname","Wrapper","div","theme","mediaQueries","sm"],"mappings":"4LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,WAAT,CAAsBC,IAAtB,CAA4BC,aAA5B,KAAiD,kBAAjD,CACA,OAASC,UAAT,CAAqBC,cAArB,CAAqCC,eAArC,KAA4D,oBAA5D,CACA,OAASC,cAAT,KAA+B,uBAA/B,C,wFAMA,GAAMC,CAAAA,cAA6C,CAAG,QAAhDA,CAAAA,cAAgD,MAAiC,IAA9BC,CAAAA,uBAA8B,MAA9BA,uBAA8B,CACrF,mBAAgBN,aAAa,EAA7B,CAAQO,GAAR,gBAAQA,GAAR,CACA,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CACA,oBAAcM,cAAc,EAA5B,CAAQK,CAAR,iBAAQA,CAAR,CAEA,GAAIC,CAAAA,WAAJ,CACA,OAAQF,QAAQ,CAACG,QAAjB,EACE,IAAK,QAAL,CACED,WAAW,CAAG,CAAd,CACA,MACF,IAAK,gBAAL,CACEA,WAAW,CAAG,CAAd,CACA,MACF,IAAK,iBAAL,CACEA,WAAW,CAAG,CAAd,CACA,MACF,QACEA,WAAW,CAAG,CAAd,CACA,MAZJ,CAeA,mBACE,KAAC,OAAD,wBACE,MAAC,UAAD,EAAY,WAAW,CAAEA,WAAzB,CAAsC,KAAK,CAAC,IAA5C,CAAiD,OAAO,CAAC,QAAzD,wBACE,KAAC,cAAD,EAAgB,EAAE,CAAEX,IAApB,CAA0B,EAAE,WAAKQ,GAAL,CAA5B,UACGE,CAAC,CAAC,MAAD,CADJ,EADF,cAIE,KAAC,eAAD,EAAiB,IAAI,CAAEH,uBAAvB,uBACE,KAAC,cAAD,EAAgB,EAAE,CAAC,uBAAnB,CAA2C,EAAE,CAAEP,IAA/C,CAAqD,EAAE,WAAKQ,GAAL,YAAvD,UACGE,CAAC,CAAC,UAAD,CADJ,EADF,EAJF,GADF,EADF,CAcD,CAnCD,CAqCA,cAAeJ,CAAAA,cAAf,CAEA,GAAMO,CAAAA,OAAO,CAAGf,MAAM,CAACgB,GAAV,kPAUT,mBAAGC,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,YAAN,CAAmBC,EAAlC,EAVS,CAAb","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useLocation, Link, useRouteMatch } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface FarmTabButtonsProps {\n  hasStakeInFinishedFarms: boolean\n}\n\nconst FarmTabButtons: React.FC<FarmTabButtonsProps> = ({ hasStakeInFinishedFarms }) => {\n  const { url } = useRouteMatch()\n  const location = useLocation()\n  const { t } = useTranslation()\n\n  let activeIndex\n  switch (location.pathname) {\n    case '/farms':\n      activeIndex = 0\n      break\n    case '/farms/history':\n      activeIndex = 1\n      break\n    case '/farms/archived':\n      activeIndex = 2\n      break\n    default:\n      activeIndex = 0\n      break\n  }\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedFarms}>\n          <ButtonMenuItem id=\"finished-farms-button\" as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default FarmTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n"]},"metadata":{},"sourceType":"module"}