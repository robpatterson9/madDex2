{"ast":null,"code":"import _toConsumableArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";/* eslint-disable no-param-reassign */import{createAsyncThunk,createSlice}from'@reduxjs/toolkit';import{LotteryStatus}from'config/constants/types';import{fetchLottery,fetchCurrentLotteryIdAndMaxBuy}from'./helpers';import getLotteriesData from'./getLotteriesData';import getUserLotteryData,{getGraphLotteryUser}from'./getUserLotteryData';var initialState={currentLotteryId:null,isTransitioning:false,maxNumberTicketsPerBuyOrClaim:null,currentRound:{isLoading:true,lotteryId:null,status:LotteryStatus.PENDING,startTime:'',endTime:'',priceTicketInCake:'',discountDivisor:'',treasuryFee:'',firstTicketId:'',lastTicketId:'',amountCollectedInCake:'',finalNumber:null,cakePerBracket:[],countWinnersPerBracket:[],rewardsBreakdown:[],userTickets:{isLoading:true,tickets:[]}},lotteriesData:null,userLotteryData:{account:'',totalCake:'',totalTickets:'',rounds:[]}};export var fetchCurrentLottery=createAsyncThunk('lottery/fetchCurrentLottery',/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref){var currentLotteryId,lotteryInfo;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:currentLotteryId=_ref.currentLotteryId;_context.next=3;return fetchLottery(currentLotteryId);case 3:lotteryInfo=_context.sent;return _context.abrupt(\"return\",lotteryInfo);case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}());export var fetchCurrentLotteryId=createAsyncThunk('lottery/fetchCurrentLotteryId',/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var currentIdAndMaxBuy;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetchCurrentLotteryIdAndMaxBuy();case 2:currentIdAndMaxBuy=_context2.sent;return _context2.abrupt(\"return\",currentIdAndMaxBuy);case 4:case\"end\":return _context2.stop();}}},_callee2);})));export var fetchUserTicketsAndLotteries=createAsyncThunk('lottery/fetchUserTicketsAndLotteries',/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref4){var _userLotteriesRes$rou;var account,currentLotteryId,userLotteriesRes,userParticipationInCurrentRound,userTickets;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:account=_ref4.account,currentLotteryId=_ref4.currentLotteryId;_context3.next=3;return getUserLotteryData(account,currentLotteryId);case 3:userLotteriesRes=_context3.sent;userParticipationInCurrentRound=(_userLotteriesRes$rou=userLotteriesRes.rounds)===null||_userLotteriesRes$rou===void 0?void 0:_userLotteriesRes$rou.find(function(round){return round.lotteryId===currentLotteryId;});userTickets=userParticipationInCurrentRound===null||userParticipationInCurrentRound===void 0?void 0:userParticipationInCurrentRound.tickets;// User has not bought tickets for the current lottery, or there has been an error\nif(!(!userTickets||userTickets.length===0)){_context3.next=8;break;}return _context3.abrupt(\"return\",{userTickets:null,userLotteries:userLotteriesRes});case 8:return _context3.abrupt(\"return\",{userTickets:userTickets,userLotteries:userLotteriesRes});case 9:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x2){return _ref5.apply(this,arguments);};}());export var fetchPublicLotteries=createAsyncThunk('lottery/fetchPublicLotteries',/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref6){var currentLotteryId,lotteries;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:currentLotteryId=_ref6.currentLotteryId;_context4.next=3;return getLotteriesData(currentLotteryId);case 3:lotteries=_context4.sent;return _context4.abrupt(\"return\",lotteries);case 5:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x3){return _ref7.apply(this,arguments);};}());export var fetchUserLotteries=createAsyncThunk('lottery/fetchUserLotteries',/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(_ref8){var account,currentLotteryId,userLotteries;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:account=_ref8.account,currentLotteryId=_ref8.currentLotteryId;_context5.next=3;return getUserLotteryData(account,currentLotteryId);case 3:userLotteries=_context5.sent;return _context5.abrupt(\"return\",userLotteries);case 5:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x4){return _ref9.apply(this,arguments);};}());export var fetchAdditionalUserLotteries=createAsyncThunk('lottery/fetchAdditionalUserLotteries',/*#__PURE__*/function(){var _ref11=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(_ref10){var account,skip,additionalUserLotteries;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:account=_ref10.account,skip=_ref10.skip;_context6.next=3;return getGraphLotteryUser(account,undefined,skip);case 3:additionalUserLotteries=_context6.sent;return _context6.abrupt(\"return\",additionalUserLotteries);case 5:case\"end\":return _context6.stop();}}},_callee6);}));return function(_x5){return _ref11.apply(this,arguments);};}());export var setLotteryIsTransitioning=createAsyncThunk(\"lottery/setIsTransitioning\",/*#__PURE__*/function(){var _ref13=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(_ref12){var isTransitioning;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:isTransitioning=_ref12.isTransitioning;return _context7.abrupt(\"return\",{isTransitioning:isTransitioning});case 2:case\"end\":return _context7.stop();}}},_callee7);}));return function(_x6){return _ref13.apply(this,arguments);};}());export var LotterySlice=createSlice({name:'Lottery',initialState:initialState,reducers:{setLotteryPublicData:function setLotteryPublicData(state,action){state=action.payload;}},extraReducers:function extraReducers(builder){builder.addCase(fetchCurrentLottery.fulfilled,function(state,action){state.currentRound=_objectSpread(_objectSpread({},state.currentRound),action.payload);});builder.addCase(fetchCurrentLotteryId.fulfilled,function(state,action){state.currentLotteryId=action.payload.currentLotteryId;state.maxNumberTicketsPerBuyOrClaim=action.payload.maxNumberTicketsPerBuyOrClaim;});builder.addCase(fetchUserTicketsAndLotteries.fulfilled,function(state,action){state.currentRound.userTickets.isLoading=false;state.currentRound.userTickets.tickets=action.payload.userTickets;state.userLotteryData=action.payload.userLotteries;});builder.addCase(fetchPublicLotteries.fulfilled,function(state,action){state.lotteriesData=action.payload;});builder.addCase(fetchUserLotteries.fulfilled,function(state,action){state.userLotteryData=action.payload;});builder.addCase(fetchAdditionalUserLotteries.fulfilled,function(state,action){var mergedRounds=[].concat(_toConsumableArray(state.userLotteryData.rounds),_toConsumableArray(action.payload.rounds));state.userLotteryData.rounds=mergedRounds;});builder.addCase(setLotteryIsTransitioning.fulfilled,function(state,action){state.isTransitioning=action.payload.isTransitioning;});}});// Actions\nvar setLotteryPublicData=LotterySlice.actions.setLotteryPublicData;export{setLotteryPublicData};export default LotterySlice.reducer;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/state/lottery/index.ts"],"names":["createAsyncThunk","createSlice","LotteryStatus","fetchLottery","fetchCurrentLotteryIdAndMaxBuy","getLotteriesData","getUserLotteryData","getGraphLotteryUser","initialState","currentLotteryId","isTransitioning","maxNumberTicketsPerBuyOrClaim","currentRound","isLoading","lotteryId","status","PENDING","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","userTickets","tickets","lotteriesData","userLotteryData","account","totalCake","totalTickets","rounds","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","find","round","length","userLotteries","fetchPublicLotteries","lotteries","fetchUserLotteries","fetchAdditionalUserLotteries","skip","undefined","additionalUserLotteries","setLotteryIsTransitioning","LotterySlice","name","reducers","setLotteryPublicData","state","action","payload","extraReducers","builder","addCase","fulfilled","mergedRounds","actions","reducer"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData, { getGraphLotteryUser } from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const fetchAdditionalUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; skip?: number }\n>('lottery/fetchAdditionalUserLotteries', async ({ account, skip }) => {\n  const additionalUserLotteries = await getGraphLotteryUser(account, undefined, skip)\n  return additionalUserLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(fetchAdditionalUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      const mergedRounds = [...state.userLotteryData.rounds, ...action.payload.rounds]\n      state.userLotteryData.rounds = mergedRounds\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n"]},"metadata":{},"sourceType":"module"}