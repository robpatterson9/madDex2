{"ast":null,"code":"import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"totalStaked\",\"stakingLimit\",\"userData\",\"stakingToken\",\"earningToken\"];import BigNumber from'bignumber.js';import{deserializeToken}from'state/user/hooks/helpers';import{BIG_ZERO}from'utils/bigNumber';export var transformUserData=function transformUserData(userData){return{allowance:userData?new BigNumber(userData.allowance):BIG_ZERO,stakingTokenBalance:userData?new BigNumber(userData.stakingTokenBalance):BIG_ZERO,stakedBalance:userData?new BigNumber(userData.stakedBalance):BIG_ZERO,pendingReward:userData?new BigNumber(userData.pendingReward):BIG_ZERO};};export var transformPool=function transformPool(pool){var totalStaked=pool.totalStaked,stakingLimit=pool.stakingLimit,userData=pool.userData,stakingToken=pool.stakingToken,earningToken=pool.earningToken,rest=_objectWithoutProperties(pool,_excluded);return _objectSpread(_objectSpread({},rest),{},{stakingToken:deserializeToken(stakingToken),earningToken:deserializeToken(earningToken),userData:transformUserData(userData),totalStaked:new BigNumber(totalStaked),stakingLimit:new BigNumber(stakingLimit)});};export var getTokenPricesFromFarm=function getTokenPricesFromFarm(farms){return farms.reduce(function(prices,farm){var quoteTokenAddress=farm.quoteToken.address.toLocaleLowerCase();var tokenAddress=farm.token.address.toLocaleLowerCase();/* eslint-disable no-param-reassign */if(!prices[quoteTokenAddress]){prices[quoteTokenAddress]=new BigNumber(farm.quoteTokenPriceBusd).toNumber();}if(!prices[tokenAddress]){prices[tokenAddress]=new BigNumber(farm.tokenPriceBusd).toNumber();}/* eslint-enable no-param-reassign */return prices;},{});};","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/state/pools/helpers.ts"],"names":["BigNumber","deserializeToken","BIG_ZERO","transformUserData","userData","allowance","stakingTokenBalance","stakedBalance","pendingReward","transformPool","pool","totalStaked","stakingLimit","stakingToken","earningToken","rest","getTokenPricesFromFarm","farms","reduce","prices","farm","quoteTokenAddress","quoteToken","address","toLocaleLowerCase","tokenAddress","token","quoteTokenPriceBusd","toNumber","tokenPriceBusd"],"mappings":"yZAAA,MAAOA,CAAAA,SAAP,KAAsB,cAAtB,CAEA,OAASC,gBAAT,KAAiC,0BAAjC,CACA,OAASC,QAAT,KAAyB,iBAAzB,CAWA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,QAAD,CAAwB,CACvD,MAAO,CACLC,SAAS,CAAED,QAAQ,CAAG,GAAIJ,CAAAA,SAAJ,CAAcI,QAAQ,CAACC,SAAvB,CAAH,CAAuCH,QADrD,CAELI,mBAAmB,CAAEF,QAAQ,CAAG,GAAIJ,CAAAA,SAAJ,CAAcI,QAAQ,CAACE,mBAAvB,CAAH,CAAiDJ,QAFzE,CAGLK,aAAa,CAAEH,QAAQ,CAAG,GAAIJ,CAAAA,SAAJ,CAAcI,QAAQ,CAACG,aAAvB,CAAH,CAA2CL,QAH7D,CAILM,aAAa,CAAEJ,QAAQ,CAAG,GAAIJ,CAAAA,SAAJ,CAAcI,QAAQ,CAACI,aAAvB,CAAH,CAA2CN,QAJ7D,CAAP,CAMD,CAPM,CASP,MAAO,IAAMO,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,IAAD,CAA4C,CACvE,GAAQC,CAAAA,WAAR,CAAqFD,IAArF,CAAQC,WAAR,CAAqBC,YAArB,CAAqFF,IAArF,CAAqBE,YAArB,CAAmCR,QAAnC,CAAqFM,IAArF,CAAmCN,QAAnC,CAA6CS,YAA7C,CAAqFH,IAArF,CAA6CG,YAA7C,CAA2DC,YAA3D,CAAqFJ,IAArF,CAA2DI,YAA3D,CAA4EC,IAA5E,0BAAqFL,IAArF,YAEA,sCACKK,IADL,MAEEF,YAAY,CAAEZ,gBAAgB,CAACY,YAAD,CAFhC,CAGEC,YAAY,CAAEb,gBAAgB,CAACa,YAAD,CAHhC,CAIEV,QAAQ,CAAED,iBAAiB,CAACC,QAAD,CAJ7B,CAKEO,WAAW,CAAE,GAAIX,CAAAA,SAAJ,CAAcW,WAAd,CALf,CAMEC,YAAY,CAAE,GAAIZ,CAAAA,SAAJ,CAAcY,YAAd,CANhB,GAQD,CAXM,CAaP,MAAO,IAAMI,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,KAAD,CAA6B,CACjE,MAAOA,CAAAA,KAAK,CAACC,MAAN,CAAa,SAACC,MAAD,CAASC,IAAT,CAAkB,CACpC,GAAMC,CAAAA,iBAAiB,CAAGD,IAAI,CAACE,UAAL,CAAgBC,OAAhB,CAAwBC,iBAAxB,EAA1B,CACA,GAAMC,CAAAA,YAAY,CAAGL,IAAI,CAACM,KAAL,CAAWH,OAAX,CAAmBC,iBAAnB,EAArB,CACA,sCACA,GAAI,CAACL,MAAM,CAACE,iBAAD,CAAX,CAAgC,CAC9BF,MAAM,CAACE,iBAAD,CAAN,CAA4B,GAAIrB,CAAAA,SAAJ,CAAcoB,IAAI,CAACO,mBAAnB,EAAwCC,QAAxC,EAA5B,CACD,CACD,GAAI,CAACT,MAAM,CAACM,YAAD,CAAX,CAA2B,CACzBN,MAAM,CAACM,YAAD,CAAN,CAAuB,GAAIzB,CAAAA,SAAJ,CAAcoB,IAAI,CAACS,cAAnB,EAAmCD,QAAnC,EAAvB,CACD,CACD,qCACA,MAAOT,CAAAA,MAAP,CACD,CAZM,CAYJ,EAZI,CAAP,CAaD,CAdM","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { SerializedFarm, DeserializedPool, SerializedPool } from 'state/types'\nimport { deserializeToken } from 'state/user/hooks/helpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | DeserializedPool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: SerializedPool): DeserializedPool => {\n  const { totalStaked, stakingLimit, userData, stakingToken, earningToken, ...rest } = pool\n\n  return {\n    ...rest,\n    stakingToken: deserializeToken(stakingToken),\n    earningToken: deserializeToken(earningToken),\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  }\n}\n\nexport const getTokenPricesFromFarm = (farms: SerializedFarm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = farm.quoteToken.address.toLocaleLowerCase()\n    const tokenAddress = farm.token.address.toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteTokenPriceBusd).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.tokenPriceBusd).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n"]},"metadata":{},"sourceType":"module"}