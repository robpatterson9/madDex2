{"ast":null,"code":"import{Contract}from'@ethersproject/contracts';import{getAddress}from'@ethersproject/address';import{AddressZero}from'@ethersproject/constants';import{BigNumber}from'@ethersproject/bignumber';import{abi as IUniswapV2Router02ABI}from'@uniswap/v2-periphery/build/IUniswapV2Router02.json';import{ChainId,JSBI,Percent,Token,ETHER}from'@pancakeswap/sdk';import{ROUTER_ADDRESS}from'../config/constants';import{BASE_BSC_SCAN_URLS}from'../config';// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value){try{return getAddress(value);}catch(_unused){return false;}}export function getBscScanLink(data,type){var chainId=arguments.length>2&&arguments[2]!==undefined?arguments[2]:ChainId.MAINNET;switch(type){case'transaction':{return\"\".concat(BASE_BSC_SCAN_URLS[chainId],\"/tx/\").concat(data);}case'token':{return\"\".concat(BASE_BSC_SCAN_URLS[chainId],\"/token/\").concat(data);}case'block':{return\"\".concat(BASE_BSC_SCAN_URLS[chainId],\"/block/\").concat(data);}case'countdown':{return\"\".concat(BASE_BSC_SCAN_URLS[chainId],\"/block/countdown/\").concat(data);}default:{return\"\".concat(BASE_BSC_SCAN_URLS[chainId],\"/address/\").concat(data);}}}export function getBscScanLinkForNft(collectionAddress,tokenId){var chainId=arguments.length>2&&arguments[2]!==undefined?arguments[2]:ChainId.MAINNET;return\"\".concat(BASE_BSC_SCAN_URLS[chainId],\"/token/\").concat(collectionAddress,\"?a=\").concat(tokenId);}// add 10%\nexport function calculateGasMargin(value){return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000));}// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num){return new Percent(JSBI.BigInt(num),JSBI.BigInt(10000));}export function calculateSlippageAmount(value,slippage){if(slippage<0||slippage>10000){throw Error(\"Unexpected slippage value: \".concat(slippage));}return[JSBI.divide(JSBI.multiply(value.raw,JSBI.BigInt(10000-slippage)),JSBI.BigInt(10000)),JSBI.divide(JSBI.multiply(value.raw,JSBI.BigInt(10000+slippage)),JSBI.BigInt(10000))];}// account is not optional\nexport function getSigner(library,account){return library.getSigner(account).connectUnchecked();}// account is optional\nexport function getProviderOrSigner(library,account){return account?getSigner(library,account):library;}// account is optional\nexport function getContract(address,ABI,library,account){if(!isAddress(address)||address===AddressZero){throw Error(\"Invalid 'address' parameter '\".concat(address,\"'.\"));}return new Contract(address,ABI,getProviderOrSigner(library,account));}// account is optional\nexport function getRouterContract(_,library,account){return getContract(ROUTER_ADDRESS,IUniswapV2Router02ABI,library,account);}export function escapeRegExp(string){return string.replace(/[.*+?^${}()|[\\]\\\\]/g,'\\\\$&');// $& means the whole matched string\n}export function isTokenOnList(defaultTokens,currency){var _defaultTokens$curren;if(currency===ETHER)return true;return Boolean(currency instanceof Token&&((_defaultTokens$curren=defaultTokens[currency.chainId])===null||_defaultTokens$curren===void 0?void 0:_defaultTokens$curren[currency.address]));}","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/utils/index.ts"],"names":["Contract","getAddress","AddressZero","BigNumber","abi","IUniswapV2Router02ABI","ChainId","JSBI","Percent","Token","ETHER","ROUTER_ADDRESS","BASE_BSC_SCAN_URLS","isAddress","value","getBscScanLink","data","type","chainId","MAINNET","getBscScanLinkForNft","collectionAddress","tokenId","calculateGasMargin","mul","from","add","div","basisPointsToPercent","num","BigInt","calculateSlippageAmount","slippage","Error","divide","multiply","raw","getSigner","library","account","connectUnchecked","getProviderOrSigner","getContract","address","ABI","getRouterContract","_","escapeRegExp","string","replace","isTokenOnList","defaultTokens","currency","Boolean"],"mappings":"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","sourcesContent":["import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\nexport function getBscScanLinkForNft(\n  collectionAddress: string,\n  tokenId: string,\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  return `${BASE_BSC_SCAN_URLS[chainId]}/token/${collectionAddress}?a=${tokenId}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n"]},"metadata":{},"sourceType":"module"}