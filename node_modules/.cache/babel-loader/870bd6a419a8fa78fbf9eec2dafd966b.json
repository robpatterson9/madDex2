{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/RoundCard/CanceledRoundCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Card, CardBody, Text, Flex, BlockIcon, LinkExternal } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { BetPosition } from 'state/types';\nimport useTheme from 'hooks/useTheme';\nimport ReclaimPositionButton from '../ReclaimPositionButton';\nimport useIsRefundable from '../../hooks/useIsRefundable';\nimport { RoundResultBox } from '../RoundResult';\nimport MultiplierArrow from './MultiplierArrow';\nimport CardHeader, { getBorderBackground } from './CardHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CanceledRoundCard = ({\n  round\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    theme\n  } = useTheme();\n  const {\n    isRefundable,\n    setIsRefundable\n  } = useIsRefundable(round.epoch);\n  const {\n    epoch\n  } = round;\n\n  const handleSuccess = async () => {\n    setIsRefundable(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    borderBackground: getBorderBackground(theme, 'canceled'),\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      status: \"canceled\",\n      icon: /*#__PURE__*/_jsxDEV(BlockIcon, {\n        mr: \"4px\",\n        width: \"21px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this),\n      title: t('Canceled'),\n      epoch: round.epoch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      p: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(MultiplierArrow, {\n        isDisabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoundResultBox, {\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            color: isRefundable ? 'text' : 'textDisabled',\n            children: t('Round Canceled')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), isRefundable && /*#__PURE__*/_jsxDEV(ReclaimPositionButton, {\n            epoch: epoch,\n            onSuccess: handleSuccess,\n            width: \"100%\",\n            my: \"8px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(LinkExternal, {\n            href: \"https://docs.pancakeswap.finance/products/prediction\",\n            external: true,\n            children: t('Learn More')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MultiplierArrow, {\n        betPosition: BetPosition.BEAR,\n        isDisabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CanceledRoundCard, \"JyYoJCYjyt/NKgJGySwUPLW/rX4=\", false, function () {\n  return [useTranslation, useTheme, useIsRefundable];\n});\n\n_c = CanceledRoundCard;\nexport default CanceledRoundCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CanceledRoundCard\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/RoundCard/CanceledRoundCard.tsx"],"names":["React","Card","CardBody","Text","Flex","BlockIcon","LinkExternal","useTranslation","BetPosition","useTheme","ReclaimPositionButton","useIsRefundable","RoundResultBox","MultiplierArrow","CardHeader","getBorderBackground","CanceledRoundCard","round","t","theme","isRefundable","setIsRefundable","epoch","handleSuccess","BEAR"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,SAArC,EAAgDC,YAAhD,QAAoE,oBAApE;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAAoBC,WAApB,QAAuC,aAAvC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,qBAAP,MAAkC,0BAAlC;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,IAAqBC,mBAArB,QAAgD,cAAhD;;;AAMA,MAAMC,iBAAmD,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AACzE,QAAM;AAAEC,IAAAA;AAAF,MAAQX,cAAc,EAA5B;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAYV,QAAQ,EAA1B;AACA,QAAM;AAAEW,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAoCV,eAAe,CAACM,KAAK,CAACK,KAAP,CAAzD;AACA,QAAM;AAAEA,IAAAA;AAAF,MAAYL,KAAlB;;AAEA,QAAMM,aAAa,GAAG,YAAY;AAChCF,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAFD;;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,gBAAgB,EAAEN,mBAAmB,CAACI,KAAD,EAAQ,UAAR,CAA3C;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,MAAM,EAAC,UADT;AAEE,MAAA,IAAI,eAAE,QAAC,SAAD;AAAW,QAAA,EAAE,EAAC,KAAd;AAAoB,QAAA,KAAK,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,cAFR;AAGE,MAAA,KAAK,EAAED,CAAC,CAAC,UAAD,CAHV;AAIE,MAAA,KAAK,EAAED,KAAK,CAACK;AAJf;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,QAAD;AAAU,MAAA,CAAC,EAAC,MAAZ;AAAA,8BACE,QAAC,eAAD;AAAiB,QAAA,UAAU;AAA3B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,aAAa,EAAC,QAApB;AAA6B,UAAA,UAAU,EAAC,QAAxC;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,KAAK,EAAEF,YAAY,GAAG,MAAH,GAAY,cAA1C;AAAA,sBACGF,CAAC,CAAC,gBAAD;AADJ;AAAA;AAAA;AAAA;AAAA,kBADF,EAIGE,YAAY,iBAAI,QAAC,qBAAD;AAAuB,YAAA,KAAK,EAAEE,KAA9B;AAAqC,YAAA,SAAS,EAAEC,aAAhD;AAA+D,YAAA,KAAK,EAAC,MAArE;AAA4E,YAAA,EAAE,EAAC;AAA/E;AAAA;AAAA;AAAA;AAAA,kBAJnB,eAKE,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,sDAAnB;AAA0E,YAAA,QAAQ,MAAlF;AAAA,sBACGL,CAAC,CAAC,YAAD;AADJ;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAaE,QAAC,eAAD;AAAiB,QAAA,WAAW,EAAEV,WAAW,CAACgB,IAA1C;AAAgD,QAAA,UAAU;AAA1D;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAnCD;;GAAMR,iB;UACUT,c,EACIE,Q,EACwBE,e;;;KAHtCK,iB;AAqCN,eAAeA,iBAAf","sourcesContent":["import React from 'react'\nimport { Card, CardBody, Text, Flex, BlockIcon, LinkExternal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { NodeRound, BetPosition } from 'state/types'\nimport useTheme from 'hooks/useTheme'\nimport ReclaimPositionButton from '../ReclaimPositionButton'\nimport useIsRefundable from '../../hooks/useIsRefundable'\nimport { RoundResultBox } from '../RoundResult'\nimport MultiplierArrow from './MultiplierArrow'\nimport CardHeader, { getBorderBackground } from './CardHeader'\n\ninterface CanceledRoundCardProps {\n  round: NodeRound\n}\n\nconst CanceledRoundCard: React.FC<CanceledRoundCardProps> = ({ round }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { isRefundable, setIsRefundable } = useIsRefundable(round.epoch)\n  const { epoch } = round\n\n  const handleSuccess = async () => {\n    setIsRefundable(false)\n  }\n\n  return (\n    <Card borderBackground={getBorderBackground(theme, 'canceled')}>\n      <CardHeader\n        status=\"canceled\"\n        icon={<BlockIcon mr=\"4px\" width=\"21px\" />}\n        title={t('Canceled')}\n        epoch={round.epoch}\n      />\n      <CardBody p=\"16px\">\n        <MultiplierArrow isDisabled />\n        <RoundResultBox>\n          <Flex flexDirection=\"column\" alignItems=\"center\">\n            <Text bold color={isRefundable ? 'text' : 'textDisabled'}>\n              {t('Round Canceled')}\n            </Text>\n            {isRefundable && <ReclaimPositionButton epoch={epoch} onSuccess={handleSuccess} width=\"100%\" my=\"8px\" />}\n            <LinkExternal href=\"https://docs.pancakeswap.finance/products/prediction\" external>\n              {t('Learn More')}\n            </LinkExternal>\n          </Flex>\n        </RoundResultBox>\n        <MultiplierArrow betPosition={BetPosition.BEAR} isDisabled />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default CanceledRoundCard\n"]},"metadata":{},"sourceType":"module"}