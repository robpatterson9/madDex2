{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useState,useCallback}from'react';import styled from'styled-components';import{Button,Flex,Text}from'@pancakeswap/uikit';import{getAddress}from'utils/addressHelpers';import{useAppDispatch}from'state';import{fetchFarmUserDataAsync}from'state/farms';import{useTranslation}from'contexts/Localization';import{useERC20}from'hooks/useContract';import ConnectWalletButton from'components/ConnectWalletButton';import StakeAction from'./StakeAction';import HarvestAction from'./HarvestAction';import useApproveFarm from'../../hooks/useApproveFarm';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Action=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding-top: 16px;\\n\"])));var CardActions=function CardActions(_ref){var farm=_ref.farm,account=_ref.account,addLiquidityUrl=_ref.addLiquidityUrl,cakePrice=_ref.cakePrice,lpLabel=_ref.lpLabel;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),requestedApproval=_useState2[0],setRequestedApproval=_useState2[1];var pid=farm.pid,lpAddresses=farm.lpAddresses;var _ref2=farm.userData||{},allowance=_ref2.allowance,tokenBalance=_ref2.tokenBalance,stakedBalance=_ref2.stakedBalance,earnings=_ref2.earnings;var lpAddress=getAddress(lpAddresses);var isApproved=account&&allowance&&allowance.isGreaterThan(0);var dispatch=useAppDispatch();var lpContract=useERC20(lpAddress);var _useApproveFarm=useApproveFarm(lpContract),onApprove=_useApproveFarm.onApprove;var handleApprove=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;setRequestedApproval(true);_context.next=4;return onApprove();case 4:dispatch(fetchFarmUserDataAsync({account:account,pids:[pid]}));setRequestedApproval(false);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);})),[onApprove,dispatch,account,pid]);var renderApprovalOrStakeButton=function renderApprovalOrStakeButton(){return isApproved?/*#__PURE__*/_jsx(StakeAction,{stakedBalance:stakedBalance,tokenBalance:tokenBalance,tokenName:farm.lpSymbol,pid:pid,apr:farm.apr,lpLabel:lpLabel,cakePrice:cakePrice,addLiquidityUrl:addLiquidityUrl}):/*#__PURE__*/_jsx(Button,{mt:\"8px\",width:\"100%\",disabled:requestedApproval,onClick:handleApprove,children:t('Enable Contract')});};return/*#__PURE__*/_jsxs(Action,{children:[/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsx(Text,{bold:true,textTransform:\"uppercase\",color:\"secondary\",fontSize:\"12px\",pr:\"4px\",children:\"HEART\"}),/*#__PURE__*/_jsx(Text,{bold:true,textTransform:\"uppercase\",color:\"textSubtle\",fontSize:\"12px\",children:t('Earned')})]}),/*#__PURE__*/_jsx(HarvestAction,{earnings:earnings,pid:pid}),/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsx(Text,{bold:true,textTransform:\"uppercase\",color:\"secondary\",fontSize:\"12px\",pr:\"4px\",children:farm.lpSymbol}),/*#__PURE__*/_jsx(Text,{bold:true,textTransform:\"uppercase\",color:\"textSubtle\",fontSize:\"12px\",children:t('Staked')})]}),!account?/*#__PURE__*/_jsx(ConnectWalletButton,{mt:\"8px\",width:\"100%\"}):renderApprovalOrStakeButton()]});};export default CardActions;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Farms/components/FarmCard/CardActionsContainer.tsx"],"names":["React","useState","useCallback","styled","Button","Flex","Text","getAddress","useAppDispatch","fetchFarmUserDataAsync","useTranslation","useERC20","ConnectWalletButton","StakeAction","HarvestAction","useApproveFarm","Action","div","CardActions","farm","account","addLiquidityUrl","cakePrice","lpLabel","t","requestedApproval","setRequestedApproval","pid","lpAddresses","userData","allowance","tokenBalance","stakedBalance","earnings","lpAddress","isApproved","isGreaterThan","dispatch","lpContract","onApprove","handleApprove","pids","console","error","renderApprovalOrStakeButton","lpSymbol","apr"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Text } from '@pancakeswap/uikit'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { DeserializedFarm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\nimport useApproveFarm from '../../hooks/useApproveFarm'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\nexport interface FarmWithStakedValue extends DeserializedFarm {\n  apr?: number\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  account?: string\n  addLiquidityUrl?: string\n  cakePrice?: BigNumber\n  lpLabel?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl, cakePrice, lpLabel }) => {\n  const { t } = useTranslation()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses } = farm\n  const { allowance, tokenBalance, stakedBalance, earnings } = farm.userData || {}\n  const lpAddress = getAddress(lpAddresses)\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n  const dispatch = useAppDispatch()\n\n  const lpContract = useERC20(lpAddress)\n\n  const { onApprove } = useApproveFarm(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, dispatch, account, pid])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        tokenName={farm.lpSymbol}\n        pid={pid}\n        apr={farm.apr}\n        lpLabel={lpLabel}\n        cakePrice={cakePrice}\n        addLiquidityUrl={addLiquidityUrl}\n      />\n    ) : (\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n        {t('Enable Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          HEART\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          {farm.lpSymbol}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Staked')}\n        </Text>\n      </Flex>\n      {!account ? <ConnectWalletButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n    </Action>\n  )\n}\n\nexport default CardActions\n"]},"metadata":{},"sourceType":"module"}