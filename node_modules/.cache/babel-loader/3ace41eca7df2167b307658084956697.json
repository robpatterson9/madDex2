{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Info/components/InfoCharts/BarChart/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { BarChart, ResponsiveContainer, XAxis, YAxis, Tooltip, Bar } from 'recharts';\nimport useTheme from 'hooks/useTheme';\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers';\nimport { BarChartLoader } from 'views/Info/components/ChartLoaders';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomBar = ({\n  x,\n  y,\n  width,\n  height,\n  fill\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    children: /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: x,\n      y: y,\n      fill: fill,\n      width: width,\n      height: height,\n      rx: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}; // Calls setHoverValue and setHoverDate when part of chart is hovered\n// Note: this NEEDs to be wrapped inside component and useEffect, if you plug it as is it will create big render problems (try and see console)\n\n\n_c = CustomBar;\n\nconst HoverUpdater = ({\n  payload,\n  setHoverValue,\n  setHoverDate\n}) => {\n  _s();\n\n  useEffect(() => {\n    setHoverValue(payload.value);\n    setHoverDate(format(payload.time, 'MMM d, yyyy'));\n  }, [payload.value, payload.time, setHoverValue, setHoverDate]);\n  return null;\n};\n\n_s(HoverUpdater, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = HoverUpdater;\n\nconst Chart = ({\n  data,\n  setHoverValue,\n  setHoverDate\n}) => {\n  _s2();\n\n  const {\n    theme\n  } = useTheme();\n\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(BarChartLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: \"100%\",\n    children: /*#__PURE__*/_jsxDEV(BarChart, {\n      data: data,\n      margin: {\n        top: 5,\n        right: 15,\n        left: 0,\n        bottom: 5\n      },\n      onMouseLeave: () => {\n        setHoverDate(undefined);\n        setHoverValue(undefined);\n      },\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"time\",\n        axisLine: false,\n        tickLine: false,\n        tickFormatter: time => format(time, 'dd'),\n        minTickGap: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        dataKey: \"value\",\n        tickCount: 6,\n        scale: \"linear\",\n        axisLine: false,\n        tickLine: false,\n        color: theme.colors.textSubtle,\n        fontSize: \"12px\",\n        tickFormatter: val => `$${formatAmount(val)}`,\n        orientation: \"right\",\n        tick: {\n          dx: 10,\n          fill: theme.colors.textSubtle\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        cursor: {\n          fill: theme.colors.backgroundDisabled\n        },\n        contentStyle: {\n          display: 'none'\n        },\n        formatter: (tooltipValue, name, props) => /*#__PURE__*/_jsxDEV(HoverUpdater, {\n          payload: props.payload,\n          setHoverValue: setHoverValue,\n          setHoverDate: setHoverDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"value\",\n        fill: theme.colors.primary,\n        shape: props => /*#__PURE__*/_jsxDEV(CustomBar, {\n          height: props.height,\n          width: props.width,\n          x: props.x,\n          y: props.y,\n          fill: theme.colors.primary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Chart, \"JkSxfi8+JQlqgIgDOc3wQN+nVIw=\", false, function () {\n  return [useTheme];\n});\n\n_c3 = Chart;\nexport default Chart;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CustomBar\");\n$RefreshReg$(_c2, \"HoverUpdater\");\n$RefreshReg$(_c3, \"Chart\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Info/components/InfoCharts/BarChart/index.tsx"],"names":["React","useEffect","format","BarChart","ResponsiveContainer","XAxis","YAxis","Tooltip","Bar","useTheme","formatAmount","BarChartLoader","CustomBar","x","y","width","height","fill","HoverUpdater","payload","setHoverValue","setHoverDate","value","time","Chart","data","theme","length","top","right","left","bottom","undefined","colors","textSubtle","val","dx","backgroundDisabled","display","tooltipValue","name","props","primary"],"mappings":"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","sourcesContent":["import React, { useEffect, Dispatch, SetStateAction } from 'react'\nimport { format } from 'date-fns'\nimport { BarChart, ResponsiveContainer, XAxis, YAxis, Tooltip, Bar } from 'recharts'\nimport useTheme from 'hooks/useTheme'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport { BarChartLoader } from 'views/Info/components/ChartLoaders'\n\nexport type LineChartProps = {\n  data: any[]\n  height?: string\n  chartHeight?: string\n  setHoverValue: Dispatch<SetStateAction<number | undefined>> // used for value on hover\n  setHoverDate: Dispatch<SetStateAction<string | undefined>> // used for label of valye\n} & React.HTMLAttributes<HTMLDivElement>\n\nconst CustomBar = ({\n  x,\n  y,\n  width,\n  height,\n  fill,\n}: {\n  x: number\n  y: number\n  width: number\n  height: number\n  fill: string\n}) => {\n  return (\n    <g>\n      <rect x={x} y={y} fill={fill} width={width} height={height} rx=\"2\" />\n    </g>\n  )\n}\n\n// Calls setHoverValue and setHoverDate when part of chart is hovered\n// Note: this NEEDs to be wrapped inside component and useEffect, if you plug it as is it will create big render problems (try and see console)\nconst HoverUpdater = ({ payload, setHoverValue, setHoverDate }) => {\n  useEffect(() => {\n    setHoverValue(payload.value)\n    setHoverDate(format(payload.time, 'MMM d, yyyy'))\n  }, [payload.value, payload.time, setHoverValue, setHoverDate])\n\n  return null\n}\n\nconst Chart = ({ data, setHoverValue, setHoverDate }: LineChartProps) => {\n  const { theme } = useTheme()\n  if (!data || data.length === 0) {\n    return <BarChartLoader />\n  }\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <BarChart\n        data={data}\n        margin={{\n          top: 5,\n          right: 15,\n          left: 0,\n          bottom: 5,\n        }}\n        onMouseLeave={() => {\n          setHoverDate(undefined)\n          setHoverValue(undefined)\n        }}\n      >\n        <XAxis\n          dataKey=\"time\"\n          axisLine={false}\n          tickLine={false}\n          tickFormatter={(time) => format(time, 'dd')}\n          minTickGap={10}\n        />\n        <YAxis\n          dataKey=\"value\"\n          tickCount={6}\n          scale=\"linear\"\n          axisLine={false}\n          tickLine={false}\n          color={theme.colors.textSubtle}\n          fontSize=\"12px\"\n          tickFormatter={(val) => `$${formatAmount(val)}`}\n          orientation=\"right\"\n          tick={{ dx: 10, fill: theme.colors.textSubtle }}\n        />\n        <Tooltip\n          cursor={{ fill: theme.colors.backgroundDisabled }}\n          contentStyle={{ display: 'none' }}\n          formatter={(tooltipValue, name, props) => (\n            <HoverUpdater payload={props.payload} setHoverValue={setHoverValue} setHoverDate={setHoverDate} />\n          )}\n        />\n        <Bar\n          dataKey=\"value\"\n          fill={theme.colors.primary}\n          shape={(props) => (\n            <CustomBar height={props.height} width={props.width} x={props.x} y={props.y} fill={theme.colors.primary} />\n          )}\n        />\n      </BarChart>\n    </ResponsiveContainer>\n  )\n}\n\nexport default Chart\n"]},"metadata":{},"sourceType":"module"}