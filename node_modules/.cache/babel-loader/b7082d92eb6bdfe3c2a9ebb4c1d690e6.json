{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Button,Box,Text}from'@pancakeswap/uikit';import{useWeb3React}from'@web3-react/core';import{useAppDispatch}from'state';import{useProfile}from'state/profile/hooks';import{useTranslation}from'contexts/Localization';import useToast from'hooks/useToast';import{fetchProfile}from'state/profile';import useApproveConfirmTransaction from'hooks/useApproveConfirmTransaction';import{getErc721Contract}from'utils/contractHelpers';import{useProfile as useProfileContract}from'hooks/useContract';import{useCallWithGasPrice}from'hooks/useCallWithGasPrice';import{getPancakeProfileAddress}from'utils/addressHelpers';import{ToastDescriptionWithTx}from'components/Toast';import ApproveConfirmButtons from'components/ApproveConfirmButtons';import SelectionCard from'views/ProfileCreation/SelectionCard';import{useUserNfts}from'state/nftMarket/hooks';import{NftLocation}from'state/nftMarket/types';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChangeProfilePicPage=function ChangeProfilePicPage(_ref){var onDismiss=_ref.onDismiss;var _useState=useState({tokenId:null,collectionAddress:null}),_useState2=_slicedToArray(_useState,2),selectedNft=_useState2[0],setSelectedNft=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var _useUserNfts=useUserNfts(),nfts=_useUserNfts.nfts;var dispatch=useAppDispatch();var _useProfile=useProfile(),profile=_useProfile.profile;var profileContract=useProfileContract();var _useWeb3React=useWeb3React(),account=_useWeb3React.account,library=_useWeb3React.library;var _useToast=useToast(),toastSuccess=_useToast.toastSuccess;var _useCallWithGasPrice=useCallWithGasPrice(),callWithGasPrice=_useCallWithGasPrice.callWithGasPrice;var nftsInWallet=nfts.filter(function(nft){return nft.location===NftLocation.WALLET;});var _useApproveConfirmTra=useApproveConfirmTransaction({onApprove:function onApprove(){var contract=getErc721Contract(selectedNft.collectionAddress,library.getSigner());return callWithGasPrice(contract,'approve',[getPancakeProfileAddress(),selectedNft.tokenId]);},onConfirm:function onConfirm(){if(!profile.isActive){return callWithGasPrice(profileContract,'reactivateProfile',[selectedNft.collectionAddress,selectedNft.tokenId]);}return callWithGasPrice(profileContract,'updateProfile',[selectedNft.collectionAddress,selectedNft.tokenId]);},onSuccess:function(){var _onSuccess=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2){var receipt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:receipt=_ref2.receipt;_context.next=3;return dispatch(fetchProfile(account));case 3:toastSuccess(t('Profile Updated!'),/*#__PURE__*/_jsx(ToastDescriptionWithTx,{txHash:receipt.transactionHash}));onDismiss();case 5:case\"end\":return _context.stop();}}},_callee);}));function onSuccess(_x){return _onSuccess.apply(this,arguments);}return onSuccess;}()}),isApproving=_useApproveConfirmTra.isApproving,isApproved=_useApproveConfirmTra.isApproved,isConfirmed=_useApproveConfirmTra.isConfirmed,isConfirming=_useApproveConfirmTra.isConfirming,handleApprove=_useApproveConfirmTra.handleApprove,handleConfirm=_useApproveConfirmTra.handleConfirm;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"textSubtle\",mb:\"24px\",children:t('Choose a new Collectible to use as your profile pic.')}),/*#__PURE__*/_jsx(Box,{maxHeight:\"300px\",overflowY:\"scroll\",children:nftsInWallet.map(function(walletNft){var handleChange=function handleChange(tokenId){setSelectedNft({tokenId:tokenId,collectionAddress:walletNft.collectionAddress});};return/*#__PURE__*/_jsx(SelectionCard,{name:\"profilePicture\",value:selectedNft.tokenId,image:walletNft.image.thumbnail,isChecked:walletNft.tokenId===selectedNft.tokenId,onChange:function onChange(){return handleChange(walletNft.tokenId);},disabled:isApproving||isConfirming||isConfirmed,children:/*#__PURE__*/_jsx(Text,{bold:true,children:walletNft.name})},walletNft.tokenId);})}),nfts.length===0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"textSubtle\",mb:\"16px\",children:t('Sorry! You donâ€™t have any eligible Collectibles in your wallet to use!')}),/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"textSubtle\",mb:\"24px\",children:t('Make sure you have a Pancake Collectible in your wallet and try again!')})]}),/*#__PURE__*/_jsx(ApproveConfirmButtons,{isApproveDisabled:isConfirmed||isConfirming||isApproved||selectedNft.tokenId===null,isApproving:isApproving,isConfirmDisabled:!isApproved||isConfirmed||selectedNft.tokenId===null,isConfirming:isConfirming,onApprove:handleApprove,onConfirm:handleConfirm}),/*#__PURE__*/_jsx(Button,{mt:\"8px\",variant:\"text\",width:\"100%\",onClick:onDismiss,disabled:isApproving||isConfirming,children:t('Close Window')})]});};export default ChangeProfilePicPage;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Profile/components/EditProfileModal/ChangeProfilePicView.tsx"],"names":["React","useState","Button","Box","Text","useWeb3React","useAppDispatch","useProfile","useTranslation","useToast","fetchProfile","useApproveConfirmTransaction","getErc721Contract","useProfileContract","useCallWithGasPrice","getPancakeProfileAddress","ToastDescriptionWithTx","ApproveConfirmButtons","SelectionCard","useUserNfts","NftLocation","ChangeProfilePicPage","onDismiss","tokenId","collectionAddress","selectedNft","setSelectedNft","t","nfts","dispatch","profile","profileContract","account","library","toastSuccess","callWithGasPrice","nftsInWallet","filter","nft","location","WALLET","onApprove","contract","getSigner","onConfirm","isActive","onSuccess","receipt","transactionHash","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","map","walletNft","handleChange","image","thumbnail","name","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Button, Box, InjectedModalProps, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { useProfile } from 'state/profile/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useToast from 'hooks/useToast'\nimport { fetchProfile } from 'state/profile'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport ApproveConfirmButtons from 'components/ApproveConfirmButtons'\nimport SelectionCard from 'views/ProfileCreation/SelectionCard'\nimport { useUserNfts } from 'state/nftMarket/hooks'\nimport { NftLocation } from 'state/nftMarket/types'\n\ntype ChangeProfilePicPageProps = InjectedModalProps\n\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\n  const [selectedNft, setSelectedNft] = useState({\n    tokenId: null,\n    collectionAddress: null,\n  })\n  const { t } = useTranslation()\n  const { nfts } = useUserNfts()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const profileContract = useProfileContract()\n  const { account, library } = useWeb3React()\n  const { toastSuccess } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n\n  const nftsInWallet = nfts.filter((nft) => nft.location === NftLocation.WALLET)\n\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onApprove: () => {\n        const contract = getErc721Contract(selectedNft.collectionAddress, library.getSigner())\n        return callWithGasPrice(contract, 'approve', [getPancakeProfileAddress(), selectedNft.tokenId])\n      },\n      onConfirm: () => {\n        if (!profile.isActive) {\n          return callWithGasPrice(profileContract, 'reactivateProfile', [\n            selectedNft.collectionAddress,\n            selectedNft.tokenId,\n          ])\n        }\n\n        return callWithGasPrice(profileContract, 'updateProfile', [selectedNft.collectionAddress, selectedNft.tokenId])\n      },\n      onSuccess: async ({ receipt }) => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account))\n        toastSuccess(t('Profile Updated!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n\n        onDismiss()\n      },\n    })\n\n  return (\n    <>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t('Choose a new Collectible to use as your profile pic.')}\n      </Text>\n      <Box maxHeight=\"300px\" overflowY=\"scroll\">\n        {nftsInWallet.map((walletNft) => {\n          const handleChange = (tokenId: string) => {\n            setSelectedNft({\n              tokenId,\n              collectionAddress: walletNft.collectionAddress,\n            })\n          }\n          return (\n            <SelectionCard\n              name=\"profilePicture\"\n              key={walletNft.tokenId}\n              value={selectedNft.tokenId}\n              image={walletNft.image.thumbnail}\n              isChecked={walletNft.tokenId === selectedNft.tokenId}\n              onChange={() => handleChange(walletNft.tokenId)}\n              disabled={isApproving || isConfirming || isConfirmed}\n            >\n              <Text bold>{walletNft.name}</Text>\n            </SelectionCard>\n          )\n        })}\n      </Box>\n      {nfts.length === 0 && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {t('Sorry! You donâ€™t have any eligible Collectibles in your wallet to use!')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t('Make sure you have a Pancake Collectible in your wallet and try again!')}\n          </Text>\n        </>\n      )}\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || selectedNft.tokenId === null}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed || selectedNft.tokenId === null}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n      <Button mt=\"8px\" variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\n        {t('Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default ChangeProfilePicPage\n"]},"metadata":{},"sourceType":"module"}