{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Box,Flex,Modal,Button,Spinner}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import useTheme from'hooks/useTheme';import useGetVotingPower from'../hooks/useGetVotingPower';import DetailsView from'./CastVoteModal/DetailsView';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var VoteDetailsModal=function VoteDetailsModal(_ref){var block=_ref.block,onDismiss=_ref.onDismiss;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),modalIsOpen=_useState2[0],setModalIsOpen=_useState2[1];var _useGetVotingPower=useGetVotingPower(block,modalIsOpen),isLoading=_useGetVotingPower.isLoading,total=_useGetVotingPower.total,cakeBalance=_useGetVotingPower.cakeBalance,cakeVaultBalance=_useGetVotingPower.cakeVaultBalance,cakePoolBalance=_useGetVotingPower.cakePoolBalance,poolsBalance=_useGetVotingPower.poolsBalance,cakeBnbLpBalance=_useGetVotingPower.cakeBnbLpBalance;var _useTheme=useTheme(),theme=_useTheme.theme;var handleDismiss=function handleDismiss(){setModalIsOpen(false);onDismiss();};return/*#__PURE__*/_jsx(Modal,{title:t('Voting Power'),onDismiss:handleDismiss,headerBackground:theme.colors.gradients.cardHeader,children:/*#__PURE__*/_jsx(Box,{mb:\"24px\",width:\"320px\",children:isLoading?/*#__PURE__*/_jsx(Flex,{height:\"450px\",alignItems:\"center\",justifyContent:\"center\",children:/*#__PURE__*/_jsx(Spinner,{size:80})}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(DetailsView,{total:total,cakeBalance:cakeBalance,cakeVaultBalance:cakeVaultBalance,cakePoolBalance:cakePoolBalance,poolsBalance:poolsBalance,cakeBnbLpBalance:cakeBnbLpBalance}),/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:onDismiss,width:\"100%\",mt:\"16px\",children:t('Close')})]})})});};export default VoteDetailsModal;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Voting/components/VoteDetailsModal.tsx"],"names":["React","useState","Box","Flex","Modal","Button","Spinner","useTranslation","useTheme","useGetVotingPower","DetailsView","VoteDetailsModal","block","onDismiss","t","modalIsOpen","setModalIsOpen","isLoading","total","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","theme","handleDismiss","colors","gradients","cardHeader"],"mappings":"wJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,GAAT,CAAcC,IAAd,CAAwCC,KAAxC,CAA+CC,MAA/C,CAAuDC,OAAvD,KAAsE,oBAAtE,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,4BAA9B,CACA,MAAOC,CAAAA,WAAP,KAAwB,6BAAxB,C,6IAMA,GAAMC,CAAAA,gBAAiD,CAAG,QAApDA,CAAAA,gBAAoD,MAA0B,IAAvBC,CAAAA,KAAuB,MAAvBA,KAAuB,CAAhBC,SAAgB,MAAhBA,SAAgB,CAClF,oBAAcN,cAAc,EAA5B,CAAQO,CAAR,iBAAQA,CAAR,CACA,cAAsCb,QAAQ,CAAC,IAAD,CAA9C,wCAAOc,WAAP,eAAoBC,cAApB,eACA,uBACEP,iBAAiB,CAACG,KAAD,CAAQG,WAAR,CADnB,CAAQE,SAAR,oBAAQA,SAAR,CAAmBC,KAAnB,oBAAmBA,KAAnB,CAA0BC,WAA1B,oBAA0BA,WAA1B,CAAuCC,gBAAvC,oBAAuCA,gBAAvC,CAAyDC,eAAzD,oBAAyDA,eAAzD,CAA0EC,YAA1E,oBAA0EA,YAA1E,CAAwFC,gBAAxF,oBAAwFA,gBAAxF,CAEA,cAAkBf,QAAQ,EAA1B,CAAQgB,KAAR,WAAQA,KAAR,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BT,cAAc,CAAC,KAAD,CAAd,CACAH,SAAS,GACV,CAHD,CAKA,mBACE,KAAC,KAAD,EAAO,KAAK,CAAEC,CAAC,CAAC,cAAD,CAAf,CAAiC,SAAS,CAAEW,aAA5C,CAA2D,gBAAgB,CAAED,KAAK,CAACE,MAAN,CAAaC,SAAb,CAAuBC,UAApG,uBACE,KAAC,GAAD,EAAK,EAAE,CAAC,MAAR,CAAe,KAAK,CAAC,OAArB,UACGX,SAAS,cACR,KAAC,IAAD,EAAM,MAAM,CAAC,OAAb,CAAqB,UAAU,CAAC,QAAhC,CAAyC,cAAc,CAAC,QAAxD,uBACE,KAAC,OAAD,EAAS,IAAI,CAAE,EAAf,EADF,EADQ,cAKR,wCACE,KAAC,WAAD,EACE,KAAK,CAAEC,KADT,CAEE,WAAW,CAAEC,WAFf,CAGE,gBAAgB,CAAEC,gBAHpB,CAIE,eAAe,CAAEC,eAJnB,CAKE,YAAY,CAAEC,YALhB,CAME,gBAAgB,CAAEC,gBANpB,EADF,cASE,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,OAAO,CAAEV,SAArC,CAAgD,KAAK,CAAC,MAAtD,CAA6D,EAAE,CAAC,MAAhE,UACGC,CAAC,CAAC,OAAD,CADJ,EATF,GANJ,EADF,EADF,CAyBD,CArCD,CAuCA,cAAeH,CAAAA,gBAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Box, Flex, InjectedModalProps, Modal, Button, Spinner } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useGetVotingPower from '../hooks/useGetVotingPower'\nimport DetailsView from './CastVoteModal/DetailsView'\n\ninterface VoteDetailsModalProps extends InjectedModalProps {\n  block: number\n}\n\nconst VoteDetailsModal: React.FC<VoteDetailsModalProps> = ({ block, onDismiss }) => {\n  const { t } = useTranslation()\n  const [modalIsOpen, setModalIsOpen] = useState(true)\n  const { isLoading, total, cakeBalance, cakeVaultBalance, cakePoolBalance, poolsBalance, cakeBnbLpBalance } =\n    useGetVotingPower(block, modalIsOpen)\n  const { theme } = useTheme()\n\n  const handleDismiss = () => {\n    setModalIsOpen(false)\n    onDismiss()\n  }\n\n  return (\n    <Modal title={t('Voting Power')} onDismiss={handleDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      <Box mb=\"24px\" width=\"320px\">\n        {isLoading ? (\n          <Flex height=\"450px\" alignItems=\"center\" justifyContent=\"center\">\n            <Spinner size={80} />\n          </Flex>\n        ) : (\n          <>\n            <DetailsView\n              total={total}\n              cakeBalance={cakeBalance}\n              cakeVaultBalance={cakeVaultBalance}\n              cakePoolBalance={cakePoolBalance}\n              poolsBalance={poolsBalance}\n              cakeBnbLpBalance={cakeBnbLpBalance}\n            />\n            <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" mt=\"16px\">\n              {t('Close')}\n            </Button>\n          </>\n        )}\n      </Box>\n    </Modal>\n  )\n}\n\nexport default VoteDetailsModal\n"]},"metadata":{},"sourceType":"module"}