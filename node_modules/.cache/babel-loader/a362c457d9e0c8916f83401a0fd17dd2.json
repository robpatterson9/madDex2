{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import{Link as ReactRouterLink}from'react-router-dom';import styled from'styled-components';import{BscScanIcon,Flex,IconButton,Link,Button,useModal}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{getBscScanLink}from'utils';import{formatNumber}from'utils/formatBalance';import truncateHash from'utils/truncateHash';import{useWeb3React}from'@web3-react/core';import EditProfileAvatar from'./EditProfileAvatar';import BannerHeader from'../../components/BannerHeader';import StatBox,{StatBoxItem}from'../../components/StatBox';import MarketPageTitle from'../../components/MarketPageTitle';import EditProfileModal from'./EditProfileModal';import AvatarImage from'../../components/BannerHeader/AvatarImage';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledIconButton=styled(IconButton)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: fit-content;\\n\"])));// Account and profile passed down as the profile could be used to render _other_ users' profiles.\nvar ProfileHeader=function ProfileHeader(_ref){var _profile$nft,_profile$nft$image;var accountPath=_ref.accountPath,profile=_ref.profile,achievements=_ref.achievements,nftCollected=_ref.nftCollected;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useModal=useModal(/*#__PURE__*/_jsx(EditProfileModal,{}),false),_useModal2=_slicedToArray(_useModal,1),onEditProfileModal=_useModal2[0];var isConnectedAccount=(account===null||account===void 0?void 0:account.toLowerCase())===(accountPath===null||accountPath===void 0?void 0:accountPath.toLowerCase());var numNftCollected=nftCollected?formatNumber(nftCollected,0,0):'-';var numPoints=(profile===null||profile===void 0?void 0:profile.points)?formatNumber(profile.points,0,0):'-';var numAchievements=(achievements===null||achievements===void 0?void 0:achievements.length)?formatNumber(achievements.length,0,0):'-';var avatarImage=(profile===null||profile===void 0?void 0:(_profile$nft=profile.nft)===null||_profile$nft===void 0?void 0:(_profile$nft$image=_profile$nft.image)===null||_profile$nft$image===void 0?void 0:_profile$nft$image.thumbnail)||'/images/nfts/no-profile-md.png';var getBannerImage=function getBannerImage(){var imagePath='/images/teams';if(profile){switch(profile.teamId){case 1:return\"\".concat(imagePath,\"/storm-banner.png\");case 2:return\"\".concat(imagePath,\"/flippers-banner.png\");case 3:return\"\".concat(imagePath,\"/cakers-banner.png\");default:break;}}return\"\".concat(imagePath,\"/no-team-banner.png\");};var getAvatar=function getAvatar(){var getIconButtons=function getIconButtons(){return/*#__PURE__*/ (// TODO: Share functionality once user profiles routed by ID\n_jsx(Flex,{display:\"inline-flex\",children:accountPath&&/*#__PURE__*/_jsx(StyledIconButton,{target:\"_blank\",as:\"a\",href:getBscScanLink(accountPath,'address'),alt:t('View BscScan for user address'),children:/*#__PURE__*/_jsx(BscScanIcon,{width:\"20px\",color:\"primary\"})})}));};var getImage=function getImage(){return/*#__PURE__*/_jsx(_Fragment,{children:profile&&accountPath&&isConnectedAccount?/*#__PURE__*/_jsx(EditProfileAvatar,{src:avatarImage,alt:t('User profile picture')}):/*#__PURE__*/_jsx(AvatarImage,{src:avatarImage,alt:t('User profile picture')})});};return/*#__PURE__*/_jsxs(_Fragment,{children:[getImage(),getIconButtons()]});};var getTitle=function getTitle(){if(profile===null||profile===void 0?void 0:profile.username){return\"@\".concat(profile.username);}if(accountPath){return truncateHash(accountPath,5,3);}return null;};var renderDescription=function renderDescription(){var getActivateButton=function getActivateButton(){if(!profile){return/*#__PURE__*/_jsx(ReactRouterLink,{to:\"/create-profile\",children:/*#__PURE__*/_jsx(Button,{mt:\"16px\",children:t('Activate Profile')})});}return/*#__PURE__*/_jsx(Button,{width:\"fit-content\",mt:\"16px\",onClick:onEditProfileModal,children:t('Reactivate Profile')});};return/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",mb:[16,null,0],mr:[0,null,16],children:[accountPath&&(profile===null||profile===void 0?void 0:profile.username)&&/*#__PURE__*/_jsx(Link,{href:getBscScanLink(accountPath,'address'),external:true,bold:true,color:\"primary\",children:truncateHash(accountPath)}),accountPath&&isConnectedAccount&&(!profile||!(profile===null||profile===void 0?void 0:profile.nft))&&getActivateButton()]});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(BannerHeader,{bannerImage:getBannerImage(),bannerAlt:t('User team banner'),avatar:getAvatar()}),/*#__PURE__*/_jsx(MarketPageTitle,{pb:\"48px\",title:getTitle(),description:renderDescription(),children:/*#__PURE__*/_jsxs(StatBox,{children:[/*#__PURE__*/_jsx(StatBoxItem,{title:t('NFT Collected'),stat:numNftCollected}),/*#__PURE__*/_jsx(StatBoxItem,{title:t('Points'),stat:numPoints}),/*#__PURE__*/_jsx(StatBoxItem,{title:t('Achievements'),stat:numAchievements})]})})]});};export default ProfileHeader;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Profile/components/ProfileHeader.tsx"],"names":["React","Link","ReactRouterLink","styled","BscScanIcon","Flex","IconButton","Button","useModal","useTranslation","getBscScanLink","formatNumber","truncateHash","useWeb3React","EditProfileAvatar","BannerHeader","StatBox","StatBoxItem","MarketPageTitle","EditProfileModal","AvatarImage","StyledIconButton","ProfileHeader","accountPath","profile","achievements","nftCollected","t","account","onEditProfileModal","isConnectedAccount","toLowerCase","numNftCollected","numPoints","points","numAchievements","length","avatarImage","nft","image","thumbnail","getBannerImage","imagePath","teamId","getAvatar","getIconButtons","getImage","getTitle","username","renderDescription","getActivateButton"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link as ReactRouterLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { BscScanIcon, Flex, IconButton, Link, Button, useModal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport { formatNumber } from 'utils/formatBalance'\nimport truncateHash from 'utils/truncateHash'\nimport { Achievement, Profile } from 'state/types'\nimport { useWeb3React } from '@web3-react/core'\nimport EditProfileAvatar from './EditProfileAvatar'\nimport BannerHeader from '../../components/BannerHeader'\nimport StatBox, { StatBoxItem } from '../../components/StatBox'\nimport MarketPageTitle from '../../components/MarketPageTitle'\nimport EditProfileModal from './EditProfileModal'\nimport AvatarImage from '../../components/BannerHeader/AvatarImage'\n\ninterface HeaderProps {\n  accountPath: string\n  profile: Profile\n  achievements: Achievement[]\n  nftCollected: number\n}\n\nconst StyledIconButton = styled(IconButton)`\n  width: fit-content;\n`\n\n// Account and profile passed down as the profile could be used to render _other_ users' profiles.\nconst ProfileHeader: React.FC<HeaderProps> = ({ accountPath, profile, achievements, nftCollected }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n\n  const isConnectedAccount = account?.toLowerCase() === accountPath?.toLowerCase()\n  const numNftCollected = nftCollected ? formatNumber(nftCollected, 0, 0) : '-'\n  const numPoints = profile?.points ? formatNumber(profile.points, 0, 0) : '-'\n  const numAchievements = achievements?.length ? formatNumber(achievements.length, 0, 0) : '-'\n\n  const avatarImage = profile?.nft?.image?.thumbnail || '/images/nfts/no-profile-md.png'\n\n  const getBannerImage = () => {\n    const imagePath = '/images/teams'\n    if (profile) {\n      switch (profile.teamId) {\n        case 1:\n          return `${imagePath}/storm-banner.png`\n        case 2:\n          return `${imagePath}/flippers-banner.png`\n        case 3:\n          return `${imagePath}/cakers-banner.png`\n        default:\n          break\n      }\n    }\n    return `${imagePath}/no-team-banner.png`\n  }\n\n  const getAvatar = () => {\n    const getIconButtons = () => {\n      return (\n        // TODO: Share functionality once user profiles routed by ID\n        <Flex display=\"inline-flex\">\n          {accountPath && (\n            <StyledIconButton\n              target=\"_blank\"\n              as=\"a\"\n              href={getBscScanLink(accountPath, 'address')}\n              alt={t('View BscScan for user address')}\n            >\n              <BscScanIcon width=\"20px\" color=\"primary\" />\n            </StyledIconButton>\n          )}\n        </Flex>\n      )\n    }\n\n    const getImage = () => {\n      return (\n        <>\n          {profile && accountPath && isConnectedAccount ? (\n            <EditProfileAvatar src={avatarImage} alt={t('User profile picture')} />\n          ) : (\n            <AvatarImage src={avatarImage} alt={t('User profile picture')} />\n          )}\n        </>\n      )\n    }\n    return (\n      <>\n        {getImage()}\n        {getIconButtons()}\n      </>\n    )\n  }\n\n  const getTitle = () => {\n    if (profile?.username) {\n      return `@${profile.username}`\n    }\n\n    if (accountPath) {\n      return truncateHash(accountPath, 5, 3)\n    }\n\n    return null\n  }\n\n  const renderDescription = () => {\n    const getActivateButton = () => {\n      if (!profile) {\n        return (\n          <ReactRouterLink to=\"/create-profile\">\n            <Button mt=\"16px\">{t('Activate Profile')}</Button>\n          </ReactRouterLink>\n        )\n      }\n      return (\n        <Button width=\"fit-content\" mt=\"16px\" onClick={onEditProfileModal}>\n          {t('Reactivate Profile')}\n        </Button>\n      )\n    }\n\n    return (\n      <Flex flexDirection=\"column\" mb={[16, null, 0]} mr={[0, null, 16]}>\n        {accountPath && profile?.username && (\n          <Link href={getBscScanLink(accountPath, 'address')} external bold color=\"primary\">\n            {truncateHash(accountPath)}\n          </Link>\n        )}\n        {accountPath && isConnectedAccount && (!profile || !profile?.nft) && getActivateButton()}\n      </Flex>\n    )\n  }\n\n  return (\n    <>\n      <BannerHeader bannerImage={getBannerImage()} bannerAlt={t('User team banner')} avatar={getAvatar()} />\n      <MarketPageTitle pb=\"48px\" title={getTitle()} description={renderDescription()}>\n        <StatBox>\n          <StatBoxItem title={t('NFT Collected')} stat={numNftCollected} />\n          <StatBoxItem title={t('Points')} stat={numPoints} />\n          <StatBoxItem title={t('Achievements')} stat={numAchievements} />\n        </StatBox>\n      </MarketPageTitle>\n    </>\n  )\n}\n\nexport default ProfileHeader\n"]},"metadata":{},"sourceType":"module"}