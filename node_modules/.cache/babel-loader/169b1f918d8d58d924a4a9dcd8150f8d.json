{"ast":null,"code":"import React from'react';import{useLocation,useParams}from'react-router';import{Text}from'@pancakeswap/uikit';import{formatNumber}from'utils/formatBalance';import{useTranslation}from'contexts/Localization';import Container from'components/Layout/Container';import MarketPageHeader from'../components/MarketPageHeader';import MarketPageTitle from'../components/MarketPageTitle';import StatBox,{StatBoxItem}from'../components/StatBox';import BannerHeader from'../components/BannerHeader';import AvatarImage from'../components/BannerHeader/AvatarImage';import BaseSubMenu from'../components/BaseSubMenu';import{nftsBaseUrl}from'../constants';import TopBar from'./TopBar';import LowestPriceStatBoxItem from'./LowestPriceStatBoxItem';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var DEFAULT_TABS='#items';var Header=function Header(_ref){var collection=_ref.collection;var _useParams=useParams(),collectionAddress=_useParams.collectionAddress;var totalSupply=collection.totalSupply,numberTokensListed=collection.numberTokensListed,totalVolumeBNB=collection.totalVolumeBNB,banner=collection.banner,avatar=collection.avatar;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useLocation=useLocation(),pathname=_useLocation.pathname,hash=_useLocation.hash;var volume=parseFloat(totalVolumeBNB).toLocaleString(undefined,{minimumFractionDigits:3,maximumFractionDigits:3});var itemsConfig=[{label:t('Items'),href:\"\".concat(nftsBaseUrl,\"/collections/\").concat(collectionAddress,\"#items\")},{label:t('Traits'),href:\"\".concat(nftsBaseUrl,\"/collections/\").concat(collectionAddress,\"#traits\")}];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(MarketPageHeader,{children:[/*#__PURE__*/_jsx(TopBar,{}),/*#__PURE__*/_jsx(BannerHeader,{bannerImage:banner.large,avatar:/*#__PURE__*/_jsx(AvatarImage,{src:avatar})}),/*#__PURE__*/_jsx(MarketPageTitle,{title:collection.name,description:collection.description?/*#__PURE__*/_jsx(Text,{color:\"textSubtle\",children:t(collection.description)}):null,children:/*#__PURE__*/_jsxs(StatBox,{children:[/*#__PURE__*/_jsx(StatBoxItem,{title:t('Items'),stat:formatNumber(Number(totalSupply),0,0)}),/*#__PURE__*/_jsx(StatBoxItem,{title:t('Items listed'),stat:formatNumber(Number(numberTokensListed),0,0)}),/*#__PURE__*/_jsx(LowestPriceStatBoxItem,{collectionAddress:collection.address}),/*#__PURE__*/_jsx(StatBoxItem,{title:t('Vol. (%symbol%)',{symbol:'BNB'}),stat:volume})]})})]}),/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(BaseSubMenu,{items:itemsConfig,activeItem:\"\".concat(pathname).concat(hash||DEFAULT_TABS),mt:\"24px\",mb:\"8px\"})})]});};export default Header;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Collection/Header.tsx"],"names":["React","useLocation","useParams","Text","formatNumber","useTranslation","Container","MarketPageHeader","MarketPageTitle","StatBox","StatBoxItem","BannerHeader","AvatarImage","BaseSubMenu","nftsBaseUrl","TopBar","LowestPriceStatBoxItem","DEFAULT_TABS","Header","collection","collectionAddress","totalSupply","numberTokensListed","totalVolumeBNB","banner","avatar","t","pathname","hash","volume","parseFloat","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","itemsConfig","label","href","large","name","description","Number","address","symbol"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useLocation, useParams } from 'react-router'\nimport { Text } from '@pancakeswap/uikit'\nimport { Collection } from 'state/nftMarket/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport MarketPageHeader from '../components/MarketPageHeader'\nimport MarketPageTitle from '../components/MarketPageTitle'\nimport StatBox, { StatBoxItem } from '../components/StatBox'\nimport BannerHeader from '../components/BannerHeader'\nimport AvatarImage from '../components/BannerHeader/AvatarImage'\nimport BaseSubMenu from '../components/BaseSubMenu'\nimport { nftsBaseUrl } from '../constants'\nimport TopBar from './TopBar'\nimport LowestPriceStatBoxItem from './LowestPriceStatBoxItem'\n\ninterface HeaderProps {\n  collection: Collection\n}\n\nconst DEFAULT_TABS = '#items'\n\nconst Header: React.FC<HeaderProps> = ({ collection }) => {\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\n  const { totalSupply, numberTokensListed, totalVolumeBNB, banner, avatar } = collection\n  const { t } = useTranslation()\n  const { pathname, hash } = useLocation()\n\n  const volume = parseFloat(totalVolumeBNB).toLocaleString(undefined, {\n    minimumFractionDigits: 3,\n    maximumFractionDigits: 3,\n  })\n\n  const itemsConfig = [\n    {\n      label: t('Items'),\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#items`,\n    },\n    {\n      label: t('Traits'),\n      href: `${nftsBaseUrl}/collections/${collectionAddress}#traits`,\n    },\n  ]\n\n  return (\n    <>\n      <MarketPageHeader>\n        <TopBar />\n        <BannerHeader bannerImage={banner.large} avatar={<AvatarImage src={avatar} />} />\n        <MarketPageTitle\n          title={collection.name}\n          description={collection.description ? <Text color=\"textSubtle\">{t(collection.description)}</Text> : null}\n        >\n          <StatBox>\n            <StatBoxItem title={t('Items')} stat={formatNumber(Number(totalSupply), 0, 0)} />\n            <StatBoxItem title={t('Items listed')} stat={formatNumber(Number(numberTokensListed), 0, 0)} />\n            <LowestPriceStatBoxItem collectionAddress={collection.address} />\n            <StatBoxItem title={t('Vol. (%symbol%)', { symbol: 'BNB' })} stat={volume} />\n          </StatBox>\n        </MarketPageTitle>\n      </MarketPageHeader>\n      <Container>\n        <BaseSubMenu items={itemsConfig} activeItem={`${pathname}${hash || DEFAULT_TABS}`} mt=\"24px\" mb=\"8px\" />\n      </Container>\n    </>\n  )\n}\n\nexport default Header\n"]},"metadata":{},"sourceType":"module"}