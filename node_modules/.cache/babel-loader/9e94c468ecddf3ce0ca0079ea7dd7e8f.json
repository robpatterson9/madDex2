{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React from'react';import styled from'styled-components';import{ChevronRightIcon,Button as UIKitButton,AutoRenewIcon,ChevronDownIcon,Box,Flex}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var ButtonArrangement;(function(ButtonArrangement){ButtonArrangement[\"ROW\"]=\"row\";ButtonArrangement[\"SEQUENTIAL\"]=\"sequential\";})(ButtonArrangement||(ButtonArrangement={}));var StyledApproveConfirmButtonRow=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  display: grid;\\n  grid-template-columns: 1fr;\\n  justify-content: center;\\n\\n  \",\" {\\n    grid-template-columns: 1fr 24px 1fr;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.mediaQueries.md;});var Button=styled(UIKitButton)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  width: 100%;\\n\\n  \",\" {\\n    min-width: 160px;\\n  }\\n\"])),function(_ref2){var theme=_ref2.theme;return theme.mediaQueries.md;});var iconAttrs={width:'24px',color:'textDisabled'};var ChevronRight=styled(ChevronRightIcon).attrs(iconAttrs)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: none;\\n\\n  \",\" {\\n    display: block;\\n  }\\n\"])),function(_ref3){var theme=_ref3.theme;return theme.mediaQueries.md;});var ChevronBottom=styled(ChevronDownIcon).attrs(iconAttrs)(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: block;\\n\\n  \",\" {\\n    display: none;\\n  }\\n\"])),function(_ref4){var theme=_ref4.theme;return theme.mediaQueries.md;});var spinnerIcon=/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,color:\"currentColor\"});var ApproveConfirmButtons=function ApproveConfirmButtons(_ref5){var isApproveDisabled=_ref5.isApproveDisabled,isApproving=_ref5.isApproving,isConfirming=_ref5.isConfirming,isConfirmDisabled=_ref5.isConfirmDisabled,onApprove=_ref5.onApprove,onConfirm=_ref5.onConfirm,_ref5$buttonArrangeme=_ref5.buttonArrangement,buttonArrangement=_ref5$buttonArrangeme===void 0?ButtonArrangement.ROW:_ref5$buttonArrangeme,confirmLabel=_ref5.confirmLabel,confirmId=_ref5.confirmId;var _useTranslation=useTranslation(),t=_useTranslation.t;var confirmButtonText=confirmLabel!==null&&confirmLabel!==void 0?confirmLabel:t('Confirm');var ApproveConfirmRow=function ApproveConfirmRow(){return/*#__PURE__*/_jsxs(StyledApproveConfirmButtonRow,{children:[/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(Button,{disabled:isApproveDisabled,onClick:onApprove,endIcon:isApproving?spinnerIcon:undefined,isLoading:isApproving,children:isApproving?t('Enabling'):t('Enable')})}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"center\",children:[/*#__PURE__*/_jsx(ChevronRight,{}),/*#__PURE__*/_jsx(ChevronBottom,{})]}),/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(Button,{id:confirmId,onClick:onConfirm,disabled:isConfirmDisabled,isLoading:isConfirming,endIcon:isConfirming?spinnerIcon:undefined,children:isConfirming?t('Confirming'):confirmButtonText})})]});};var ApproveConfirmSequential=function ApproveConfirmSequential(){return/*#__PURE__*/_jsx(_Fragment,{children:isApproveDisabled?/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(Button,{id:confirmId,onClick:onConfirm,disabled:isConfirmDisabled,isLoading:isConfirming,endIcon:isConfirming?spinnerIcon:undefined,children:isConfirming?t('Confirming'):confirmButtonText})}):/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(Button,{onClick:onApprove,endIcon:isApproving?spinnerIcon:undefined,isLoading:isApproving,children:isApproving?t('Enabling'):t('Enable')})})});};return buttonArrangement===ButtonArrangement.ROW?ApproveConfirmRow():ApproveConfirmSequential();};export default ApproveConfirmButtons;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/components/ApproveConfirmButtons.tsx"],"names":["React","styled","ChevronRightIcon","Button","UIKitButton","AutoRenewIcon","ChevronDownIcon","Box","Flex","useTranslation","ButtonArrangement","StyledApproveConfirmButtonRow","div","theme","mediaQueries","md","iconAttrs","width","color","ChevronRight","attrs","ChevronBottom","spinnerIcon","ApproveConfirmButtons","isApproveDisabled","isApproving","isConfirming","isConfirmDisabled","onApprove","onConfirm","buttonArrangement","ROW","confirmLabel","confirmId","t","confirmButtonText","ApproveConfirmRow","undefined","ApproveConfirmSequential"],"mappings":"+OAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,gBAAT,CAA2BC,MAAM,GAAIC,CAAAA,WAArC,CAAkDC,aAAlD,CAAiEC,eAAjE,CAAkFC,GAAlF,CAAuFC,IAAvF,KAAmG,oBAAnG,CACA,OAASC,cAAT,KAA+B,uBAA/B,C,6IAEA,UAAYC,CAAAA,iBAAZ,C,UAAYA,iB,EAAAA,iB,cAAAA,iB,+BAAAA,iB,GAAAA,iB,MAiBZ,GAAMC,CAAAA,6BAA6B,CAAGV,MAAM,CAACW,GAAV,kOAM/B,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,YAAN,CAAmBC,EAAlC,EAN+B,CAAnC,CAWA,GAAMZ,CAAAA,MAAM,CAAGF,MAAM,CAACG,WAAD,CAAT,4HAGR,mBAAGS,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,YAAN,CAAmBC,EAAlC,EAHQ,CAAZ,CAQA,GAAMC,CAAAA,SAAS,CAAG,CAAEC,KAAK,CAAE,MAAT,CAAiBC,KAAK,CAAE,cAAxB,CAAlB,CAEA,GAAMC,CAAAA,YAAY,CAAGlB,MAAM,CAACC,gBAAD,CAAN,CAAyBkB,KAAzB,CAA+BJ,SAA/B,CAAH,4HAGd,mBAAGH,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,YAAN,CAAmBC,EAAlC,EAHc,CAAlB,CAQA,GAAMM,CAAAA,aAAa,CAAGpB,MAAM,CAACK,eAAD,CAAN,CAAwBc,KAAxB,CAA8BJ,SAA9B,CAAH,4HAGf,mBAAGH,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,YAAN,CAAmBC,EAAlC,EAHe,CAAnB,CAQA,GAAMO,CAAAA,WAAW,cAAG,KAAC,aAAD,EAAe,IAAI,KAAnB,CAAoB,KAAK,CAAC,cAA1B,EAApB,CAEA,GAAMC,CAAAA,qBAA2D,CAAG,QAA9DA,CAAAA,qBAA8D,OAU9D,IATJC,CAAAA,iBASI,OATJA,iBASI,CARJC,WAQI,OARJA,WAQI,CAPJC,YAOI,OAPJA,YAOI,CANJC,iBAMI,OANJA,iBAMI,CALJC,SAKI,OALJA,SAKI,CAJJC,SAII,OAJJA,SAII,6BAHJC,iBAGI,CAHJA,iBAGI,gCAHgBpB,iBAAiB,CAACqB,GAGlC,uBAFJC,YAEI,OAFJA,YAEI,CADJC,SACI,OADJA,SACI,CACJ,oBAAcxB,cAAc,EAA5B,CAAQyB,CAAR,iBAAQA,CAAR,CACA,GAAMC,CAAAA,iBAAiB,CAAGH,YAAH,SAAGA,YAAH,UAAGA,YAAH,CAAmBE,CAAC,CAAC,SAAD,CAA3C,CAEA,GAAME,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B,mBACE,MAAC,6BAAD,yBACE,KAAC,GAAD,wBACE,KAAC,MAAD,EACE,QAAQ,CAAEZ,iBADZ,CAEE,OAAO,CAAEI,SAFX,CAGE,OAAO,CAAEH,WAAW,CAAGH,WAAH,CAAiBe,SAHvC,CAIE,SAAS,CAAEZ,WAJb,UAMGA,WAAW,CAAGS,CAAC,CAAC,UAAD,CAAJ,CAAmBA,CAAC,CAAC,QAAD,CANlC,EADF,EADF,cAWE,MAAC,IAAD,EAAM,cAAc,CAAC,QAArB,wBACE,KAAC,YAAD,IADF,cAEE,KAAC,aAAD,IAFF,GAXF,cAeE,KAAC,GAAD,wBACE,KAAC,MAAD,EACE,EAAE,CAAED,SADN,CAEE,OAAO,CAAEJ,SAFX,CAGE,QAAQ,CAAEF,iBAHZ,CAIE,SAAS,CAAED,YAJb,CAKE,OAAO,CAAEA,YAAY,CAAGJ,WAAH,CAAiBe,SALxC,UAOGX,YAAY,CAAGQ,CAAC,CAAC,YAAD,CAAJ,CAAqBC,iBAPpC,EADF,EAfF,GADF,CA6BD,CA9BD,CAgCA,GAAMG,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,EAAM,CACrC,mBACE,yBACGd,iBAAiB,cAChB,KAAC,GAAD,wBACE,KAAC,MAAD,EACE,EAAE,CAAES,SADN,CAEE,OAAO,CAAEJ,SAFX,CAGE,QAAQ,CAAEF,iBAHZ,CAIE,SAAS,CAAED,YAJb,CAKE,OAAO,CAAEA,YAAY,CAAGJ,WAAH,CAAiBe,SALxC,UAOGX,YAAY,CAAGQ,CAAC,CAAC,YAAD,CAAJ,CAAqBC,iBAPpC,EADF,EADgB,cAahB,KAAC,GAAD,wBACE,KAAC,MAAD,EAAQ,OAAO,CAAEP,SAAjB,CAA4B,OAAO,CAAEH,WAAW,CAAGH,WAAH,CAAiBe,SAAjE,CAA4E,SAAS,CAAEZ,WAAvF,UACGA,WAAW,CAAGS,CAAC,CAAC,UAAD,CAAJ,CAAmBA,CAAC,CAAC,QAAD,CADlC,EADF,EAdJ,EADF,CAuBD,CAxBD,CA0BA,MAAOJ,CAAAA,iBAAiB,GAAKpB,iBAAiB,CAACqB,GAAxC,CAA8CK,iBAAiB,EAA/D,CAAoEE,wBAAwB,EAAnG,CACD,CAzED,CA2EA,cAAef,CAAAA,qBAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronRightIcon, Button as UIKitButton, AutoRenewIcon, ChevronDownIcon, Box, Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport enum ButtonArrangement {\n  ROW = 'row',\n  SEQUENTIAL = 'sequential',\n}\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n  buttonArrangement?: ButtonArrangement\n  confirmLabel?: string\n  confirmId?: string\n}\n\nconst StyledApproveConfirmButtonRow = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 1fr 24px 1fr;\n  }\n`\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n  buttonArrangement = ButtonArrangement.ROW,\n  confirmLabel,\n  confirmId,\n}) => {\n  const { t } = useTranslation()\n  const confirmButtonText = confirmLabel ?? t('Confirm')\n\n  const ApproveConfirmRow = () => {\n    return (\n      <StyledApproveConfirmButtonRow>\n        <Box>\n          <Button\n            disabled={isApproveDisabled}\n            onClick={onApprove}\n            endIcon={isApproving ? spinnerIcon : undefined}\n            isLoading={isApproving}\n          >\n            {isApproving ? t('Enabling') : t('Enable')}\n          </Button>\n        </Box>\n        <Flex justifyContent=\"center\">\n          <ChevronRight />\n          <ChevronBottom />\n        </Flex>\n        <Box>\n          <Button\n            id={confirmId}\n            onClick={onConfirm}\n            disabled={isConfirmDisabled}\n            isLoading={isConfirming}\n            endIcon={isConfirming ? spinnerIcon : undefined}\n          >\n            {isConfirming ? t('Confirming') : confirmButtonText}\n          </Button>\n        </Box>\n      </StyledApproveConfirmButtonRow>\n    )\n  }\n\n  const ApproveConfirmSequential = () => {\n    return (\n      <>\n        {isApproveDisabled ? (\n          <Box>\n            <Button\n              id={confirmId}\n              onClick={onConfirm}\n              disabled={isConfirmDisabled}\n              isLoading={isConfirming}\n              endIcon={isConfirming ? spinnerIcon : undefined}\n            >\n              {isConfirming ? t('Confirming') : confirmButtonText}\n            </Button>\n          </Box>\n        ) : (\n          <Box>\n            <Button onClick={onApprove} endIcon={isApproving ? spinnerIcon : undefined} isLoading={isApproving}>\n              {isApproving ? t('Enabling') : t('Enable')}\n            </Button>\n          </Box>\n        )}\n      </>\n    )\n  }\n\n  return buttonArrangement === ButtonArrangement.ROW ? ApproveConfirmRow() : ApproveConfirmSequential()\n}\n\nexport default ApproveConfirmButtons\n"]},"metadata":{},"sourceType":"module"}