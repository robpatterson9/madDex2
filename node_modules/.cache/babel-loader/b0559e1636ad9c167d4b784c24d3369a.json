{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React,{useState}from'react';import styled from'styled-components';import{Modal,Text,Flex,Image,Button,Slider,BalanceInput,AutoRenewIcon,CalculateIcon,IconButton}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{useWeb3React}from'@web3-react/core';import{useAppDispatch}from'state';import{BIG_TEN}from'utils/bigNumber';import{usePriceCakeBusd}from'state/farms/hooks';import{useCakeVault}from'state/pools/hooks';import{useCakeVaultContract}from'hooks/useContract';import useTheme from'hooks/useTheme';import useWithdrawalFeeTimer from'views/Pools/hooks/useWithdrawalFeeTimer';import BigNumber from'bignumber.js';import{getFullDisplayBalance,formatNumber,getDecimalAmount}from'utils/formatBalance';import useToast from'hooks/useToast';import{fetchCakeVaultUserData}from'state/pools';import{getInterestBreakdown}from'utils/compoundApyHelpers';import RoiCalculatorModal from'components/RoiCalculatorModal';import{ToastDescriptionWithTx}from'components/Toast';import{useCallWithGasPrice}from'hooks/useCallWithGasPrice';import{convertCakeToShares,convertSharesToCake}from'../../helpers';import FeeSummary from'./FeeSummary';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledButton=styled(Button)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  flex-grow: 1;\\n\"])));var AnnualRoiContainer=styled(Flex)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  cursor: pointer;\\n\"])));var AnnualRoiDisplay=styled(Text)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  width: 72px;\\n  max-width: 72px;\\n  overflow: hidden;\\n  text-align: right;\\n  text-overflow: ellipsis;\\n\"])));var callOptions={gasLimit:380000};var VaultStakeModal=function VaultStakeModal(_ref){var pool=_ref.pool,stakingMax=_ref.stakingMax,performanceFee=_ref.performanceFee,_ref$isRemovingStake=_ref.isRemovingStake,isRemovingStake=_ref$isRemovingStake===void 0?false:_ref$isRemovingStake,onDismiss=_ref.onDismiss;var dispatch=useAppDispatch();var stakingToken=pool.stakingToken,earningToken=pool.earningToken,apr=pool.apr,stakingTokenPrice=pool.stakingTokenPrice,earningTokenPrice=pool.earningTokenPrice;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var cakeVaultContract=useCakeVaultContract();var _useCallWithGasPrice=useCallWithGasPrice(),callWithGasPrice=_useCallWithGasPrice.callWithGasPrice;var _useCakeVault=useCakeVault(),_useCakeVault$userDat=_useCakeVault.userData,lastDepositedTime=_useCakeVault$userDat.lastDepositedTime,userShares=_useCakeVault$userDat.userShares,pricePerFullShare=_useCakeVault.pricePerFullShare;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useTheme=useTheme(),theme=_useTheme.theme;var _useToast=useToast(),toastSuccess=_useToast.toastSuccess,toastError=_useToast.toastError;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pendingTx=_useState2[0],setPendingTx=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),stakeAmount=_useState4[0],setStakeAmount=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),percent=_useState6[0],setPercent=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showRoiCalculator=_useState8[0],setShowRoiCalculator=_useState8[1];var _useWithdrawalFeeTime=useWithdrawalFeeTimer(parseInt(lastDepositedTime,10),userShares),hasUnstakingFee=_useWithdrawalFeeTime.hasUnstakingFee;var cakePriceBusd=usePriceCakeBusd();var usdValueStaked=new BigNumber(stakeAmount).times(cakePriceBusd);var formattedUsdValueStaked=cakePriceBusd.gt(0)&&stakeAmount?formatNumber(usdValueStaked.toNumber()):'';var _convertSharesToCake=convertSharesToCake(userShares,pricePerFullShare),cakeAsBigNumber=_convertSharesToCake.cakeAsBigNumber;var interestBreakdown=getInterestBreakdown({principalInUSD:!usdValueStaked.isNaN()?usdValueStaked.toNumber():0,apr:apr,earningTokenPrice:earningTokenPrice,performanceFee:performanceFee});var annualRoi=interestBreakdown[3]*pool.earningTokenPrice;var formattedAnnualRoi=formatNumber(annualRoi,annualRoi>10000?0:2,annualRoi>10000?0:2);var getTokenLink=stakingToken.address?\"/swap?outputCurrency=\".concat(stakingToken.address):'/swap';var handleStakeInputChange=function handleStakeInputChange(input){if(input){var convertedInput=new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals));var percentage=Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber());setPercent(percentage>100?100:percentage);}else{setPercent(0);}setStakeAmount(input);};var handleChangePercent=function handleChangePercent(sliderPercent){if(sliderPercent>0){var percentageOfStakingMax=stakingMax.dividedBy(100).multipliedBy(sliderPercent);var amountToStake=getFullDisplayBalance(percentageOfStakingMax,stakingToken.decimals,stakingToken.decimals);setStakeAmount(amountToStake);}else{setStakeAmount('');}setPercent(sliderPercent);};var handleWithdrawal=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(convertedStakeAmount){var shareStakeToWithdraw,triggerWithdrawAllThreshold,sharesRemaining,isWithdrawingAll,tx,receipt,_tx,_receipt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setPendingTx(true);shareStakeToWithdraw=convertCakeToShares(convertedStakeAmount,pricePerFullShare);// trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\ntriggerWithdrawAllThreshold=new BigNumber(1000000000000);sharesRemaining=userShares.minus(shareStakeToWithdraw.sharesAsBigNumber);isWithdrawingAll=sharesRemaining.lte(triggerWithdrawAllThreshold);if(!isWithdrawingAll){_context.next=22;break;}_context.prev=6;_context.next=9;return callWithGasPrice(cakeVaultContract,'withdrawAll',undefined,callOptions);case 9:tx=_context.sent;_context.next=12;return tx.wait();case 12:receipt=_context.sent;if(receipt.status){toastSuccess(t('Unstaked!'),/*#__PURE__*/_jsx(ToastDescriptionWithTx,{txHash:receipt.transactionHash,children:t('Your earnings have also been harvested to your wallet')}));setPendingTx(false);onDismiss();dispatch(fetchCakeVaultUserData({account:account}));}_context.next=20;break;case 16:_context.prev=16;_context.t0=_context[\"catch\"](6);toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));setPendingTx(false);case 20:_context.next=36;break;case 22:_context.prev=22;_context.next=25;return callWithGasPrice(cakeVaultContract,'withdraw',[shareStakeToWithdraw.sharesAsBigNumber.toString()],callOptions);case 25:_tx=_context.sent;_context.next=28;return _tx.wait();case 28:_receipt=_context.sent;if(_receipt.status){toastSuccess(t('Unstaked!'),/*#__PURE__*/_jsx(ToastDescriptionWithTx,{txHash:_receipt.transactionHash,children:t('Your earnings have also been harvested to your wallet')}));setPendingTx(false);onDismiss();dispatch(fetchCakeVaultUserData({account:account}));}_context.next=36;break;case 32:_context.prev=32;_context.t1=_context[\"catch\"](22);toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));setPendingTx(false);case 36:case\"end\":return _context.stop();}}},_callee,null,[[6,16],[22,32]]);}));return function handleWithdrawal(_x){return _ref2.apply(this,arguments);};}();var handleDeposit=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(convertedStakeAmount){var tx,receipt;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setPendingTx(true);_context2.prev=1;_context2.next=4;return callWithGasPrice(cakeVaultContract,'deposit',[convertedStakeAmount.toString()],callOptions);case 4:tx=_context2.sent;_context2.next=7;return tx.wait();case 7:receipt=_context2.sent;if(receipt.status){toastSuccess(t('Staked!'),/*#__PURE__*/_jsx(ToastDescriptionWithTx,{txHash:receipt.transactionHash,children:t('Your funds have been staked in the pool')}));setPendingTx(false);onDismiss();dispatch(fetchCakeVaultUserData({account:account}));}_context2.next=15;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](1);toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));setPendingTx(false);case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[1,11]]);}));return function handleDeposit(_x2){return _ref3.apply(this,arguments);};}();var handleConfirmClick=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var convertedStakeAmount;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:convertedStakeAmount=getDecimalAmount(new BigNumber(stakeAmount),stakingToken.decimals);if(isRemovingStake){// unstaking\nhandleWithdrawal(convertedStakeAmount);}else{// staking\nhandleDeposit(convertedStakeAmount);}case 2:case\"end\":return _context3.stop();}}},_callee3);}));return function handleConfirmClick(){return _ref4.apply(this,arguments);};}();if(showRoiCalculator){return/*#__PURE__*/_jsx(RoiCalculatorModal,{earningTokenPrice:earningTokenPrice,stakingTokenPrice:stakingTokenPrice,apr:apr,linkLabel:t('Get %symbol%',{symbol:stakingToken.symbol}),linkHref:getTokenLink,stakingTokenBalance:cakeAsBigNumber.plus(stakingMax),stakingTokenSymbol:stakingToken.symbol,earningTokenSymbol:earningToken.symbol,onBack:function onBack(){return setShowRoiCalculator(false);},initialValue:stakeAmount,performanceFee:performanceFee});}return/*#__PURE__*/_jsxs(Modal,{title:isRemovingStake?t('Unstake'):t('Stake in Pool'),onDismiss:onDismiss,headerBackground:theme.colors.gradients.cardHeader,children:[/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",mb:\"8px\",children:[/*#__PURE__*/_jsxs(Text,{bold:true,children:[isRemovingStake?t('Unstake'):t('Stake'),\":\"]}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",minWidth:\"70px\",children:[/*#__PURE__*/_jsx(Image,{src:\"/images/tokens/\".concat(stakingToken.address,\".png\"),width:24,height:24,alt:stakingToken.symbol}),/*#__PURE__*/_jsx(Text,{ml:\"4px\",bold:true,children:stakingToken.symbol})]})]}),/*#__PURE__*/_jsx(BalanceInput,{value:stakeAmount,onUserInput:handleStakeInputChange,currencyValue:cakePriceBusd.gt(0)&&\"~\".concat(formattedUsdValueStaked||0,\" USD\"),decimals:stakingToken.decimals}),/*#__PURE__*/_jsx(Text,{mt:\"8px\",ml:\"auto\",color:\"textSubtle\",fontSize:\"12px\",mb:\"8px\",children:t('Balance: %balance%',{balance:getFullDisplayBalance(stakingMax,stakingToken.decimals)})}),/*#__PURE__*/_jsx(Slider,{min:0,max:100,value:percent,onValueChanged:handleChangePercent,name:\"stake\",valueLabel:\"\".concat(percent,\"%\"),step:1}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",mt:\"8px\",children:[/*#__PURE__*/_jsx(StyledButton,{scale:\"xs\",mx:\"2px\",p:\"4px 16px\",variant:\"tertiary\",onClick:function onClick(){return handleChangePercent(25);},children:\"25%\"}),/*#__PURE__*/_jsx(StyledButton,{scale:\"xs\",mx:\"2px\",p:\"4px 16px\",variant:\"tertiary\",onClick:function onClick(){return handleChangePercent(50);},children:\"50%\"}),/*#__PURE__*/_jsx(StyledButton,{scale:\"xs\",mx:\"2px\",p:\"4px 16px\",variant:\"tertiary\",onClick:function onClick(){return handleChangePercent(75);},children:\"75%\"}),/*#__PURE__*/_jsx(StyledButton,{scale:\"xs\",mx:\"2px\",p:\"4px 16px\",variant:\"tertiary\",onClick:function onClick(){return handleChangePercent(100);},children:t('Max')})]}),isRemovingStake&&hasUnstakingFee&&/*#__PURE__*/_jsx(FeeSummary,{stakingTokenSymbol:stakingToken.symbol,stakeAmount:stakeAmount}),!isRemovingStake&&/*#__PURE__*/_jsxs(Flex,{mt:\"24px\",alignItems:\"center\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Text,{mr:\"8px\",color:\"textSubtle\",children:[t('Annual ROI at current rates'),\":\"]}),/*#__PURE__*/_jsxs(AnnualRoiContainer,{alignItems:\"center\",onClick:function onClick(){return setShowRoiCalculator(true);},children:[/*#__PURE__*/_jsxs(AnnualRoiDisplay,{children:[\"$\",formattedAnnualRoi]}),/*#__PURE__*/_jsx(IconButton,{variant:\"text\",scale:\"sm\",children:/*#__PURE__*/_jsx(CalculateIcon,{color:\"textSubtle\",width:\"18px\"})})]})]}),/*#__PURE__*/_jsx(Button,{isLoading:pendingTx,endIcon:pendingTx?/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,color:\"currentColor\"}):null,onClick:handleConfirmClick,disabled:!stakeAmount||parseFloat(stakeAmount)===0,mt:\"24px\",children:pendingTx?t('Confirming'):t('Confirm')}),!isRemovingStake&&/*#__PURE__*/_jsx(Button,{mt:\"8px\",as:\"a\",external:true,href:getTokenLink,variant:\"secondary\",children:t('Get %symbol%',{symbol:stakingToken.symbol})})]});};export default VaultStakeModal;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Pools/components/CakeVaultCard/VaultStakeModal.tsx"],"names":["React","useState","styled","Modal","Text","Flex","Image","Button","Slider","BalanceInput","AutoRenewIcon","CalculateIcon","IconButton","useTranslation","useWeb3React","useAppDispatch","BIG_TEN","usePriceCakeBusd","useCakeVault","useCakeVaultContract","useTheme","useWithdrawalFeeTimer","BigNumber","getFullDisplayBalance","formatNumber","getDecimalAmount","useToast","fetchCakeVaultUserData","getInterestBreakdown","RoiCalculatorModal","ToastDescriptionWithTx","useCallWithGasPrice","convertCakeToShares","convertSharesToCake","FeeSummary","StyledButton","AnnualRoiContainer","AnnualRoiDisplay","callOptions","gasLimit","VaultStakeModal","pool","stakingMax","performanceFee","isRemovingStake","onDismiss","dispatch","stakingToken","earningToken","apr","stakingTokenPrice","earningTokenPrice","account","cakeVaultContract","callWithGasPrice","userData","lastDepositedTime","userShares","pricePerFullShare","t","theme","toastSuccess","toastError","pendingTx","setPendingTx","stakeAmount","setStakeAmount","percent","setPercent","showRoiCalculator","setShowRoiCalculator","parseInt","hasUnstakingFee","cakePriceBusd","usdValueStaked","times","formattedUsdValueStaked","gt","toNumber","cakeAsBigNumber","interestBreakdown","principalInUSD","isNaN","annualRoi","formattedAnnualRoi","getTokenLink","address","handleStakeInputChange","input","convertedInput","multipliedBy","pow","decimals","percentage","Math","floor","dividedBy","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","minus","sharesAsBigNumber","isWithdrawingAll","lte","undefined","tx","wait","receipt","status","transactionHash","toString","handleDeposit","handleConfirmClick","symbol","plus","colors","gradients","cardHeader","balance","parseFloat"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { DeserializedPool } from 'state/types'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { convertCakeToShares, convertSharesToCake } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: DeserializedPool\n  stakingMax: BigNumber\n  performanceFee?: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({\n  pool,\n  stakingMax,\n  performanceFee,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken, earningToken, apr, stakingTokenPrice, earningTokenPrice } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked = new BigNumber(stakeAmount).times(cakePriceBusd)\n  const formattedUsdValueStaked = cakePriceBusd.gt(0) && stakeAmount ? formatNumber(usdValueStaked.toNumber()) : ''\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n    performanceFee,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await callWithGasPrice(cakeVaultContract, 'withdrawAll', undefined, callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(\n            t('Unstaked!'),\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your earnings have also been harvested to your wallet')}\n            </ToastDescriptionWithTx>,\n          )\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await callWithGasPrice(\n          cakeVaultContract,\n          'withdraw',\n          [shareStakeToWithdraw.sharesAsBigNumber.toString()],\n          callOptions,\n        )\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(\n            t('Unstaked!'),\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your earnings have also been harvested to your wallet')}\n            </ToastDescriptionWithTx>,\n          )\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await callWithGasPrice(cakeVaultContract, 'deposit', [convertedStakeAmount.toString()], callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(\n          t('Staked!'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('Your funds have been staked in the pool')}\n          </ToastDescriptionWithTx>,\n        )\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={cakeAsBigNumber.plus(stakingMax)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n        performanceFee={performanceFee}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.address}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${formattedUsdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={getTokenLink} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n"]},"metadata":{},"sourceType":"module"}