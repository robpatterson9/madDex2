{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Profile/components/ActivityHistory/MobileModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Modal, Flex, Text, Button, Image, Link, BinanceIcon } from '@pancakeswap/uikit';\nimport useTheme from 'hooks/useTheme';\nimport styled from 'styled-components';\nimport { LightGreyCard } from 'components/Card';\nimport { useTranslation } from 'contexts/Localization';\nimport truncateHash from 'utils/truncateHash';\nimport { multiplyPriceByAmount } from 'utils/prices';\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\nimport { getBscScanLink } from 'utils';\nimport ActivityEventText from './ActivityEventText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoundedImage = styled(Image)`\n  & > img {\n    border-radius: ${({\n  theme\n}) => theme.radii.default};\n  }\n`;\n_c = RoundedImage;\n\nconst MobileModal = ({\n  nft,\n  activity,\n  bnbBusdPrice,\n  localeTimestamp,\n  onDismiss\n}) => {\n  _s();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const {\n    theme\n  } = useTheme();\n  const priceAsFloat = parseFloat(activity.price);\n  const priceInUsd = multiplyPriceByAmount(bnbBusdPrice, priceAsFloat);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: t('Transaction Details'),\n    onDismiss: onDismiss,\n    headerBackground: theme.colors.gradients.cardHeader,\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      maxWidth: \"350px\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        mb: \"16px\",\n        children: [/*#__PURE__*/_jsxDEV(RoundedImage, {\n          src: nft.image.thumbnail,\n          height: 68,\n          width: 68,\n          mr: \"16px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          flexDirection: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"12px\",\n            color: \"textSubtle\",\n            textAlign: \"right\",\n            children: nft.collectionName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            children: nft.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LightGreyCard, {\n        p: \"16px\",\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          mb: \"24px\",\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(ActivityEventText, {\n            fontSize: \"14px\",\n            marketEvent: activity.marketEvent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), priceAsFloat ? /*#__PURE__*/_jsxDEV(Flex, {\n            justifyContent: \"flex-end\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(BinanceIcon, {\n              width: \"12px\",\n              height: \"12px\",\n              mr: \"4px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              mr: \"4px\",\n              bold: true,\n              children: priceAsFloat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              color: \"textSubtle\",\n              children: `(~$${priceInUsd.toLocaleString(undefined, {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n              })}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this) : '-']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          mb: \"24px\",\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"14px\",\n            color: \"textSubtle\",\n            children: t('From/To')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: activity.otherParty ? truncateHash(activity.otherParty) : '-'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"14px\",\n            color: \"textSubtle\",\n            children: t('Date')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: localeTimestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        flexDirection: \"column\",\n        pt: \"16px\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          as: Link,\n          external: true,\n          href: getBscScanLink(activity.tx, 'transaction', chainId),\n          children: t('View on BscScan')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MobileModal, \"U7Z8a8cPb07aD9a5wkKkTERLO2g=\", false, function () {\n  return [useActiveWeb3React, useTranslation, useTheme];\n});\n\n_c2 = MobileModal;\nexport default MobileModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RoundedImage\");\n$RefreshReg$(_c2, \"MobileModal\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Profile/components/ActivityHistory/MobileModal.tsx"],"names":["React","Modal","Flex","Text","Button","Image","Link","BinanceIcon","useTheme","styled","LightGreyCard","useTranslation","truncateHash","multiplyPriceByAmount","useActiveWeb3React","getBscScanLink","ActivityEventText","RoundedImage","theme","radii","default","MobileModal","nft","activity","bnbBusdPrice","localeTimestamp","onDismiss","chainId","t","priceAsFloat","parseFloat","price","priceInUsd","colors","gradients","cardHeader","image","thumbnail","collectionName","name","marketEvent","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","otherParty","tx"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { InjectedModalProps, Modal, Flex, Text, Button, Image, Link, BinanceIcon } from '@pancakeswap/uikit'\nimport { Price } from '@pancakeswap/sdk'\nimport useTheme from 'hooks/useTheme'\nimport styled from 'styled-components'\nimport { NftToken } from 'state/nftMarket/types'\nimport { LightGreyCard } from 'components/Card'\nimport { useTranslation } from 'contexts/Localization'\nimport truncateHash from 'utils/truncateHash'\nimport { multiplyPriceByAmount } from 'utils/prices'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { Activity } from '../../hooks/useUserActivity'\nimport ActivityEventText from './ActivityEventText'\n\nconst RoundedImage = styled(Image)`\n  & > img {\n    border-radius: ${({ theme }) => theme.radii.default};\n  }\n`\n\ninterface MobileModalProps extends InjectedModalProps {\n  activity: Activity\n  nft: NftToken\n  bnbBusdPrice: Price\n  localeTimestamp: string\n}\n\nconst MobileModal: React.FC<MobileModalProps> = ({ nft, activity, bnbBusdPrice, localeTimestamp, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const priceAsFloat = parseFloat(activity.price)\n  const priceInUsd = multiplyPriceByAmount(bnbBusdPrice, priceAsFloat)\n\n  return (\n    <Modal title={t('Transaction Details')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      <Flex flexDirection=\"column\" maxWidth=\"350px\">\n        <Flex alignItems=\"center\" mb=\"16px\">\n          <RoundedImage src={nft.image.thumbnail} height={68} width={68} mr=\"16px\" />\n          <Flex flexDirection=\"column\">\n            <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"right\">\n              {nft.collectionName}\n            </Text>\n            <Text bold>{nft.name}</Text>\n          </Flex>\n        </Flex>\n        <LightGreyCard p=\"16px\">\n          <Flex mb=\"24px\" justifyContent=\"space-between\">\n            <ActivityEventText fontSize=\"14px\" marketEvent={activity.marketEvent} />\n            {priceAsFloat ? (\n              <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n                <BinanceIcon width=\"12px\" height=\"12px\" mr=\"4px\" />\n                <Text mr=\"4px\" bold>\n                  {priceAsFloat}\n                </Text>\n                <Text color=\"textSubtle\">\n                  {`(~$${priceInUsd.toLocaleString(undefined, {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2,\n                  })}`}\n                </Text>\n              </Flex>\n            ) : (\n              '-'\n            )}\n          </Flex>\n          <Flex mb=\"24px\" justifyContent=\"space-between\">\n            <Text fontSize=\"14px\" color=\"textSubtle\">\n              {t('From/To')}\n            </Text>\n            <Text>{activity.otherParty ? truncateHash(activity.otherParty) : '-'}</Text>\n          </Flex>\n          <Flex justifyContent=\"space-between\">\n            <Text fontSize=\"14px\" color=\"textSubtle\">\n              {t('Date')}\n            </Text>\n            <Text>{localeTimestamp}</Text>\n          </Flex>\n        </LightGreyCard>\n        <Flex flexDirection=\"column\" pt=\"16px\" alignItems=\"center\">\n          <Button as={Link} external href={getBscScanLink(activity.tx, 'transaction', chainId)}>\n            {t('View on BscScan')}\n          </Button>\n        </Flex>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default MobileModal\n"]},"metadata":{},"sourceType":"module"}