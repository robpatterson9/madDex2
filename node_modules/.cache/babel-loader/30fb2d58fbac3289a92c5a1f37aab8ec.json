{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{BlockIcon,CheckmarkCircleIcon,Flex,CrownIcon,Text,TeamPlayerIcon,TrophyGoldIcon,Skeleton}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{useCompetitionCakeRewards,getRewardGroupAchievements}from'../../helpers';import{BoldTd,Td,StyledPrizeTable}from'../StyledPrizeTable';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledThead=styled.thead(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  border-bottom: 2px solid \",\";\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.cardBorder;});var UserPrizeGrid=function UserPrizeGrid(_ref2){var userTradingInformation=_ref2.userTradingInformation;var _useTranslation=useTranslation(),t=_useTranslation.t;var userRewardGroup=userTradingInformation.userRewardGroup,userCakeRewards=userTradingInformation.userCakeRewards,userPointReward=userTradingInformation.userPointReward,canClaimNFT=userTradingInformation.canClaimNFT;var _useCompetitionCakeRe=useCompetitionCakeRewards(userCakeRewards),cakeReward=_useCompetitionCakeRe.cakeReward,dollarValueOfCakeReward=_useCompetitionCakeRe.dollarValueOfCakeReward;var _getRewardGroupAchiev=getRewardGroupAchievements(userRewardGroup),champion=_getRewardGroupAchiev.champion,teamPlayer=_getRewardGroupAchiev.teamPlayer;return/*#__PURE__*/_jsxs(StyledPrizeTable,{children:[/*#__PURE__*/_jsx(StyledThead,{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:t('CAKE Prizes')}),/*#__PURE__*/_jsx(\"th\",{children:t('Achievements')}),/*#__PURE__*/_jsx(\"th\",{children:t('NFT')})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(BoldTd,{children:/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",children:[/*#__PURE__*/_jsx(Text,{bold:true,children:cakeReward.toFixed(2)}),dollarValueOfCakeReward?/*#__PURE__*/_jsxs(Text,{fontSize:\"12px\",color:\"textSubtle\",children:[\"~\",dollarValueOfCakeReward,\" USD\"]}):/*#__PURE__*/_jsx(Skeleton,{height:24,width:80})]})}),/*#__PURE__*/_jsx(Td,{children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",flexWrap:\"wrap\",justifyContent:\"center\",width:\"100%\",children:[champion&&/*#__PURE__*/_jsx(CrownIcon,{mr:[0,'4px']}),teamPlayer&&/*#__PURE__*/_jsx(TeamPlayerIcon,{mr:[0,'4px']}),/*#__PURE__*/_jsx(TrophyGoldIcon,{mr:[0,'4px']}),/*#__PURE__*/_jsxs(Text,{fontSize:\"12px\",color:\"textSubtle\",textTransform:\"lowercase\",children:[\"+ \",userPointReward,\" \",t('Points')]})]})}),/*#__PURE__*/_jsx(Td,{children:canClaimNFT?/*#__PURE__*/_jsx(CheckmarkCircleIcon,{color:\"success\"}):/*#__PURE__*/_jsx(BlockIcon,{color:\"textDisabled\"})})]})})]});};export default UserPrizeGrid;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/TradingCompetition/components/YourScore/UserPrizeGrid.tsx"],"names":["React","styled","BlockIcon","CheckmarkCircleIcon","Flex","CrownIcon","Text","TeamPlayerIcon","TrophyGoldIcon","Skeleton","useTranslation","useCompetitionCakeRewards","getRewardGroupAchievements","BoldTd","Td","StyledPrizeTable","StyledThead","thead","theme","colors","cardBorder","UserPrizeGrid","userTradingInformation","t","userRewardGroup","userCakeRewards","userPointReward","canClaimNFT","cakeReward","dollarValueOfCakeReward","champion","teamPlayer","toFixed"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport {\n  BlockIcon,\n  CheckmarkCircleIcon,\n  Flex,\n  CrownIcon,\n  Text,\n  TeamPlayerIcon,\n  TrophyGoldIcon,\n  Skeleton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { UserTradingInformationProps } from '../../types'\nimport { useCompetitionCakeRewards, getRewardGroupAchievements } from '../../helpers'\nimport { BoldTd, Td, StyledPrizeTable } from '../StyledPrizeTable'\n\nconst StyledThead = styled.thead`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst UserPrizeGrid: React.FC<{ userTradingInformation?: UserTradingInformationProps }> = ({\n  userTradingInformation,\n}) => {\n  const { t } = useTranslation()\n  const { userRewardGroup, userCakeRewards, userPointReward, canClaimNFT } = userTradingInformation\n  const { cakeReward, dollarValueOfCakeReward } = useCompetitionCakeRewards(userCakeRewards)\n  const { champion, teamPlayer } = getRewardGroupAchievements(userRewardGroup)\n\n  return (\n    <StyledPrizeTable>\n      <StyledThead>\n        <tr>\n          <th>{t('CAKE Prizes')}</th>\n          <th>{t('Achievements')}</th>\n          <th>{t('NFT')}</th>\n        </tr>\n      </StyledThead>\n      <tbody>\n        <tr>\n          <BoldTd>\n            <Flex flexDirection=\"column\">\n              <Text bold>{cakeReward.toFixed(2)}</Text>\n              {dollarValueOfCakeReward ? (\n                <Text fontSize=\"12px\" color=\"textSubtle\">\n                  ~{dollarValueOfCakeReward} USD\n                </Text>\n              ) : (\n                <Skeleton height={24} width={80} />\n              )}\n            </Flex>\n          </BoldTd>\n          <Td>\n            <Flex alignItems=\"center\" flexWrap=\"wrap\" justifyContent=\"center\" width=\"100%\">\n              {champion && <CrownIcon mr={[0, '4px']} />}\n              {teamPlayer && <TeamPlayerIcon mr={[0, '4px']} />}\n              <TrophyGoldIcon mr={[0, '4px']} />\n              <Text fontSize=\"12px\" color=\"textSubtle\" textTransform=\"lowercase\">\n                + {userPointReward} {t('Points')}\n              </Text>\n            </Flex>\n          </Td>\n          <Td>{canClaimNFT ? <CheckmarkCircleIcon color=\"success\" /> : <BlockIcon color=\"textDisabled\" />}</Td>\n        </tr>\n      </tbody>\n    </StyledPrizeTable>\n  )\n}\n\nexport default UserPrizeGrid\n"]},"metadata":{},"sourceType":"module"}