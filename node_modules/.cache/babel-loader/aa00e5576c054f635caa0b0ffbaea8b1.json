{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React,{useState}from'react';import styled from'styled-components';import{Button,Heading,Text,Flex,Checkbox,AutoRenewIcon}from'@pancakeswap/uikit';import{useTradingCompetitionContract}from'hooks/useContract';import{useTranslation}from'contexts/Localization';import{useCallWithGasPrice}from'hooks/useCallWithGasPrice';import useToast from'hooks/useToast';import{ToastDescriptionWithTx}from'components/Toast';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var StyledCheckbox=styled(Checkbox)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  min-width: 24px;\\n\"])));var StyledLabel=styled.label(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  cursor: pointer;\\n\"])));var RegisterWithProfile=function RegisterWithProfile(_ref){var profile=_ref.profile,onDismiss=_ref.onDismiss,onRegisterSuccess=_ref.onRegisterSuccess;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isAcknowledged=_useState2[0],setIsAcknowledged=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isConfirming=_useState4[0],setIsConfirming=_useState4[1];var tradingCompetitionContract=useTradingCompetitionContract();var _useToast=useToast(),toastSuccess=_useToast.toastSuccess,toastError=_useToast.toastError;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useCallWithGasPrice=useCallWithGasPrice(),callWithGasPrice=_useCallWithGasPrice.callWithGasPrice;var handleConfirmClick=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var tx,receipt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return callWithGasPrice(tradingCompetitionContract,'register');case 2:tx=_context.sent;setIsConfirming(true);_context.next=6;return tx.wait();case 6:receipt=_context.sent;if(receipt.status){toastSuccess(t('You have registered for the competition!'),/*#__PURE__*/_jsx(ToastDescriptionWithTx,{txHash:receipt.transactionHash}));onDismiss();onRegisterSuccess();}else{toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));setIsConfirming(false);}case 8:case\"end\":return _context.stop();}}},_callee);}));return function handleConfirmClick(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Heading,{scale:\"md\",mb:\"24px\",children:\"@\".concat(profile.username)}),/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",children:[/*#__PURE__*/_jsx(Text,{bold:true,children:t('Registering for the competition will make your wallet address publicly visible on the leaderboard.')}),/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",color:\"textSubtle\",mb:\"24px\",children:t('This decision cannot be reversed.')}),/*#__PURE__*/_jsx(StyledLabel,{htmlFor:\"acknowledgement\",children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(StyledCheckbox,{id:\"acknowledgement\",checked:isAcknowledged,onChange:function onChange(){return setIsAcknowledged(!isAcknowledged);},scale:\"sm\"}),/*#__PURE__*/_jsx(Text,{ml:\"16px\",children:t('I understand that my address may be displayed publicly throughout the competition.')})]})})]}),/*#__PURE__*/_jsx(Button,{mt:\"24px\",width:\"100%\",onClick:handleConfirmClick,disabled:!isAcknowledged||isConfirming,isLoading:isConfirming,endIcon:isConfirming?/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,color:\"currentColor\"}):null,children:t('Confirm')})]});};export default RegisterWithProfile;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/TradingCompetition/components/RegisterModal/RegisterWithProfile.tsx"],"names":["React","useState","styled","Button","Heading","Text","Flex","Checkbox","AutoRenewIcon","useTradingCompetitionContract","useTranslation","useCallWithGasPrice","useToast","ToastDescriptionWithTx","StyledCheckbox","StyledLabel","label","RegisterWithProfile","profile","onDismiss","onRegisterSuccess","isAcknowledged","setIsAcknowledged","isConfirming","setIsConfirming","tradingCompetitionContract","toastSuccess","toastError","t","callWithGasPrice","handleConfirmClick","tx","wait","receipt","status","transactionHash","username"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Text, Flex, Checkbox, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTradingCompetitionContract } from 'hooks/useContract'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport useToast from 'hooks/useToast'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport { CompetitionProps } from '../../types'\n\nconst StyledCheckbox = styled(Checkbox)`\n  min-width: 24px;\n`\n\nconst StyledLabel = styled.label`\n  cursor: pointer;\n`\n\nconst RegisterWithProfile: React.FC<CompetitionProps> = ({ profile, onDismiss, onRegisterSuccess }) => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const [isConfirming, setIsConfirming] = useState(false)\n  const tradingCompetitionContract = useTradingCompetitionContract()\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const { callWithGasPrice } = useCallWithGasPrice()\n\n  const handleConfirmClick = async () => {\n    const tx = await callWithGasPrice(tradingCompetitionContract, 'register')\n    setIsConfirming(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(\n        t('You have registered for the competition!'),\n        <ToastDescriptionWithTx txHash={receipt.transactionHash} />,\n      )\n      onDismiss()\n      onRegisterSuccess()\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setIsConfirming(false)\n    }\n  }\n\n  return (\n    <>\n      <Heading scale=\"md\" mb=\"24px\">{`@${profile.username}`}</Heading>\n      <Flex flexDirection=\"column\">\n        <Text bold>\n          {t('Registering for the competition will make your wallet address publicly visible on the leaderboard.')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\" mb=\"24px\">\n          {t('This decision cannot be reversed.')}\n        </Text>\n        <StyledLabel htmlFor=\"acknowledgement\">\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <StyledCheckbox\n              id=\"acknowledgement\"\n              checked={isAcknowledged}\n              onChange={() => setIsAcknowledged(!isAcknowledged)}\n              scale=\"sm\"\n            />\n            <Text ml=\"16px\">\n              {t('I understand that my address may be displayed publicly throughout the competition.')}\n            </Text>\n          </Flex>\n        </StyledLabel>\n      </Flex>\n      <Button\n        mt=\"24px\"\n        width=\"100%\"\n        onClick={handleConfirmClick}\n        disabled={!isAcknowledged || isConfirming}\n        isLoading={isConfirming}\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {t('Confirm')}\n      </Button>\n    </>\n  )\n}\n\nexport default RegisterWithProfile\n"]},"metadata":{},"sourceType":"module"}