{"ast":null,"code":"import _defineProperty from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import{request,gql}from'graphql-request';import{GRAPH_API_PREDICTION}from'config/constants/endpoints';import{ethers}from'ethers';import{BetPosition,PredictionStatus,HistoryFilter}from'state/types';import{multicallv2}from'utils/multicall';import{getPredictionsContract}from'utils/contractHelpers';import predictionsAbi from'config/abi/predictions.json';import{getPredictionsAddress}from'utils/addressHelpers';import{getRoundBaseFields,getBetBaseFields,getUserBaseFields}from'./queries';import{ROUNDS_PER_PAGE}from'./config';export var Result;(function(Result){Result[\"WIN\"]=\"win\";Result[\"LOSE\"]=\"lose\";Result[\"CANCELED\"]=\"canceled\";Result[\"HOUSE\"]=\"house\";Result[\"LIVE\"]=\"live\";})(Result||(Result={}));export var numberOrNull=function numberOrNull(value){if(value===null){return null;}var valueNum=Number(value);return Number.isNaN(valueNum)?null:valueNum;};var getRoundPosition=function getRoundPosition(positionResponse){if(positionResponse==='Bull'){return BetPosition.BULL;}if(positionResponse==='Bear'){return BetPosition.BEAR;}if(positionResponse==='House'){return BetPosition.HOUSE;}return null;};export var transformBetResponse=function transformBetResponse(betResponse){var bet={id:betResponse.id,hash:betResponse.hash,block:numberOrNull(betResponse.block),amount:betResponse.amount?parseFloat(betResponse.amount):0,position:betResponse.position==='Bull'?BetPosition.BULL:BetPosition.BEAR,claimed:betResponse.claimed,claimedAt:numberOrNull(betResponse.claimedAt),claimedBlock:numberOrNull(betResponse.claimedBlock),claimedHash:betResponse.claimedHash,claimedBNB:betResponse.claimedBNB?parseFloat(betResponse.claimedBNB):0,claimedNetBNB:betResponse.claimedNetBNB?parseFloat(betResponse.claimedNetBNB):0,createdAt:numberOrNull(betResponse.createdAt),updatedAt:numberOrNull(betResponse.updatedAt)};if(betResponse.user){bet.user=transformUserResponse(betResponse.user);}if(betResponse.round){bet.round=transformRoundResponse(betResponse.round);}return bet;};export var transformUserResponse=function transformUserResponse(userResponse){var id=userResponse.id,createdAt=userResponse.createdAt,updatedAt=userResponse.updatedAt,block=userResponse.block,totalBets=userResponse.totalBets,totalBetsBull=userResponse.totalBetsBull,totalBetsBear=userResponse.totalBetsBear,totalBNB=userResponse.totalBNB,totalBNBBull=userResponse.totalBNBBull,totalBNBBear=userResponse.totalBNBBear,totalBetsClaimed=userResponse.totalBetsClaimed,totalBNBClaimed=userResponse.totalBNBClaimed,winRate=userResponse.winRate,averageBNB=userResponse.averageBNB,netBNB=userResponse.netBNB;return{id:id,createdAt:numberOrNull(createdAt),updatedAt:numberOrNull(updatedAt),block:numberOrNull(block),totalBets:numberOrNull(totalBets),totalBetsBull:numberOrNull(totalBetsBull),totalBetsBear:numberOrNull(totalBetsBear),totalBNB:totalBNB?parseFloat(totalBNB):0,totalBNBBull:totalBNBBull?parseFloat(totalBNBBull):0,totalBNBBear:totalBNBBear?parseFloat(totalBNBBear):0,totalBetsClaimed:numberOrNull(totalBetsClaimed),totalBNBClaimed:totalBNBClaimed?parseFloat(totalBNBClaimed):0,winRate:winRate?parseFloat(winRate):0,averageBNB:averageBNB?parseFloat(averageBNB):0,netBNB:netBNB?parseFloat(netBNB):0};};export var transformRoundResponse=function transformRoundResponse(roundResponse){var id=roundResponse.id,epoch=roundResponse.epoch,failed=roundResponse.failed,position=roundResponse.position,startAt=roundResponse.startAt,startBlock=roundResponse.startBlock,startHash=roundResponse.startHash,lockAt=roundResponse.lockAt,lockBlock=roundResponse.lockBlock,lockHash=roundResponse.lockHash,lockPrice=roundResponse.lockPrice,lockRoundId=roundResponse.lockRoundId,closeAt=roundResponse.closeAt,closeBlock=roundResponse.closeBlock,closeHash=roundResponse.closeHash,closePrice=roundResponse.closePrice,closeRoundId=roundResponse.closeRoundId,totalBets=roundResponse.totalBets,totalAmount=roundResponse.totalAmount,bullBets=roundResponse.bullBets,bullAmount=roundResponse.bullAmount,bearBets=roundResponse.bearBets,bearAmount=roundResponse.bearAmount,_roundResponse$bets=roundResponse.bets,bets=_roundResponse$bets===void 0?[]:_roundResponse$bets;return{id:id,failed:failed,startHash:startHash,lockHash:lockHash,lockRoundId:lockRoundId,closeRoundId:closeRoundId,closeHash:closeHash,position:getRoundPosition(position),epoch:numberOrNull(epoch),startAt:numberOrNull(startAt),startBlock:numberOrNull(startBlock),lockAt:numberOrNull(lockAt),lockBlock:numberOrNull(lockBlock),lockPrice:lockPrice?parseFloat(lockPrice):0,closeAt:numberOrNull(closeAt),closeBlock:numberOrNull(closeBlock),closePrice:closePrice?parseFloat(closePrice):0,totalBets:numberOrNull(totalBets),totalAmount:totalAmount?parseFloat(totalAmount):0,bullBets:numberOrNull(bullBets),bullAmount:bullAmount?parseFloat(bullAmount):0,bearBets:numberOrNull(bearBets),bearAmount:bearAmount?parseFloat(bearAmount):0,bets:bets.map(transformBetResponse)};};export var getRoundResult=function getRoundResult(bet,currentEpoch){var round=bet.round;if(round.failed){return Result.CANCELED;}if(round.epoch>=currentEpoch-1){return Result.LIVE;}if(bet.round.position===BetPosition.HOUSE){return Result.HOUSE;}var roundResultPosition=round.closePrice>round.lockPrice?BetPosition.BULL:BetPosition.BEAR;return bet.position===roundResultPosition?Result.WIN:Result.LOSE;};export var getFilteredBets=function getFilteredBets(bets,filter){switch(filter){case HistoryFilter.COLLECTED:return bets.filter(function(bet){return bet.claimed===true;});case HistoryFilter.UNCOLLECTED:return bets.filter(function(bet){return!bet.claimed&&(bet.position===bet.round.position||bet.round.failed===true);});case HistoryFilter.ALL:default:return bets;}};export var getTotalWon=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _ref2,market,totalBNB,totalBNBTreasury;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return request(GRAPH_API_PREDICTION,gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n      query getTotalWonData {\\n        market(id: 1) {\\n          totalBNB\\n          totalBNBTreasury\\n        }\\n      }\\n    \"]))));case 2:_ref2=_context.sent;market=_ref2.market;totalBNB=market.totalBNB?parseFloat(market.totalBNB):0;totalBNBTreasury=market.totalBNBTreasury?parseFloat(market.totalBNBTreasury):0;return _context.abrupt(\"return\",Math.max(totalBNB-totalBNBTreasury,0));case 7:case\"end\":return _context.stop();}}},_callee);}));return function getTotalWon(){return _ref.apply(this,arguments);};}();export var getBetHistory=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var where,first,skip,response,_args2=arguments;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:where=_args2.length>0&&_args2[0]!==undefined?_args2[0]:{};first=_args2.length>1&&_args2[1]!==undefined?_args2[1]:1000;skip=_args2.length>2&&_args2[2]!==undefined?_args2[2]:0;_context2.next=5;return request(GRAPH_API_PREDICTION,gql(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\\n          \",\"\\n          round {\\n            \",\"\\n          }\\n          user {\\n            \",\"\\n          } \\n        }\\n      }\\n    \"])),getBetBaseFields(),getRoundBaseFields(),getUserBaseFields()),{first:first,skip:skip,where:where});case 5:response=_context2.sent;return _context2.abrupt(\"return\",response.bets);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function getBetHistory(){return _ref3.apply(this,arguments);};}();export var getBet=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(betId){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return request(GRAPH_API_PREDICTION,gql(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n      query getBet($id: ID!) {\\n        bet(id: $id) {\\n          \",\"\\n          round {\\n            \",\"\\n          }\\n          user {\\n            \",\"\\n          } \\n        }\\n      }\\n  \"])),getBetBaseFields(),getRoundBaseFields(),getUserBaseFields()),{id:betId.toLowerCase()});case 2:response=_context3.sent;return _context3.abrupt(\"return\",response.bet);case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function getBet(_x){return _ref4.apply(this,arguments);};}();export var getLedgerData=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(account,epochs){var address,ledgerCalls,response;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:address=getPredictionsAddress();ledgerCalls=epochs.map(function(epoch){return{address:address,name:'ledger',params:[epoch,account]};});_context4.next=4;return multicallv2(predictionsAbi,ledgerCalls);case 4:response=_context4.sent;return _context4.abrupt(\"return\",response);case 6:case\"end\":return _context4.stop();}}},_callee4);}));return function getLedgerData(_x2,_x3){return _ref5.apply(this,arguments);};}();export var LEADERBOARD_RESULTS_PER_PAGE=20;var defaultPredictionUserOptions={skip:0,first:LEADERBOARD_RESULTS_PER_PAGE,orderBy:'createdAt',orderDir:'desc'};export var getPredictionUsers=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var options,_defaultPredictionUse,first,skip,where,orderBy,orderDir,response,_args5=arguments;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:options=_args5.length>0&&_args5[0]!==undefined?_args5[0]:{};_defaultPredictionUse=_objectSpread(_objectSpread({},defaultPredictionUserOptions),options),first=_defaultPredictionUse.first,skip=_defaultPredictionUse.skip,where=_defaultPredictionUse.where,orderBy=_defaultPredictionUse.orderBy,orderDir=_defaultPredictionUse.orderDir;_context5.next=4;return request(GRAPH_API_PREDICTION,gql(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n      query getUsers($first: Int!, $skip: Int!, $where: User_filter, $orderBy: User_orderBy, $orderDir: OrderDirection) {\\n        users(first: $first, skip: $skip, where: $where, orderBy: $orderBy, orderDirection: $orderDir) {\\n          \",\" \\n        }\\n      }\\n    \"])),getUserBaseFields()),{first:first,skip:skip,where:where,orderBy:orderBy,orderDir:orderDir});case 4:response=_context5.sent;return _context5.abrupt(\"return\",response.users);case 6:case\"end\":return _context5.stop();}}},_callee5);}));return function getPredictionUsers(){return _ref6.apply(this,arguments);};}();export var getPredictionUser=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(account){var response;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return request(GRAPH_API_PREDICTION,gql(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n      query getUser($id: ID!) {\\n        user(id: $id) {\\n          \",\"\\n        }\\n      }\\n  \"])),getUserBaseFields()),{id:account.toLowerCase()});case 2:response=_context6.sent;return _context6.abrupt(\"return\",response.user);case 4:case\"end\":return _context6.stop();}}},_callee6);}));return function getPredictionUser(_x4){return _ref7.apply(this,arguments);};}();export var getClaimStatuses=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(account,epochs){var address,claimableCalls,claimableResponses;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:address=getPredictionsAddress();claimableCalls=epochs.map(function(epoch){return{address:address,name:'claimable',params:[epoch,account]};});_context7.next=4;return multicallv2(predictionsAbi,claimableCalls);case 4:claimableResponses=_context7.sent;return _context7.abrupt(\"return\",claimableResponses.reduce(function(accum,claimableResponse,index){var epoch=epochs[index];var _claimableResponse=_slicedToArray(claimableResponse,1),claimable=_claimableResponse[0];return _objectSpread(_objectSpread({},accum),{},_defineProperty({},epoch,claimable));},{}));case 6:case\"end\":return _context7.stop();}}},_callee7);}));return function getClaimStatuses(_x5,_x6){return _ref8.apply(this,arguments);};}();export var getPredictionData=/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(){var address,staticCalls,_yield$multicallv,_yield$multicallv2,_yield$multicallv2$,currentEpoch,_yield$multicallv2$2,intervalSeconds,_yield$multicallv2$3,minBetAmount,_yield$multicallv2$4,paused,_yield$multicallv2$5,bufferSeconds;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:address=getPredictionsAddress();staticCalls=['currentEpoch','intervalSeconds','minBetAmount','paused','bufferSeconds'].map(function(method){return{address:address,name:method};});_context8.next=4;return multicallv2(predictionsAbi,staticCalls);case 4:_yield$multicallv=_context8.sent;_yield$multicallv2=_slicedToArray(_yield$multicallv,5);_yield$multicallv2$=_slicedToArray(_yield$multicallv2[0],1);currentEpoch=_yield$multicallv2$[0];_yield$multicallv2$2=_slicedToArray(_yield$multicallv2[1],1);intervalSeconds=_yield$multicallv2$2[0];_yield$multicallv2$3=_slicedToArray(_yield$multicallv2[2],1);minBetAmount=_yield$multicallv2$3[0];_yield$multicallv2$4=_slicedToArray(_yield$multicallv2[3],1);paused=_yield$multicallv2$4[0];_yield$multicallv2$5=_slicedToArray(_yield$multicallv2[4],1);bufferSeconds=_yield$multicallv2$5[0];return _context8.abrupt(\"return\",{status:paused?PredictionStatus.PAUSED:PredictionStatus.LIVE,currentEpoch:currentEpoch.toNumber(),intervalSeconds:intervalSeconds.toNumber(),minBetAmount:minBetAmount.toString(),bufferSeconds:bufferSeconds.toNumber()});case 17:case\"end\":return _context8.stop();}}},_callee8);}));return function getPredictionData(){return _ref9.apply(this,arguments);};}();export var getRoundsData=/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(epochs){var address,calls,response;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:address=getPredictionsAddress();calls=epochs.map(function(epoch){return{address:address,name:'rounds',params:[epoch]};});_context9.next=4;return multicallv2(predictionsAbi,calls);case 4:response=_context9.sent;return _context9.abrupt(\"return\",response);case 6:case\"end\":return _context9.stop();}}},_callee9);}));return function getRoundsData(_x7){return _ref10.apply(this,arguments);};}();export var makeFutureRoundResponse=function makeFutureRoundResponse(epoch,startTimestamp){return{epoch:epoch,startTimestamp:startTimestamp,lockTimestamp:null,closeTimestamp:null,lockPrice:null,closePrice:null,totalAmount:ethers.BigNumber.from(0).toJSON(),bullAmount:ethers.BigNumber.from(0).toJSON(),bearAmount:ethers.BigNumber.from(0).toJSON(),rewardBaseCalAmount:ethers.BigNumber.from(0).toJSON(),rewardAmount:ethers.BigNumber.from(0).toJSON(),oracleCalled:false,lockOracleId:null,closeOracleId:null};};export var makeRoundData=function makeRoundData(rounds){return rounds.reduce(function(accum,round){return _objectSpread(_objectSpread({},accum),{},_defineProperty({},round.epoch.toString(),round));},{});};export var serializePredictionsLedgerResponse=function serializePredictionsLedgerResponse(ledgerResponse){return{position:ledgerResponse.position===0?BetPosition.BULL:BetPosition.BEAR,amount:ledgerResponse.amount.toJSON(),claimed:ledgerResponse.claimed};};export var makeLedgerData=function makeLedgerData(account,ledgers,epochs){return ledgers.reduce(function(accum,ledgerResponse,index){if(!ledgerResponse){return accum;}// If the amount is zero that means the user did not bet\nif(ledgerResponse.amount.eq(0)){return accum;}var epoch=epochs[index].toString();return _objectSpread(_objectSpread({},accum),{},_defineProperty({},account,_objectSpread(_objectSpread({},accum[account]),{},_defineProperty({},epoch,serializePredictionsLedgerResponse(ledgerResponse)))));},{});};/**\n * Serializes the return from the \"rounds\" call for redux\n */export var serializePredictionsRoundsResponse=function serializePredictionsRoundsResponse(response){var epoch=response.epoch,startTimestamp=response.startTimestamp,lockTimestamp=response.lockTimestamp,closeTimestamp=response.closeTimestamp,lockPrice=response.lockPrice,closePrice=response.closePrice,totalAmount=response.totalAmount,bullAmount=response.bullAmount,bearAmount=response.bearAmount,rewardBaseCalAmount=response.rewardBaseCalAmount,rewardAmount=response.rewardAmount,oracleCalled=response.oracleCalled,lockOracleId=response.lockOracleId,closeOracleId=response.closeOracleId;return{oracleCalled:oracleCalled,epoch:epoch.toNumber(),startTimestamp:startTimestamp.eq(0)?null:startTimestamp.toNumber(),lockTimestamp:lockTimestamp.eq(0)?null:lockTimestamp.toNumber(),closeTimestamp:closeTimestamp.eq(0)?null:closeTimestamp.toNumber(),lockPrice:lockPrice.eq(0)?null:lockPrice.toJSON(),closePrice:closePrice.eq(0)?null:closePrice.toJSON(),totalAmount:totalAmount.toJSON(),bullAmount:bullAmount.toJSON(),bearAmount:bearAmount.toJSON(),rewardBaseCalAmount:rewardBaseCalAmount.toJSON(),rewardAmount:rewardAmount.toJSON(),lockOracleId:lockOracleId.toString(),closeOracleId:closeOracleId.toString()};};/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */export var parseBigNumberObj=function parseBigNumberObj(data){return Object.keys(data).reduce(function(accum,key){var value=data[key];if(value&&(value===null||value===void 0?void 0:value.type)==='BigNumber'){return _objectSpread(_objectSpread({},accum),{},_defineProperty({},key,ethers.BigNumber.from(value)));}return _objectSpread(_objectSpread({},accum),{},_defineProperty({},key,value));},{});};export var fetchUsersRoundsLength=/*#__PURE__*/function(){var _ref11=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(account){var contract,length;return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:_context10.prev=0;contract=getPredictionsContract();_context10.next=4;return contract.getUserRoundsLength(account);case 4:length=_context10.sent;return _context10.abrupt(\"return\",length);case 8:_context10.prev=8;_context10.t0=_context10[\"catch\"](0);return _context10.abrupt(\"return\",ethers.BigNumber.from(0));case 11:case\"end\":return _context10.stop();}}},_callee10,null,[[0,8]]);}));return function fetchUsersRoundsLength(_x8){return _ref11.apply(this,arguments);};}();/**\n * Fetches rounds a user has participated in\n */export var fetchUserRounds=/*#__PURE__*/function(){var _ref12=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee11(account){var cursor,size,contract,_yield$contract$getUs,_yield$contract$getUs2,rounds,ledgers,_args11=arguments;return _regeneratorRuntime.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:cursor=_args11.length>1&&_args11[1]!==undefined?_args11[1]:0;size=_args11.length>2&&_args11[2]!==undefined?_args11[2]:ROUNDS_PER_PAGE;contract=getPredictionsContract();_context11.prev=3;_context11.next=6;return contract.getUserRounds(account,cursor,size);case 6:_yield$contract$getUs=_context11.sent;_yield$contract$getUs2=_slicedToArray(_yield$contract$getUs,2);rounds=_yield$contract$getUs2[0];ledgers=_yield$contract$getUs2[1];return _context11.abrupt(\"return\",rounds.reduce(function(accum,round,index){return _objectSpread(_objectSpread({},accum),{},_defineProperty({},round.toString(),serializePredictionsLedgerResponse(ledgers[index])));},{}));case 13:_context11.prev=13;_context11.t0=_context11[\"catch\"](3);return _context11.abrupt(\"return\",null);case 16:case\"end\":return _context11.stop();}}},_callee11,null,[[3,13]]);}));return function fetchUserRounds(_x9){return _ref12.apply(this,arguments);};}();","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/state/predictions/helpers.ts"],"names":["request","gql","GRAPH_API_PREDICTION","ethers","BetPosition","PredictionStatus","HistoryFilter","multicallv2","getPredictionsContract","predictionsAbi","getPredictionsAddress","getRoundBaseFields","getBetBaseFields","getUserBaseFields","ROUNDS_PER_PAGE","Result","numberOrNull","value","valueNum","Number","isNaN","getRoundPosition","positionResponse","BULL","BEAR","HOUSE","transformBetResponse","betResponse","bet","id","hash","block","amount","parseFloat","position","claimed","claimedAt","claimedBlock","claimedHash","claimedBNB","claimedNetBNB","createdAt","updatedAt","user","transformUserResponse","round","transformRoundResponse","userResponse","totalBets","totalBetsBull","totalBetsBear","totalBNB","totalBNBBull","totalBNBBear","totalBetsClaimed","totalBNBClaimed","winRate","averageBNB","netBNB","roundResponse","epoch","failed","startAt","startBlock","startHash","lockAt","lockBlock","lockHash","lockPrice","lockRoundId","closeAt","closeBlock","closeHash","closePrice","closeRoundId","totalAmount","bullBets","bullAmount","bearBets","bearAmount","bets","map","getRoundResult","currentEpoch","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getFilteredBets","filter","COLLECTED","UNCOLLECTED","ALL","getTotalWon","market","totalBNBTreasury","Math","max","getBetHistory","where","first","skip","response","getBet","betId","toLowerCase","getLedgerData","account","epochs","address","ledgerCalls","name","params","LEADERBOARD_RESULTS_PER_PAGE","defaultPredictionUserOptions","orderBy","orderDir","getPredictionUsers","options","users","getPredictionUser","getClaimStatuses","claimableCalls","claimableResponses","reduce","accum","claimableResponse","index","claimable","getPredictionData","staticCalls","method","intervalSeconds","minBetAmount","paused","bufferSeconds","status","PAUSED","toNumber","toString","getRoundsData","calls","makeFutureRoundResponse","startTimestamp","lockTimestamp","closeTimestamp","BigNumber","from","toJSON","rewardBaseCalAmount","rewardAmount","oracleCalled","lockOracleId","closeOracleId","makeRoundData","rounds","serializePredictionsLedgerResponse","ledgerResponse","makeLedgerData","ledgers","eq","serializePredictionsRoundsResponse","parseBigNumberObj","data","Object","keys","key","type","fetchUsersRoundsLength","contract","getUserRoundsLength","length","fetchUserRounds","cursor","size","getUserRounds"],"mappings":"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","sourcesContent":["import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n  PredictionUser,\n  HistoryFilter,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  UserResponse,\n} from './queries'\nimport { ROUNDS_PER_PAGE } from './config'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  HOUSE = 'house',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nconst getRoundPosition = (positionResponse: string) => {\n  if (positionResponse === 'Bull') {\n    return BetPosition.BULL\n  }\n\n  if (positionResponse === 'Bear') {\n    return BetPosition.BEAR\n  }\n\n  if (positionResponse === 'House') {\n    return BetPosition.HOUSE\n  }\n\n  return null\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    block: numberOrNull(betResponse.block),\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedAt: numberOrNull(betResponse.claimedAt),\n    claimedBlock: numberOrNull(betResponse.claimedBlock),\n    claimedHash: betResponse.claimedHash,\n    claimedBNB: betResponse.claimedBNB ? parseFloat(betResponse.claimedBNB) : 0,\n    claimedNetBNB: betResponse.claimedNetBNB ? parseFloat(betResponse.claimedNetBNB) : 0,\n    createdAt: numberOrNull(betResponse.createdAt),\n    updatedAt: numberOrNull(betResponse.updatedAt),\n  } as Bet\n\n  if (betResponse.user) {\n    bet.user = transformUserResponse(betResponse.user)\n  }\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformUserResponse = (userResponse: UserResponse): PredictionUser => {\n  const {\n    id,\n    createdAt,\n    updatedAt,\n    block,\n    totalBets,\n    totalBetsBull,\n    totalBetsBear,\n    totalBNB,\n    totalBNBBull,\n    totalBNBBear,\n    totalBetsClaimed,\n    totalBNBClaimed,\n    winRate,\n    averageBNB,\n    netBNB,\n  } = userResponse\n\n  return {\n    id,\n    createdAt: numberOrNull(createdAt),\n    updatedAt: numberOrNull(updatedAt),\n    block: numberOrNull(block),\n    totalBets: numberOrNull(totalBets),\n    totalBetsBull: numberOrNull(totalBetsBull),\n    totalBetsBear: numberOrNull(totalBetsBear),\n    totalBNB: totalBNB ? parseFloat(totalBNB) : 0,\n    totalBNBBull: totalBNBBull ? parseFloat(totalBNBBull) : 0,\n    totalBNBBear: totalBNBBear ? parseFloat(totalBNBBear) : 0,\n    totalBetsClaimed: numberOrNull(totalBetsClaimed),\n    totalBNBClaimed: totalBNBClaimed ? parseFloat(totalBNBClaimed) : 0,\n    winRate: winRate ? parseFloat(winRate) : 0,\n    averageBNB: averageBNB ? parseFloat(averageBNB) : 0,\n    netBNB: netBNB ? parseFloat(netBNB) : 0,\n  }\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    position,\n    startAt,\n    startBlock,\n    startHash,\n    lockAt,\n    lockBlock,\n    lockHash,\n    lockPrice,\n    lockRoundId,\n    closeAt,\n    closeBlock,\n    closeHash,\n    closePrice,\n    closeRoundId,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bullAmount,\n    bearBets,\n    bearAmount,\n    bets = [],\n  } = roundResponse\n\n  return {\n    id,\n    failed,\n    startHash,\n    lockHash,\n    lockRoundId,\n    closeRoundId,\n    closeHash,\n    position: getRoundPosition(position),\n    epoch: numberOrNull(epoch),\n    startAt: numberOrNull(startAt),\n    startBlock: numberOrNull(startBlock),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : 0,\n    closeAt: numberOrNull(closeAt),\n    closeBlock: numberOrNull(closeBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : 0,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bullAmount: bullAmount ? parseFloat(bullAmount) : 0,\n    bearBets: numberOrNull(bearBets),\n    bearAmount: bearAmount ? parseFloat(bearAmount) : 0,\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n\n  if (bet.round.position === BetPosition.HOUSE) {\n    return Result.HOUSE\n  }\n\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\nexport const getFilteredBets = (bets: Bet[], filter: HistoryFilter) => {\n  switch (filter) {\n    case HistoryFilter.COLLECTED:\n      return bets.filter((bet) => bet.claimed === true)\n    case HistoryFilter.UNCOLLECTED:\n      return bets.filter((bet) => {\n        return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n      })\n    case HistoryFilter.ALL:\n    default:\n      return bets\n  }\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const { market } = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n      }\n    `,\n  )) as { market: TotalWonMarketResponse }\n\n  const totalBNB = market.totalBNB ? parseFloat(market.totalBNB) : 0\n  const totalBNBTreasury = market.totalBNBTreasury ? parseFloat(market.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - totalBNBTreasury, 0)\n}\n\ntype WhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (where: WhereClause = {}, first = 1000, skip = 0): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const LEADERBOARD_RESULTS_PER_PAGE = 20\n\ninterface GetPredictionUsersOptions {\n  skip?: number\n  first?: number\n  orderBy?: string\n  orderDir?: string\n  where?: WhereClause\n}\n\nconst defaultPredictionUserOptions = {\n  skip: 0,\n  first: LEADERBOARD_RESULTS_PER_PAGE,\n  orderBy: 'createdAt',\n  orderDir: 'desc',\n}\n\nexport const getPredictionUsers = async (options: GetPredictionUsersOptions = {}): Promise<UserResponse[]> => {\n  const { first, skip, where, orderBy, orderDir } = { ...defaultPredictionUserOptions, ...options }\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUsers($first: Int!, $skip: Int!, $where: User_filter, $orderBy: User_orderBy, $orderDir: OrderDirection) {\n        users(first: $first, skip: $skip, where: $where, orderBy: $orderBy, orderDirection: $orderDir) {\n          ${getUserBaseFields()} \n        }\n      }\n    `,\n    { first, skip, where, orderBy, orderDir },\n  )\n  return response.users\n}\n\nexport const getPredictionUser = async (account: string): Promise<UserResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUser($id: ID!) {\n        user(id: $id) {\n          ${getUserBaseFields()}\n        }\n      }\n  `,\n    {\n      id: account.toLowerCase(),\n    },\n  )\n  return response.user\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalSeconds' | 'minBetAmount' | 'bufferSeconds'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalSeconds', 'minBetAmount', 'paused', 'bufferSeconds'].map((method) => ({\n    address,\n    name: method,\n  }))\n  const [[currentEpoch], [intervalSeconds], [minBetAmount], [paused], [bufferSeconds]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalSeconds: intervalSeconds.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    bufferSeconds: bufferSeconds.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startTimestamp: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startTimestamp,\n    lockTimestamp: null,\n    closeTimestamp: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n    lockOracleId: null,\n    closeOracleId: null,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startTimestamp,\n    lockTimestamp,\n    closeTimestamp,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardBaseCalAmount,\n    rewardAmount,\n    oracleCalled,\n    lockOracleId,\n    closeOracleId,\n  } = response\n\n  return {\n    oracleCalled,\n    epoch: epoch.toNumber(),\n    startTimestamp: startTimestamp.eq(0) ? null : startTimestamp.toNumber(),\n    lockTimestamp: lockTimestamp.eq(0) ? null : lockTimestamp.toNumber(),\n    closeTimestamp: closeTimestamp.eq(0) ? null : closeTimestamp.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    lockOracleId: lockOracleId.toString(),\n    closeOracleId: closeOracleId.toString(),\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n\nexport const fetchUsersRoundsLength = async (account: string) => {\n  try {\n    const contract = getPredictionsContract()\n    const length = await contract.getUserRoundsLength(account)\n    return length\n  } catch {\n    return ethers.BigNumber.from(0)\n  }\n}\n\n/**\n * Fetches rounds a user has participated in\n */\nexport const fetchUserRounds = async (\n  account: string,\n  cursor = 0,\n  size = ROUNDS_PER_PAGE,\n): Promise<{ [key: string]: ReduxNodeLedger }> => {\n  const contract = getPredictionsContract()\n\n  try {\n    const [rounds, ledgers] = await contract.getUserRounds(account, cursor, size)\n\n    return rounds.reduce((accum, round, index) => {\n      return {\n        ...accum,\n        [round.toString()]: serializePredictionsLedgerResponse(ledgers[index]),\n      }\n    }, {})\n  } catch {\n    // When the results run out the contract throws an error.\n    return null\n  }\n}\n"]},"metadata":{},"sourceType":"module"}