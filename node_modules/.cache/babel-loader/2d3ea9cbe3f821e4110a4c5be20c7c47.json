{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{ChainId,Pair,Token}from'@pancakeswap/sdk';import flatMap from'lodash/flatMap';import{useCallback,useMemo}from'react';import{useDispatch,useSelector}from'react-redux';import{BASES_TO_TRACK_LIQUIDITY_FOR,PINNED_PAIRS}from'config/constants';import useActiveWeb3React from'hooks/useActiveWeb3React';import{useAllTokens}from'hooks/Tokens';import{addSerializedPair,addSerializedToken,FarmStakedOnly,muteAudio,removeSerializedToken,toggleTheme as toggleThemeAction,unmuteAudio,updateUserDeadline,updateUserExpertMode,updateUserFarmStakedOnly,updateUserSingleHopOnly,updateUserSlippageTolerance,updateGasPrice,addWatchlistToken,addWatchlistPool,updateUserPoolStakedOnly,updateUserPoolsViewMode,updateUserFarmsViewMode,updateUserPredictionChartDisclaimerShow,updateUserPredictionAcceptedRisk,updateUserUsernameVisibility,updateUserExpertModeAcknowledgementShow}from'../actions';import{deserializeToken,GAS_PRICE_GWEI,serializeToken}from'./helpers';export function useAudioModeManager(){var dispatch=useDispatch();var audioPlay=useSelector(function(state){return state.user.audioPlay;});var toggleSetAudioMode=useCallback(function(){if(audioPlay){dispatch(muteAudio());}else{dispatch(unmuteAudio());}},[audioPlay,dispatch]);return[audioPlay,toggleSetAudioMode];}export function useIsExpertMode(){return useSelector(function(state){return state.user.userExpertMode;});}export function useExpertModeManager(){var dispatch=useDispatch();var expertMode=useIsExpertMode();var toggleSetExpertMode=useCallback(function(){dispatch(updateUserExpertMode({userExpertMode:!expertMode}));},[expertMode,dispatch]);return[expertMode,toggleSetExpertMode];}export function useThemeManager(){var dispatch=useDispatch();var isDark=useSelector(function(state){return state.user.isDark;});var toggleTheme=useCallback(function(){dispatch(toggleThemeAction());},[dispatch]);return[isDark,toggleTheme];}export function useUserSingleHopOnly(){var dispatch=useDispatch();var singleHopOnly=useSelector(function(state){return state.user.userSingleHopOnly;});var setSingleHopOnly=useCallback(function(newSingleHopOnly){dispatch(updateUserSingleHopOnly({userSingleHopOnly:newSingleHopOnly}));},[dispatch]);return[singleHopOnly,setSingleHopOnly];}export function useUserSlippageTolerance(){var dispatch=useDispatch();var userSlippageTolerance=useSelector(function(state){return state.user.userSlippageTolerance;});var setUserSlippageTolerance=useCallback(function(slippage){dispatch(updateUserSlippageTolerance({userSlippageTolerance:slippage}));},[dispatch]);return[userSlippageTolerance,setUserSlippageTolerance];}export function useUserFarmStakedOnly(isActive){var dispatch=useDispatch();var userFarmStakedOnly=useSelector(function(state){return state.user.userFarmStakedOnly;});var setUserFarmStakedOnly=useCallback(function(stakedOnly){var farmStakedOnly=stakedOnly?FarmStakedOnly.TRUE:FarmStakedOnly.FALSE;dispatch(updateUserFarmStakedOnly({userFarmStakedOnly:farmStakedOnly}));},[dispatch]);return[userFarmStakedOnly===FarmStakedOnly.ON_FINISHED?!isActive:userFarmStakedOnly===FarmStakedOnly.TRUE,setUserFarmStakedOnly];}export function useUserPoolStakedOnly(){var dispatch=useDispatch();var userPoolStakedOnly=useSelector(function(state){return state.user.userPoolStakedOnly;});var setUserPoolStakedOnly=useCallback(function(stakedOnly){dispatch(updateUserPoolStakedOnly({userPoolStakedOnly:stakedOnly}));},[dispatch]);return[userPoolStakedOnly,setUserPoolStakedOnly];}export function useUserPoolsViewMode(){var dispatch=useDispatch();var userPoolsViewMode=useSelector(function(state){return state.user.userPoolsViewMode;});var setUserPoolsViewMode=useCallback(function(viewMode){dispatch(updateUserPoolsViewMode({userPoolsViewMode:viewMode}));},[dispatch]);return[userPoolsViewMode,setUserPoolsViewMode];}export function useUserFarmsViewMode(){var dispatch=useDispatch();var userFarmsViewMode=useSelector(function(state){return state.user.userFarmsViewMode;});var setUserFarmsViewMode=useCallback(function(viewMode){dispatch(updateUserFarmsViewMode({userFarmsViewMode:viewMode}));},[dispatch]);return[userFarmsViewMode,setUserFarmsViewMode];}export function useUserPredictionAcceptedRisk(){var dispatch=useDispatch();var userPredictionAcceptedRisk=useSelector(function(state){return state.user.userPredictionAcceptedRisk;});var setUserPredictionAcceptedRisk=useCallback(function(acceptedRisk){dispatch(updateUserPredictionAcceptedRisk({userAcceptedRisk:acceptedRisk}));},[dispatch]);return[userPredictionAcceptedRisk,setUserPredictionAcceptedRisk];}export function useUserPredictionChartDisclaimerShow(){var dispatch=useDispatch();var userPredictionChartDisclaimerShow=useSelector(function(state){return state.user.userPredictionChartDisclaimerShow;});var setPredictionUserChartDisclaimerShow=useCallback(function(showDisclaimer){dispatch(updateUserPredictionChartDisclaimerShow({userShowDisclaimer:showDisclaimer}));},[dispatch]);return[userPredictionChartDisclaimerShow,setPredictionUserChartDisclaimerShow];}export function useUserExpertModeAcknowledgementShow(){var dispatch=useDispatch();var userExpertModeAcknowledgementShow=useSelector(function(state){return state.user.userExpertModeAcknowledgementShow;});var setUserExpertModeAcknowledgementShow=useCallback(function(showAcknowledgement){dispatch(updateUserExpertModeAcknowledgementShow({userExpertModeAcknowledgementShow:showAcknowledgement}));},[dispatch]);return[userExpertModeAcknowledgementShow,setUserExpertModeAcknowledgementShow];}export function useUserUsernameVisibility(){var dispatch=useDispatch();var userUsernameVisibility=useSelector(function(state){return state.user.userUsernameVisibility;});var setUserUsernameVisibility=useCallback(function(usernameVisibility){dispatch(updateUserUsernameVisibility({userUsernameVisibility:usernameVisibility}));},[dispatch]);return[userUsernameVisibility,setUserUsernameVisibility];}export function useUserTransactionTTL(){var dispatch=useDispatch();var userDeadline=useSelector(function(state){return state.user.userDeadline;});var setUserDeadline=useCallback(function(deadline){dispatch(updateUserDeadline({userDeadline:deadline}));},[dispatch]);return[userDeadline,setUserDeadline];}export function useAddUserToken(){var dispatch=useDispatch();return useCallback(function(token){dispatch(addSerializedToken({serializedToken:serializeToken(token)}));},[dispatch]);}export function useRemoveUserAddedToken(){var dispatch=useDispatch();return useCallback(function(chainId,address){dispatch(removeSerializedToken({chainId:chainId,address:address}));},[dispatch]);}export function useGasPrice(){var chainId=process.env.REACT_APP_CHAIN_ID;var userGas=useSelector(function(state){return state.user.gasPrice;});return chainId===ChainId.MAINNET.toString()?userGas:GAS_PRICE_GWEI.testnet;}export function useGasPriceManager(){var dispatch=useDispatch();var userGasPrice=useGasPrice();var setGasPrice=useCallback(function(gasPrice){dispatch(updateGasPrice({gasPrice:gasPrice}));},[dispatch]);return[userGasPrice,setGasPrice];}function serializePair(pair){return{token0:serializeToken(pair.token0),token1:serializeToken(pair.token1)};}export function usePairAdder(){var dispatch=useDispatch();return useCallback(function(pair){dispatch(addSerializedPair({serializedPair:serializePair(pair)}));},[dispatch]);}/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */export function toV2LiquidityToken(_ref){var _ref2=_slicedToArray(_ref,2),tokenA=_ref2[0],tokenB=_ref2[1];return new Token(tokenA.chainId,Pair.getAddress(tokenA,tokenB),18,'Cake-LP','Pancake LPs');}/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */export function useTrackedTokenPairs(){var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var tokens=useAllTokens();// pinned pairs\nvar pinnedPairs=useMemo(function(){var _PINNED_PAIRS$chainId;return chainId?(_PINNED_PAIRS$chainId=PINNED_PAIRS[chainId])!==null&&_PINNED_PAIRS$chainId!==void 0?_PINNED_PAIRS$chainId:[]:[];},[chainId]);// pairs for every token against every base\nvar generatedPairs=useMemo(function(){return chainId?flatMap(Object.keys(tokens),function(tokenAddress){var _BASES_TO_TRACK_LIQUI;var token=tokens[tokenAddress];// for each token on the current chain,\nreturn(// loop though all bases on the current chain\n((_BASES_TO_TRACK_LIQUI=BASES_TO_TRACK_LIQUIDITY_FOR[chainId])!==null&&_BASES_TO_TRACK_LIQUI!==void 0?_BASES_TO_TRACK_LIQUI:[]).// to construct pairs of the given token with each base\nmap(function(base){if(base.address===token.address){return null;}return[base,token];}).filter(function(p){return p!==null;}));}):[];},[tokens,chainId]);// pairs saved by users\nvar savedSerializedPairs=useSelector(function(_ref3){var pairs=_ref3.user.pairs;return pairs;});var userPairs=useMemo(function(){if(!chainId||!savedSerializedPairs)return[];var forChain=savedSerializedPairs[chainId];if(!forChain)return[];return Object.keys(forChain).map(function(pairId){return[deserializeToken(forChain[pairId].token0),deserializeToken(forChain[pairId].token1)];});},[savedSerializedPairs,chainId]);var combinedList=useMemo(function(){return userPairs.concat(generatedPairs).concat(pinnedPairs);},[generatedPairs,pinnedPairs,userPairs]);return useMemo(function(){// dedupes pairs of tokens in the combined list\nvar keyed=combinedList.reduce(function(memo,_ref4){var _ref5=_slicedToArray(_ref4,2),tokenA=_ref5[0],tokenB=_ref5[1];var sorted=tokenA.sortsBefore(tokenB);var key=sorted?\"\".concat(tokenA.address,\":\").concat(tokenB.address):\"\".concat(tokenB.address,\":\").concat(tokenA.address);if(memo[key])return memo;memo[key]=sorted?[tokenA,tokenB]:[tokenB,tokenA];return memo;},{});return Object.keys(keyed).map(function(key){return keyed[key];});},[combinedList]);}export var useWatchlistTokens=function useWatchlistTokens(){var _useSelector;var dispatch=useDispatch();var savedTokens=(_useSelector=useSelector(function(state){return state.user.watchlistTokens;}))!==null&&_useSelector!==void 0?_useSelector:[];var updatedSavedTokens=useCallback(function(address){dispatch(addWatchlistToken({address:address}));},[dispatch]);return[savedTokens,updatedSavedTokens];};export var useWatchlistPools=function useWatchlistPools(){var _useSelector2;var dispatch=useDispatch();var savedPools=(_useSelector2=useSelector(function(state){return state.user.watchlistPools;}))!==null&&_useSelector2!==void 0?_useSelector2:[];var updateSavedPools=useCallback(function(address){dispatch(addWatchlistPool({address:address}));},[dispatch]);return[savedPools,updateSavedPools];};","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/state/user/hooks/index.tsx"],"names":["ChainId","Pair","Token","flatMap","useCallback","useMemo","useDispatch","useSelector","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","useActiveWeb3React","useAllTokens","addSerializedPair","addSerializedToken","FarmStakedOnly","muteAudio","removeSerializedToken","toggleTheme","toggleThemeAction","unmuteAudio","updateUserDeadline","updateUserExpertMode","updateUserFarmStakedOnly","updateUserSingleHopOnly","updateUserSlippageTolerance","updateGasPrice","addWatchlistToken","addWatchlistPool","updateUserPoolStakedOnly","updateUserPoolsViewMode","updateUserFarmsViewMode","updateUserPredictionChartDisclaimerShow","updateUserPredictionAcceptedRisk","updateUserUsernameVisibility","updateUserExpertModeAcknowledgementShow","deserializeToken","GAS_PRICE_GWEI","serializeToken","useAudioModeManager","dispatch","audioPlay","state","user","toggleSetAudioMode","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useThemeManager","isDark","useUserSingleHopOnly","singleHopOnly","userSingleHopOnly","setSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","setUserSlippageTolerance","slippage","useUserFarmStakedOnly","isActive","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","TRUE","FALSE","ON_FINISHED","useUserPoolStakedOnly","userPoolStakedOnly","setUserPoolStakedOnly","useUserPoolsViewMode","userPoolsViewMode","setUserPoolsViewMode","viewMode","useUserFarmsViewMode","userFarmsViewMode","setUserFarmsViewMode","useUserPredictionAcceptedRisk","userPredictionAcceptedRisk","setUserPredictionAcceptedRisk","acceptedRisk","userAcceptedRisk","useUserPredictionChartDisclaimerShow","userPredictionChartDisclaimerShow","setPredictionUserChartDisclaimerShow","showDisclaimer","userShowDisclaimer","useUserExpertModeAcknowledgementShow","userExpertModeAcknowledgementShow","setUserExpertModeAcknowledgementShow","showAcknowledgement","useUserUsernameVisibility","userUsernameVisibility","setUserUsernameVisibility","usernameVisibility","useUserTransactionTTL","userDeadline","setUserDeadline","deadline","useAddUserToken","token","serializedToken","useRemoveUserAddedToken","chainId","address","useGasPrice","process","env","REACT_APP_CHAIN_ID","userGas","gasPrice","MAINNET","toString","testnet","useGasPriceManager","userGasPrice","setGasPrice","serializePair","pair","token0","token1","usePairAdder","serializedPair","toV2LiquidityToken","tokenA","tokenB","getAddress","useTrackedTokenPairs","tokens","pinnedPairs","generatedPairs","Object","keys","tokenAddress","map","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","combinedList","concat","keyed","reduce","memo","sorted","sortsBefore","key","useWatchlistTokens","savedTokens","watchlistTokens","updatedSavedTokens","useWatchlistPools","savedPools","watchlistPools","updateSavedPools"],"mappings":"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","sourcesContent":["import { ChainId, Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  updateGasPrice,\n  addWatchlistToken,\n  addWatchlistPool,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  ViewMode,\n  updateUserFarmsViewMode,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserPredictionAcceptedRisk,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n} from '../actions'\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserPoolStakedOnly(): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPoolStakedOnly = useSelector<AppState, AppState['user']['userPoolStakedOnly']>((state) => {\n    return state.user.userPoolStakedOnly\n  })\n\n  const setUserPoolStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      dispatch(updateUserPoolStakedOnly({ userPoolStakedOnly: stakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolStakedOnly, setUserPoolStakedOnly]\n}\n\nexport function useUserPoolsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPoolsViewMode = useSelector<AppState, AppState['user']['userPoolsViewMode']>((state) => {\n    return state.user.userPoolsViewMode\n  })\n\n  const setUserPoolsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserPoolsViewMode({ userPoolsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolsViewMode, setUserPoolsViewMode]\n}\n\nexport function useUserFarmsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmsViewMode = useSelector<AppState, AppState['user']['userFarmsViewMode']>((state) => {\n    return state.user.userFarmsViewMode\n  })\n\n  const setUserFarmsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserFarmsViewMode({ userFarmsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userFarmsViewMode, setUserFarmsViewMode]\n}\n\nexport function useUserPredictionAcceptedRisk(): [boolean, (acceptedRisk: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPredictionAcceptedRisk = useSelector<AppState, AppState['user']['userPredictionAcceptedRisk']>((state) => {\n    return state.user.userPredictionAcceptedRisk\n  })\n\n  const setUserPredictionAcceptedRisk = useCallback(\n    (acceptedRisk: boolean) => {\n      dispatch(updateUserPredictionAcceptedRisk({ userAcceptedRisk: acceptedRisk }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionAcceptedRisk, setUserPredictionAcceptedRisk]\n}\n\nexport function useUserPredictionChartDisclaimerShow(): [boolean, (showDisclaimer: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPredictionChartDisclaimerShow = useSelector<\n    AppState,\n    AppState['user']['userPredictionChartDisclaimerShow']\n  >((state) => {\n    return state.user.userPredictionChartDisclaimerShow\n  })\n\n  const setPredictionUserChartDisclaimerShow = useCallback(\n    (showDisclaimer: boolean) => {\n      dispatch(updateUserPredictionChartDisclaimerShow({ userShowDisclaimer: showDisclaimer }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionChartDisclaimerShow, setPredictionUserChartDisclaimerShow]\n}\n\nexport function useUserExpertModeAcknowledgementShow(): [boolean, (showAcknowledgement: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userExpertModeAcknowledgementShow = useSelector<\n    AppState,\n    AppState['user']['userExpertModeAcknowledgementShow']\n  >((state) => {\n    return state.user.userExpertModeAcknowledgementShow\n  })\n\n  const setUserExpertModeAcknowledgementShow = useCallback(\n    (showAcknowledgement: boolean) => {\n      dispatch(updateUserExpertModeAcknowledgementShow({ userExpertModeAcknowledgementShow: showAcknowledgement }))\n    },\n    [dispatch],\n  )\n\n  return [userExpertModeAcknowledgementShow, setUserExpertModeAcknowledgementShow]\n}\n\nexport function useUserUsernameVisibility(): [boolean, (usernameVisibility: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userUsernameVisibility = useSelector<AppState, AppState['user']['userUsernameVisibility']>((state) => {\n    return state.user.userUsernameVisibility\n  })\n\n  const setUserUsernameVisibility = useCallback(\n    (usernameVisibility: boolean) => {\n      dispatch(updateUserUsernameVisibility({ userUsernameVisibility: usernameVisibility }))\n    },\n    [dispatch],\n  )\n\n  return [userUsernameVisibility, setUserUsernameVisibility]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useGasPrice(): string {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const userGas = useSelector<AppState, AppState['user']['gasPrice']>((state) => state.user.gasPrice)\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport function useGasPriceManager(): [string, (userGasPrice: string) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userGasPrice = useGasPrice()\n\n  const setGasPrice = useCallback(\n    (gasPrice: string) => {\n      dispatch(updateGasPrice({ gasPrice }))\n    },\n    [dispatch],\n  )\n\n  return [userGasPrice, setGasPrice]\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n\nexport const useWatchlistTokens = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedTokens = useSelector((state: AppState) => state.user.watchlistTokens) ?? []\n  const updatedSavedTokens = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistToken({ address }))\n    },\n    [dispatch],\n  )\n  return [savedTokens, updatedSavedTokens]\n}\n\nexport const useWatchlistPools = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedPools = useSelector((state: AppState) => state.user.watchlistPools) ?? []\n  const updateSavedPools = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistPool({ address }))\n    },\n    [dispatch],\n  )\n  return [savedPools, updateSavedPools]\n}\n"]},"metadata":{},"sourceType":"module"}