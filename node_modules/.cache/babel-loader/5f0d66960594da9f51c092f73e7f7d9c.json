{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Predictions/Leaderboard/components/Results/DesktopResults.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Card, Table, Th } from '@pancakeswap/uikit';\nimport Container from 'components/Layout/Container';\nimport { useTranslation } from 'contexts/Localization';\nimport DesktopRow from './DesktopRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DesktopResults = ({\n  results\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    mb: \"24px\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              width: \"60px\",\n              children: \"\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              textAlign: \"left\",\n              children: t('User')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              textAlign: \"right\",\n              children: t('Net Winnings (BNB)')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: t('Win Rate')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: t('Rounds Won')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: t('Rounds Played')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: results.map((result, index) => /*#__PURE__*/_jsxDEV(DesktopRow, {\n            rank: index + 4,\n            user: result\n          }, result.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DesktopResults, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = DesktopResults;\nexport default DesktopResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"DesktopResults\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/Leaderboard/components/Results/DesktopResults.tsx"],"names":["React","Card","Table","Th","Container","useTranslation","DesktopRow","DesktopResults","results","t","map","result","index","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,EAAtB,QAAgC,oBAAhC;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAMA,MAAMC,cAA6C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACrE,QAAM;AAAEC,IAAAA;AAAF,MAAQJ,cAAc,EAA5B;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,EAAE,EAAC,MAAd;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE,QAAC,KAAD;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE,QAAC,EAAD;AAAI,cAAA,KAAK,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,EAAD;AAAI,cAAA,SAAS,EAAC,MAAd;AAAA,wBAAsBI,CAAC,CAAC,MAAD;AAAvB;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,EAAD;AAAI,cAAA,SAAS,EAAC,OAAd;AAAA,wBAAuBA,CAAC,CAAC,oBAAD;AAAxB;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,QAAC,EAAD;AAAA,wBAAKA,CAAC,CAAC,UAAD;AAAN;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE,QAAC,EAAD;AAAA,wBAAKA,CAAC,CAAC,YAAD;AAAN;AAAA;AAAA;AAAA;AAAA,oBALF,eAME,QAAC,EAAD;AAAA,wBAAKA,CAAC,CAAC,eAAD;AAAN;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAA,oBACGD,OAAO,CAACE,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACX,QAAC,UAAD;AAA4B,YAAA,IAAI,EAAEA,KAAK,GAAG,CAA1C;AAA6C,YAAA,IAAI,EAAED;AAAnD,aAAiBA,MAAM,CAACE,EAAxB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA1BD;;GAAMN,c;UACUF,c;;;KADVE,c;AA4BN,eAAeA,cAAf","sourcesContent":["import React from 'react'\nimport { Card, Table, Th } from '@pancakeswap/uikit'\nimport { PredictionUser } from 'state/types'\nimport Container from 'components/Layout/Container'\nimport { useTranslation } from 'contexts/Localization'\nimport DesktopRow from './DesktopRow'\n\ninterface DesktopResultsProps {\n  results: PredictionUser[]\n}\n\nconst DesktopResults: React.FC<DesktopResultsProps> = ({ results }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Container mb=\"24px\">\n      <Card>\n        <Table>\n          <thead>\n            <tr>\n              <Th width=\"60px\">&nbsp;</Th>\n              <Th textAlign=\"left\">{t('User')}</Th>\n              <Th textAlign=\"right\">{t('Net Winnings (BNB)')}</Th>\n              <Th>{t('Win Rate')}</Th>\n              <Th>{t('Rounds Won')}</Th>\n              <Th>{t('Rounds Played')}</Th>\n            </tr>\n          </thead>\n          <tbody>\n            {results.map((result, index) => (\n              <DesktopRow key={result.id} rank={index + 4} user={result} />\n            ))}\n          </tbody>\n        </Table>\n      </Card>\n    </Container>\n  )\n}\n\nexport default DesktopResults\n"]},"metadata":{},"sourceType":"module"}