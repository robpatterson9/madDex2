{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Collection/IndividualNFTPage/MoreFromThisCollection.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { ArrowBackIcon, ArrowForwardIcon, Box, IconButton, Text, Flex, useMatchBreakpoints } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { useNftsFromCollection } from 'state/nftMarket/hooks';\nimport { isAddress } from 'utils';\nimport { pancakeBunniesAddress } from '../../constants';\nimport { CollectibleLinkCard } from '../../components/CollectibleCard';\nimport 'swiper/swiper-bundle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_SLIDE = 4;\nconst SwiperCircle = styled.div`\n  background-color: ${({\n  theme,\n  isActive\n}) => isActive ? theme.colors.secondary : theme.colors.textDisabled};\n  width: 12px;\n  height: 12px;\n  margin-right: 8px;\n  border-radius: 50%;\n  cursor: pointer;\n`;\n_c = SwiperCircle;\nconst StyledSwiper = styled.div`\n  ${({\n  theme\n}) => theme.mediaQueries.md} {\n    .swiper-wrapper {\n      max-height: 390px;\n    }\n  }\n`;\n_c2 = StyledSwiper;\n\nconst MoreFromThisCollection = ({\n  collectionAddress,\n  currentTokenName\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [swiperRef, setSwiperRef] = useState(null);\n  const [activeIndex, setActiveIndex] = useState(1);\n  const {\n    isMobile,\n    isMd,\n    isLg\n  } = useMatchBreakpoints();\n  const nftList = useNftsFromCollection(collectionAddress);\n\n  if (!nftList) {\n    return null;\n  }\n\n  let slidesPerView = 4;\n  let maxPageIndex = 3;\n\n  if (isLg) {\n    slidesPerView = 3;\n    maxPageIndex = 4;\n  }\n\n  if (isMd) {\n    slidesPerView = 2;\n    maxPageIndex = 6;\n  }\n\n  let nftsToShow = nftList.filter(nft => nft.name !== currentTokenName && nft.marketData.isTradable);\n\n  if (isAddress(collectionAddress) === pancakeBunniesAddress) {\n    // PancakeBunnies should display 1 card per bunny id\n    nftsToShow = nftsToShow.reduce((nftArray, current) => {\n      const bunnyId = current.attributes[0].value;\n\n      if (!nftArray.find(nft => nft.attributes[0].value === bunnyId)) {\n        nftArray.push(current);\n      }\n\n      return nftArray;\n    }, []);\n  }\n\n  nftsToShow = nftsToShow.slice(0, 12);\n\n  const nextSlide = () => {\n    if (activeIndex < maxPageIndex - 1) {\n      setActiveIndex(activeIndex + 1);\n      swiperRef.slideNext();\n    }\n  };\n\n  const previousSlide = () => {\n    if (activeIndex > 0) {\n      setActiveIndex(activeIndex - 1);\n      swiperRef.slidePrev();\n    }\n  };\n\n  const goToSlide = index => {\n    setActiveIndex(index / slidesPerView);\n    swiperRef.slideTo(index);\n  };\n\n  const updateActiveIndex = ({\n    activeIndex: newActiveIndex\n  }) => {\n    if (newActiveIndex !== undefined) setActiveIndex(Math.ceil(newActiveIndex / slidesPerView));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    pt: \"56px\",\n    mb: \"52px\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      bold: true,\n      mb: \"24px\",\n      children: t('More from this collection')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), isMobile ? /*#__PURE__*/_jsxDEV(StyledSwiper, {\n      children: /*#__PURE__*/_jsxDEV(Swiper, {\n        spaceBetween: 16,\n        slidesPerView: 1.5,\n        children: nftsToShow.map(nft => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: /*#__PURE__*/_jsxDEV(CollectibleLinkCard, {\n            nft: nft\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)\n        }, nft.tokenId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(StyledSwiper, {\n      children: [/*#__PURE__*/_jsxDEV(Swiper, {\n        onSwiper: setSwiperRef,\n        onActiveIndexChange: updateActiveIndex,\n        spaceBetween: 16,\n        slidesPerView: slidesPerView,\n        slidesPerGroup: slidesPerView,\n        initialSlide: INITIAL_SLIDE,\n        children: nftsToShow.map(nft => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: /*#__PURE__*/_jsxDEV(CollectibleLinkCard, {\n            nft: nft\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)\n        }, nft.tokenId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        mt: \"16px\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          variant: \"text\",\n          onClick: previousSlide,\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), [...Array(maxPageIndex).keys()].map(index => /*#__PURE__*/_jsxDEV(SwiperCircle, {\n          onClick: () => goToSlide(index * slidesPerView),\n          isActive: activeIndex === index\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(IconButton, {\n          variant: \"text\",\n          onClick: nextSlide,\n          children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MoreFromThisCollection, \"qMJb189Dpu/R05oTuYl7p6laJM0=\", false, function () {\n  return [useTranslation, useMatchBreakpoints, useNftsFromCollection];\n});\n\n_c3 = MoreFromThisCollection;\nexport default MoreFromThisCollection;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SwiperCircle\");\n$RefreshReg$(_c2, \"StyledSwiper\");\n$RefreshReg$(_c3, \"MoreFromThisCollection\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Collection/IndividualNFTPage/MoreFromThisCollection.tsx"],"names":["React","useState","styled","Swiper","SwiperSlide","ArrowBackIcon","ArrowForwardIcon","Box","IconButton","Text","Flex","useMatchBreakpoints","useTranslation","useNftsFromCollection","isAddress","pancakeBunniesAddress","CollectibleLinkCard","INITIAL_SLIDE","SwiperCircle","div","theme","isActive","colors","secondary","textDisabled","StyledSwiper","mediaQueries","md","MoreFromThisCollection","collectionAddress","currentTokenName","t","swiperRef","setSwiperRef","activeIndex","setActiveIndex","isMobile","isMd","isLg","nftList","slidesPerView","maxPageIndex","nftsToShow","filter","nft","name","marketData","isTradable","reduce","nftArray","current","bunnyId","attributes","value","find","push","slice","nextSlide","slideNext","previousSlide","slidePrev","goToSlide","index","slideTo","updateActiveIndex","newActiveIndex","undefined","Math","ceil","map","tokenId","Array","keys"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport SwiperCore from 'swiper'\nimport { ArrowBackIcon, ArrowForwardIcon, Box, IconButton, Text, Flex, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useNftsFromCollection } from 'state/nftMarket/hooks'\nimport { isAddress } from 'utils'\nimport { pancakeBunniesAddress } from '../../constants'\nimport { CollectibleLinkCard } from '../../components/CollectibleCard'\n\nimport 'swiper/swiper-bundle.css'\n\nconst INITIAL_SLIDE = 4\n\nconst SwiperCircle = styled.div<{ isActive }>`\n  background-color: ${({ theme, isActive }) => (isActive ? theme.colors.secondary : theme.colors.textDisabled)};\n  width: 12px;\n  height: 12px;\n  margin-right: 8px;\n  border-radius: 50%;\n  cursor: pointer;\n`\n\nconst StyledSwiper = styled.div`\n  ${({ theme }) => theme.mediaQueries.md} {\n    .swiper-wrapper {\n      max-height: 390px;\n    }\n  }\n`\n\ninterface MoreFromThisCollectionProps {\n  collectionAddress: string\n  currentTokenName: string\n}\n\nconst MoreFromThisCollection: React.FC<MoreFromThisCollectionProps> = ({ collectionAddress, currentTokenName }) => {\n  const { t } = useTranslation()\n  const [swiperRef, setSwiperRef] = useState<SwiperCore>(null)\n  const [activeIndex, setActiveIndex] = useState(1)\n  const { isMobile, isMd, isLg } = useMatchBreakpoints()\n  const nftList = useNftsFromCollection(collectionAddress)\n\n  if (!nftList) {\n    return null\n  }\n\n  let slidesPerView = 4\n  let maxPageIndex = 3\n\n  if (isLg) {\n    slidesPerView = 3\n    maxPageIndex = 4\n  }\n  if (isMd) {\n    slidesPerView = 2\n    maxPageIndex = 6\n  }\n\n  let nftsToShow = nftList.filter((nft) => nft.name !== currentTokenName && nft.marketData.isTradable)\n  if (isAddress(collectionAddress) === pancakeBunniesAddress) {\n    // PancakeBunnies should display 1 card per bunny id\n    nftsToShow = nftsToShow.reduce((nftArray, current) => {\n      const bunnyId = current.attributes[0].value\n      if (!nftArray.find((nft) => nft.attributes[0].value === bunnyId)) {\n        nftArray.push(current)\n      }\n      return nftArray\n    }, [])\n  }\n  nftsToShow = nftsToShow.slice(0, 12)\n\n  const nextSlide = () => {\n    if (activeIndex < maxPageIndex - 1) {\n      setActiveIndex(activeIndex + 1)\n      swiperRef.slideNext()\n    }\n  }\n\n  const previousSlide = () => {\n    if (activeIndex > 0) {\n      setActiveIndex(activeIndex - 1)\n      swiperRef.slidePrev()\n    }\n  }\n\n  const goToSlide = (index: number) => {\n    setActiveIndex(index / slidesPerView)\n    swiperRef.slideTo(index)\n  }\n\n  const updateActiveIndex = ({ activeIndex: newActiveIndex }) => {\n    if (newActiveIndex !== undefined) setActiveIndex(Math.ceil(newActiveIndex / slidesPerView))\n  }\n\n  return (\n    <Box pt=\"56px\" mb=\"52px\">\n      <Text bold mb=\"24px\">\n        {t('More from this collection')}\n      </Text>\n      {isMobile ? (\n        <StyledSwiper>\n          <Swiper spaceBetween={16} slidesPerView={1.5}>\n            {nftsToShow.map((nft) => (\n              <SwiperSlide key={nft.tokenId}>\n                <CollectibleLinkCard nft={nft} />\n              </SwiperSlide>\n            ))}\n          </Swiper>\n        </StyledSwiper>\n      ) : (\n        <StyledSwiper>\n          <Swiper\n            onSwiper={setSwiperRef}\n            onActiveIndexChange={updateActiveIndex}\n            spaceBetween={16}\n            slidesPerView={slidesPerView}\n            slidesPerGroup={slidesPerView}\n            initialSlide={INITIAL_SLIDE}\n          >\n            {nftsToShow.map((nft) => (\n              <SwiperSlide key={nft.tokenId}>\n                <CollectibleLinkCard nft={nft} />\n              </SwiperSlide>\n            ))}\n          </Swiper>\n          <Flex mt=\"16px\" alignItems=\"center\" justifyContent=\"center\">\n            <IconButton variant=\"text\" onClick={previousSlide}>\n              <ArrowBackIcon />\n            </IconButton>\n            {[...Array(maxPageIndex).keys()].map((index) => (\n              <SwiperCircle\n                key={index}\n                onClick={() => goToSlide(index * slidesPerView)}\n                isActive={activeIndex === index}\n              />\n            ))}\n            <IconButton variant=\"text\" onClick={nextSlide}>\n              <ArrowForwardIcon />\n            </IconButton>\n          </Flex>\n        </StyledSwiper>\n      )}\n    </Box>\n  )\n}\n\nexport default MoreFromThisCollection\n"]},"metadata":{},"sourceType":"module"}