{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{Text,Heading,Card,CardHeader,CardBody,Flex,Spinner,Skeleton,Tag,Button,CheckmarkCircleIcon,useModal}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{AuctionStatus}from'config/constants/types';import{getBalanceNumber}from'utils/formatBalance';import PlaceBidModal from'../PlaceBidModal';import AuctionSchedule from'./AuctionSchedule';import CannotBidMessage from'./CannotBidMessage';import AuctionFooter from'./AuctionFooter';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var AuctionDetailsCard=styled(Card)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  flex: 1;\\n\"])));var AuctionDetails=function AuctionDetails(_ref){var auction=_ref.auction,connectedBidder=_ref.connectedBidder,refreshBidders=_ref.refreshBidders;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useModal=useModal(/*#__PURE__*/_jsx(PlaceBidModal,{connectedBidder:connectedBidder,refreshBidders:refreshBidders,initialBidAmount:auction===null||auction===void 0?void 0:auction.initialBidAmount})),_useModal2=_slicedToArray(_useModal,1),onPresentPlaceBid=_useModal2[0];if(!auction){return/*#__PURE__*/_jsxs(AuctionDetailsCard,{mb:['24px',null,null,'0'],children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(Heading,{children:t('Current Auction')})}),/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(Flex,{justifyContent:\"center\",alignItems:\"center\",height:\"100%\",children:/*#__PURE__*/_jsx(Spinner,{})})})]});}var getBidSection=function getBidSection(){var notConnectedOrNotWhitelisted=!connectedBidder||connectedBidder&&!connectedBidder.isWhitelisted;var whitelistedAndReadyToBid=!notConnectedOrNotWhitelisted&&connectedBidder.bidderData;if(notConnectedOrNotWhitelisted||auction.status!==AuctionStatus.Open){return/*#__PURE__*/_jsx(CannotBidMessage,{});}if(whitelistedAndReadyToBid){var _connectedBidder$bidd=connectedBidder.bidderData,amount=_connectedBidder$bidd.amount,position=_connectedBidder$bidd.position;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Tag,{outline:true,variant:\"success\",startIcon:/*#__PURE__*/_jsx(CheckmarkCircleIcon,{}),children:t('Connected as %projectName%',{projectName:connectedBidder.bidderData.tokenName})}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",width:\"100%\",pt:\"24px\",children:[/*#__PURE__*/_jsx(Text,{small:true,color:\"textSubtle\",children:t('Your existing bid')}),/*#__PURE__*/_jsxs(Text,{small:true,children:[getBalanceNumber(amount).toLocaleString(),\" CAKE\"]})]}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",width:\"100%\",pt:\"8px\",children:[/*#__PURE__*/_jsx(Text,{small:true,color:\"textSubtle\",children:t('Your position')}),/*#__PURE__*/_jsx(Text,{small:true,children:position?\"#\".concat(position):'-'})]}),/*#__PURE__*/_jsx(Button,{my:\"24px\",width:\"100%\",onClick:onPresentPlaceBid,children:t('Place bid')}),/*#__PURE__*/_jsx(Text,{color:\"textSubtle\",small:true,children:t('If your bid is unsuccessful, youâ€™ll be able to reclaim your CAKE after the auction.')})]});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Skeleton,{width:\"200px\",height:\"28px\"}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",width:\"100%\",pt:\"24px\",px:\"8px\",children:[/*#__PURE__*/_jsx(Skeleton,{width:\"120px\",height:\"24px\"}),/*#__PURE__*/_jsx(Skeleton,{width:\"86px\",height:\"24px\"})]}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",width:\"100%\",pt:\"8px\",px:\"8px\",children:[/*#__PURE__*/_jsx(Skeleton,{width:\"96px\",height:\"24px\"}),/*#__PURE__*/_jsx(Skeleton,{width:\"42px\",height:\"24px\"})]})]});};var cardTitle=auction.status===AuctionStatus.Closed?t('Next Auction'):t('Current Auction');return/*#__PURE__*/_jsxs(AuctionDetailsCard,{mb:['24px',null,null,'0'],children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(Heading,{children:cardTitle})}),/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(AuctionSchedule,{auction:auction}),/*#__PURE__*/_jsx(Flex,{mt:\"24px\",flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",children:getBidSection()})]}),/*#__PURE__*/_jsx(AuctionFooter,{auction:auction})]});};export default AuctionDetails;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/FarmAuction/components/AuctionDetailsCard/index.tsx"],"names":["React","styled","Text","Heading","Card","CardHeader","CardBody","Flex","Spinner","Skeleton","Tag","Button","CheckmarkCircleIcon","useModal","useTranslation","AuctionStatus","getBalanceNumber","PlaceBidModal","AuctionSchedule","CannotBidMessage","AuctionFooter","AuctionDetailsCard","AuctionDetails","auction","connectedBidder","refreshBidders","t","initialBidAmount","onPresentPlaceBid","getBidSection","notConnectedOrNotWhitelisted","isWhitelisted","whitelistedAndReadyToBid","bidderData","status","Open","amount","position","projectName","tokenName","toLocaleString","cardTitle","Closed"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport {\n  Text,\n  Heading,\n  Card,\n  CardHeader,\n  CardBody,\n  Flex,\n  Spinner,\n  Skeleton,\n  Tag,\n  Button,\n  CheckmarkCircleIcon,\n  useModal,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Auction, AuctionStatus, ConnectedBidder } from 'config/constants/types'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport PlaceBidModal from '../PlaceBidModal'\nimport AuctionSchedule from './AuctionSchedule'\nimport CannotBidMessage from './CannotBidMessage'\nimport AuctionFooter from './AuctionFooter'\n\nconst AuctionDetailsCard = styled(Card)`\n  flex: 1;\n`\n\ninterface AuctionDetailsProps {\n  auction: Auction\n  connectedBidder: ConnectedBidder\n  refreshBidders: () => void\n}\n\nconst AuctionDetails: React.FC<AuctionDetailsProps> = ({ auction, connectedBidder, refreshBidders }) => {\n  const { t } = useTranslation()\n\n  const [onPresentPlaceBid] = useModal(\n    <PlaceBidModal\n      connectedBidder={connectedBidder}\n      refreshBidders={refreshBidders}\n      initialBidAmount={auction?.initialBidAmount}\n    />,\n  )\n\n  if (!auction) {\n    return (\n      <AuctionDetailsCard mb={['24px', null, null, '0']}>\n        <CardHeader>\n          <Heading>{t('Current Auction')}</Heading>\n        </CardHeader>\n        <CardBody>\n          <Flex justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n            <Spinner />\n          </Flex>\n        </CardBody>\n      </AuctionDetailsCard>\n    )\n  }\n\n  const getBidSection = () => {\n    const notConnectedOrNotWhitelisted = !connectedBidder || (connectedBidder && !connectedBidder.isWhitelisted)\n    const whitelistedAndReadyToBid = !notConnectedOrNotWhitelisted && connectedBidder.bidderData\n    if (notConnectedOrNotWhitelisted || auction.status !== AuctionStatus.Open) {\n      return <CannotBidMessage />\n    }\n    if (whitelistedAndReadyToBid) {\n      const { amount, position } = connectedBidder.bidderData\n      return (\n        <>\n          <Tag outline variant=\"success\" startIcon={<CheckmarkCircleIcon />}>\n            {t('Connected as %projectName%', { projectName: connectedBidder.bidderData.tokenName })}\n          </Tag>\n          <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"24px\">\n            <Text small color=\"textSubtle\">\n              {t('Your existing bid')}\n            </Text>\n            <Text small>{getBalanceNumber(amount).toLocaleString()} CAKE</Text>\n          </Flex>\n          <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\">\n            <Text small color=\"textSubtle\">\n              {t('Your position')}\n            </Text>\n            <Text small>{position ? `#${position}` : '-'}</Text>\n          </Flex>\n          <Button my=\"24px\" width=\"100%\" onClick={onPresentPlaceBid}>\n            {t('Place bid')}\n          </Button>\n          <Text color=\"textSubtle\" small>\n            {t('If your bid is unsuccessful, youâ€™ll be able to reclaim your CAKE after the auction.')}\n          </Text>\n        </>\n      )\n    }\n    return (\n      <>\n        <Skeleton width=\"200px\" height=\"28px\" />\n        <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"24px\" px=\"8px\">\n          <Skeleton width=\"120px\" height=\"24px\" />\n          <Skeleton width=\"86px\" height=\"24px\" />\n        </Flex>\n        <Flex justifyContent=\"space-between\" width=\"100%\" pt=\"8px\" px=\"8px\">\n          <Skeleton width=\"96px\" height=\"24px\" />\n          <Skeleton width=\"42px\" height=\"24px\" />\n        </Flex>\n      </>\n    )\n  }\n\n  const cardTitle = auction.status === AuctionStatus.Closed ? t('Next Auction') : t('Current Auction')\n\n  return (\n    <AuctionDetailsCard mb={['24px', null, null, '0']}>\n      <CardHeader>\n        <Heading>{cardTitle}</Heading>\n      </CardHeader>\n      <CardBody>\n        <AuctionSchedule auction={auction} />\n        <Flex mt=\"24px\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\n          {getBidSection()}\n        </Flex>\n      </CardBody>\n      <AuctionFooter auction={auction} />\n    </AuctionDetailsCard>\n  )\n}\n\nexport default AuctionDetails\n"]},"metadata":{},"sourceType":"module"}