{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from'react';import{Box,Card,CardBody,CardRibbon,Flex,ProfileAvatar,LaurelLeftIcon,LaurelRightIcon,Link,Text,SubMenu,SubMenuItem,useModal}from'@pancakeswap/uikit';import{useGetProfileAvatar}from'state/profile/hooks';import styled from'styled-components';import{getBscScanLink}from'utils';import truncateHash from'utils/truncateHash';import{useTranslation}from'contexts/Localization';import WalletStatsModal from'../WalletStatsModal';import{NetWinningsRow,Row}from'./styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var RotatedLaurelLeftIcon=styled(LaurelLeftIcon)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  transform: rotate(30deg);\\n\"])));var RotatedLaurelRightIcon=styled(LaurelRightIcon)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  transform: rotate(-30deg);\\n\"])));var getRankingColor=function getRankingColor(rank){if(rank===3){return'bronze';}if(rank===2){return'silver';}return'gold';};var RankingCard=function RankingCard(_ref){var _profileAvatar$nft,_profileAvatar$nft$im;var rank=_ref.rank,user=_ref.user;var _useTranslation=useTranslation(),t=_useTranslation.t;var rankColor=getRankingColor(rank);var profileAvatar=useGetProfileAvatar(user.id);var _useModal=useModal(/*#__PURE__*/_jsx(WalletStatsModal,{account:user.id})),_useModal2=_slicedToArray(_useModal,1),onPresentWalletStatsModal=_useModal2[0];return/*#__PURE__*/_jsx(Card,{ribbon:/*#__PURE__*/_jsx(CardRibbon,{variantColor:rankColor,text:\"#\".concat(rank),ribbonPosition:\"left\"}),children:/*#__PURE__*/_jsxs(CardBody,{p:\"24px\",children:[/*#__PURE__*/_jsx(Flex,{alignItems:\"center\",justifyContent:\"center\",flexDirection:\"column\",mb:\"24px\",children:/*#__PURE__*/_jsxs(SubMenu,{component:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Flex,{mb:\"4px\",children:[/*#__PURE__*/_jsx(RotatedLaurelLeftIcon,{color:rankColor,width:\"32px\"}),/*#__PURE__*/_jsx(Box,{width:['40px',null,null,'64px'],height:['40px',null,null,'64px'],children:/*#__PURE__*/_jsx(ProfileAvatar,{src:(_profileAvatar$nft=profileAvatar.nft)===null||_profileAvatar$nft===void 0?void 0:(_profileAvatar$nft$im=_profileAvatar$nft.image)===null||_profileAvatar$nft$im===void 0?void 0:_profileAvatar$nft$im.thumbnail,height:64,width:64})}),/*#__PURE__*/_jsx(RotatedLaurelRightIcon,{color:rankColor,width:\"32px\"})]}),/*#__PURE__*/_jsx(Text,{color:\"primary\",fontWeight:\"bold\",textAlign:\"center\",children:profileAvatar.username||truncateHash(user.id)})]}),options:{placement:'bottom'},children:[/*#__PURE__*/_jsx(SubMenuItem,{onClick:onPresentWalletStatsModal,children:t('View Stats')}),/*#__PURE__*/_jsx(SubMenuItem,{as:Link,href:getBscScanLink(user.id,'address'),bold:false,color:\"text\",external:true,children:t('View on BscScan')})]})}),/*#__PURE__*/_jsxs(Row,{mb:\"4px\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",children:t('Win Rate')}),/*#__PURE__*/_jsx(Text,{fontWeight:\"bold\",children:\"\".concat(user.winRate.toLocaleString(undefined,{minimumFractionDigits:0,maximumFractionDigits:2}),\"%\")})]}),/*#__PURE__*/_jsx(NetWinningsRow,{amount:user.netBNB}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",children:t('Rounds Won')}),/*#__PURE__*/_jsx(Text,{fontWeight:\"bold\",children:\"\".concat(user.totalBetsClaimed.toLocaleString(),\"/\").concat(user.totalBets.toLocaleString())})]})]})});};export default RankingCard;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/Leaderboard/components/Results/RankingCard.tsx"],"names":["React","Box","Card","CardBody","CardRibbon","Flex","ProfileAvatar","LaurelLeftIcon","LaurelRightIcon","Link","Text","SubMenu","SubMenuItem","useModal","useGetProfileAvatar","styled","getBscScanLink","truncateHash","useTranslation","WalletStatsModal","NetWinningsRow","Row","RotatedLaurelLeftIcon","RotatedLaurelRightIcon","getRankingColor","rank","RankingCard","user","t","rankColor","profileAvatar","id","onPresentWalletStatsModal","nft","image","thumbnail","username","placement","winRate","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","netBNB","totalBetsClaimed","totalBets"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n  Box,\n  Card,\n  CardBody,\n  CardRibbon,\n  Flex,\n  ProfileAvatar,\n  LaurelLeftIcon,\n  LaurelRightIcon,\n  Link,\n  Text,\n  SubMenu,\n  SubMenuItem,\n  useModal,\n} from '@pancakeswap/uikit'\nimport { PredictionUser } from 'state/types'\nimport { useGetProfileAvatar } from 'state/profile/hooks'\nimport styled from 'styled-components'\nimport { getBscScanLink } from 'utils'\nimport truncateHash from 'utils/truncateHash'\nimport { useTranslation } from 'contexts/Localization'\nimport WalletStatsModal from '../WalletStatsModal'\nimport { NetWinningsRow, Row } from './styles'\n\ninterface RankingCardProps {\n  rank: 1 | 2 | 3\n  user: PredictionUser\n}\n\nconst RotatedLaurelLeftIcon = styled(LaurelLeftIcon)`\n  transform: rotate(30deg);\n`\n\nconst RotatedLaurelRightIcon = styled(LaurelRightIcon)`\n  transform: rotate(-30deg);\n`\n\nconst getRankingColor = (rank: number) => {\n  if (rank === 3) {\n    return 'bronze'\n  }\n\n  if (rank === 2) {\n    return 'silver'\n  }\n\n  return 'gold'\n}\n\nconst RankingCard: React.FC<RankingCardProps> = ({ rank, user }) => {\n  const { t } = useTranslation()\n  const rankColor = getRankingColor(rank)\n  const profileAvatar = useGetProfileAvatar(user.id)\n  const [onPresentWalletStatsModal] = useModal(<WalletStatsModal account={user.id} />)\n\n  return (\n    <Card ribbon={<CardRibbon variantColor={rankColor} text={`#${rank}`} ribbonPosition=\"left\" />}>\n      <CardBody p=\"24px\">\n        <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\" mb=\"24px\">\n          <SubMenu\n            component={\n              <>\n                <Flex mb=\"4px\">\n                  <RotatedLaurelLeftIcon color={rankColor} width=\"32px\" />\n                  <Box width={['40px', null, null, '64px']} height={['40px', null, null, '64px']}>\n                    <ProfileAvatar src={profileAvatar.nft?.image?.thumbnail} height={64} width={64} />\n                  </Box>\n                  <RotatedLaurelRightIcon color={rankColor} width=\"32px\" />\n                </Flex>\n                <Text color=\"primary\" fontWeight=\"bold\" textAlign=\"center\">\n                  {profileAvatar.username || truncateHash(user.id)}\n                </Text>\n              </>\n            }\n            options={{ placement: 'bottom' }}\n          >\n            <SubMenuItem onClick={onPresentWalletStatsModal}>{t('View Stats')}</SubMenuItem>\n            <SubMenuItem as={Link} href={getBscScanLink(user.id, 'address')} bold={false} color=\"text\" external>\n              {t('View on BscScan')}\n            </SubMenuItem>\n          </SubMenu>\n        </Flex>\n        <Row mb=\"4px\">\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {t('Win Rate')}\n          </Text>\n          <Text fontWeight=\"bold\">\n            {`${user.winRate.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 2 })}%`}\n          </Text>\n        </Row>\n        <NetWinningsRow amount={user.netBNB} />\n        <Row>\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {t('Rounds Won')}\n          </Text>\n          <Text fontWeight=\"bold\">{`${user.totalBetsClaimed.toLocaleString()}/${user.totalBets.toLocaleString()}`}</Text>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default RankingCard\n"]},"metadata":{},"sourceType":"module"}