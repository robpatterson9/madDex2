{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/components/Menu/UserMenu/WalletTransactions.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Box, Button, Flex, Text } from '@pancakeswap/uikit';\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks';\nimport { useTranslation } from 'contexts/Localization';\nimport useActiveWeb3React from 'hooks/useActiveWeb3React';\nimport { clearAllTransactions } from 'state/transactions/actions';\nimport { orderBy } from 'lodash';\nimport TransactionRow from './TransactionRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WalletTransactions = () => {\n  _s();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const dispatch = useDispatch();\n  const {\n    t\n  } = useTranslation();\n  const allTransactions = useAllTransactions();\n  const sortedTransactions = orderBy(Object.values(allTransactions).filter(isTransactionRecent), 'addedTime', 'desc');\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({\n        chainId\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    minHeight: \"120px\",\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      mb: \"24px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        color: \"secondary\",\n        fontSize: \"12px\",\n        textTransform: \"uppercase\",\n        fontWeight: \"bold\",\n        children: t('Recent Transactions')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), sortedTransactions.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n        scale: \"sm\",\n        onClick: handleClearAll,\n        variant: \"text\",\n        px: \"0\",\n        children: t('Clear all')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), sortedTransactions.length > 0 ? sortedTransactions.map(txn => /*#__PURE__*/_jsxDEV(TransactionRow, {\n      txn: txn\n    }, txn.hash, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 41\n    }, this)) : /*#__PURE__*/_jsxDEV(Text, {\n      textAlign: \"center\",\n      children: t('No recent transactions')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WalletTransactions, \"DsW9zw6f29fWiNgjXBQ/qPauoUQ=\", false, function () {\n  return [useActiveWeb3React, useDispatch, useTranslation, useAllTransactions];\n});\n\n_c = WalletTransactions;\nexport default WalletTransactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletTransactions\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/components/Menu/UserMenu/WalletTransactions.tsx"],"names":["React","useDispatch","Box","Button","Flex","Text","isTransactionRecent","useAllTransactions","useTranslation","useActiveWeb3React","clearAllTransactions","orderBy","TransactionRow","WalletTransactions","chainId","dispatch","t","allTransactions","sortedTransactions","Object","values","filter","handleClearAll","length","map","txn","hash"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,IAA5B,QAAwC,oBAAxC;AAEA,SAASC,mBAAT,EAA8BC,kBAA9B,QAAwD,0BAAxD;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,kBAAP,MAA+B,0BAA/B;AACA,SAASC,oBAAT,QAAqC,4BAArC;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,kBAA4B,GAAG,MAAM;AAAA;;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAcL,kBAAkB,EAAtC;AACA,QAAMM,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAQR,cAAc,EAA5B;AACA,QAAMS,eAAe,GAAGV,kBAAkB,EAA1C;AACA,QAAMW,kBAAkB,GAAGP,OAAO,CAACQ,MAAM,CAACC,MAAP,CAAcH,eAAd,EAA+BI,MAA/B,CAAsCf,mBAAtC,CAAD,EAA6D,WAA7D,EAA0E,MAA1E,CAAlC;;AAEA,QAAMgB,cAAc,GAAG,MAAM;AAC3B,QAAIR,OAAJ,EAAa;AACXC,MAAAA,QAAQ,CAACL,oBAAoB,CAAC;AAAEI,QAAAA;AAAF,OAAD,CAArB,CAAR;AACD;AACF,GAJD;;AAMA,sBACE,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,UAAU,EAAC,QAAjB;AAA0B,MAAA,cAAc,EAAC,eAAzC;AAAyD,MAAA,EAAE,EAAC,MAA5D;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAC,WAAZ;AAAwB,QAAA,QAAQ,EAAC,MAAjC;AAAwC,QAAA,aAAa,EAAC,WAAtD;AAAkE,QAAA,UAAU,EAAC,MAA7E;AAAA,kBACGE,CAAC,CAAC,qBAAD;AADJ;AAAA;AAAA;AAAA;AAAA,cADF,EAIGE,kBAAkB,CAACK,MAAnB,GAA4B,CAA5B,iBACC,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,IAAd;AAAmB,QAAA,OAAO,EAAED,cAA5B;AAA4C,QAAA,OAAO,EAAC,MAApD;AAA2D,QAAA,EAAE,EAAC,GAA9D;AAAA,kBACGN,CAAC,CAAC,WAAD;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAWGE,kBAAkB,CAACK,MAAnB,GAA4B,CAA5B,GACCL,kBAAkB,CAACM,GAAnB,CAAwBC,GAAD,iBAAS,QAAC,cAAD;AAA+B,MAAA,GAAG,EAAEA;AAApC,OAAqBA,GAAG,CAACC,IAAzB;AAAA;AAAA;AAAA;AAAA,YAAhC,CADD,gBAGC,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA,gBAA0BV,CAAC,CAAC,wBAAD;AAA3B;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAhCD;;GAAMH,kB;UACgBJ,kB,EACHR,W,EACHO,c,EACUD,kB;;;KAJpBM,kB;AAkCN,eAAeA,kBAAf","sourcesContent":["import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Box, Button, Flex, Text } from '@pancakeswap/uikit'\nimport { AppDispatch } from 'state'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { orderBy } from 'lodash'\nimport TransactionRow from './TransactionRow'\n\nconst WalletTransactions: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const allTransactions = useAllTransactions()\n  const sortedTransactions = orderBy(Object.values(allTransactions).filter(isTransactionRecent), 'addedTime', 'desc')\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }\n\n  return (\n    <Box minHeight=\"120px\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\n          {t('Recent Transactions')}\n        </Text>\n        {sortedTransactions.length > 0 && (\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Flex>\n      {sortedTransactions.length > 0 ? (\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\n      ) : (\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\n      )}\n    </Box>\n  )\n}\n\nexport default WalletTransactions\n"]},"metadata":{},"sourceType":"module"}