{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _tierStyleMap;import React,{useState}from'react';import{BlockIcon,Box,CheckmarkCircleIcon,Flex,MedalBronzeIcon,MedalGoldIcon,MedalPurpleIcon,MedalSilverIcon,MedalTealIcon,CrownIcon,Tab,TabMenu,Text,TeamPlayerIcon,TrophyGoldIcon}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import easterPrizes,{Tiers}from'config/constants/trading-competition/easter';import{Td,BoldTd,StyledPrizeTable}from'../../StyledPrizeTable';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var COLOR_GOLD='#FFBF33';var COLOR_SILVER='#C1C1C1';var COLOR_BRONZE='#E79559';var COLOR_PURPLE='#A57CFD';var COLOR_TEAL='#4CD2DD';var tierStyleMap=(_tierStyleMap={},_defineProperty(_tierStyleMap,Tiers.GOLD,{icon:MedalGoldIcon,label:{text:'Gold'},color:COLOR_GOLD}),_defineProperty(_tierStyleMap,Tiers.SILVER,{icon:MedalSilverIcon,label:{text:'Silver'},color:COLOR_SILVER}),_defineProperty(_tierStyleMap,Tiers.BRONZE,{icon:MedalBronzeIcon,label:{text:'Bronze'},color:COLOR_BRONZE}),_defineProperty(_tierStyleMap,Tiers.SILVER,{icon:MedalSilverIcon,label:{text:'Silver'},color:COLOR_SILVER}),_defineProperty(_tierStyleMap,Tiers.PURPLE,{icon:MedalPurpleIcon,label:{text:'Purple'},color:COLOR_PURPLE}),_defineProperty(_tierStyleMap,Tiers.TEAL,{icon:MedalTealIcon,label:{text:'Teal'},color:COLOR_TEAL}),_tierStyleMap);var getTotalAchievementPoints=function getTotalAchievementPoints(achievements){return Object.values(achievements).reduce(function(accum,achievement){return achievement?accum+achievement:accum;},0);};var PrizesGrid=function PrizesGrid(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),tab=_useState2[0],setTab=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var rows=easterPrizes[tab+1];var handleItemClick=function handleItemClick(index){return setTab(index);};return/*#__PURE__*/_jsxs(Box,{pt:\"24px\",children:[/*#__PURE__*/_jsx(TabMenu,{activeIndex:tab,onItemClick:handleItemClick,children:Object.keys(easterPrizes).map(function(team){return/*#__PURE__*/_jsx(Tab,{children:t('#%team% Team',{team:team})},team);})}),/*#__PURE__*/_jsx(Box,{minWidth:\"288px\",overflowX:\"auto\",maxWidth:\"100%\",children:/*#__PURE__*/_jsxs(StyledPrizeTable,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:t('Rank in team')}),/*#__PURE__*/_jsx(\"th\",{children:t('Tier')}),/*#__PURE__*/_jsx(\"th\",{children:t('CAKE Prizes (Split)')}),/*#__PURE__*/_jsx(\"th\",{children:t('Achievements')}),/*#__PURE__*/_jsx(\"th\",{children:t('NFT')})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:rows.map(function(row){var _tierStyleMap$row$tie=tierStyleMap[row.tier],Icon=_tierStyleMap$row$tie.icon,label=_tierStyleMap$row$tie.label,color=_tierStyleMap$row$tie.color;var _row$achievements=row.achievements,champion=_row$achievements.champion,teamPlayer=_row$achievements.teamPlayer;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(BoldTd,{children:row.rank}),/*#__PURE__*/_jsxs(Td,{children:[/*#__PURE__*/_jsx(Icon,{}),/*#__PURE__*/_jsx(Text,{color:color,fontSize:\"12px\",bold:true,textTransform:\"uppercase\",children:t(label.text)})]}),/*#__PURE__*/_jsx(BoldTd,{children:\"$\".concat(row.cakePrizeInUsd.toLocaleString(undefined,{minimumFractionDigits:0,maximumFractionDigits:0}))}),/*#__PURE__*/_jsx(Td,{children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",flexWrap:\"wrap\",justifyContent:\"center\",width:\"100%\",children:[champion&&/*#__PURE__*/_jsx(CrownIcon,{mr:[0,'4px']}),teamPlayer&&/*#__PURE__*/_jsx(TeamPlayerIcon,{mr:[0,'4px']}),/*#__PURE__*/_jsx(TrophyGoldIcon,{mr:[0,'4px']}),/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",children:\"+\".concat(getTotalAchievementPoints(row.achievements).toLocaleString(undefined,{minimumFractionDigits:0,maximumFractionDigits:0}))})]})}),/*#__PURE__*/_jsx(Td,{children:row.hasNft?/*#__PURE__*/_jsx(CheckmarkCircleIcon,{color:\"success\"}):/*#__PURE__*/_jsx(BlockIcon,{color:\"textDisabled\"})})]},row.rank);})})]})})]});};export default PrizesGrid;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/TradingCompetition/components/PrizesInfo/PrizesGrid/index.tsx"],"names":["React","useState","BlockIcon","Box","CheckmarkCircleIcon","Flex","MedalBronzeIcon","MedalGoldIcon","MedalPurpleIcon","MedalSilverIcon","MedalTealIcon","CrownIcon","Tab","TabMenu","Text","TeamPlayerIcon","TrophyGoldIcon","useTranslation","easterPrizes","Tiers","Td","BoldTd","StyledPrizeTable","COLOR_GOLD","COLOR_SILVER","COLOR_BRONZE","COLOR_PURPLE","COLOR_TEAL","tierStyleMap","GOLD","icon","label","text","color","SILVER","BRONZE","PURPLE","TEAL","getTotalAchievementPoints","achievements","Object","values","reduce","accum","achievement","PrizesGrid","tab","setTab","t","rows","handleItemClick","index","keys","map","team","row","tier","Icon","champion","teamPlayer","rank","cakePrizeInUsd","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","hasNft"],"mappings":"oUAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OACEC,SADF,CAEEC,GAFF,CAGEC,mBAHF,CAIEC,IAJF,CAKEC,eALF,CAMEC,aANF,CAOEC,eAPF,CAQEC,eARF,CASEC,aATF,CAUEC,SAVF,CAWEC,GAXF,CAYEC,OAZF,CAaEC,IAbF,CAcEC,cAdF,CAeEC,cAfF,KAgBO,oBAhBP,CAiBA,OAASC,cAAT,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,YAAP,EAAuBC,KAAvB,KAA0C,6CAA1C,CACA,OAASC,EAAT,CAAaC,MAAb,CAAqBC,gBAArB,KAA6C,wBAA7C,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,SAAnB,CACA,GAAMC,CAAAA,YAAY,CAAG,SAArB,CACA,GAAMC,CAAAA,YAAY,CAAG,SAArB,CACA,GAAMC,CAAAA,YAAY,CAAG,SAArB,CACA,GAAMC,CAAAA,UAAU,CAAG,SAAnB,CAEA,GAAMC,CAAAA,YAAY,iDACfT,KAAK,CAACU,IADS,CACF,CACZC,IAAI,CAAEvB,aADM,CAEZwB,KAAK,CAAE,CACLC,IAAI,CAAE,MADD,CAFK,CAKZC,KAAK,CAAEV,UALK,CADE,gCAQfJ,KAAK,CAACe,MARS,CAQA,CACdJ,IAAI,CAAErB,eADQ,CAEdsB,KAAK,CAAE,CACLC,IAAI,CAAE,QADD,CAFO,CAKdC,KAAK,CAAET,YALO,CARA,gCAefL,KAAK,CAACgB,MAfS,CAeA,CACdL,IAAI,CAAExB,eADQ,CAEdyB,KAAK,CAAE,CACLC,IAAI,CAAE,QADD,CAFO,CAKdC,KAAK,CAAER,YALO,CAfA,gCAsBfN,KAAK,CAACe,MAtBS,CAsBA,CACdJ,IAAI,CAAErB,eADQ,CAEdsB,KAAK,CAAE,CACLC,IAAI,CAAE,QADD,CAFO,CAKdC,KAAK,CAAET,YALO,CAtBA,gCA6BfL,KAAK,CAACiB,MA7BS,CA6BA,CACdN,IAAI,CAAEtB,eADQ,CAEduB,KAAK,CAAE,CACLC,IAAI,CAAE,QADD,CAFO,CAKdC,KAAK,CAAEP,YALO,CA7BA,gCAoCfP,KAAK,CAACkB,IApCS,CAoCF,CACZP,IAAI,CAAEpB,aADM,CAEZqB,KAAK,CAAE,CACLC,IAAI,CAAE,MADD,CAFK,CAKZC,KAAK,CAAEN,UALK,CApCE,gBAAlB,CA6CA,GAAMW,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACC,YAAD,CAAwC,CACxE,MAAOC,CAAAA,MAAM,CAACC,MAAP,CAAcF,YAAd,EAA4BG,MAA5B,CAAmC,SAACC,KAAD,CAAQC,WAAR,CAAwB,CAChE,MAAOA,CAAAA,WAAW,CAAGD,KAAK,CAAGC,WAAX,CAAyBD,KAA3C,CACD,CAFM,CAEJ,CAFI,CAAP,CAGD,CAJD,CAMA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,cAAsB5C,QAAQ,CAAC,CAAD,CAA9B,wCAAO6C,GAAP,eAAYC,MAAZ,eACA,oBAAc9B,cAAc,EAA5B,CAAQ+B,CAAR,iBAAQA,CAAR,CACA,GAAMC,CAAAA,IAAI,CAAG/B,YAAY,CAAC4B,GAAG,CAAG,CAAP,CAAzB,CAEA,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAmBJ,CAAAA,MAAM,CAACI,KAAD,CAAzB,EAAxB,CAEA,mBACE,MAAC,GAAD,EAAK,EAAE,CAAC,MAAR,wBACE,KAAC,OAAD,EAAS,WAAW,CAAEL,GAAtB,CAA2B,WAAW,CAAEI,eAAxC,UACGV,MAAM,CAACY,IAAP,CAAYlC,YAAZ,EAA0BmC,GAA1B,CAA8B,SAACC,IAAD,CAAU,CACvC,mBAAO,KAAC,GAAD,WAAiBN,CAAC,CAAC,cAAD,CAAiB,CAAEM,IAAI,CAAJA,IAAF,CAAjB,CAAlB,EAAUA,IAAV,CAAP,CACD,CAFA,CADH,EADF,cAME,KAAC,GAAD,EAAK,QAAQ,CAAC,OAAd,CAAsB,SAAS,CAAC,MAAhC,CAAuC,QAAQ,CAAC,MAAhD,uBACE,MAAC,gBAAD,yBACE,oCACE,mCACE,oBAAKN,CAAC,CAAC,cAAD,CAAN,EADF,cAEE,oBAAKA,CAAC,CAAC,MAAD,CAAN,EAFF,cAGE,oBAAKA,CAAC,CAAC,qBAAD,CAAN,EAHF,cAIE,oBAAKA,CAAC,CAAC,cAAD,CAAN,EAJF,cAKE,oBAAKA,CAAC,CAAC,KAAD,CAAN,EALF,GADF,EADF,cAUE,uBACGC,IAAI,CAACI,GAAL,CAAS,SAACE,GAAD,CAAS,CACjB,0BAAqC3B,YAAY,CAAC2B,GAAG,CAACC,IAAL,CAAjD,CAAcC,IAAd,uBAAQ3B,IAAR,CAAoBC,KAApB,uBAAoBA,KAApB,CAA2BE,KAA3B,uBAA2BA,KAA3B,CACA,sBAAiCsB,GAAG,CAAChB,YAArC,CAAQmB,QAAR,mBAAQA,QAAR,CAAkBC,UAAlB,mBAAkBA,UAAlB,CAEA,mBACE,mCACE,KAAC,MAAD,WAASJ,GAAG,CAACK,IAAb,EADF,cAEE,MAAC,EAAD,yBACE,KAAC,IAAD,IADF,cAEE,KAAC,IAAD,EAAM,KAAK,CAAE3B,KAAb,CAAoB,QAAQ,CAAC,MAA7B,CAAoC,IAAI,KAAxC,CAAyC,aAAa,CAAC,WAAvD,UACGe,CAAC,CAACjB,KAAK,CAACC,IAAP,CADJ,EAFF,GAFF,cAQE,KAAC,MAAD,sBACOuB,GAAG,CAACM,cAAJ,CAAmBC,cAAnB,CAAkCC,SAAlC,CAA6C,CAChDC,qBAAqB,CAAE,CADyB,CAEhDC,qBAAqB,CAAE,CAFyB,CAA7C,CADP,GARF,cAcE,KAAC,EAAD,wBACE,MAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,CAA0B,QAAQ,CAAC,MAAnC,CAA0C,cAAc,CAAC,QAAzD,CAAkE,KAAK,CAAC,MAAxE,WACGP,QAAQ,eAAI,KAAC,SAAD,EAAW,EAAE,CAAE,CAAC,CAAD,CAAI,KAAJ,CAAf,EADf,CAEGC,UAAU,eAAI,KAAC,cAAD,EAAgB,EAAE,CAAE,CAAC,CAAD,CAAI,KAAJ,CAApB,EAFjB,cAGE,KAAC,cAAD,EAAgB,EAAE,CAAE,CAAC,CAAD,CAAI,KAAJ,CAApB,EAHF,cAIE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,CAAsB,KAAK,CAAC,YAA5B,qBACOrB,yBAAyB,CAACiB,GAAG,CAAChB,YAAL,CAAzB,CAA4CuB,cAA5C,CAA2DC,SAA3D,CAAsE,CACzEC,qBAAqB,CAAE,CADkD,CAEzEC,qBAAqB,CAAE,CAFkD,CAAtE,CADP,GAJF,GADF,EAdF,cA2BE,KAAC,EAAD,WAAKV,GAAG,CAACW,MAAJ,cAAa,KAAC,mBAAD,EAAqB,KAAK,CAAC,SAA3B,EAAb,cAAuD,KAAC,SAAD,EAAW,KAAK,CAAC,cAAjB,EAA5D,EA3BF,GAASX,GAAG,CAACK,IAAb,CADF,CA+BD,CAnCA,CADH,EAVF,GADF,EANF,GADF,CA4DD,CAnED,CAqEA,cAAef,CAAAA,UAAf","sourcesContent":["import React, { useState } from 'react'\nimport {\n  BlockIcon,\n  Box,\n  CheckmarkCircleIcon,\n  Flex,\n  MedalBronzeIcon,\n  MedalGoldIcon,\n  MedalPurpleIcon,\n  MedalSilverIcon,\n  MedalTealIcon,\n  CrownIcon,\n  Tab,\n  TabMenu,\n  Text,\n  TeamPlayerIcon,\n  TrophyGoldIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport easterPrizes, { Tiers, Rank } from 'config/constants/trading-competition/easter'\nimport { Td, BoldTd, StyledPrizeTable } from '../../StyledPrizeTable'\n\nconst COLOR_GOLD = '#FFBF33'\nconst COLOR_SILVER = '#C1C1C1'\nconst COLOR_BRONZE = '#E79559'\nconst COLOR_PURPLE = '#A57CFD'\nconst COLOR_TEAL = '#4CD2DD'\n\nconst tierStyleMap = {\n  [Tiers.GOLD]: {\n    icon: MedalGoldIcon,\n    label: {\n      text: 'Gold',\n    },\n    color: COLOR_GOLD,\n  },\n  [Tiers.SILVER]: {\n    icon: MedalSilverIcon,\n    label: {\n      text: 'Silver',\n    },\n    color: COLOR_SILVER,\n  },\n  [Tiers.BRONZE]: {\n    icon: MedalBronzeIcon,\n    label: {\n      text: 'Bronze',\n    },\n    color: COLOR_BRONZE,\n  },\n  [Tiers.SILVER]: {\n    icon: MedalSilverIcon,\n    label: {\n      text: 'Silver',\n    },\n    color: COLOR_SILVER,\n  },\n  [Tiers.PURPLE]: {\n    icon: MedalPurpleIcon,\n    label: {\n      text: 'Purple',\n    },\n    color: COLOR_PURPLE,\n  },\n  [Tiers.TEAL]: {\n    icon: MedalTealIcon,\n    label: {\n      text: 'Teal',\n    },\n    color: COLOR_TEAL,\n  },\n}\n\nconst getTotalAchievementPoints = (achievements: Rank['achievements']) => {\n  return Object.values(achievements).reduce((accum, achievement) => {\n    return achievement ? accum + achievement : accum\n  }, 0)\n}\n\nconst PrizesGrid = () => {\n  const [tab, setTab] = useState(0)\n  const { t } = useTranslation()\n  const rows = easterPrizes[tab + 1]\n\n  const handleItemClick = (index: number) => setTab(index)\n\n  return (\n    <Box pt=\"24px\">\n      <TabMenu activeIndex={tab} onItemClick={handleItemClick}>\n        {Object.keys(easterPrizes).map((team) => {\n          return <Tab key={team}>{t('#%team% Team', { team })}</Tab>\n        })}\n      </TabMenu>\n      <Box minWidth=\"288px\" overflowX=\"auto\" maxWidth=\"100%\">\n        <StyledPrizeTable>\n          <thead>\n            <tr>\n              <th>{t('Rank in team')}</th>\n              <th>{t('Tier')}</th>\n              <th>{t('CAKE Prizes (Split)')}</th>\n              <th>{t('Achievements')}</th>\n              <th>{t('NFT')}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {rows.map((row) => {\n              const { icon: Icon, label, color } = tierStyleMap[row.tier]\n              const { champion, teamPlayer } = row.achievements\n\n              return (\n                <tr key={row.rank}>\n                  <BoldTd>{row.rank}</BoldTd>\n                  <Td>\n                    <Icon />\n                    <Text color={color} fontSize=\"12px\" bold textTransform=\"uppercase\">\n                      {t(label.text)}\n                    </Text>\n                  </Td>\n                  <BoldTd>\n                    {`$${row.cakePrizeInUsd.toLocaleString(undefined, {\n                      minimumFractionDigits: 0,\n                      maximumFractionDigits: 0,\n                    })}`}\n                  </BoldTd>\n                  <Td>\n                    <Flex alignItems=\"center\" flexWrap=\"wrap\" justifyContent=\"center\" width=\"100%\">\n                      {champion && <CrownIcon mr={[0, '4px']} />}\n                      {teamPlayer && <TeamPlayerIcon mr={[0, '4px']} />}\n                      <TrophyGoldIcon mr={[0, '4px']} />\n                      <Text fontSize=\"12px\" color=\"textSubtle\">\n                        {`+${getTotalAchievementPoints(row.achievements).toLocaleString(undefined, {\n                          minimumFractionDigits: 0,\n                          maximumFractionDigits: 0,\n                        })}`}\n                      </Text>\n                    </Flex>\n                  </Td>\n                  <Td>{row.hasNft ? <CheckmarkCircleIcon color=\"success\" /> : <BlockIcon color=\"textDisabled\" />}</Td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </StyledPrizeTable>\n      </Box>\n    </Box>\n  )\n}\n\nexport default PrizesGrid\n"]},"metadata":{},"sourceType":"module"}