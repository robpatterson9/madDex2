{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React,{useState,useEffect}from'react';import styled from'styled-components';import{uniqBy}from'lodash';import{Flex,Text,Card,ArrowBackIcon,ArrowForwardIcon,Table,Th,useMatchBreakpoints}from'@pancakeswap/uikit';import{getNftsFromDifferentCollectionsApi}from'state/nftMarket/helpers';import{UserNftInitializationState}from'state/nftMarket/types';import{useTranslation}from'contexts/Localization';import{useBNBBusdPrice}from'hooks/useBUSDPrice';import useTheme from'hooks/useTheme';import{useParams}from'react-router';import useFetchUserActivity from'../../hooks/useFetchUserActivity';import useUserActivity from'../../hooks/useUserActivity';import ActivityRow from'./ActivityRow';import TableLoader from'./TableLoader';import NoNftsImage from'../NoNftsImage';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PageButtons=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  margin-top: 0.2em;\\n  margin-bottom: 1.2em;\\n\"])));var Arrow=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  color: \",\";\\n  padding: 0 20px;\\n  :hover {\\n    cursor: pointer;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.primary;});var MAX_PER_PAGE=8;var ActivityHistory=function ActivityHistory(){var _useParams=useParams(),accountAddress=_useParams.accountAddress;var _useTheme=useTheme(),theme=_useTheme.theme;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(1),_useState2=_slicedToArray(_useState,2),currentPage=_useState2[0],setCurrentPage=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),maxPage=_useState4[0],setMaxPages=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),activitiesSlice=_useState6[0],setActivitiesSlice=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),nftMetadata=_useState8[0],setNftMetadata=_useState8[1];var _useUserActivity=useUserActivity(accountAddress),sortedUserActivities=_useUserActivity.sortedUserActivities,initializationState=_useUserActivity.initializationState;var bnbBusdPrice=useBNBBusdPrice();var _useMatchBreakpoints=useMatchBreakpoints(),isXs=_useMatchBreakpoints.isXs,isSm=_useMatchBreakpoints.isSm;useFetchUserActivity(accountAddress);useEffect(function(){var fetchActivityNftMetadata=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var activityNftTokenIds,nfts;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:activityNftTokenIds=uniqBy(sortedUserActivities.map(function(activity){return{tokenId:activity.nft.tokenId,collectionAddress:activity.nft.collection.id};}),'tokenId');_context.next=3;return getNftsFromDifferentCollectionsApi(activityNftTokenIds);case 3:nfts=_context.sent;setNftMetadata(nfts);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchActivityNftMetadata(){return _ref2.apply(this,arguments);};}();var getMaxPages=function getMaxPages(){var max=Math.ceil(sortedUserActivities.length/MAX_PER_PAGE);setMaxPages(max);};if(sortedUserActivities.length>0){getMaxPages();fetchActivityNftMetadata();}return function(){setActivitiesSlice([]);setNftMetadata([]);setMaxPages(1);setCurrentPage(1);};},[sortedUserActivities]);useEffect(function(){var getActivitiesSlice=function getActivitiesSlice(){var slice=sortedUserActivities.slice(MAX_PER_PAGE*(currentPage-1),MAX_PER_PAGE*currentPage);setActivitiesSlice(slice);};if(sortedUserActivities.length>0){getActivitiesSlice();}},[sortedUserActivities,currentPage]);return/*#__PURE__*/_jsx(Card,{children:sortedUserActivities.length===0&&nftMetadata.length===0&&activitiesSlice.length===0&&initializationState===UserNftInitializationState.INITIALIZED?/*#__PURE__*/_jsxs(Flex,{p:\"24px\",flexDirection:\"column\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(NoNftsImage,{}),/*#__PURE__*/_jsx(Text,{pt:\"8px\",bold:true,children:t('No NFT market history found')})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(Th,{textAlign:['center',null,'left'],children:[\" \",t('Item')]}),/*#__PURE__*/_jsxs(Th,{textAlign:\"right\",children:[\" \",t('Event')]}),isXs||isSm?null:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Th,{textAlign:\"right\",children:[\" \",t('Price')]}),/*#__PURE__*/_jsxs(Th,{textAlign:\"right\",children:[\" \",t('From/To')]})]}),/*#__PURE__*/_jsxs(Th,{textAlign:\"center\",children:[\" \",t('Date')]}),isXs||isSm?null:/*#__PURE__*/_jsx(Th,{})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:initializationState===UserNftInitializationState.INITIALIZING?/*#__PURE__*/_jsx(TableLoader,{}):activitiesSlice.map(function(activity){var nftMeta=nftMetadata.find(function(metaNft){return metaNft.tokenId===activity.nft.tokenId;});return/*#__PURE__*/_jsx(ActivityRow,{activity:activity,nft:nftMeta,bnbBusdPrice:bnbBusdPrice},\"\".concat(activity.nft.tokenId).concat(activity.timestamp));})})]}),/*#__PURE__*/_jsx(Flex,{borderTop:\"1px \".concat(theme.colors.cardBorder,\" solid\"),pt:\"24px\",flexDirection:\"column\",justifyContent:\"space-between\",height:\"100%\",children:/*#__PURE__*/_jsxs(PageButtons,{children:[/*#__PURE__*/_jsx(Arrow,{onClick:function onClick(){setCurrentPage(currentPage===1?currentPage:currentPage-1);},children:/*#__PURE__*/_jsx(ArrowBackIcon,{color:currentPage===1?'textDisabled':'primary'})}),/*#__PURE__*/_jsx(Text,{children:t('Page %page% of %maxPage%',{page:currentPage,maxPage:maxPage})}),/*#__PURE__*/_jsx(Arrow,{onClick:function onClick(){setCurrentPage(currentPage===maxPage?currentPage:currentPage+1);},children:/*#__PURE__*/_jsx(ArrowForwardIcon,{color:currentPage===maxPage?'textDisabled':'primary'})})]})})]})});};export default ActivityHistory;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Profile/components/ActivityHistory/index.tsx"],"names":["React","useState","useEffect","styled","uniqBy","Flex","Text","Card","ArrowBackIcon","ArrowForwardIcon","Table","Th","useMatchBreakpoints","getNftsFromDifferentCollectionsApi","UserNftInitializationState","useTranslation","useBNBBusdPrice","useTheme","useParams","useFetchUserActivity","useUserActivity","ActivityRow","TableLoader","NoNftsImage","PageButtons","div","Arrow","theme","colors","primary","MAX_PER_PAGE","ActivityHistory","accountAddress","t","currentPage","setCurrentPage","maxPage","setMaxPages","activitiesSlice","setActivitiesSlice","nftMetadata","setNftMetadata","sortedUserActivities","initializationState","bnbBusdPrice","isXs","isSm","fetchActivityNftMetadata","activityNftTokenIds","map","activity","tokenId","nft","collectionAddress","collection","id","nfts","getMaxPages","max","Math","ceil","length","getActivitiesSlice","slice","INITIALIZED","INITIALIZING","nftMeta","find","metaNft","timestamp","cardBorder","page"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { uniqBy } from 'lodash'\nimport { Flex, Text, Card, ArrowBackIcon, ArrowForwardIcon, Table, Th, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { getNftsFromDifferentCollectionsApi } from 'state/nftMarket/helpers'\nimport { NftToken, TokenIdWithCollectionAddress, UserNftInitializationState } from 'state/nftMarket/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { useBNBBusdPrice } from 'hooks/useBUSDPrice'\nimport useTheme from 'hooks/useTheme'\nimport { useParams } from 'react-router'\nimport useFetchUserActivity from '../../hooks/useFetchUserActivity'\nimport useUserActivity, { Activity } from '../../hooks/useUserActivity'\nimport ActivityRow from './ActivityRow'\nimport TableLoader from './TableLoader'\nimport NoNftsImage from '../NoNftsImage'\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 0.2em;\n  margin-bottom: 1.2em;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.colors.primary};\n  padding: 0 20px;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst MAX_PER_PAGE = 8\n\nconst ActivityHistory = () => {\n  const { accountAddress } = useParams<{ accountAddress: string }>()\n  const { theme } = useTheme()\n  const { t } = useTranslation()\n  const [currentPage, setCurrentPage] = useState(1)\n  const [maxPage, setMaxPages] = useState(1)\n  const [activitiesSlice, setActivitiesSlice] = useState<Activity[]>([])\n  const [nftMetadata, setNftMetadata] = useState<NftToken[]>([])\n  const { sortedUserActivities, initializationState } = useUserActivity(accountAddress)\n  const bnbBusdPrice = useBNBBusdPrice()\n  const { isXs, isSm } = useMatchBreakpoints()\n\n  useFetchUserActivity(accountAddress)\n\n  useEffect(() => {\n    const fetchActivityNftMetadata = async () => {\n      const activityNftTokenIds = uniqBy(\n        sortedUserActivities.map((activity): TokenIdWithCollectionAddress => {\n          return { tokenId: activity.nft.tokenId, collectionAddress: activity.nft.collection.id }\n        }),\n        'tokenId',\n      )\n      const nfts = await getNftsFromDifferentCollectionsApi(activityNftTokenIds)\n      setNftMetadata(nfts)\n    }\n\n    const getMaxPages = () => {\n      const max = Math.ceil(sortedUserActivities.length / MAX_PER_PAGE)\n      setMaxPages(max)\n    }\n\n    if (sortedUserActivities.length > 0) {\n      getMaxPages()\n      fetchActivityNftMetadata()\n    }\n\n    return () => {\n      setActivitiesSlice([])\n      setNftMetadata([])\n      setMaxPages(1)\n      setCurrentPage(1)\n    }\n  }, [sortedUserActivities])\n\n  useEffect(() => {\n    const getActivitiesSlice = () => {\n      const slice = sortedUserActivities.slice(MAX_PER_PAGE * (currentPage - 1), MAX_PER_PAGE * currentPage)\n      setActivitiesSlice(slice)\n    }\n    if (sortedUserActivities.length > 0) {\n      getActivitiesSlice()\n    }\n  }, [sortedUserActivities, currentPage])\n\n  return (\n    <Card>\n      {sortedUserActivities.length === 0 &&\n      nftMetadata.length === 0 &&\n      activitiesSlice.length === 0 &&\n      initializationState === UserNftInitializationState.INITIALIZED ? (\n        <Flex p=\"24px\" flexDirection=\"column\" alignItems=\"center\">\n          <NoNftsImage />\n          <Text pt=\"8px\" bold>\n            {t('No NFT market history found')}\n          </Text>\n        </Flex>\n      ) : (\n        <>\n          <Table>\n            <thead>\n              <tr>\n                <Th textAlign={['center', null, 'left']}> {t('Item')}</Th>\n                <Th textAlign=\"right\"> {t('Event')}</Th>\n                {isXs || isSm ? null : (\n                  <>\n                    <Th textAlign=\"right\"> {t('Price')}</Th>\n                    <Th textAlign=\"right\"> {t('From/To')}</Th>\n                  </>\n                )}\n                <Th textAlign=\"center\"> {t('Date')}</Th>\n                {isXs || isSm ? null : <Th />}\n              </tr>\n            </thead>\n\n            <tbody>\n              {initializationState === UserNftInitializationState.INITIALIZING ? (\n                <TableLoader />\n              ) : (\n                activitiesSlice.map((activity) => {\n                  const nftMeta = nftMetadata.find((metaNft) => metaNft.tokenId === activity.nft.tokenId)\n                  return (\n                    <ActivityRow\n                      key={`${activity.nft.tokenId}${activity.timestamp}`}\n                      activity={activity}\n                      nft={nftMeta}\n                      bnbBusdPrice={bnbBusdPrice}\n                    />\n                  )\n                })\n              )}\n            </tbody>\n          </Table>\n          <Flex\n            borderTop={`1px ${theme.colors.cardBorder} solid`}\n            pt=\"24px\"\n            flexDirection=\"column\"\n            justifyContent=\"space-between\"\n            height=\"100%\"\n          >\n            <PageButtons>\n              <Arrow\n                onClick={() => {\n                  setCurrentPage(currentPage === 1 ? currentPage : currentPage - 1)\n                }}\n              >\n                <ArrowBackIcon color={currentPage === 1 ? 'textDisabled' : 'primary'} />\n              </Arrow>\n              <Text>{t('Page %page% of %maxPage%', { page: currentPage, maxPage })}</Text>\n              <Arrow\n                onClick={() => {\n                  setCurrentPage(currentPage === maxPage ? currentPage : currentPage + 1)\n                }}\n              >\n                <ArrowForwardIcon color={currentPage === maxPage ? 'textDisabled' : 'primary'} />\n              </Arrow>\n            </PageButtons>\n          </Flex>\n        </>\n      )}\n    </Card>\n  )\n}\n\nexport default ActivityHistory\n"]},"metadata":{},"sourceType":"module"}