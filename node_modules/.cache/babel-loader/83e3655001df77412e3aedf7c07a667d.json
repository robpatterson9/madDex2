{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useEffect}from'react';import{Box}from'@pancakeswap/uikit';import{useTheme}from'styled-components';import debounce from'lodash/debounce';import{useTranslation}from'contexts/Localization';import useLastUpdated from'hooks/useLastUpdated';import{jsx as _jsx}from\"react/jsx-runtime\";var TRADING_VIEW_COMPONENT_ID='tradingview_b239c';/**\n * When the script tag is injected the TradingView object is not immediately\n * available on the window. So we listen for when it gets set\n */var tradingViewListener=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",new Promise(function(resolve){return Object.defineProperty(window,'TradingView',{configurable:true,set:function set(value){this.tv=value;resolve(value);}});}));case 1:case\"end\":return _context.stop();}}},_callee);}));return function tradingViewListener(){return _ref.apply(this,arguments);};}();var initializeTradingView=function initializeTradingView(TradingViewObj,theme,localeCode){/* eslint-disable new-cap */ /* eslint-disable no-new */ // @ts-ignore\nnew TradingViewObj.widget({autosize:true,height:'100%',symbol:'BINANCE:BNBUSDT',interval:'5',timezone:'Etc/UTC',theme:theme.isDark?'dark':'light',style:'1',locale:localeCode,toolbar_bg:'#f1f3f6',enable_publishing:false,allow_symbol_change:true,container_id:TRADING_VIEW_COMPONENT_ID});};var TradingView=function TradingView(){var _useTranslation=useTranslation(),currentLanguage=_useTranslation.currentLanguage;var theme=useTheme();var _useLastUpdated=useLastUpdated(),lastUpdated=_useLastUpdated.lastUpdated,setLastUpdated=_useLastUpdated.setLastUpdated;useEffect(function(){var ele=document.getElementById(TRADING_VIEW_COMPONENT_ID);var debouncedOnResize=debounce(function(){setLastUpdated();},500);var resizeObserver=new ResizeObserver(function(){debouncedOnResize();});resizeObserver.observe(ele);return function(){resizeObserver.unobserve(ele);};},[setLastUpdated]);useEffect(function(){// @ts-ignore\nif(window.tv){// @ts-ignore\ninitializeTradingView(window.tv,theme,currentLanguage.code);}else{tradingViewListener().then(function(tv){initializeTradingView(tv,theme,currentLanguage.code);});}},[theme,currentLanguage,lastUpdated]);return/*#__PURE__*/_jsx(Box,{overflow:\"hidden\",className:\"tradingview_container\",children:/*#__PURE__*/_jsx(\"div\",{id:TRADING_VIEW_COMPONENT_ID})});};export default TradingView;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/TradingView.tsx"],"names":["React","useEffect","Box","useTheme","debounce","useTranslation","useLastUpdated","TRADING_VIEW_COMPONENT_ID","tradingViewListener","Promise","resolve","Object","defineProperty","window","configurable","set","value","tv","initializeTradingView","TradingViewObj","theme","localeCode","widget","autosize","height","symbol","interval","timezone","isDark","style","locale","toolbar_bg","enable_publishing","allow_symbol_change","container_id","TradingView","currentLanguage","lastUpdated","setLastUpdated","ele","document","getElementById","debouncedOnResize","resizeObserver","ResizeObserver","observe","unobserve","code","then"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { Box } from '@pancakeswap/uikit'\nimport { DefaultTheme, useTheme } from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nconst TRADING_VIEW_COMPONENT_ID = 'tradingview_b239c'\n\n/**\n * When the script tag is injected the TradingView object is not immediately\n * available on the window. So we listen for when it gets set\n */\nconst tradingViewListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'TradingView', {\n      configurable: true,\n      set(value) {\n        this.tv = value\n        resolve(value)\n      },\n    }),\n  )\n\nconst initializeTradingView = (TradingViewObj: any, theme: DefaultTheme, localeCode: string) => {\n  /* eslint-disable new-cap */\n  /* eslint-disable no-new */\n  // @ts-ignore\n  new TradingViewObj.widget({\n    autosize: true,\n    height: '100%',\n    symbol: 'BINANCE:BNBUSDT',\n    interval: '5',\n    timezone: 'Etc/UTC',\n    theme: theme.isDark ? 'dark' : 'light',\n    style: '1',\n    locale: localeCode,\n    toolbar_bg: '#f1f3f6',\n    enable_publishing: false,\n    allow_symbol_change: true,\n    container_id: TRADING_VIEW_COMPONENT_ID,\n  })\n}\n\nconst TradingView = () => {\n  const { currentLanguage } = useTranslation()\n  const theme = useTheme()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const ele = document.getElementById(TRADING_VIEW_COMPONENT_ID)\n\n    const debouncedOnResize = debounce(() => {\n      setLastUpdated()\n    }, 500)\n\n    const resizeObserver = new ResizeObserver(() => {\n      debouncedOnResize()\n    })\n\n    resizeObserver.observe(ele)\n\n    return () => {\n      resizeObserver.unobserve(ele)\n    }\n  }, [setLastUpdated])\n\n  useEffect(() => {\n    // @ts-ignore\n    if (window.tv) {\n      // @ts-ignore\n      initializeTradingView(window.tv, theme, currentLanguage.code)\n    } else {\n      tradingViewListener().then((tv) => {\n        initializeTradingView(tv, theme, currentLanguage.code)\n      })\n    }\n  }, [theme, currentLanguage, lastUpdated])\n\n  return (\n    <Box overflow=\"hidden\" className=\"tradingview_container\">\n      <div id={TRADING_VIEW_COMPONENT_ID} />\n    </Box>\n  )\n}\n\nexport default TradingView\n"]},"metadata":{},"sourceType":"module"}