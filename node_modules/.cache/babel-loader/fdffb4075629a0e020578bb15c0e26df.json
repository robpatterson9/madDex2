{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from'react';import styled from'styled-components';import{Modal,Text,Flex,Button,ArrowBackIcon,AutoRenewIcon}from'@pancakeswap/uikit';import useTheme from'hooks/useTheme';import{useTranslation}from'contexts/Localization';import TicketInput from'./TicketInput';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var StyledModal=styled(Modal)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  min-width: 280px;\\n  max-width: 320px;\\n  max-height: 552px;\\n\\n  & div:nth-child(2) {\\n    padding: 0;\\n  }\\n\"])));var ScrollableContainer=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  height: 310px;\\n  overflow-y: scroll;\\n  border-bottom: \",\";\\n  padding: 24px;\\n\"])),function(_ref){var theme=_ref.theme;return\"1px solid \".concat(theme.colors.cardBorder);});var EditNumbersModal=function EditNumbersModal(_ref2){var totalCost=_ref2.totalCost,updateTicket=_ref2.updateTicket,randomize=_ref2.randomize,tickets=_ref2.tickets,allComplete=_ref2.allComplete,onConfirm=_ref2.onConfirm,isConfirming=_ref2.isConfirming,onDismiss=_ref2.onDismiss;var _useTheme=useTheme(),theme=_useTheme.theme;var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/_jsxs(StyledModal,{title:t('Edit numbers'),onDismiss:onDismiss,headerBackground:theme.colors.gradients.cardHeader,onBack:onDismiss,children:[/*#__PURE__*/_jsxs(ScrollableContainer,{children:[/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",mb:\"16px\",children:[/*#__PURE__*/_jsxs(Text,{color:\"textSubtle\",children:[t('Total cost'),\":\"]}),/*#__PURE__*/_jsxs(Text,{children:[\"~\",totalCost,\" CAKE\"]})]}),/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",mb:\"16px\",children:t('Numbers are randomized, with no duplicates among your tickets. Tap a number to edit it. Available digits: 0-9')}),/*#__PURE__*/_jsx(Button,{disabled:isConfirming,mb:\"16px\",variant:\"secondary\",width:\"100%\",height:\"32px\",onClick:randomize,children:t('Randomize')}),tickets.map(function(ticket){return/*#__PURE__*/_jsx(TicketInput,{ticket:ticket,duplicateWith:ticket.duplicateWith,updateTicket:updateTicket,disabled:isConfirming},ticket.id);})]}),/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",justifyContent:\"center\",m:\"24px\",children:[/*#__PURE__*/_jsx(Button,{id:\"lotteryBuyEdited\",disabled:!allComplete||isConfirming,endIcon:isConfirming?/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,color:\"currentColor\"}):undefined,onClick:function onClick(){onConfirm();},children:isConfirming?t('Confirming'):t('Confirm and buy')}),/*#__PURE__*/_jsxs(Button,{mt:\"8px\",variant:isConfirming?'secondary':'text',disabled:isConfirming,onClick:onDismiss,children:[/*#__PURE__*/_jsx(ArrowBackIcon,{color:isConfirming?'disabled':'primary',height:\"24px\",width:\"24px\"}),\" \",t('Go back')]})]})]});};export default EditNumbersModal;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Lottery/components/BuyTicketsModal/EditNumbersModal.tsx"],"names":["React","styled","Modal","Text","Flex","Button","ArrowBackIcon","AutoRenewIcon","useTheme","useTranslation","TicketInput","StyledModal","ScrollableContainer","div","theme","colors","cardBorder","EditNumbersModal","totalCost","updateTicket","randomize","tickets","allComplete","onConfirm","isConfirming","onDismiss","t","gradients","cardHeader","map","ticket","duplicateWith","id","undefined"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, ArrowBackIcon, AutoRenewIcon } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { useTranslation } from 'contexts/Localization'\nimport TicketInput from './TicketInput'\nimport { UpdateTicketAction, Ticket } from './useTicketsReducer'\n\nconst StyledModal = styled(Modal)`\n  min-width: 280px;\n  max-width: 320px;\n  max-height: 552px;\n\n  & div:nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ScrollableContainer = styled.div`\n  height: 310px;\n  overflow-y: scroll;\n  border-bottom: ${({ theme }) => `1px solid ${theme.colors.cardBorder}`};\n  padding: 24px;\n`\n\nconst EditNumbersModal: React.FC<{\n  totalCost: string\n  updateTicket: UpdateTicketAction\n  randomize: () => void\n  tickets: Ticket[]\n  allComplete: boolean\n  onConfirm: () => void\n  isConfirming: boolean\n  onDismiss?: () => void\n}> = ({ totalCost, updateTicket, randomize, tickets, allComplete, onConfirm, isConfirming, onDismiss }) => {\n  const { theme } = useTheme()\n  const { t } = useTranslation()\n  return (\n    <StyledModal\n      title={t('Edit numbers')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n      onBack={onDismiss}\n    >\n      <ScrollableContainer>\n        <Flex justifyContent=\"space-between\" mb=\"16px\">\n          <Text color=\"textSubtle\">{t('Total cost')}:</Text>\n          <Text>~{totalCost} CAKE</Text>\n        </Flex>\n        <Text fontSize=\"12px\" color=\"textSubtle\" mb=\"16px\">\n          {t(\n            'Numbers are randomized, with no duplicates among your tickets. Tap a number to edit it. Available digits: 0-9',\n          )}\n        </Text>\n        <Button disabled={isConfirming} mb=\"16px\" variant=\"secondary\" width=\"100%\" height=\"32px\" onClick={randomize}>\n          {t('Randomize')}\n        </Button>\n        {tickets.map((ticket) => (\n          <TicketInput\n            key={ticket.id}\n            ticket={ticket}\n            duplicateWith={ticket.duplicateWith}\n            updateTicket={updateTicket}\n            disabled={isConfirming}\n          />\n        ))}\n      </ScrollableContainer>\n      <Flex flexDirection=\"column\" justifyContent=\"center\" m=\"24px\">\n        <Button\n          id=\"lotteryBuyEdited\"\n          disabled={!allComplete || isConfirming}\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n          onClick={() => {\n            onConfirm()\n          }}\n        >\n          {isConfirming ? t('Confirming') : t('Confirm and buy')}\n        </Button>\n        <Button mt=\"8px\" variant={isConfirming ? 'secondary' : 'text'} disabled={isConfirming} onClick={onDismiss}>\n          <ArrowBackIcon color={isConfirming ? 'disabled' : 'primary'} height=\"24px\" width=\"24px\" /> {t('Go back')}\n        </Button>\n      </Flex>\n    </StyledModal>\n  )\n}\n\nexport default EditNumbersModal\n"]},"metadata":{},"sourceType":"module"}