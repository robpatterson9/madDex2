{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Pools/components/PoolCard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport BigNumber from 'bignumber.js';\nimport React from 'react';\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit';\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport { useTranslation } from 'contexts/Localization';\nimport { BIG_ZERO } from 'utils/bigNumber';\nimport AprRow from './AprRow';\nimport { StyledCard } from './StyledCard';\nimport CardFooter from './CardFooter';\nimport StyledCardHeader from './StyledCardHeader';\nimport CardActions from './CardActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PoolCard = ({\n  pool,\n  account\n}) => {\n  _s();\n\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    isFinished,\n    userData\n  } = pool;\n  const {\n    t\n  } = useTranslation();\n  const stakedBalance = (userData === null || userData === void 0 ? void 0 : userData.stakedBalance) ? new BigNumber(userData.stakedBalance) : BIG_ZERO;\n  const accountHasStakedBalance = stakedBalance.gt(0);\n  return /*#__PURE__*/_jsxDEV(StyledCard, {\n    isFinished: isFinished && sousId !== 0,\n    ribbon: isFinished && /*#__PURE__*/_jsxDEV(CardRibbon, {\n      variantColor: \"textDisabled\",\n      text: t('Finished')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 29\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(StyledCardHeader, {\n      isStaking: accountHasStakedBalance,\n      earningToken: earningToken,\n      stakingToken: stakingToken,\n      isFinished: isFinished && sousId !== 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(AprRow, {\n        pool: pool,\n        stakedBalance: stakedBalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        mt: \"24px\",\n        flexDirection: \"column\",\n        children: account ? /*#__PURE__*/_jsxDEV(CardActions, {\n          pool: pool,\n          stakedBalance: stakedBalance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            mb: \"10px\",\n            textTransform: \"uppercase\",\n            fontSize: \"12px\",\n            color: \"textSubtle\",\n            bold: true,\n            children: t('Start earning')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ConnectWalletButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n      pool: pool,\n      account: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PoolCard, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = PoolCard;\nexport default PoolCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PoolCard\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Pools/components/PoolCard/index.tsx"],"names":["BigNumber","React","CardBody","Flex","Text","CardRibbon","ConnectWalletButton","useTranslation","BIG_ZERO","AprRow","StyledCard","CardFooter","StyledCardHeader","CardActions","PoolCard","pool","account","sousId","stakingToken","earningToken","isFinished","userData","t","stakedBalance","accountHasStakedBalance","gt"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;;AAEA,MAAMC,QAA+D,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AAAA;;AAC7F,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA,YAAxB;AAAsCC,IAAAA,UAAtC;AAAkDC,IAAAA;AAAlD,MAA+DN,IAArE;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAQf,cAAc,EAA5B;AACA,QAAMgB,aAAa,GAAG,CAAAF,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEE,aAAV,IAA0B,IAAIvB,SAAJ,CAAcqB,QAAQ,CAACE,aAAvB,CAA1B,GAAkEf,QAAxF;AACA,QAAMgB,uBAAuB,GAAGD,aAAa,CAACE,EAAd,CAAiB,CAAjB,CAAhC;AAEA,sBACE,QAAC,UAAD;AACE,IAAA,UAAU,EAAEL,UAAU,IAAIH,MAAM,KAAK,CADvC;AAEE,IAAA,MAAM,EAAEG,UAAU,iBAAI,QAAC,UAAD;AAAY,MAAA,YAAY,EAAC,cAAzB;AAAwC,MAAA,IAAI,EAAEE,CAAC,CAAC,UAAD;AAA/C;AAAA;AAAA;AAAA;AAAA,YAFxB;AAAA,4BAIE,QAAC,gBAAD;AACE,MAAA,SAAS,EAAEE,uBADb;AAEE,MAAA,YAAY,EAAEL,YAFhB;AAGE,MAAA,YAAY,EAAED,YAHhB;AAIE,MAAA,UAAU,EAAEE,UAAU,IAAIH,MAAM,KAAK;AAJvC;AAAA;AAAA;AAAA;AAAA,YAJF,eAUE,QAAC,QAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAEF,IAAd;AAAoB,QAAA,aAAa,EAAEQ;AAAnC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,MAAT;AAAgB,QAAA,aAAa,EAAC,QAA9B;AAAA,kBACGP,OAAO,gBACN,QAAC,WAAD;AAAa,UAAA,IAAI,EAAED,IAAnB;AAAyB,UAAA,aAAa,EAAEQ;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADM,gBAGN;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,MAAT;AAAgB,YAAA,aAAa,EAAC,WAA9B;AAA0C,YAAA,QAAQ,EAAC,MAAnD;AAA0D,YAAA,KAAK,EAAC,YAAhE;AAA6E,YAAA,IAAI,MAAjF;AAAA,sBACGD,CAAC,CAAC,eAAD;AADJ;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAyBE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEP,IAAlB;AAAwB,MAAA,OAAO,EAAEC;AAAjC;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAnCD;;GAAMF,Q;UAEUP,c;;;KAFVO,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { DeserializedPool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: DeserializedPool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        isStaking={accountHasStakedBalance}\n        earningToken={earningToken}\n        stakingToken={stakingToken}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} stakedBalance={stakedBalance} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n"]},"metadata":{},"sourceType":"module"}