{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Pools/components/PoolsTable/Cells/AprCell.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { BIG_ZERO } from 'utils/bigNumber';\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit';\nimport BigNumber from 'bignumber.js';\nimport { useTranslation } from 'contexts/Localization';\nimport BaseCell, { CellContent } from './BaseCell';\nimport Apr from '../Apr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({\n  theme\n}) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`;\n_c = StyledCell;\n\nconst AprCell = ({\n  pool\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    isMobile\n  } = useMatchBreakpoints();\n  const {\n    userData\n  } = pool;\n  const stakedBalance = (userData === null || userData === void 0 ? void 0 : userData.stakedBalance) ? new BigNumber(userData.stakedBalance) : BIG_ZERO;\n  return /*#__PURE__*/_jsxDEV(StyledCell, {\n    role: \"cell\",\n    children: /*#__PURE__*/_jsxDEV(CellContent, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"12px\",\n        color: \"textSubtle\",\n        textAlign: \"left\",\n        children: t('APR')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Apr, {\n        pool: pool,\n        stakedBalance: stakedBalance,\n        showIcon: !isMobile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AprCell, \"SUO9gnUQN7rYEoD0TdZVeFNF2Bg=\", false, function () {\n  return [useTranslation, useMatchBreakpoints];\n});\n\n_c2 = AprCell;\nexport default AprCell;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledCell\");\n$RefreshReg$(_c2, \"AprCell\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Pools/components/PoolsTable/Cells/AprCell.tsx"],"names":["React","styled","BIG_ZERO","Text","useMatchBreakpoints","BigNumber","useTranslation","BaseCell","CellContent","Apr","StyledCell","theme","mediaQueries","md","AprCell","pool","t","isMobile","userData","stakedBalance"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,IAAT,EAAeC,mBAAf,QAA0C,oBAA1C;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,QAAP,IAAmBC,WAAnB,QAAsC,YAAtC;AACA,OAAOC,GAAP,MAAgB,QAAhB;;AAMA,MAAMC,UAAU,GAAGT,MAAM,CAACM,QAAD,CAAW;AACpC;AACA,IAAI,CAAC;AAAEI,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA,CALA;KAAMH,U;;AAON,MAAMI,OAA+B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AACpD,QAAM;AAAEC,IAAAA;AAAF,MAAQV,cAAc,EAA5B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAeb,mBAAmB,EAAxC;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAeH,IAArB;AACA,QAAMI,aAAa,GAAG,CAAAD,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,aAAV,IAA0B,IAAId,SAAJ,CAAca,QAAQ,CAACC,aAAvB,CAA1B,GAAkEjB,QAAxF;AAEA,sBACE,QAAC,UAAD;AAAY,IAAA,IAAI,EAAC,MAAjB;AAAA,2BACE,QAAC,WAAD;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAC,YAA5B;AAAyC,QAAA,SAAS,EAAC,MAAnD;AAAA,kBACGc,CAAC,CAAC,KAAD;AADJ;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAED,IAAX;AAAiB,QAAA,aAAa,EAAEI,aAAhC;AAA+C,QAAA,QAAQ,EAAE,CAACF;AAA1D;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAhBD;;GAAMH,O;UACUR,c,EACOF,mB;;;MAFjBU,O;AAkBN,eAAeA,OAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { userData } = pool\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APR')}\n        </Text>\n        <Apr pool={pool} stakedBalance={stakedBalance} showIcon={!isMobile} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n"]},"metadata":{},"sourceType":"module"}