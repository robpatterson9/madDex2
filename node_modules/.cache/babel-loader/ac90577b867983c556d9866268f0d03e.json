{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/v1/V1ClaimCheck.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport styled from 'styled-components';\nimport { useTranslation } from 'contexts/Localization';\nimport { Box, Flex, Text, ChevronRightIcon, useModal } from '@pancakeswap/uikit';\nimport Loading from 'components/Loading';\nimport CollectRoundWinningsModal from '../CollectRoundWinningsModal';\nimport { getAllV1History } from './helpers';\nimport NothingToClaimModal from './NothingToClaimModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledClaimCheck = styled(Flex)`\n  align-items: center;\n  background-color: ${({\n  theme\n}) => theme.card.background};\n  border-bottom: 1px solid ${({\n  theme\n}) => theme.colors.cardBorder};\n  cursor: pointer;\n  justify-content: space-between;\n  padding: 16px;\n`;\n_c = StyledClaimCheck;\n\nconst ClaimCheck = () => {\n  _s();\n\n  const [isFetching, setIsFetching] = useState(false);\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const [onPresentCollectWinningsModal] = useModal( /*#__PURE__*/_jsxDEV(CollectRoundWinningsModal, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 52\n  }, this), false);\n  const [onPresentNothingToClaimModal] = useModal( /*#__PURE__*/_jsxDEV(NothingToClaimModal, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 51\n  }, this));\n\n  const handleClick = async () => {\n    try {\n      setIsFetching(true);\n      const betHistory = await getAllV1History({\n        user: account.toLowerCase(),\n        claimed: false\n      }); // Filter out bets that can be claimed\n\n      const unclaimedBets = betHistory.filter(bet => {\n        return bet.round.position === bet.position || bet.round.failed === true;\n      });\n\n      if (unclaimedBets.length > 0) {\n        onPresentCollectWinningsModal();\n      } else {\n        onPresentNothingToClaimModal();\n      }\n    } catch (error) {\n      console.error('Unable to check v1 history', error);\n    } finally {\n      setIsFetching(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledClaimCheck, {\n    onClick: account ? handleClick : undefined,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: t('Showing history for Prediction v0.2')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          color: \"primary\",\n          children: t('Check for unclaimed v0.1 winnings')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n          color: \"primary\",\n          width: \"24px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), isFetching && /*#__PURE__*/_jsxDEV(Box, {\n      px: \"16px\",\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ClaimCheck, \"rGQBFOVy/k2t2qAa0TswybuACh0=\", false, function () {\n  return [useTranslation, useWeb3React, useModal, useModal];\n});\n\n_c2 = ClaimCheck;\nexport default ClaimCheck;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledClaimCheck\");\n$RefreshReg$(_c2, \"ClaimCheck\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/v1/V1ClaimCheck.tsx"],"names":["React","useState","useWeb3React","styled","useTranslation","Box","Flex","Text","ChevronRightIcon","useModal","Loading","CollectRoundWinningsModal","getAllV1History","NothingToClaimModal","StyledClaimCheck","theme","card","background","colors","cardBorder","ClaimCheck","isFetching","setIsFetching","t","account","onPresentCollectWinningsModal","onPresentNothingToClaimModal","handleClick","betHistory","user","toLowerCase","claimed","unclaimedBets","filter","bet","round","position","failed","length","error","console","undefined","flex"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Box, Flex, Text, ChevronRightIcon, useModal } from '@pancakeswap/uikit'\nimport Loading from 'components/Loading'\nimport CollectRoundWinningsModal from '../CollectRoundWinningsModal'\nimport { getAllV1History } from './helpers'\nimport NothingToClaimModal from './NothingToClaimModal'\n\nconst StyledClaimCheck = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.card.background};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  cursor: pointer;\n  justify-content: space-between;\n  padding: 16px;\n`\n\nconst ClaimCheck = () => {\n  const [isFetching, setIsFetching] = useState(false)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const [onPresentCollectWinningsModal] = useModal(<CollectRoundWinningsModal />, false)\n\n  const [onPresentNothingToClaimModal] = useModal(<NothingToClaimModal />)\n\n  const handleClick = async () => {\n    try {\n      setIsFetching(true)\n      const betHistory = await getAllV1History({ user: account.toLowerCase(), claimed: false })\n\n      // Filter out bets that can be claimed\n      const unclaimedBets = betHistory.filter((bet) => {\n        return bet.round.position === bet.position || bet.round.failed === true\n      })\n\n      if (unclaimedBets.length > 0) {\n        onPresentCollectWinningsModal()\n      } else {\n        onPresentNothingToClaimModal()\n      }\n    } catch (error) {\n      console.error('Unable to check v1 history', error)\n    } finally {\n      setIsFetching(false)\n    }\n  }\n\n  return (\n    <StyledClaimCheck onClick={account ? handleClick : undefined}>\n      <Box style={{ flex: 1 }}>\n        <Text>{t('Showing history for Prediction v0.2')}</Text>\n        <Flex alignItems=\"center\">\n          <Text color=\"primary\">{t('Check for unclaimed v0.1 winnings')}</Text>\n          <ChevronRightIcon color=\"primary\" width=\"24px\" />\n        </Flex>\n      </Box>\n      {isFetching && (\n        <Box px=\"16px\">\n          <Loading />\n        </Box>\n      )}\n    </StyledClaimCheck>\n  )\n}\n\nexport default ClaimCheck\n"]},"metadata":{},"sourceType":"module"}