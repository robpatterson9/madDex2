{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Info/components/CurrencyLogo/LogoLoader.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { HelpIcon } from '@pancakeswap/uikit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BAD_SRCS = [];\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback to HelpIcon\n */\nconst LogoLoader = ({\n  src,\n  alt,\n  ...rest\n}) => {\n  _s();\n\n  const [, refresh] = useState(0);\n  const srcFailedLoading = BAD_SRCS.includes(src);\n\n  if (src && !srcFailedLoading) {\n    return /*#__PURE__*/_jsxDEV(\"img\", { ...rest,\n      alt: alt,\n      src: src,\n      onError: () => {\n        if (src) BAD_SRCS.push(src);\n        refresh(i => i + 1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(HelpIcon, { ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n\n_s(LogoLoader, \"VLDml+8XeLo3hOVKOq0/NvPcJAE=\");\n\n_c = LogoLoader;\nexport default LogoLoader;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogoLoader\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Info/components/CurrencyLogo/LogoLoader.tsx"],"names":["React","useState","HelpIcon","BAD_SRCS","LogoLoader","src","alt","rest","refresh","srcFailedLoading","includes","push","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,MAAMC,QAAkB,GAAG,EAA3B;;AAOA;AACA;AACA;AACA,MAAMC,UAAqC,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,GAAP;AAAY,KAAGC;AAAf,CAAD,KAA2B;AAAA;;AACvE,QAAM,GAAGC,OAAH,IAAcP,QAAQ,CAAC,CAAD,CAA5B;AAEA,QAAMQ,gBAAgB,GAAGN,QAAQ,CAACO,QAAT,CAAkBL,GAAlB,CAAzB;;AAEA,MAAIA,GAAG,IAAI,CAACI,gBAAZ,EAA8B;AAC5B,wBACE,oBACMF,IADN;AAEE,MAAA,GAAG,EAAED,GAFP;AAGE,MAAA,GAAG,EAAED,GAHP;AAIE,MAAA,OAAO,EAAE,MAAM;AACb,YAAIA,GAAJ,EAASF,QAAQ,CAACQ,IAAT,CAAcN,GAAd;AACTG,QAAAA,OAAO,CAAEI,CAAD,IAAOA,CAAC,GAAG,CAAZ,CAAP;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAED,sBAAO,QAAC,QAAD,OAAcL;AAAd;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CApBD;;GAAMH,U;;KAAAA,U;AAsBN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS: string[] = []\n\nexport interface LogoLoaderProps {\n  alt: string\n  src: string\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback to HelpIcon\n */\nconst LogoLoader: React.FC<LogoLoaderProps> = ({ src, alt, ...rest }) => {\n  const [, refresh] = useState(0)\n\n  const srcFailedLoading = BAD_SRCS.includes(src)\n\n  if (src && !srcFailedLoading) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS.push(src)\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default LogoLoader\n"]},"metadata":{},"sourceType":"module"}