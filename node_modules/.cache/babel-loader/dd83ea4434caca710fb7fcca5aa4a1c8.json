{"ast":null,"code":"import{ChainId}from'@pancakeswap/sdk';import addresses from'config/constants/contracts';export var getAddress=function getAddress(address){var chainId=process.env.REACT_APP_CHAIN_ID;return address[chainId]?address[chainId]:address[ChainId.MAINNET];};export var getMasterChefAddress=function getMasterChefAddress(){return getAddress(addresses.masterChef);};export var getMulticallAddress=function getMulticallAddress(){return getAddress(addresses.multiCall);};export var getLotteryV2Address=function getLotteryV2Address(){return getAddress(addresses.lotteryV2);};export var getPancakeProfileAddress=function getPancakeProfileAddress(){return getAddress(addresses.pancakeProfile);};export var getPancakeRabbitsAddress=function getPancakeRabbitsAddress(){return getAddress(addresses.pancakeRabbits);};export var getBunnyFactoryAddress=function getBunnyFactoryAddress(){return getAddress(addresses.bunnyFactory);};export var getClaimRefundAddress=function getClaimRefundAddress(){return getAddress(addresses.claimRefund);};export var getPointCenterIfoAddress=function getPointCenterIfoAddress(){return getAddress(addresses.pointCenterIfo);};export var getBunnySpecialAddress=function getBunnySpecialAddress(){return getAddress(addresses.bunnySpecial);};export var getTradingCompetitionAddress=function getTradingCompetitionAddress(){return getAddress(addresses.tradingCompetition);};export var getEasterNftAddress=function getEasterNftAddress(){return getAddress(addresses.easterNft);};export var getCakeVaultAddress=function getCakeVaultAddress(){return getAddress(addresses.cakeVault);};export var getPredictionsAddress=function getPredictionsAddress(){return getAddress(addresses.predictions);};export var getChainlinkOracleAddress=function getChainlinkOracleAddress(){return getAddress(addresses.chainlinkOracle);};export var getBunnySpecialCakeVaultAddress=function getBunnySpecialCakeVaultAddress(){return getAddress(addresses.bunnySpecialCakeVault);};export var getBunnySpecialPredictionAddress=function getBunnySpecialPredictionAddress(){return getAddress(addresses.bunnySpecialPrediction);};export var getBunnySpecialLotteryAddress=function getBunnySpecialLotteryAddress(){return getAddress(addresses.bunnySpecialLottery);};export var getFarmAuctionAddress=function getFarmAuctionAddress(){return getAddress(addresses.farmAuction);};export var getAnniversaryAchievement=function getAnniversaryAchievement(){return getAddress(addresses.AnniversaryAchievement);};export var getNftMarketAddress=function getNftMarketAddress(){return getAddress(addresses.nftMarket);};","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/utils/addressHelpers.ts"],"names":["ChainId","addresses","getAddress","address","chainId","process","env","REACT_APP_CHAIN_ID","MAINNET","getMasterChefAddress","masterChef","getMulticallAddress","multiCall","getLotteryV2Address","lotteryV2","getPancakeProfileAddress","pancakeProfile","getPancakeRabbitsAddress","pancakeRabbits","getBunnyFactoryAddress","bunnyFactory","getClaimRefundAddress","claimRefund","getPointCenterIfoAddress","pointCenterIfo","getBunnySpecialAddress","bunnySpecial","getTradingCompetitionAddress","tradingCompetition","getEasterNftAddress","easterNft","getCakeVaultAddress","cakeVault","getPredictionsAddress","predictions","getChainlinkOracleAddress","chainlinkOracle","getBunnySpecialCakeVaultAddress","bunnySpecialCakeVault","getBunnySpecialPredictionAddress","bunnySpecialPrediction","getBunnySpecialLotteryAddress","bunnySpecialLottery","getFarmAuctionAddress","farmAuction","getAnniversaryAchievement","AnniversaryAchievement","getNftMarketAddress","nftMarket"],"mappings":"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","sourcesContent":["import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getBunnySpecialLotteryAddress = () => {\n  return getAddress(addresses.bunnySpecialLottery)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\nexport const getAnniversaryAchievement = () => {\n  return getAddress(addresses.AnniversaryAchievement)\n}\nexport const getNftMarketAddress = () => {\n  return getAddress(addresses.nftMarket)\n}\n"]},"metadata":{},"sourceType":"module"}