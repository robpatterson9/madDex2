{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import _uniqueId from'lodash/uniqueId';import styled from'styled-components';import{Flex}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import Step from'./Step';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Spacer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin: 12px 8px 0 8px;\\n  width: 28px;\\n  background-color: \",\";\\n  height: 2px;\\n  border-radius: 4px;\\n\\n  \",\" {\\n    width: 36px;\\n  }\\n\"])),function(_ref){var isPastSpacer=_ref.isPastSpacer,theme=_ref.theme;return isPastSpacer?theme.colors.textSubtle:theme.colors.textDisabled;},function(_ref2){var theme=_ref2.theme;return theme.mediaQueries.sm;});var ProgressStepper=function ProgressStepper(_ref3){var steps=_ref3.steps,activeStepIndex=_ref3.activeStepIndex;var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/_jsx(Flex,{children:steps.map(function(step,index){var isPastSpacer=index<activeStepIndex;var stepText=t(step.text).toUpperCase();return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Step,{stepText:stepText,index:index,activeStepIndex:activeStepIndex}),index+1<steps.length&&/*#__PURE__*/_jsx(Spacer,{isPastSpacer:isPastSpacer})]},_uniqueId('ProgressStep-'));})});};export default ProgressStepper;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/TradingCompetition/components/Countdown/ProgressStepper.tsx"],"names":["React","_uniqueId","styled","Flex","useTranslation","Step","Spacer","div","isPastSpacer","theme","colors","textSubtle","textDisabled","mediaQueries","sm","ProgressStepper","steps","activeStepIndex","t","map","step","index","stepText","text","toUpperCase","length"],"mappings":"4LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,iBAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,IAAT,KAAqB,oBAArB,CACA,OAASC,cAAT,KAA+B,uBAA/B,CAEA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,C,wFAEA,GAAMC,CAAAA,MAAM,CAAGJ,MAAM,CAACK,GAAV,iNAGU,kBAAGC,CAAAA,YAAH,MAAGA,YAAH,CAAiBC,KAAjB,MAAiBA,KAAjB,OAClBD,CAAAA,YAAY,CAAGC,KAAK,CAACC,MAAN,CAAaC,UAAhB,CAA6BF,KAAK,CAACC,MAAN,CAAaE,YADpC,EAHV,CAQR,mBAAGH,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACI,YAAN,CAAmBC,EAAlC,EARQ,CAAZ,CAaA,GAAMC,CAAAA,eAAyC,CAAG,QAA5CA,CAAAA,eAA4C,OAAgC,IAA7BC,CAAAA,KAA6B,OAA7BA,KAA6B,CAAtBC,eAAsB,OAAtBA,eAAsB,CAChF,oBAAcb,cAAc,EAA5B,CAAQc,CAAR,iBAAQA,CAAR,CACA,mBACE,KAAC,IAAD,WACGF,KAAK,CAACG,GAAN,CAAU,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAC1B,GAAMb,CAAAA,YAAY,CAAGa,KAAK,CAAGJ,eAA7B,CACA,GAAMK,CAAAA,QAAQ,CAAGJ,CAAC,CAACE,IAAI,CAACG,IAAN,CAAD,CAAaC,WAAb,EAAjB,CAEA,mBACE,MAAC,KAAD,CAAO,QAAP,yBACE,KAAC,IAAD,EAAM,QAAQ,CAAEF,QAAhB,CAA0B,KAAK,CAAED,KAAjC,CAAwC,eAAe,CAAEJ,eAAzD,EADF,CAEGI,KAAK,CAAG,CAAR,CAAYL,KAAK,CAACS,MAAlB,eAA4B,KAAC,MAAD,EAAQ,YAAY,CAAEjB,YAAtB,EAF/B,GAAqBP,SAAS,CAAC,eAAD,CAA9B,CADF,CAMD,CAVA,CADH,EADF,CAeD,CAjBD,CAmBA,cAAec,CAAAA,eAAf","sourcesContent":["import React from 'react'\nimport _uniqueId from 'lodash/uniqueId'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { CountdownProps } from '../../types'\nimport Step from './Step'\n\nconst Spacer = styled.div<{ isPastSpacer?: boolean }>`\n  margin: 12px 8px 0 8px;\n  width: 28px;\n  background-color: ${({ isPastSpacer, theme }) =>\n    isPastSpacer ? theme.colors.textSubtle : theme.colors.textDisabled};\n  height: 2px;\n  border-radius: 4px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 36px;\n  }\n`\n\nconst ProgressStepper: React.FC<CountdownProps> = ({ steps, activeStepIndex }) => {\n  const { t } = useTranslation()\n  return (\n    <Flex>\n      {steps.map((step, index) => {\n        const isPastSpacer = index < activeStepIndex\n        const stepText = t(step.text).toUpperCase()\n\n        return (\n          <React.Fragment key={_uniqueId('ProgressStep-')}>\n            <Step stepText={stepText} index={index} activeStepIndex={activeStepIndex} />\n            {index + 1 < steps.length && <Spacer isPastSpacer={isPastSpacer} />}\n          </React.Fragment>\n        )\n      })}\n    </Flex>\n  )\n}\n\nexport default ProgressStepper\n"]},"metadata":{},"sourceType":"module"}