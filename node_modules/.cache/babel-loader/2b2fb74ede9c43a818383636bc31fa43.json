{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var _templateObject;/* eslint-disable no-param-reassign */import{useEffect,useState}from'react';import{request,gql}from'graphql-request';import{INFO_CLIENT}from'config/constants/endpoints';import{getDeltaTimestamps}from'views/Info/utils/infoQueryHelpers';import{useBlocksFromTimestamps}from'views/Info/hooks/useBlocksFromTimestamps';import{getChangeForPeriod,getLpFeesAndApr,getPercentChange}from'views/Info/utils/infoDataHelpers';/**\n * Data for displaying pool tables (on multiple pages, used throughout the site)\n * Note: Don't try to refactor it to use variables, server throws error if blocks passed as undefined variable\n * only works if its hard-coded into query string\n */var POOL_AT_BLOCK=function POOL_AT_BLOCK(block,pools){var blockString=block?\"block: {number: \".concat(block,\"}\"):\"\";var addressesString=\"[\\\"\".concat(pools.join('\",\"'),\"\\\"]\");return\"pairs(\\n    where: { id_in: \".concat(addressesString,\" }\\n    \").concat(blockString,\"\\n    orderBy: trackedReserveBNB\\n    orderDirection: desc\\n  ) {\\n    id\\n    reserve0\\n    reserve1\\n    reserveUSD\\n    volumeUSD\\n    token0Price\\n    token1Price\\n    token0 {\\n      id\\n      symbol\\n      name\\n    }\\n    token1 {\\n      id\\n      symbol\\n      name\\n    }\\n  }\");};var fetchPoolData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(block24h,block48h,block7d,block14d,poolAddresses){var query,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;query=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n      query pools {\\n        now: \",\"\\n        oneDayAgo: \",\"\\n        twoDaysAgo: \",\"\\n        oneWeekAgo: \",\"\\n        twoWeeksAgo: \",\"\\n      }\\n    \"])),POOL_AT_BLOCK(null,poolAddresses),POOL_AT_BLOCK(block24h,poolAddresses),POOL_AT_BLOCK(block48h,poolAddresses),POOL_AT_BLOCK(block7d,poolAddresses),POOL_AT_BLOCK(block14d,poolAddresses));_context.next=4;return request(INFO_CLIENT,query);case 4:data=_context.sent;return _context.abrupt(\"return\",{data:data,error:false});case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.error('Failed to fetch pool data',_context.t0);return _context.abrupt(\"return\",{error:true});case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function fetchPoolData(_x,_x2,_x3,_x4,_x5){return _ref.apply(this,arguments);};}();// Transforms pools into \"0xADDRESS: { ...PoolFields }\" format and cast strigns to numbers\nvar parsePoolData=function parsePoolData(pairs){if(!pairs){return{};}return pairs.reduce(function(accum,poolData){var volumeUSD=poolData.volumeUSD,reserveUSD=poolData.reserveUSD,reserve0=poolData.reserve0,reserve1=poolData.reserve1,token0Price=poolData.token0Price,token1Price=poolData.token1Price;accum[poolData.id]=_objectSpread(_objectSpread({},poolData),{},{volumeUSD:parseFloat(volumeUSD),reserveUSD:parseFloat(reserveUSD),reserve0:parseFloat(reserve0),reserve1:parseFloat(reserve1),token0Price:parseFloat(token0Price),token1Price:parseFloat(token1Price)});return accum;},{});};/**\n * Fetch top pools by liquidity\n */var usePoolDatas=function usePoolDatas(poolAddresses){var _useState=useState({error:false}),_useState2=_slicedToArray(_useState,2),fetchState=_useState2[0],setFetchState=_useState2[1];var _getDeltaTimestamps=getDeltaTimestamps(),_getDeltaTimestamps2=_slicedToArray(_getDeltaTimestamps,4),t24h=_getDeltaTimestamps2[0],t48h=_getDeltaTimestamps2[1],t7d=_getDeltaTimestamps2[2],t14d=_getDeltaTimestamps2[3];var _useBlocksFromTimesta=useBlocksFromTimestamps([t24h,t48h,t7d,t14d]),blocks=_useBlocksFromTimesta.blocks,blockError=_useBlocksFromTimesta.error;var _ref2=blocks!==null&&blocks!==void 0?blocks:[],_ref3=_slicedToArray(_ref2,4),block24h=_ref3[0],block48h=_ref3[1],block7d=_ref3[2],block14d=_ref3[3];useEffect(function(){var fetch=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$fetchPoolData,error,data,formattedPoolData,formattedPoolData24h,formattedPoolData48h,formattedPoolData7d,formattedPoolData14d,formatted;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetchPoolData(block24h.number,block48h.number,block7d.number,block14d.number,poolAddresses);case 2:_yield$fetchPoolData=_context2.sent;error=_yield$fetchPoolData.error;data=_yield$fetchPoolData.data;if(error){setFetchState({error:true});}else{formattedPoolData=parsePoolData(data===null||data===void 0?void 0:data.now);formattedPoolData24h=parsePoolData(data===null||data===void 0?void 0:data.oneDayAgo);formattedPoolData48h=parsePoolData(data===null||data===void 0?void 0:data.twoDaysAgo);formattedPoolData7d=parsePoolData(data===null||data===void 0?void 0:data.oneWeekAgo);formattedPoolData14d=parsePoolData(data===null||data===void 0?void 0:data.twoWeeksAgo);// Calculate data and format\nformatted=poolAddresses.reduce(function(accum,address){// Undefined data is possible if pool is brand new and didn't exist one day ago or week ago.\nvar current=formattedPoolData[address];var oneDay=formattedPoolData24h[address];var twoDays=formattedPoolData48h[address];var week=formattedPoolData7d[address];var twoWeeks=formattedPoolData14d[address];var _getChangeForPeriod=getChangeForPeriod(current===null||current===void 0?void 0:current.volumeUSD,oneDay===null||oneDay===void 0?void 0:oneDay.volumeUSD,twoDays===null||twoDays===void 0?void 0:twoDays.volumeUSD),_getChangeForPeriod2=_slicedToArray(_getChangeForPeriod,2),volumeUSD=_getChangeForPeriod2[0],volumeUSDChange=_getChangeForPeriod2[1];var _getChangeForPeriod3=getChangeForPeriod(current===null||current===void 0?void 0:current.volumeUSD,week===null||week===void 0?void 0:week.volumeUSD,twoWeeks===null||twoWeeks===void 0?void 0:twoWeeks.volumeUSD),_getChangeForPeriod4=_slicedToArray(_getChangeForPeriod3,2),volumeUSDWeek=_getChangeForPeriod4[0],volumeUSDChangeWeek=_getChangeForPeriod4[1];var liquidityUSD=current?current.reserveUSD:0;var liquidityUSDChange=getPercentChange(current===null||current===void 0?void 0:current.reserveUSD,oneDay===null||oneDay===void 0?void 0:oneDay.reserveUSD);var liquidityToken0=current?current.reserve0:0;var liquidityToken1=current?current.reserve1:0;var _getLpFeesAndApr=getLpFeesAndApr(volumeUSD,volumeUSDWeek,liquidityUSD),totalFees24h=_getLpFeesAndApr.totalFees24h,totalFees7d=_getLpFeesAndApr.totalFees7d,lpFees24h=_getLpFeesAndApr.lpFees24h,lpFees7d=_getLpFeesAndApr.lpFees7d,lpApr7d=_getLpFeesAndApr.lpApr7d;if(current){accum[address]={address:address,token0:{address:current.token0.id,name:current.token0.name,symbol:current.token0.symbol},token1:{address:current.token1.id,name:current.token1.name,symbol:current.token1.symbol},token0Price:current.token0Price,token1Price:current.token1Price,volumeUSD:volumeUSD,volumeUSDChange:volumeUSDChange,volumeUSDWeek:volumeUSDWeek,volumeUSDChangeWeek:volumeUSDChangeWeek,totalFees24h:totalFees24h,totalFees7d:totalFees7d,lpFees24h:lpFees24h,lpFees7d:lpFees7d,lpApr7d:lpApr7d,liquidityUSD:liquidityUSD,liquidityUSDChange:liquidityUSDChange,liquidityToken0:liquidityToken0,liquidityToken1:liquidityToken1};}return accum;},{});setFetchState({data:formatted,error:false});}case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function fetch(){return _ref4.apply(this,arguments);};}();var allBlocksAvailable=(block24h===null||block24h===void 0?void 0:block24h.number)&&(block48h===null||block48h===void 0?void 0:block48h.number)&&(block7d===null||block7d===void 0?void 0:block7d.number)&&(block14d===null||block14d===void 0?void 0:block14d.number);if(poolAddresses.length>0&&allBlocksAvailable&&!blockError){fetch();}},[poolAddresses,block24h,block48h,block7d,block14d,blockError]);return fetchState;};export default usePoolDatas;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/state/info/queries/pools/poolData.ts"],"names":["useEffect","useState","request","gql","INFO_CLIENT","getDeltaTimestamps","useBlocksFromTimestamps","getChangeForPeriod","getLpFeesAndApr","getPercentChange","POOL_AT_BLOCK","block","pools","blockString","addressesString","join","fetchPoolData","block24h","block48h","block7d","block14d","poolAddresses","query","data","error","console","parsePoolData","pairs","reduce","accum","poolData","volumeUSD","reserveUSD","reserve0","reserve1","token0Price","token1Price","id","parseFloat","usePoolDatas","fetchState","setFetchState","t24h","t48h","t7d","t14d","blocks","blockError","fetch","number","formattedPoolData","now","formattedPoolData24h","oneDayAgo","formattedPoolData48h","twoDaysAgo","formattedPoolData7d","oneWeekAgo","formattedPoolData14d","twoWeeksAgo","formatted","address","current","oneDay","twoDays","week","twoWeeks","volumeUSDChange","volumeUSDWeek","volumeUSDChangeWeek","liquidityUSD","liquidityUSDChange","liquidityToken0","liquidityToken1","totalFees24h","totalFees7d","lpFees24h","lpFees7d","lpApr7d","token0","name","symbol","token1","allBlocksAvailable","length"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { useEffect, useState } from 'react'\nimport { request, gql } from 'graphql-request'\nimport { INFO_CLIENT } from 'config/constants/endpoints'\nimport { getDeltaTimestamps } from 'views/Info/utils/infoQueryHelpers'\nimport { useBlocksFromTimestamps } from 'views/Info/hooks/useBlocksFromTimestamps'\nimport { PoolData } from 'state/info/types'\nimport { getChangeForPeriod, getLpFeesAndApr, getPercentChange } from 'views/Info/utils/infoDataHelpers'\n\ninterface PoolFields {\n  id: string\n  reserve0: string\n  reserve1: string\n  reserveUSD: string\n  volumeUSD: string\n  token0Price: string\n  token1Price: string\n  token0: {\n    id: string\n    symbol: string\n    name: string\n  }\n  token1: {\n    id: string\n    symbol: string\n    name: string\n  }\n}\n\ninterface FormattedPoolFields\n  extends Omit<PoolFields, 'volumeUSD' | 'reserveUSD' | 'reserve0' | 'reserve1' | 'token0Price' | 'token1Price'> {\n  volumeUSD: number\n  reserveUSD: number\n  reserve0: number\n  reserve1: number\n  token0Price: number\n  token1Price: number\n}\n\ninterface PoolsQueryResponse {\n  now: PoolFields[]\n  oneDayAgo: PoolFields[]\n  twoDaysAgo: PoolFields[]\n  oneWeekAgo: PoolFields[]\n  twoWeeksAgo: PoolFields[]\n}\n\n/**\n * Data for displaying pool tables (on multiple pages, used throughout the site)\n * Note: Don't try to refactor it to use variables, server throws error if blocks passed as undefined variable\n * only works if its hard-coded into query string\n */\nconst POOL_AT_BLOCK = (block: number | null, pools: string[]) => {\n  const blockString = block ? `block: {number: ${block}}` : ``\n  const addressesString = `[\"${pools.join('\",\"')}\"]`\n  return `pairs(\n    where: { id_in: ${addressesString} }\n    ${blockString}\n    orderBy: trackedReserveBNB\n    orderDirection: desc\n  ) {\n    id\n    reserve0\n    reserve1\n    reserveUSD\n    volumeUSD\n    token0Price\n    token1Price\n    token0 {\n      id\n      symbol\n      name\n    }\n    token1 {\n      id\n      symbol\n      name\n    }\n  }`\n}\n\nconst fetchPoolData = async (\n  block24h: number,\n  block48h: number,\n  block7d: number,\n  block14d: number,\n  poolAddresses: string[],\n) => {\n  try {\n    const query = gql`\n      query pools {\n        now: ${POOL_AT_BLOCK(null, poolAddresses)}\n        oneDayAgo: ${POOL_AT_BLOCK(block24h, poolAddresses)}\n        twoDaysAgo: ${POOL_AT_BLOCK(block48h, poolAddresses)}\n        oneWeekAgo: ${POOL_AT_BLOCK(block7d, poolAddresses)}\n        twoWeeksAgo: ${POOL_AT_BLOCK(block14d, poolAddresses)}\n      }\n    `\n    const data = await request<PoolsQueryResponse>(INFO_CLIENT, query)\n    return { data, error: false }\n  } catch (error) {\n    console.error('Failed to fetch pool data', error)\n    return { error: true }\n  }\n}\n\n// Transforms pools into \"0xADDRESS: { ...PoolFields }\" format and cast strigns to numbers\nconst parsePoolData = (pairs?: PoolFields[]) => {\n  if (!pairs) {\n    return {}\n  }\n  return pairs.reduce((accum: { [address: string]: FormattedPoolFields }, poolData) => {\n    const { volumeUSD, reserveUSD, reserve0, reserve1, token0Price, token1Price } = poolData\n    accum[poolData.id] = {\n      ...poolData,\n      volumeUSD: parseFloat(volumeUSD),\n      reserveUSD: parseFloat(reserveUSD),\n      reserve0: parseFloat(reserve0),\n      reserve1: parseFloat(reserve1),\n      token0Price: parseFloat(token0Price),\n      token1Price: parseFloat(token1Price),\n    }\n    return accum\n  }, {})\n}\n\ninterface PoolDatas {\n  error: boolean\n  data?: {\n    [address: string]: PoolData\n  }\n}\n\n/**\n * Fetch top pools by liquidity\n */\nconst usePoolDatas = (poolAddresses: string[]): PoolDatas => {\n  const [fetchState, setFetchState] = useState<PoolDatas>({ error: false })\n  const [t24h, t48h, t7d, t14d] = getDeltaTimestamps()\n  const { blocks, error: blockError } = useBlocksFromTimestamps([t24h, t48h, t7d, t14d])\n  const [block24h, block48h, block7d, block14d] = blocks ?? []\n\n  useEffect(() => {\n    const fetch = async () => {\n      const { error, data } = await fetchPoolData(\n        block24h.number,\n        block48h.number,\n        block7d.number,\n        block14d.number,\n        poolAddresses,\n      )\n      if (error) {\n        setFetchState({ error: true })\n      } else {\n        const formattedPoolData = parsePoolData(data?.now)\n        const formattedPoolData24h = parsePoolData(data?.oneDayAgo)\n        const formattedPoolData48h = parsePoolData(data?.twoDaysAgo)\n        const formattedPoolData7d = parsePoolData(data?.oneWeekAgo)\n        const formattedPoolData14d = parsePoolData(data?.twoWeeksAgo)\n\n        // Calculate data and format\n        const formatted = poolAddresses.reduce((accum: { [address: string]: PoolData }, address) => {\n          // Undefined data is possible if pool is brand new and didn't exist one day ago or week ago.\n          const current: FormattedPoolFields | undefined = formattedPoolData[address]\n          const oneDay: FormattedPoolFields | undefined = formattedPoolData24h[address]\n          const twoDays: FormattedPoolFields | undefined = formattedPoolData48h[address]\n          const week: FormattedPoolFields | undefined = formattedPoolData7d[address]\n          const twoWeeks: FormattedPoolFields | undefined = formattedPoolData14d[address]\n\n          const [volumeUSD, volumeUSDChange] = getChangeForPeriod(\n            current?.volumeUSD,\n            oneDay?.volumeUSD,\n            twoDays?.volumeUSD,\n          )\n          const [volumeUSDWeek, volumeUSDChangeWeek] = getChangeForPeriod(\n            current?.volumeUSD,\n            week?.volumeUSD,\n            twoWeeks?.volumeUSD,\n          )\n\n          const liquidityUSD = current ? current.reserveUSD : 0\n\n          const liquidityUSDChange = getPercentChange(current?.reserveUSD, oneDay?.reserveUSD)\n\n          const liquidityToken0 = current ? current.reserve0 : 0\n          const liquidityToken1 = current ? current.reserve1 : 0\n\n          const { totalFees24h, totalFees7d, lpFees24h, lpFees7d, lpApr7d } = getLpFeesAndApr(\n            volumeUSD,\n            volumeUSDWeek,\n            liquidityUSD,\n          )\n\n          if (current) {\n            accum[address] = {\n              address,\n              token0: {\n                address: current.token0.id,\n                name: current.token0.name,\n                symbol: current.token0.symbol,\n              },\n              token1: {\n                address: current.token1.id,\n                name: current.token1.name,\n                symbol: current.token1.symbol,\n              },\n              token0Price: current.token0Price,\n              token1Price: current.token1Price,\n              volumeUSD,\n              volumeUSDChange,\n              volumeUSDWeek,\n              volumeUSDChangeWeek,\n              totalFees24h,\n              totalFees7d,\n              lpFees24h,\n              lpFees7d,\n              lpApr7d,\n              liquidityUSD,\n              liquidityUSDChange,\n              liquidityToken0,\n              liquidityToken1,\n            }\n          }\n\n          return accum\n        }, {})\n        setFetchState({ data: formatted, error: false })\n      }\n    }\n\n    const allBlocksAvailable = block24h?.number && block48h?.number && block7d?.number && block14d?.number\n    if (poolAddresses.length > 0 && allBlocksAvailable && !blockError) {\n      fetch()\n    }\n  }, [poolAddresses, block24h, block48h, block7d, block14d, blockError])\n\n  return fetchState\n}\n\nexport default usePoolDatas\n"]},"metadata":{},"sourceType":"module"}