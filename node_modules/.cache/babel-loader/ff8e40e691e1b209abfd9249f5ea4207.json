{"ast":null,"code":"import React from'react';import{Button,AutoRenewIcon,Skeleton}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{useERC20}from'hooks/useContract';import{useApprovePool}from'../../../hooks/useApprove';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ApprovalAction=function ApprovalAction(_ref){var pool=_ref.pool,_ref$isLoading=_ref.isLoading,isLoading=_ref$isLoading===void 0?false:_ref$isLoading;var sousId=pool.sousId,stakingToken=pool.stakingToken,earningToken=pool.earningToken;var _useTranslation=useTranslation(),t=_useTranslation.t;var stakingTokenContract=useERC20(stakingToken.address||'');var _useApprovePool=useApprovePool(stakingTokenContract,sousId,earningToken.symbol),handleApprove=_useApprovePool.handleApprove,requestedApproval=_useApprovePool.requestedApproval;return/*#__PURE__*/_jsx(_Fragment,{children:isLoading?/*#__PURE__*/_jsx(Skeleton,{width:\"100%\",height:\"52px\"}):/*#__PURE__*/_jsx(Button,{isLoading:requestedApproval,endIcon:requestedApproval?/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,color:\"currentColor\"}):null,disabled:requestedApproval,onClick:handleApprove,width:\"100%\",children:t('Enable')})});};export default ApprovalAction;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx"],"names":["React","Button","AutoRenewIcon","Skeleton","useTranslation","useERC20","useApprovePool","ApprovalAction","pool","isLoading","sousId","stakingToken","earningToken","t","stakingTokenContract","address","symbol","handleApprove","requestedApproval"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,aAAjB,CAAgCC,QAAhC,KAAgD,oBAAhD,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,QAAT,KAAyB,mBAAzB,CAEA,OAASC,cAAT,KAA+B,2BAA/B,C,gGAOA,GAAMC,CAAAA,cAA6C,CAAG,QAAhDA,CAAAA,cAAgD,MAAiC,IAA9BC,CAAAA,IAA8B,MAA9BA,IAA8B,qBAAxBC,SAAwB,CAAxBA,SAAwB,yBAAZ,KAAY,gBACrF,GAAQC,CAAAA,MAAR,CAA+CF,IAA/C,CAAQE,MAAR,CAAgBC,YAAhB,CAA+CH,IAA/C,CAAgBG,YAAhB,CAA8BC,YAA9B,CAA+CJ,IAA/C,CAA8BI,YAA9B,CACA,oBAAcR,cAAc,EAA5B,CAAQS,CAAR,iBAAQA,CAAR,CACA,GAAMC,CAAAA,oBAAoB,CAAGT,QAAQ,CAACM,YAAY,CAACI,OAAb,EAAwB,EAAzB,CAArC,CACA,oBAA6CT,cAAc,CAACQ,oBAAD,CAAuBJ,MAAvB,CAA+BE,YAAY,CAACI,MAA5C,CAA3D,CAAQC,aAAR,iBAAQA,aAAR,CAAuBC,iBAAvB,iBAAuBA,iBAAvB,CAEA,mBACE,yBACGT,SAAS,cACR,KAAC,QAAD,EAAU,KAAK,CAAC,MAAhB,CAAuB,MAAM,CAAC,MAA9B,EADQ,cAGR,KAAC,MAAD,EACE,SAAS,CAAES,iBADb,CAEE,OAAO,CAAEA,iBAAiB,cAAG,KAAC,aAAD,EAAe,IAAI,KAAnB,CAAoB,KAAK,CAAC,cAA1B,EAAH,CAAiD,IAF7E,CAGE,QAAQ,CAAEA,iBAHZ,CAIE,OAAO,CAAED,aAJX,CAKE,KAAK,CAAC,MALR,UAOGJ,CAAC,CAAC,QAAD,CAPJ,EAJJ,EADF,CAiBD,CAvBD,CAyBA,cAAeN,CAAAA,cAAf","sourcesContent":["import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { DeserializedPool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: DeserializedPool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address || '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n"]},"metadata":{},"sourceType":"module"}