{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var _templateObject;/* eslint-disable no-param-reassign */import{useState,useEffect}from'react';import{request,gql}from'graphql-request';import{INFO_CLIENT}from'config/constants/endpoints';import{getDeltaTimestamps}from'views/Info/utils/infoQueryHelpers';import{useBlocksFromTimestamps}from'views/Info/hooks/useBlocksFromTimestamps';import{getPercentChange,getChangeForPeriod,getAmountChange}from'views/Info/utils/infoDataHelpers';import{useBnbPrices}from'views/Info/hooks/useBnbPrices';/**\n * Main token data to display on Token page\n */var TOKEN_AT_BLOCK=function TOKEN_AT_BLOCK(block,tokens){var addressesString=\"[\\\"\".concat(tokens.join('\",\"'),\"\\\"]\");var blockString=block?\"block: {number: \".concat(block,\"}\"):\"\";return\"tokens(\\n      where: {id_in: \".concat(addressesString,\"}\\n      \").concat(blockString,\"\\n      orderBy: tradeVolumeUSD\\n      orderDirection: desc\\n    ) {\\n      id\\n      symbol\\n      name\\n      derivedBNB\\n      derivedUSD\\n      tradeVolumeUSD\\n      totalTransactions\\n      totalLiquidity\\n    }\\n  \");};var fetchTokenData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(block24h,block48h,block7d,block14d,tokenAddresses){var query,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;query=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n      query tokens {\\n        now: \",\"\\n        oneDayAgo: \",\"\\n        twoDaysAgo: \",\"\\n        oneWeekAgo: \",\"\\n        twoWeeksAgo: \",\"\\n      }\\n    \"])),TOKEN_AT_BLOCK(null,tokenAddresses),TOKEN_AT_BLOCK(block24h,tokenAddresses),TOKEN_AT_BLOCK(block48h,tokenAddresses),TOKEN_AT_BLOCK(block7d,tokenAddresses),TOKEN_AT_BLOCK(block14d,tokenAddresses));_context.next=4;return request(INFO_CLIENT,query);case 4:data=_context.sent;return _context.abrupt(\"return\",{data:data,error:false});case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.error('Failed to fetch token data',_context.t0);return _context.abrupt(\"return\",{error:true});case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function fetchTokenData(_x,_x2,_x3,_x4,_x5){return _ref.apply(this,arguments);};}();// Transforms tokens into \"0xADDRESS: { ...TokenFields }\" format and cast strings to numbers\nvar parseTokenData=function parseTokenData(tokens){if(!tokens){return{};}return tokens.reduce(function(accum,tokenData){var derivedBNB=tokenData.derivedBNB,derivedUSD=tokenData.derivedUSD,tradeVolumeUSD=tokenData.tradeVolumeUSD,totalTransactions=tokenData.totalTransactions,totalLiquidity=tokenData.totalLiquidity;accum[tokenData.id]=_objectSpread(_objectSpread({},tokenData),{},{derivedBNB:parseFloat(derivedBNB),derivedUSD:parseFloat(derivedUSD),tradeVolumeUSD:parseFloat(tradeVolumeUSD),totalTransactions:parseFloat(totalTransactions),totalLiquidity:parseFloat(totalLiquidity)});return accum;},{});};/**\n * Fetch top addresses by volume\n */var useFetchedTokenDatas=function useFetchedTokenDatas(tokenAddresses){var _useState=useState({error:false}),_useState2=_slicedToArray(_useState,2),fetchState=_useState2[0],setFetchState=_useState2[1];var _getDeltaTimestamps=getDeltaTimestamps(),_getDeltaTimestamps2=_slicedToArray(_getDeltaTimestamps,4),t24h=_getDeltaTimestamps2[0],t48h=_getDeltaTimestamps2[1],t7d=_getDeltaTimestamps2[2],t14d=_getDeltaTimestamps2[3];var _useBlocksFromTimesta=useBlocksFromTimestamps([t24h,t48h,t7d,t14d]),blocks=_useBlocksFromTimesta.blocks,blockError=_useBlocksFromTimesta.error;var _ref2=blocks!==null&&blocks!==void 0?blocks:[],_ref3=_slicedToArray(_ref2,4),block24h=_ref3[0],block48h=_ref3[1],block7d=_ref3[2],block14d=_ref3[3];var bnbPrices=useBnbPrices();useEffect(function(){var fetch=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$fetchTokenData,error,data,parsed,parsed24,parsed48,parsed7d,parsed14d,formatted;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetchTokenData(block24h.number,block48h.number,block7d.number,block14d.number,tokenAddresses);case 2:_yield$fetchTokenData=_context2.sent;error=_yield$fetchTokenData.error;data=_yield$fetchTokenData.data;if(error){setFetchState({error:true});}else{parsed=parseTokenData(data===null||data===void 0?void 0:data.now);parsed24=parseTokenData(data===null||data===void 0?void 0:data.oneDayAgo);parsed48=parseTokenData(data===null||data===void 0?void 0:data.twoDaysAgo);parsed7d=parseTokenData(data===null||data===void 0?void 0:data.oneWeekAgo);parsed14d=parseTokenData(data===null||data===void 0?void 0:data.twoWeeksAgo);// Calculate data and format\nformatted=tokenAddresses.reduce(function(accum,address){var current=parsed[address];var oneDay=parsed24[address];var twoDays=parsed48[address];var week=parsed7d[address];var twoWeeks=parsed14d[address];var _getChangeForPeriod=getChangeForPeriod(current===null||current===void 0?void 0:current.tradeVolumeUSD,oneDay===null||oneDay===void 0?void 0:oneDay.tradeVolumeUSD,twoDays===null||twoDays===void 0?void 0:twoDays.tradeVolumeUSD),_getChangeForPeriod2=_slicedToArray(_getChangeForPeriod,2),volumeUSD=_getChangeForPeriod2[0],volumeUSDChange=_getChangeForPeriod2[1];var _getChangeForPeriod3=getChangeForPeriod(current===null||current===void 0?void 0:current.tradeVolumeUSD,week===null||week===void 0?void 0:week.tradeVolumeUSD,twoWeeks===null||twoWeeks===void 0?void 0:twoWeeks.tradeVolumeUSD),_getChangeForPeriod4=_slicedToArray(_getChangeForPeriod3,1),volumeUSDWeek=_getChangeForPeriod4[0];var liquidityUSD=current?current.totalLiquidity*current.derivedUSD:0;var liquidityUSDOneDayAgo=oneDay?oneDay.totalLiquidity*oneDay.derivedUSD:0;var liquidityUSDChange=getPercentChange(liquidityUSD,liquidityUSDOneDayAgo);var liquidityToken=current?current.totalLiquidity:0;// Prices of tokens for now, 24h ago and 7d ago\nvar priceUSD=current?current.derivedBNB*bnbPrices.current:0;var priceUSDOneDay=oneDay?oneDay.derivedBNB*bnbPrices.oneDay:0;var priceUSDWeek=week?week.derivedBNB*bnbPrices.week:0;var priceUSDChange=getPercentChange(priceUSD,priceUSDOneDay);var priceUSDChangeWeek=getPercentChange(priceUSD,priceUSDWeek);var txCount=getAmountChange(current===null||current===void 0?void 0:current.totalTransactions,oneDay===null||oneDay===void 0?void 0:oneDay.totalTransactions);accum[address]={exists:!!current,address:address,name:current?current.name:'',symbol:current?current.symbol:'',volumeUSD:volumeUSD,volumeUSDChange:volumeUSDChange,volumeUSDWeek:volumeUSDWeek,txCount:txCount,liquidityUSD:liquidityUSD,liquidityUSDChange:liquidityUSDChange,liquidityToken:liquidityToken,priceUSD:priceUSD,priceUSDChange:priceUSDChange,priceUSDChangeWeek:priceUSDChangeWeek};return accum;},{});setFetchState({data:formatted,error:false});}case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function fetch(){return _ref4.apply(this,arguments);};}();var allBlocksAvailable=(block24h===null||block24h===void 0?void 0:block24h.number)&&(block48h===null||block48h===void 0?void 0:block48h.number)&&(block7d===null||block7d===void 0?void 0:block7d.number)&&(block14d===null||block14d===void 0?void 0:block14d.number);if(tokenAddresses.length>0&&allBlocksAvailable&&!blockError&&bnbPrices){fetch();}},[tokenAddresses,block24h,block48h,block7d,block14d,blockError,bnbPrices]);return fetchState;};export default useFetchedTokenDatas;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/state/info/queries/tokens/tokenData.ts"],"names":["useState","useEffect","request","gql","INFO_CLIENT","getDeltaTimestamps","useBlocksFromTimestamps","getPercentChange","getChangeForPeriod","getAmountChange","useBnbPrices","TOKEN_AT_BLOCK","block","tokens","addressesString","join","blockString","fetchTokenData","block24h","block48h","block7d","block14d","tokenAddresses","query","data","error","console","parseTokenData","reduce","accum","tokenData","derivedBNB","derivedUSD","tradeVolumeUSD","totalTransactions","totalLiquidity","id","parseFloat","useFetchedTokenDatas","fetchState","setFetchState","t24h","t48h","t7d","t14d","blocks","blockError","bnbPrices","fetch","number","parsed","now","parsed24","oneDayAgo","parsed48","twoDaysAgo","parsed7d","oneWeekAgo","parsed14d","twoWeeksAgo","formatted","address","current","oneDay","twoDays","week","twoWeeks","volumeUSD","volumeUSDChange","volumeUSDWeek","liquidityUSD","liquidityUSDOneDayAgo","liquidityUSDChange","liquidityToken","priceUSD","priceUSDOneDay","priceUSDWeek","priceUSDChange","priceUSDChangeWeek","txCount","exists","name","symbol","allBlocksAvailable","length"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { useState, useEffect } from 'react'\nimport { request, gql } from 'graphql-request'\nimport { INFO_CLIENT } from 'config/constants/endpoints'\nimport { getDeltaTimestamps } from 'views/Info/utils/infoQueryHelpers'\nimport { useBlocksFromTimestamps } from 'views/Info/hooks/useBlocksFromTimestamps'\nimport { getPercentChange, getChangeForPeriod, getAmountChange } from 'views/Info/utils/infoDataHelpers'\nimport { TokenData } from 'state/info/types'\nimport { useBnbPrices } from 'views/Info/hooks/useBnbPrices'\n\ninterface TokenFields {\n  id: string\n  symbol: string\n  name: string\n  derivedBNB: string // Price in BNB per token\n  derivedUSD: string // Price in USD per token\n  tradeVolumeUSD: string\n  totalTransactions: string\n  totalLiquidity: string\n}\n\ninterface FormattedTokenFields\n  extends Omit<TokenFields, 'derivedBNB' | 'derivedUSD' | 'tradeVolumeUSD' | 'totalTransactions' | 'totalLiquidity'> {\n  derivedBNB: number\n  derivedUSD: number\n  tradeVolumeUSD: number\n  totalTransactions: number\n  totalLiquidity: number\n}\n\ninterface TokenQueryResponse {\n  now: TokenFields[]\n  oneDayAgo: TokenFields[]\n  twoDaysAgo: TokenFields[]\n  oneWeekAgo: TokenFields[]\n  twoWeeksAgo: TokenFields[]\n}\n\n/**\n * Main token data to display on Token page\n */\nconst TOKEN_AT_BLOCK = (block: number | undefined, tokens: string[]) => {\n  const addressesString = `[\"${tokens.join('\",\"')}\"]`\n  const blockString = block ? `block: {number: ${block}}` : ``\n  return `tokens(\n      where: {id_in: ${addressesString}}\n      ${blockString}\n      orderBy: tradeVolumeUSD\n      orderDirection: desc\n    ) {\n      id\n      symbol\n      name\n      derivedBNB\n      derivedUSD\n      tradeVolumeUSD\n      totalTransactions\n      totalLiquidity\n    }\n  `\n}\n\nconst fetchTokenData = async (\n  block24h: number,\n  block48h: number,\n  block7d: number,\n  block14d: number,\n  tokenAddresses: string[],\n) => {\n  try {\n    const query = gql`\n      query tokens {\n        now: ${TOKEN_AT_BLOCK(null, tokenAddresses)}\n        oneDayAgo: ${TOKEN_AT_BLOCK(block24h, tokenAddresses)}\n        twoDaysAgo: ${TOKEN_AT_BLOCK(block48h, tokenAddresses)}\n        oneWeekAgo: ${TOKEN_AT_BLOCK(block7d, tokenAddresses)}\n        twoWeeksAgo: ${TOKEN_AT_BLOCK(block14d, tokenAddresses)}\n      }\n    `\n    const data = await request<TokenQueryResponse>(INFO_CLIENT, query)\n    return { data, error: false }\n  } catch (error) {\n    console.error('Failed to fetch token data', error)\n    return { error: true }\n  }\n}\n\n// Transforms tokens into \"0xADDRESS: { ...TokenFields }\" format and cast strings to numbers\nconst parseTokenData = (tokens?: TokenFields[]) => {\n  if (!tokens) {\n    return {}\n  }\n  return tokens.reduce((accum: { [address: string]: FormattedTokenFields }, tokenData) => {\n    const { derivedBNB, derivedUSD, tradeVolumeUSD, totalTransactions, totalLiquidity } = tokenData\n    accum[tokenData.id] = {\n      ...tokenData,\n      derivedBNB: parseFloat(derivedBNB),\n      derivedUSD: parseFloat(derivedUSD),\n      tradeVolumeUSD: parseFloat(tradeVolumeUSD),\n      totalTransactions: parseFloat(totalTransactions),\n      totalLiquidity: parseFloat(totalLiquidity),\n    }\n    return accum\n  }, {})\n}\n\ninterface TokenDatas {\n  error: boolean\n  data?: {\n    [address: string]: TokenData\n  }\n}\n\n/**\n * Fetch top addresses by volume\n */\nconst useFetchedTokenDatas = (tokenAddresses: string[]): TokenDatas => {\n  const [fetchState, setFetchState] = useState<TokenDatas>({ error: false })\n  const [t24h, t48h, t7d, t14d] = getDeltaTimestamps()\n  const { blocks, error: blockError } = useBlocksFromTimestamps([t24h, t48h, t7d, t14d])\n  const [block24h, block48h, block7d, block14d] = blocks ?? []\n  const bnbPrices = useBnbPrices()\n\n  useEffect(() => {\n    const fetch = async () => {\n      const { error, data } = await fetchTokenData(\n        block24h.number,\n        block48h.number,\n        block7d.number,\n        block14d.number,\n        tokenAddresses,\n      )\n      if (error) {\n        setFetchState({ error: true })\n      } else {\n        const parsed = parseTokenData(data?.now)\n        const parsed24 = parseTokenData(data?.oneDayAgo)\n        const parsed48 = parseTokenData(data?.twoDaysAgo)\n        const parsed7d = parseTokenData(data?.oneWeekAgo)\n        const parsed14d = parseTokenData(data?.twoWeeksAgo)\n\n        // Calculate data and format\n        const formatted = tokenAddresses.reduce((accum: { [address: string]: TokenData }, address) => {\n          const current: FormattedTokenFields | undefined = parsed[address]\n          const oneDay: FormattedTokenFields | undefined = parsed24[address]\n          const twoDays: FormattedTokenFields | undefined = parsed48[address]\n          const week: FormattedTokenFields | undefined = parsed7d[address]\n          const twoWeeks: FormattedTokenFields | undefined = parsed14d[address]\n\n          const [volumeUSD, volumeUSDChange] = getChangeForPeriod(\n            current?.tradeVolumeUSD,\n            oneDay?.tradeVolumeUSD,\n            twoDays?.tradeVolumeUSD,\n          )\n          const [volumeUSDWeek] = getChangeForPeriod(\n            current?.tradeVolumeUSD,\n            week?.tradeVolumeUSD,\n            twoWeeks?.tradeVolumeUSD,\n          )\n          const liquidityUSD = current ? current.totalLiquidity * current.derivedUSD : 0\n          const liquidityUSDOneDayAgo = oneDay ? oneDay.totalLiquidity * oneDay.derivedUSD : 0\n          const liquidityUSDChange = getPercentChange(liquidityUSD, liquidityUSDOneDayAgo)\n          const liquidityToken = current ? current.totalLiquidity : 0\n          // Prices of tokens for now, 24h ago and 7d ago\n          const priceUSD = current ? current.derivedBNB * bnbPrices.current : 0\n          const priceUSDOneDay = oneDay ? oneDay.derivedBNB * bnbPrices.oneDay : 0\n          const priceUSDWeek = week ? week.derivedBNB * bnbPrices.week : 0\n          const priceUSDChange = getPercentChange(priceUSD, priceUSDOneDay)\n          const priceUSDChangeWeek = getPercentChange(priceUSD, priceUSDWeek)\n          const txCount = getAmountChange(current?.totalTransactions, oneDay?.totalTransactions)\n\n          accum[address] = {\n            exists: !!current,\n            address,\n            name: current ? current.name : '',\n            symbol: current ? current.symbol : '',\n            volumeUSD,\n            volumeUSDChange,\n            volumeUSDWeek,\n            txCount,\n            liquidityUSD,\n            liquidityUSDChange,\n            liquidityToken,\n            priceUSD,\n            priceUSDChange,\n            priceUSDChangeWeek,\n          }\n\n          return accum\n        }, {})\n        setFetchState({ data: formatted, error: false })\n      }\n    }\n    const allBlocksAvailable = block24h?.number && block48h?.number && block7d?.number && block14d?.number\n    if (tokenAddresses.length > 0 && allBlocksAvailable && !blockError && bnbPrices) {\n      fetch()\n    }\n  }, [tokenAddresses, block24h, block48h, block7d, block14d, blockError, bnbPrices])\n\n  return fetchState\n}\n\nexport default useFetchedTokenDatas\n"]},"metadata":{},"sourceType":"module"}