{"ast":null,"code":"import React from'react';import{Card,CardBody,Text,WaitIcon}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{BetPosition}from'state/types';import useTheme from'hooks/useTheme';import{useGetIntervalSeconds}from'state/predictions/hooks';import{ROUND_BUFFER}from'state/predictions/config';import{formatRoundTime}from'../../helpers';import useCountdown from'../../hooks/useCountdown';import{RoundResultBox}from'../RoundResult';import MultiplierArrow from'./MultiplierArrow';import CardHeader,{getBorderBackground}from'./CardHeader';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SoonRoundCard=function SoonRoundCard(_ref){var round=_ref.round;var intervalSeconds=useGetIntervalSeconds();var _useCountdown=useCountdown(round.startTimestamp+intervalSeconds+ROUND_BUFFER),secondsRemaining=_useCountdown.secondsRemaining;var countdown=formatRoundTime(secondsRemaining);var _useTranslation=useTranslation(),t=_useTranslation.t;var _useTheme=useTheme(),theme=_useTheme.theme;return/*#__PURE__*/_jsxs(Card,{borderBackground:getBorderBackground(theme,'soon'),children:[/*#__PURE__*/_jsx(CardHeader,{status:\"soon\",icon:/*#__PURE__*/_jsx(WaitIcon,{mr:\"4px\",width:\"21px\"}),title:t('Later'),epoch:round.epoch}),/*#__PURE__*/_jsxs(CardBody,{p:\"16px\",children:[/*#__PURE__*/_jsx(MultiplierArrow,{isDisabled:true}),/*#__PURE__*/_jsx(RoundResultBox,{children:/*#__PURE__*/_jsxs(Text,{textAlign:\"center\",children:[/*#__PURE__*/_jsx(Text,{bold:true,children:t('Entry starts')}),/*#__PURE__*/_jsx(Text,{fontSize:\"24px\",bold:true,children:\"~\".concat(countdown)})]})}),/*#__PURE__*/_jsx(MultiplierArrow,{betPosition:BetPosition.BEAR,isDisabled:true})]})]});};export default SoonRoundCard;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/RoundCard/SoonRoundCard.tsx"],"names":["React","Card","CardBody","Text","WaitIcon","useTranslation","BetPosition","useTheme","useGetIntervalSeconds","ROUND_BUFFER","formatRoundTime","useCountdown","RoundResultBox","MultiplierArrow","CardHeader","getBorderBackground","SoonRoundCard","round","intervalSeconds","startTimestamp","secondsRemaining","countdown","t","theme","epoch","BEAR"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,QAAf,CAAyBC,IAAzB,CAA+BC,QAA/B,KAA+C,oBAA/C,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAAoBC,WAApB,KAAuC,aAAvC,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,OAASC,qBAAT,KAAsC,yBAAtC,CACA,OAASC,YAAT,KAA6B,0BAA7B,CACA,OAASC,eAAT,KAAgC,eAAhC,CACA,MAAOC,CAAAA,YAAP,KAAyB,0BAAzB,CACA,OAASC,cAAT,KAA+B,gBAA/B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,UAAP,EAAqBC,mBAArB,KAAgD,cAAhD,C,wFAMA,GAAMC,CAAAA,aAA2C,CAAG,QAA9CA,CAAAA,aAA8C,MAAe,IAAZC,CAAAA,KAAY,MAAZA,KAAY,CACjE,GAAMC,CAAAA,eAAe,CAAGV,qBAAqB,EAA7C,CACA,kBAA6BG,YAAY,CAACM,KAAK,CAACE,cAAN,CAAuBD,eAAvB,CAAyCT,YAA1C,CAAzC,CAAQW,gBAAR,eAAQA,gBAAR,CACA,GAAMC,CAAAA,SAAS,CAAGX,eAAe,CAACU,gBAAD,CAAjC,CACA,oBAAcf,cAAc,EAA5B,CAAQiB,CAAR,iBAAQA,CAAR,CACA,cAAkBf,QAAQ,EAA1B,CAAQgB,KAAR,WAAQA,KAAR,CAEA,mBACE,MAAC,IAAD,EAAM,gBAAgB,CAAER,mBAAmB,CAACQ,KAAD,CAAQ,MAAR,CAA3C,wBACE,KAAC,UAAD,EAAY,MAAM,CAAC,MAAnB,CAA0B,IAAI,cAAE,KAAC,QAAD,EAAU,EAAE,CAAC,KAAb,CAAmB,KAAK,CAAC,MAAzB,EAAhC,CAAoE,KAAK,CAAED,CAAC,CAAC,OAAD,CAA5E,CAAuF,KAAK,CAAEL,KAAK,CAACO,KAApG,EADF,cAEE,MAAC,QAAD,EAAU,CAAC,CAAC,MAAZ,wBACE,KAAC,eAAD,EAAiB,UAAU,KAA3B,EADF,cAEE,KAAC,cAAD,wBACE,MAAC,IAAD,EAAM,SAAS,CAAC,QAAhB,wBACE,KAAC,IAAD,EAAM,IAAI,KAAV,UAAYF,CAAC,CAAC,cAAD,CAAb,EADF,cAEE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,CAAsB,IAAI,KAA1B,qBACOD,SADP,GAFF,GADF,EAFF,cAUE,KAAC,eAAD,EAAiB,WAAW,CAAEf,WAAW,CAACmB,IAA1C,CAAgD,UAAU,KAA1D,EAVF,GAFF,GADF,CAiBD,CAxBD,CA0BA,cAAeT,CAAAA,aAAf","sourcesContent":["import React from 'react'\nimport { Card, CardBody, Text, WaitIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { NodeRound, BetPosition } from 'state/types'\nimport useTheme from 'hooks/useTheme'\nimport { useGetIntervalSeconds } from 'state/predictions/hooks'\nimport { ROUND_BUFFER } from 'state/predictions/config'\nimport { formatRoundTime } from '../../helpers'\nimport useCountdown from '../../hooks/useCountdown'\nimport { RoundResultBox } from '../RoundResult'\nimport MultiplierArrow from './MultiplierArrow'\nimport CardHeader, { getBorderBackground } from './CardHeader'\n\ninterface SoonRoundCardProps {\n  round: NodeRound\n}\n\nconst SoonRoundCard: React.FC<SoonRoundCardProps> = ({ round }) => {\n  const intervalSeconds = useGetIntervalSeconds()\n  const { secondsRemaining } = useCountdown(round.startTimestamp + intervalSeconds + ROUND_BUFFER)\n  const countdown = formatRoundTime(secondsRemaining)\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Card borderBackground={getBorderBackground(theme, 'soon')}>\n      <CardHeader status=\"soon\" icon={<WaitIcon mr=\"4px\" width=\"21px\" />} title={t('Later')} epoch={round.epoch} />\n      <CardBody p=\"16px\">\n        <MultiplierArrow isDisabled />\n        <RoundResultBox>\n          <Text textAlign=\"center\">\n            <Text bold>{t('Entry starts')}</Text>\n            <Text fontSize=\"24px\" bold>\n              {`~${countdown}`}\n            </Text>\n          </Text>\n        </RoundResultBox>\n        <MultiplierArrow betPosition={BetPosition.BEAR} isDisabled />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default SoonRoundCard\n"]},"metadata":{},"sourceType":"module"}