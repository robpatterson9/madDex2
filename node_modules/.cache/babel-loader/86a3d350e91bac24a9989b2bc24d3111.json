{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Text, useModal, Flex, Skeleton, Heading } from '@pancakeswap/uikit';\nimport BigNumber from 'bignumber.js';\nimport { useWeb3React } from '@web3-react/core';\nimport { PoolCategory } from 'config/constants/types';\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance';\nimport { useTranslation } from 'contexts/Localization';\nimport Balance from 'components/Balance';\nimport { BIG_ZERO } from 'utils/bigNumber';\nimport { ActionContainer, ActionTitles, ActionContent } from './styles';\nimport CollectModal from '../../PoolCard/Modals/CollectModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HarvestAction = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  earningTokenPrice\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const earnings = (userData === null || userData === void 0 ? void 0 : userData.pendingReward) ? new BigNumber(userData.pendingReward) : BIG_ZERO;\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals);\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals);\n  const hasEarnings = earnings.gt(0);\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals);\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3);\n  const isCompoundPool = sousId === 0;\n  const isBnbPool = poolCategory === PoolCategory.BINANCE;\n  const [onPresentCollect] = useModal( /*#__PURE__*/_jsxDEV(CollectModal, {\n    formattedBalance: formattedBalance,\n    fullBalance: fullBalance,\n    earningToken: earningToken,\n    earningsDollarValue: earningTokenDollarBalance,\n    sousId: sousId,\n    isBnbPool: isBnbPool,\n    isCompoundPool: isCompoundPool\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this));\n\n  const actionTitle = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"12px\",\n      bold: true,\n      color: \"secondary\",\n      as: \"span\",\n      textTransform: \"uppercase\",\n      children: [earningToken.symbol, ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"12px\",\n      bold: true,\n      color: \"textSubtle\",\n      as: \"span\",\n      textTransform: \"uppercase\",\n      children: t('Earned')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  if (!account) {\n    return /*#__PURE__*/_jsxDEV(ActionContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ActionTitles, {\n        children: actionTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionContent, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: true,\n          children: isCompoundPool ? t('Collect') : t('Harvest')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!userDataLoaded) {\n    return /*#__PURE__*/_jsxDEV(ActionContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ActionTitles, {\n        children: actionTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionContent, {\n        children: /*#__PURE__*/_jsxDEV(Skeleton, {\n          width: 180,\n          height: \"32px\",\n          marginTop: 14\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ActionContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ActionTitles, {\n      children: actionTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActionContent, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        flex: \"1\",\n        pt: \"16px\",\n        flexDirection: \"column\",\n        alignSelf: \"flex-start\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: hasEarnings ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Balance, {\n              lineHeight: \"1\",\n              bold: true,\n              fontSize: \"20px\",\n              decimals: 5,\n              value: earningTokenBalance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), earningTokenPrice > 0 && /*#__PURE__*/_jsxDEV(Balance, {\n              display: \"inline\",\n              fontSize: \"12px\",\n              color: \"textSubtle\",\n              decimals: 2,\n              prefix: \"~\",\n              value: earningTokenDollarBalance,\n              unit: \" USD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              color: \"textDisabled\",\n              children: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"12px\",\n              color: \"textDisabled\",\n              children: \"0 USD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: !hasEarnings,\n        onClick: onPresentCollect,\n        children: isCompoundPool ? t('Collect') : t('Harvest')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HarvestAction, \"2JpQqYChKLg+FKCDS6VD2RDHnNQ=\", false, function () {\n  return [useTranslation, useWeb3React, useModal];\n});\n\n_c = HarvestAction;\nexport default HarvestAction;\n\nvar _c;\n\n$RefreshReg$(_c, \"HarvestAction\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx"],"names":["React","Button","Text","useModal","Flex","Skeleton","Heading","BigNumber","useWeb3React","PoolCategory","formatNumber","getBalanceNumber","getFullDisplayBalance","useTranslation","Balance","BIG_ZERO","ActionContainer","ActionTitles","ActionContent","CollectModal","HarvestAction","sousId","poolCategory","earningToken","userData","userDataLoaded","earningTokenPrice","t","account","earnings","pendingReward","earningTokenBalance","decimals","earningTokenDollarBalance","multipliedBy","hasEarnings","gt","fullBalance","formattedBalance","isCompoundPool","isBnbPool","BINANCE","onPresentCollect","actionTitle","symbol"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,EAAiCC,IAAjC,EAAuCC,QAAvC,EAAiDC,OAAjD,QAAgE,oBAAhE;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,SAASC,YAAT,EAAuBC,gBAAvB,EAAyCC,qBAAzC,QAAsE,qBAAtE;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAGA,SAASC,eAAT,EAA0BC,YAA1B,EAAwCC,aAAxC,QAA6D,UAA7D;AACA,OAAOC,YAAP,MAAyB,oCAAzB;;;;AAMA,MAAMC,aAA0D,GAAG,CAAC;AAClEC,EAAAA,MADkE;AAElEC,EAAAA,YAFkE;AAGlEC,EAAAA,YAHkE;AAIlEC,EAAAA,QAJkE;AAKlEC,EAAAA,cALkE;AAMlEC,EAAAA;AANkE,CAAD,KAO7D;AAAA;;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAQd,cAAc,EAA5B;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAcpB,YAAY,EAAhC;AAEA,QAAMqB,QAAQ,GAAG,CAAAL,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEM,aAAV,IAA0B,IAAIvB,SAAJ,CAAciB,QAAQ,CAACM,aAAvB,CAA1B,GAAkEf,QAAnF;AACA,QAAMgB,mBAAmB,GAAGpB,gBAAgB,CAACkB,QAAD,EAAWN,YAAY,CAACS,QAAxB,CAA5C;AACA,QAAMC,yBAAyB,GAAGtB,gBAAgB,CAACkB,QAAQ,CAACK,YAAT,CAAsBR,iBAAtB,CAAD,EAA2CH,YAAY,CAACS,QAAxD,CAAlD;AACA,QAAMG,WAAW,GAAGN,QAAQ,CAACO,EAAT,CAAY,CAAZ,CAApB;AACA,QAAMC,WAAW,GAAGzB,qBAAqB,CAACiB,QAAD,EAAWN,YAAY,CAACS,QAAxB,CAAzC;AACA,QAAMM,gBAAgB,GAAG5B,YAAY,CAACqB,mBAAD,EAAsB,CAAtB,EAAyB,CAAzB,CAArC;AACA,QAAMQ,cAAc,GAAGlB,MAAM,KAAK,CAAlC;AACA,QAAMmB,SAAS,GAAGlB,YAAY,KAAKb,YAAY,CAACgC,OAAhD;AAEA,QAAM,CAACC,gBAAD,IAAqBvC,QAAQ,eACjC,QAAC,YAAD;AACE,IAAA,gBAAgB,EAAEmC,gBADpB;AAEE,IAAA,WAAW,EAAED,WAFf;AAGE,IAAA,YAAY,EAAEd,YAHhB;AAIE,IAAA,mBAAmB,EAAEU,yBAJvB;AAKE,IAAA,MAAM,EAAEZ,MALV;AAME,IAAA,SAAS,EAAEmB,SANb;AAOE,IAAA,cAAc,EAAED;AAPlB;AAAA;AAAA;AAAA;AAAA,UADiC,CAAnC;;AAYA,QAAMI,WAAW,gBACf;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAC,MAAf;AAAsB,MAAA,IAAI,MAA1B;AAA2B,MAAA,KAAK,EAAC,WAAjC;AAA6C,MAAA,EAAE,EAAC,MAAhD;AAAuD,MAAA,aAAa,EAAC,WAArE;AAAA,iBACGpB,YAAY,CAACqB,MADhB,EACwB,GADxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAC,MAAf;AAAsB,MAAA,IAAI,MAA1B;AAA2B,MAAA,KAAK,EAAC,YAAjC;AAA8C,MAAA,EAAE,EAAC,MAAjD;AAAwD,MAAA,aAAa,EAAC,WAAtE;AAAA,gBACGjB,CAAC,CAAC,QAAD;AADJ;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;;AAWA,MAAI,CAACC,OAAL,EAAc;AACZ,wBACE,QAAC,eAAD;AAAA,8BACE,QAAC,YAAD;AAAA,kBAAee;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAA,gCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,QAAQ,MAAhB;AAAA,oBAAkBJ,cAAc,GAAGZ,CAAC,CAAC,SAAD,CAAJ,GAAkBA,CAAC,CAAC,SAAD;AAAnD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAED,MAAI,CAACF,cAAL,EAAqB;AACnB,wBACE,QAAC,eAAD;AAAA,8BACE,QAAC,YAAD;AAAA,kBAAekB;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE,GAAjB;AAAsB,UAAA,MAAM,EAAC,MAA7B;AAAoC,UAAA,SAAS,EAAE;AAA/C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAED,sBACE,QAAC,eAAD;AAAA,4BACE,QAAC,YAAD;AAAA,gBAAeA;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAe,QAAA,EAAE,EAAC,MAAlB;AAAyB,QAAA,aAAa,EAAC,QAAvC;AAAgD,QAAA,SAAS,EAAC,YAA1D;AAAA,+BACE;AAAA,oBACGR,WAAW,gBACV;AAAA,oCACE,QAAC,OAAD;AAAS,cAAA,UAAU,EAAC,GAApB;AAAwB,cAAA,IAAI,MAA5B;AAA6B,cAAA,QAAQ,EAAC,MAAtC;AAA6C,cAAA,QAAQ,EAAE,CAAvD;AAA0D,cAAA,KAAK,EAAEJ;AAAjE;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGL,iBAAiB,GAAG,CAApB,iBACC,QAAC,OAAD;AACE,cAAA,OAAO,EAAC,QADV;AAEE,cAAA,QAAQ,EAAC,MAFX;AAGE,cAAA,KAAK,EAAC,YAHR;AAIE,cAAA,QAAQ,EAAE,CAJZ;AAKE,cAAA,MAAM,EAAC,GALT;AAME,cAAA,KAAK,EAAEO,yBANT;AAOE,cAAA,IAAI,EAAC;AAPP;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA,0BADU,gBAgBV;AAAA,oCACE,QAAC,OAAD;AAAS,cAAA,KAAK,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD;AAAM,cAAA,QAAQ,EAAC,MAAf;AAAsB,cAAA,KAAK,EAAC,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAjBJ;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eA4BE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,CAACE,WAAnB;AAAgC,QAAA,OAAO,EAAEO,gBAAzC;AAAA,kBACGH,cAAc,GAAGZ,CAAC,CAAC,SAAD,CAAJ,GAAkBA,CAAC,CAAC,SAAD;AADpC;AAAA;AAAA;AAAA;AAAA,cA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CAvGD;;GAAMP,a;UAQUP,c,EACML,Y,EAWOL,Q;;;KApBvBiB,a;AAyGN,eAAeA,aAAf","sourcesContent":["import React from 'react'\nimport { Button, Text, useModal, Flex, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { DeserializedPool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface HarvestActionProps extends DeserializedPool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const actionTitle = (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n          {isCompoundPool ? t('Collect') : t('Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n"]},"metadata":{},"sourceType":"module"}