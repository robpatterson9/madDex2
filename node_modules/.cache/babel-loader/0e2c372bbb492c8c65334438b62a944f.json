{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Predictions/Leaderboard/components/Results/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Box, Button, Grid, Flex, useMatchBreakpoints, AutoRenewIcon } from '@pancakeswap/uikit';\nimport { useAppDispatch } from 'state';\nimport { useGetLeaderboardHasMoreResults, useGetLeaderboardLoadingState, useGetLeaderboardResults, useGetLeaderboardSkip } from 'state/predictions/hooks';\nimport { LeaderboardLoadingState } from 'state/types';\nimport { filterNextPageLeaderboard } from 'state/predictions';\nimport { LEADERBOARD_RESULTS_PER_PAGE } from 'state/predictions/helpers';\nimport { useTranslation } from 'contexts/Localization';\nimport Container from 'components/Layout/Container';\nimport DesktopResults from './DesktopResults';\nimport MobileResults from './MobileResults';\nimport RankingCard from './RankingCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Results = () => {\n  _s();\n\n  const {\n    isDesktop\n  } = useMatchBreakpoints();\n  const {\n    t\n  } = useTranslation();\n  const [first, second, third, ...rest] = useGetLeaderboardResults();\n  const leaderboardLoadingState = useGetLeaderboardLoadingState();\n  const isLoading = leaderboardLoadingState === LeaderboardLoadingState.LOADING;\n  const currentSkip = useGetLeaderboardSkip();\n  const hasMoreResults = useGetLeaderboardHasMoreResults();\n  const dispatch = useAppDispatch();\n\n  const handleClick = () => {\n    dispatch(filterNextPageLeaderboard(currentSkip + LEADERBOARD_RESULTS_PER_PAGE));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      mb: \"16px\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        gridGap: ['16px', null, null, null, null, '24px'],\n        gridTemplateColumns: ['1fr', null, null, null, null, 'repeat(3, 1fr)'],\n        children: [/*#__PURE__*/_jsxDEV(RankingCard, {\n          rank: 1,\n          user: first\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RankingCard, {\n          rank: 2,\n          user: second\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RankingCard, {\n          rank: 3,\n          user: third\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), isDesktop ? /*#__PURE__*/_jsxDEV(DesktopResults, {\n      results: rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(MobileResults, {\n      results: rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 56\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      mb: \"40px\",\n      justifyContent: \"center\",\n      children: hasMoreResults && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        isLoading: isLoading,\n        endIcon: isLoading ? /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n          spin: true,\n          color: \"currentColor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 34\n        }, this) : undefined,\n        onClick: handleClick,\n        children: isLoading ? t('Loading...') : t('View More')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Results, \"sWxn6cBo1uH5xfKsr4RQP4NTbiU=\", false, function () {\n  return [useMatchBreakpoints, useTranslation, useGetLeaderboardResults, useGetLeaderboardLoadingState, useGetLeaderboardSkip, useGetLeaderboardHasMoreResults, useAppDispatch];\n});\n\n_c = Results;\nexport default Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/Leaderboard/components/Results/index.tsx"],"names":["React","Box","Button","Grid","Flex","useMatchBreakpoints","AutoRenewIcon","useAppDispatch","useGetLeaderboardHasMoreResults","useGetLeaderboardLoadingState","useGetLeaderboardResults","useGetLeaderboardSkip","LeaderboardLoadingState","filterNextPageLeaderboard","LEADERBOARD_RESULTS_PER_PAGE","useTranslation","Container","DesktopResults","MobileResults","RankingCard","Results","isDesktop","t","first","second","third","rest","leaderboardLoadingState","isLoading","LOADING","currentSkip","hasMoreResults","dispatch","handleClick","undefined"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Box, Button, Grid, Flex, useMatchBreakpoints, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useAppDispatch } from 'state'\nimport {\n  useGetLeaderboardHasMoreResults,\n  useGetLeaderboardLoadingState,\n  useGetLeaderboardResults,\n  useGetLeaderboardSkip,\n} from 'state/predictions/hooks'\nimport { LeaderboardLoadingState } from 'state/types'\nimport { filterNextPageLeaderboard } from 'state/predictions'\nimport { LEADERBOARD_RESULTS_PER_PAGE } from 'state/predictions/helpers'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport DesktopResults from './DesktopResults'\nimport MobileResults from './MobileResults'\nimport RankingCard from './RankingCard'\n\nconst Results = () => {\n  const { isDesktop } = useMatchBreakpoints()\n  const { t } = useTranslation()\n  const [first, second, third, ...rest] = useGetLeaderboardResults()\n  const leaderboardLoadingState = useGetLeaderboardLoadingState()\n  const isLoading = leaderboardLoadingState === LeaderboardLoadingState.LOADING\n  const currentSkip = useGetLeaderboardSkip()\n  const hasMoreResults = useGetLeaderboardHasMoreResults()\n  const dispatch = useAppDispatch()\n\n  const handleClick = () => {\n    dispatch(filterNextPageLeaderboard(currentSkip + LEADERBOARD_RESULTS_PER_PAGE))\n  }\n\n  return (\n    <Box>\n      <Container mb=\"16px\">\n        <Grid\n          gridGap={['16px', null, null, null, null, '24px']}\n          gridTemplateColumns={['1fr', null, null, null, null, 'repeat(3, 1fr)']}\n        >\n          <RankingCard rank={1} user={first} />\n          <RankingCard rank={2} user={second} />\n          <RankingCard rank={3} user={third} />\n        </Grid>\n      </Container>\n      {isDesktop ? <DesktopResults results={rest} /> : <MobileResults results={rest} />}\n      <Flex mb=\"40px\" justifyContent=\"center\">\n        {hasMoreResults && (\n          <Button\n            variant=\"secondary\"\n            isLoading={isLoading}\n            endIcon={isLoading ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n            onClick={handleClick}\n          >\n            {isLoading ? t('Loading...') : t('View More')}\n          </Button>\n        )}\n      </Flex>\n    </Box>\n  )\n}\n\nexport default Results\n"]},"metadata":{},"sourceType":"module"}