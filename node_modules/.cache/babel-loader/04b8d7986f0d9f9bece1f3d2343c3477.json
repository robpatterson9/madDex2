{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */function useLast(value,filterFn){var _useState=useState(filterFn&&filterFn(value)?value:undefined),_useState2=_slicedToArray(_useState,2),last=_useState2[0],setLast=_useState2[1];useEffect(function(){setLast(function(prev){var shouldUse=filterFn?filterFn(value):true;if(shouldUse)return value;return prev;});},[filterFn,value]);return last;}function isDefined(x){return x!==null&&x!==undefined;}/**\n * Returns the last truthy value of type T\n * @param value changing value\n */function useLastTruthy(value){return useLast(value,isDefined);}export default useLastTruthy;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/hooks/useLast.ts"],"names":["useEffect","useState","useLast","value","filterFn","undefined","last","setLast","prev","shouldUse","isDefined","x","useLastTruthy"],"mappings":"wJAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA;AACA;AACA;AACA;AACA,GACA,QAASC,CAAAA,OAAT,CACEC,KADF,CAEEC,QAFF,CAGwB,CACtB,cAAwBH,QAAQ,CAAuBG,QAAQ,EAAIA,QAAQ,CAACD,KAAD,CAApB,CAA8BA,KAA9B,CAAsCE,SAA7D,CAAhC,wCAAOC,IAAP,eAAaC,OAAb,eACAP,SAAS,CAAC,UAAM,CACdO,OAAO,CAAC,SAACC,IAAD,CAAU,CAChB,GAAMC,CAAAA,SAAkB,CAAGL,QAAQ,CAAGA,QAAQ,CAACD,KAAD,CAAX,CAAqB,IAAxD,CACA,GAAIM,SAAJ,CAAe,MAAON,CAAAA,KAAP,CACf,MAAOK,CAAAA,IAAP,CACD,CAJM,CAAP,CAKD,CANQ,CAMN,CAACJ,QAAD,CAAWD,KAAX,CANM,CAAT,CAOA,MAAOG,CAAAA,IAAP,CACD,CAED,QAASI,CAAAA,SAAT,CAAsBC,CAAtB,CAAuD,CACrD,MAAOA,CAAAA,CAAC,GAAK,IAAN,EAAcA,CAAC,GAAKN,SAA3B,CACD,CAED;AACA;AACA;AACA,GACA,QAASO,CAAAA,aAAT,CAA0BT,KAA1B,CAA6E,CAC3E,MAAOD,CAAAA,OAAO,CAACC,KAAD,CAAQO,SAAR,CAAd,CACD,CAED,cAAeE,CAAAA,aAAf","sourcesContent":["import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n"]},"metadata":{},"sourceType":"module"}