{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from'react';import{Flex,Radio,Text}from'@pancakeswap/uikit';import styled from'styled-components';import{useTranslation}from'contexts/Localization';import{ProposalState}from'state/types';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledFilters=styled(Flex).attrs({alignItems:'center'})(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  border-bottom: 1px solid \",\";\\n  padding: 16px 24px;\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.cardBorder;});var FilterLabel=styled.label(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  cursor: pointer;\\n  display: flex;\\n  margin-right: 16px;\\n\"])));var options=[{value:ProposalState.ACTIVE,label:'Vote Now'},{value:ProposalState.PENDING,label:'Soon'},{value:ProposalState.CLOSED,label:'Closed'}];var Filters=function Filters(_ref2){var filterState=_ref2.filterState,onFilterChange=_ref2.onFilterChange,isLoading=_ref2.isLoading;var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/_jsx(StyledFilters,{children:options.map(function(_ref3){var value=_ref3.value,label=_ref3.label;var handleChange=function handleChange(evt){var radioValue=evt.currentTarget.value;onFilterChange(radioValue);};return/*#__PURE__*/_jsxs(FilterLabel,{children:[/*#__PURE__*/_jsx(Radio,{scale:\"sm\",value:value,checked:filterState===value,onChange:handleChange,disabled:isLoading}),/*#__PURE__*/_jsx(Text,{ml:\"8px\",children:t(label)})]},label);})});};export default Filters;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Voting/components/Proposals/Filters.tsx"],"names":["React","Flex","Radio","Text","styled","useTranslation","ProposalState","StyledFilters","attrs","alignItems","theme","colors","cardBorder","FilterLabel","label","options","value","ACTIVE","PENDING","CLOSED","Filters","filterState","onFilterChange","isLoading","t","map","handleChange","evt","radioValue","currentTarget"],"mappings":"6MAAA,MAAOA,CAAAA,KAAP,KAAmC,OAAnC,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,IAAtB,KAAkC,oBAAlC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,aAAT,KAA8B,aAA9B,C,wFAQA,GAAMC,CAAAA,aAAa,CAAGH,MAAM,CAACH,IAAD,CAAN,CAAaO,KAAb,CAAmB,CAAEC,UAAU,CAAE,QAAd,CAAnB,CAAH,2HACU,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,MAAN,CAAaC,UAA5B,EADV,CAAnB,CAKA,GAAMC,CAAAA,WAAW,CAAGT,MAAM,CAACU,KAAV,0JAAjB,CAOA,GAAMC,CAAAA,OAAO,CAAG,CACd,CAAEC,KAAK,CAAEV,aAAa,CAACW,MAAvB,CAA+BH,KAAK,CAAE,UAAtC,CADc,CAEd,CAAEE,KAAK,CAAEV,aAAa,CAACY,OAAvB,CAAgCJ,KAAK,CAAE,MAAvC,CAFc,CAGd,CAAEE,KAAK,CAAEV,aAAa,CAACa,MAAvB,CAA+BL,KAAK,CAAE,QAAtC,CAHc,CAAhB,CAMA,GAAMM,CAAAA,OAA+B,CAAG,QAAlCA,CAAAA,OAAkC,OAAgD,IAA7CC,CAAAA,WAA6C,OAA7CA,WAA6C,CAAhCC,cAAgC,OAAhCA,cAAgC,CAAhBC,SAAgB,OAAhBA,SAAgB,CACtF,oBAAclB,cAAc,EAA5B,CAAQmB,CAAR,iBAAQA,CAAR,CAEA,mBACE,KAAC,aAAD,WACGT,OAAO,CAACU,GAAR,CAAY,eAAsB,IAAnBT,CAAAA,KAAmB,OAAnBA,KAAmB,CAAZF,KAAY,OAAZA,KAAY,CACjC,GAAMY,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,GAAD,CAAwC,CAC3D,GAAeC,CAAAA,UAAf,CAA8BD,GAAG,CAACE,aAAlC,CAAQb,KAAR,CACAM,cAAc,CAACM,UAAD,CAAd,CACD,CAHD,CAKA,mBACE,MAAC,WAAD,yBACE,KAAC,KAAD,EACE,KAAK,CAAC,IADR,CAEE,KAAK,CAAEZ,KAFT,CAGE,OAAO,CAAEK,WAAW,GAAKL,KAH3B,CAIE,QAAQ,CAAEU,YAJZ,CAKE,QAAQ,CAAEH,SALZ,EADF,cAQE,KAAC,IAAD,EAAM,EAAE,CAAC,KAAT,UAAgBC,CAAC,CAACV,KAAD,CAAjB,EARF,GAAkBA,KAAlB,CADF,CAYD,CAlBA,CADH,EADF,CAuBD,CA1BD,CA4BA,cAAeM,CAAAA,OAAf","sourcesContent":["import React, { ChangeEvent } from 'react'\nimport { Flex, Radio, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { ProposalState } from 'state/types'\n\ninterface FiltersProps {\n  filterState: ProposalState\n  onFilterChange: (filterState: ProposalState) => void\n  isLoading: boolean\n}\n\nconst StyledFilters = styled(Flex).attrs({ alignItems: 'center' })`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 16px 24px;\n`\n\nconst FilterLabel = styled.label`\n  align-items: center;\n  cursor: pointer;\n  display: flex;\n  margin-right: 16px;\n`\n\nconst options = [\n  { value: ProposalState.ACTIVE, label: 'Vote Now' },\n  { value: ProposalState.PENDING, label: 'Soon' },\n  { value: ProposalState.CLOSED, label: 'Closed' },\n]\n\nconst Filters: React.FC<FiltersProps> = ({ filterState, onFilterChange, isLoading }) => {\n  const { t } = useTranslation()\n\n  return (\n    <StyledFilters>\n      {options.map(({ value, label }) => {\n        const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n          const { value: radioValue } = evt.currentTarget\n          onFilterChange(radioValue as ProposalState)\n        }\n\n        return (\n          <FilterLabel key={label}>\n            <Radio\n              scale=\"sm\"\n              value={value}\n              checked={filterState === value}\n              onChange={handleChange}\n              disabled={isLoading}\n            />\n            <Text ml=\"8px\">{t(label)}</Text>\n          </FilterLabel>\n        )\n      })}\n    </StyledFilters>\n  )\n}\n\nexport default Filters\n"]},"metadata":{},"sourceType":"module"}