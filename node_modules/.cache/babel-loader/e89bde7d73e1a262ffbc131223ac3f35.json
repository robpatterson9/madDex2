{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{Box,Flex,Text,SearchIcon,Link}from'@pancakeswap/uikit';import{getBscScanLink}from'utils';import{useTranslation}from'contexts/Localization';import useActiveWeb3React from'hooks/useActiveWeb3React';import ExpandableCard from'./ExpandableCard';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LongTextContainer=styled(Text)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  max-width: 120px;\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n\"])));var DetailsCard=function DetailsCard(_ref){var contractAddress=_ref.contractAddress,ipfsJson=_ref.ipfsJson;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var content=/*#__PURE__*/_jsxs(Box,{p:\"24px\",children:[/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",mb:\"16px\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",bold:true,textTransform:\"uppercase\",children:t('Contract address')}),/*#__PURE__*/_jsx(Link,{external:true,href:getBscScanLink(contractAddress,'address',chainId),children:/*#__PURE__*/_jsx(LongTextContainer,{bold:true,children:contractAddress})})]}),ipfsJson&&/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",bold:true,textTransform:\"uppercase\",children:\"IPFS JSON\"}),/*#__PURE__*/_jsx(Link,{external:true,href:ipfsJson,children:/*#__PURE__*/_jsx(LongTextContainer,{bold:true,children:ipfsJson})})]})]});return/*#__PURE__*/_jsx(ExpandableCard,{title:t('Details'),icon:/*#__PURE__*/_jsx(SearchIcon,{width:\"24px\",height:\"24px\"}),content:content});};export default DetailsCard;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Collection/IndividualNFTPage/DetailsCard.tsx"],"names":["React","styled","Box","Flex","Text","SearchIcon","Link","getBscScanLink","useTranslation","useActiveWeb3React","ExpandableCard","LongTextContainer","DetailsCard","contractAddress","ipfsJson","t","chainId","content"],"mappings":"4LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,GAAT,CAAcC,IAAd,CAAoBC,IAApB,CAA0BC,UAA1B,CAAsCC,IAAtC,KAAkD,oBAAlD,CACA,OAASC,cAAT,KAA+B,OAA/B,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,0BAA/B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,C,wFAOA,GAAMC,CAAAA,iBAAiB,CAAGV,MAAM,CAACG,IAAD,CAAT,iKAAvB,CAOA,GAAMQ,CAAAA,WAAuC,CAAG,QAA1CA,CAAAA,WAA0C,MAAmC,IAAhCC,CAAAA,eAAgC,MAAhCA,eAAgC,CAAfC,QAAe,MAAfA,QAAe,CACjF,oBAAcN,cAAc,EAA5B,CAAQO,CAAR,iBAAQA,CAAR,CACA,wBAAoBN,kBAAkB,EAAtC,CAAQO,OAAR,qBAAQA,OAAR,CACA,GAAMC,CAAAA,OAAO,cACX,MAAC,GAAD,EAAK,CAAC,CAAC,MAAP,wBACE,MAAC,IAAD,EAAM,cAAc,CAAC,eAArB,CAAqC,UAAU,CAAC,QAAhD,CAAyD,EAAE,CAAC,MAA5D,wBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,CAAsB,KAAK,CAAC,YAA5B,CAAyC,IAAI,KAA7C,CAA8C,aAAa,CAAC,WAA5D,UACGF,CAAC,CAAC,kBAAD,CADJ,EADF,cAIE,KAAC,IAAD,EAAM,QAAQ,KAAd,CAAe,IAAI,CAAER,cAAc,CAACM,eAAD,CAAkB,SAAlB,CAA6BG,OAA7B,CAAnC,uBACE,KAAC,iBAAD,EAAmB,IAAI,KAAvB,UAAyBH,eAAzB,EADF,EAJF,GADF,CASGC,QAAQ,eACP,MAAC,IAAD,EAAM,cAAc,CAAC,eAArB,CAAqC,UAAU,CAAC,QAAhD,wBACE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,CAAsB,KAAK,CAAC,YAA5B,CAAyC,IAAI,KAA7C,CAA8C,aAAa,CAAC,WAA5D,uBADF,cAIE,KAAC,IAAD,EAAM,QAAQ,KAAd,CAAe,IAAI,CAAEA,QAArB,uBACE,KAAC,iBAAD,EAAmB,IAAI,KAAvB,UAAyBA,QAAzB,EADF,EAJF,GAVJ,GADF,CAsBA,mBAAO,KAAC,cAAD,EAAgB,KAAK,CAAEC,CAAC,CAAC,SAAD,CAAxB,CAAqC,IAAI,cAAE,KAAC,UAAD,EAAY,KAAK,CAAC,MAAlB,CAAyB,MAAM,CAAC,MAAhC,EAA3C,CAAsF,OAAO,CAAEE,OAA/F,EAAP,CACD,CA1BD,CA4BA,cAAeL,CAAAA,WAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Text, SearchIcon, Link } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport ExpandableCard from './ExpandableCard'\n\ninterface DetailsCardProps {\n  contractAddress: string\n  ipfsJson: string\n}\n\nconst LongTextContainer = styled(Text)`\n  max-width: 120px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nconst DetailsCard: React.FC<DetailsCardProps> = ({ contractAddress, ipfsJson }) => {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const content = (\n    <Box p=\"24px\">\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n        <Text fontSize=\"12px\" color=\"textSubtle\" bold textTransform=\"uppercase\">\n          {t('Contract address')}\n        </Text>\n        <Link external href={getBscScanLink(contractAddress, 'address', chainId)}>\n          <LongTextContainer bold>{contractAddress}</LongTextContainer>\n        </Link>\n      </Flex>\n      {ipfsJson && (\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Text fontSize=\"12px\" color=\"textSubtle\" bold textTransform=\"uppercase\">\n            IPFS JSON\n          </Text>\n          <Link external href={ipfsJson}>\n            <LongTextContainer bold>{ipfsJson}</LongTextContainer>\n          </Link>\n        </Flex>\n      )}\n    </Box>\n  )\n  return <ExpandableCard title={t('Details')} icon={<SearchIcon width=\"24px\" height=\"24px\" />} content={content} />\n}\n\nexport default DetailsCard\n"]},"metadata":{},"sourceType":"module"}