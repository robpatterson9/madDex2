{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from'react';import{Card,CardBody,Text,Flex,BlockIcon,LinkExternal}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{BetPosition}from'state/types';import useTheme from'hooks/useTheme';import ReclaimPositionButton from'../ReclaimPositionButton';import useIsRefundable from'../../hooks/useIsRefundable';import{RoundResultBox}from'../RoundResult';import MultiplierArrow from'./MultiplierArrow';import CardHeader,{getBorderBackground}from'./CardHeader';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CanceledRoundCard=function CanceledRoundCard(_ref){var round=_ref.round;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useTheme=useTheme(),theme=_useTheme.theme;var _useIsRefundable=useIsRefundable(round.epoch),isRefundable=_useIsRefundable.isRefundable,setIsRefundable=_useIsRefundable.setIsRefundable;var epoch=round.epoch;var handleSuccess=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsRefundable(false);case 1:case\"end\":return _context.stop();}}},_callee);}));return function handleSuccess(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(Card,{borderBackground:getBorderBackground(theme,'canceled'),children:[/*#__PURE__*/_jsx(CardHeader,{status:\"canceled\",icon:/*#__PURE__*/_jsx(BlockIcon,{mr:\"4px\",width:\"21px\"}),title:t('Canceled'),epoch:round.epoch}),/*#__PURE__*/_jsxs(CardBody,{p:\"16px\",children:[/*#__PURE__*/_jsx(MultiplierArrow,{isDisabled:true}),/*#__PURE__*/_jsx(RoundResultBox,{children:/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Text,{bold:true,color:isRefundable?'text':'textDisabled',children:t('Round Canceled')}),isRefundable&&/*#__PURE__*/_jsx(ReclaimPositionButton,{epoch:epoch,onSuccess:handleSuccess,width:\"100%\",my:\"8px\"}),/*#__PURE__*/_jsx(LinkExternal,{href:\"https://docs.pancakeswap.finance/products/prediction\",external:true,children:t('Learn More')})]})}),/*#__PURE__*/_jsx(MultiplierArrow,{betPosition:BetPosition.BEAR,isDisabled:true})]})]});};export default CanceledRoundCard;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/RoundCard/CanceledRoundCard.tsx"],"names":["React","Card","CardBody","Text","Flex","BlockIcon","LinkExternal","useTranslation","BetPosition","useTheme","ReclaimPositionButton","useIsRefundable","RoundResultBox","MultiplierArrow","CardHeader","getBorderBackground","CanceledRoundCard","round","t","theme","epoch","isRefundable","setIsRefundable","handleSuccess","BEAR"],"mappings":"6SAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,QAAf,CAAyBC,IAAzB,CAA+BC,IAA/B,CAAqCC,SAArC,CAAgDC,YAAhD,KAAoE,oBAApE,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAAoBC,WAApB,KAAuC,aAAvC,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,MAAOC,CAAAA,qBAAP,KAAkC,0BAAlC,CACA,MAAOC,CAAAA,eAAP,KAA4B,6BAA5B,CACA,OAASC,cAAT,KAA+B,gBAA/B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,UAAP,EAAqBC,mBAArB,KAAgD,cAAhD,C,wFAMA,GAAMC,CAAAA,iBAAmD,CAAG,QAAtDA,CAAAA,iBAAsD,MAAe,IAAZC,CAAAA,KAAY,MAAZA,KAAY,CACzE,oBAAcV,cAAc,EAA5B,CAAQW,CAAR,iBAAQA,CAAR,CACA,cAAkBT,QAAQ,EAA1B,CAAQU,KAAR,WAAQA,KAAR,CACA,qBAA0CR,eAAe,CAACM,KAAK,CAACG,KAAP,CAAzD,CAAQC,YAAR,kBAAQA,YAAR,CAAsBC,eAAtB,kBAAsBA,eAAtB,CACA,GAAQF,CAAAA,KAAR,CAAkBH,KAAlB,CAAQG,KAAR,CAEA,GAAMG,CAAAA,aAAa,2FAAG,mIACpBD,eAAe,CAAC,KAAD,CAAf,CADoB,sDAAH,kBAAbC,CAAAA,aAAa,2CAAnB,CAIA,mBACE,MAAC,IAAD,EAAM,gBAAgB,CAAER,mBAAmB,CAACI,KAAD,CAAQ,UAAR,CAA3C,wBACE,KAAC,UAAD,EACE,MAAM,CAAC,UADT,CAEE,IAAI,cAAE,KAAC,SAAD,EAAW,EAAE,CAAC,KAAd,CAAoB,KAAK,CAAC,MAA1B,EAFR,CAGE,KAAK,CAAED,CAAC,CAAC,UAAD,CAHV,CAIE,KAAK,CAAED,KAAK,CAACG,KAJf,EADF,cAOE,MAAC,QAAD,EAAU,CAAC,CAAC,MAAZ,wBACE,KAAC,eAAD,EAAiB,UAAU,KAA3B,EADF,cAEE,KAAC,cAAD,wBACE,MAAC,IAAD,EAAM,aAAa,CAAC,QAApB,CAA6B,UAAU,CAAC,QAAxC,wBACE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,KAAK,CAAEC,YAAY,CAAG,MAAH,CAAY,cAA1C,UACGH,CAAC,CAAC,gBAAD,CADJ,EADF,CAIGG,YAAY,eAAI,KAAC,qBAAD,EAAuB,KAAK,CAAED,KAA9B,CAAqC,SAAS,CAAEG,aAAhD,CAA+D,KAAK,CAAC,MAArE,CAA4E,EAAE,CAAC,KAA/E,EAJnB,cAKE,KAAC,YAAD,EAAc,IAAI,CAAC,sDAAnB,CAA0E,QAAQ,KAAlF,UACGL,CAAC,CAAC,YAAD,CADJ,EALF,GADF,EAFF,cAaE,KAAC,eAAD,EAAiB,WAAW,CAAEV,WAAW,CAACgB,IAA1C,CAAgD,UAAU,KAA1D,EAbF,GAPF,GADF,CAyBD,CAnCD,CAqCA,cAAeR,CAAAA,iBAAf","sourcesContent":["import React from 'react'\nimport { Card, CardBody, Text, Flex, BlockIcon, LinkExternal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { NodeRound, BetPosition } from 'state/types'\nimport useTheme from 'hooks/useTheme'\nimport ReclaimPositionButton from '../ReclaimPositionButton'\nimport useIsRefundable from '../../hooks/useIsRefundable'\nimport { RoundResultBox } from '../RoundResult'\nimport MultiplierArrow from './MultiplierArrow'\nimport CardHeader, { getBorderBackground } from './CardHeader'\n\ninterface CanceledRoundCardProps {\n  round: NodeRound\n}\n\nconst CanceledRoundCard: React.FC<CanceledRoundCardProps> = ({ round }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { isRefundable, setIsRefundable } = useIsRefundable(round.epoch)\n  const { epoch } = round\n\n  const handleSuccess = async () => {\n    setIsRefundable(false)\n  }\n\n  return (\n    <Card borderBackground={getBorderBackground(theme, 'canceled')}>\n      <CardHeader\n        status=\"canceled\"\n        icon={<BlockIcon mr=\"4px\" width=\"21px\" />}\n        title={t('Canceled')}\n        epoch={round.epoch}\n      />\n      <CardBody p=\"16px\">\n        <MultiplierArrow isDisabled />\n        <RoundResultBox>\n          <Flex flexDirection=\"column\" alignItems=\"center\">\n            <Text bold color={isRefundable ? 'text' : 'textDisabled'}>\n              {t('Round Canceled')}\n            </Text>\n            {isRefundable && <ReclaimPositionButton epoch={epoch} onSuccess={handleSuccess} width=\"100%\" my=\"8px\" />}\n            <LinkExternal href=\"https://docs.pancakeswap.finance/products/prediction\" external>\n              {t('Learn More')}\n            </LinkExternal>\n          </Flex>\n        </RoundResultBox>\n        <MultiplierArrow betPosition={BetPosition.BEAR} isDisabled />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default CanceledRoundCard\n"]},"metadata":{},"sourceType":"module"}