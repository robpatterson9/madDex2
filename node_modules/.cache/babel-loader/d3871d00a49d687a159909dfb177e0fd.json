{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import BigNumber from'bignumber.js';import{Button,Flex,Heading}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{useAppDispatch}from'state';import{fetchFarmUserDataAsync}from'state/farms';import useToast from'hooks/useToast';import{getBalanceAmount}from'utils/formatBalance';import{BIG_ZERO}from'utils/bigNumber';import{useWeb3React}from'@web3-react/core';import{usePriceCakeBusd}from'state/farms/hooks';import Balance from'components/Balance';import useHarvestFarm from'../../hooks/useHarvestFarm';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var HarvestAction=function HarvestAction(_ref){var earnings=_ref.earnings,pid=_ref.pid;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useToast=useToast(),toastSuccess=_useToast.toastSuccess,toastError=_useToast.toastError;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pendingTx=_useState2[0],setPendingTx=_useState2[1];var _useHarvestFarm=useHarvestFarm(pid),onReward=_useHarvestFarm.onReward;var cakePrice=usePriceCakeBusd();var dispatch=useAppDispatch();var rawEarningsBalance=account?getBalanceAmount(earnings):BIG_ZERO;var displayBalance=rawEarningsBalance.toFixed(3,BigNumber.ROUND_DOWN);var earningsBusd=rawEarningsBalance?rawEarningsBalance.multipliedBy(cakePrice).toNumber():0;return/*#__PURE__*/_jsxs(Flex,{mb:\"8px\",justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",alignItems:\"flex-start\",children:[/*#__PURE__*/_jsx(Heading,{color:rawEarningsBalance.eq(0)?'textDisabled':'text',children:displayBalance}),earningsBusd>0&&/*#__PURE__*/_jsx(Balance,{fontSize:\"12px\",color:\"textSubtle\",decimals:2,value:earningsBusd,unit:\" USD\",prefix:\"~\"})]}),/*#__PURE__*/_jsx(Button,{disabled:rawEarningsBalance.eq(0)||pendingTx,onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setPendingTx(true);_context.prev=1;_context.next=4;return onReward();case 4:toastSuccess(\"\".concat(t('Harvested'),\"!\"),t('Your %symbol% earnings have been sent to your wallet!',{symbol:'CAKE'}));_context.next=11;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](1);toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));console.error(_context.t0);case 11:_context.prev=11;setPendingTx(false);return _context.finish(11);case 14:dispatch(fetchFarmUserDataAsync({account:account,pids:[pid]}));case 15:case\"end\":return _context.stop();}}},_callee,null,[[1,7,11,14]]);})),children:t('Harvest')})]});};export default HarvestAction;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Farms/components/FarmCard/HarvestAction.tsx"],"names":["React","useState","BigNumber","Button","Flex","Heading","useTranslation","useAppDispatch","fetchFarmUserDataAsync","useToast","getBalanceAmount","BIG_ZERO","useWeb3React","usePriceCakeBusd","Balance","useHarvestFarm","HarvestAction","earnings","pid","account","toastSuccess","toastError","t","pendingTx","setPendingTx","onReward","cakePrice","dispatch","rawEarningsBalance","displayBalance","toFixed","ROUND_DOWN","earningsBusd","multipliedBy","toNumber","eq","symbol","console","error","pids"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport useToast from 'hooks/useToast'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useWeb3React } from '@web3-react/core'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Balance from 'components/Balance'\nimport useHarvestFarm from '../../hooks/useHarvestFarm'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const { account } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvestFarm(pid)\n  const cakePrice = usePriceCakeBusd()\n  const dispatch = useAppDispatch()\n  const rawEarningsBalance = account ? getBalanceAmount(earnings) : BIG_ZERO\n  const displayBalance = rawEarningsBalance.toFixed(3, BigNumber.ROUND_DOWN)\n  const earningsBusd = rawEarningsBalance ? rawEarningsBalance.multipliedBy(cakePrice).toNumber() : 0\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n        <Heading color={rawEarningsBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n        {earningsBusd > 0 && (\n          <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n        )}\n      </Flex>\n      <Button\n        disabled={rawEarningsBalance.eq(0) || pendingTx}\n        onClick={async () => {\n          setPendingTx(true)\n          try {\n            await onReward()\n            toastSuccess(\n              `${t('Harvested')}!`,\n              t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'CAKE' }),\n            )\n          } catch (e) {\n            toastError(\n              t('Error'),\n              t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\n            )\n            console.error(e)\n          } finally {\n            setPendingTx(false)\n          }\n          dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n        }}\n      >\n        {t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n"]},"metadata":{},"sourceType":"module"}