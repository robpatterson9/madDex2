{"ast":null,"code":"import React from'react';import{Card,Table,Th}from'@pancakeswap/uikit';import Container from'components/Layout/Container';import{useTranslation}from'contexts/Localization';import DesktopRow from'./DesktopRow';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DesktopResults=function DesktopResults(_ref){var results=_ref.results;var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/_jsx(Container,{mb:\"24px\",children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(Th,{width:\"60px\",children:\"\\xA0\"}),/*#__PURE__*/_jsx(Th,{textAlign:\"left\",children:t('User')}),/*#__PURE__*/_jsx(Th,{textAlign:\"right\",children:t('Net Winnings (BNB)')}),/*#__PURE__*/_jsx(Th,{children:t('Win Rate')}),/*#__PURE__*/_jsx(Th,{children:t('Rounds Won')}),/*#__PURE__*/_jsx(Th,{children:t('Rounds Played')})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:results.map(function(result,index){return/*#__PURE__*/_jsx(DesktopRow,{rank:index+4,user:result},result.id);})})]})})});};export default DesktopResults;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/Leaderboard/components/Results/DesktopResults.tsx"],"names":["React","Card","Table","Th","Container","useTranslation","DesktopRow","DesktopResults","results","t","map","result","index","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,EAAtB,KAAgC,oBAAhC,CAEA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,C,wFAMA,GAAMC,CAAAA,cAA6C,CAAG,QAAhDA,CAAAA,cAAgD,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACrE,oBAAcH,cAAc,EAA5B,CAAQI,CAAR,iBAAQA,CAAR,CAEA,mBACE,KAAC,SAAD,EAAW,EAAE,CAAC,MAAd,uBACE,KAAC,IAAD,wBACE,MAAC,KAAD,yBACE,oCACE,mCACE,KAAC,EAAD,EAAI,KAAK,CAAC,MAAV,kBADF,cAEE,KAAC,EAAD,EAAI,SAAS,CAAC,MAAd,UAAsBA,CAAC,CAAC,MAAD,CAAvB,EAFF,cAGE,KAAC,EAAD,EAAI,SAAS,CAAC,OAAd,UAAuBA,CAAC,CAAC,oBAAD,CAAxB,EAHF,cAIE,KAAC,EAAD,WAAKA,CAAC,CAAC,UAAD,CAAN,EAJF,cAKE,KAAC,EAAD,WAAKA,CAAC,CAAC,YAAD,CAAN,EALF,cAME,KAAC,EAAD,WAAKA,CAAC,CAAC,eAAD,CAAN,EANF,GADF,EADF,cAWE,uBACGD,OAAO,CAACE,GAAR,CAAY,SAACC,MAAD,CAASC,KAAT,qBACX,KAAC,UAAD,EAA4B,IAAI,CAAEA,KAAK,CAAG,CAA1C,CAA6C,IAAI,CAAED,MAAnD,EAAiBA,MAAM,CAACE,EAAxB,CADW,EAAZ,CADH,EAXF,GADF,EADF,EADF,CAuBD,CA1BD,CA4BA,cAAeN,CAAAA,cAAf","sourcesContent":["import React from 'react'\nimport { Card, Table, Th } from '@pancakeswap/uikit'\nimport { PredictionUser } from 'state/types'\nimport Container from 'components/Layout/Container'\nimport { useTranslation } from 'contexts/Localization'\nimport DesktopRow from './DesktopRow'\n\ninterface DesktopResultsProps {\n  results: PredictionUser[]\n}\n\nconst DesktopResults: React.FC<DesktopResultsProps> = ({ results }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Container mb=\"24px\">\n      <Card>\n        <Table>\n          <thead>\n            <tr>\n              <Th width=\"60px\">&nbsp;</Th>\n              <Th textAlign=\"left\">{t('User')}</Th>\n              <Th textAlign=\"right\">{t('Net Winnings (BNB)')}</Th>\n              <Th>{t('Win Rate')}</Th>\n              <Th>{t('Rounds Won')}</Th>\n              <Th>{t('Rounds Played')}</Th>\n            </tr>\n          </thead>\n          <tbody>\n            {results.map((result, index) => (\n              <DesktopRow key={result.id} rank={index + 4} user={result} />\n            ))}\n          </tbody>\n        </Table>\n      </Card>\n    </Container>\n  )\n}\n\nexport default DesktopResults\n"]},"metadata":{},"sourceType":"module"}