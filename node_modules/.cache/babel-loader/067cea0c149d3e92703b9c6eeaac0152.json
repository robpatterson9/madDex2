{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Predictions/Leaderboard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { useAppDispatch } from 'state';\nimport { useGetLeaderboardFilters, useGetLeaderboardLoadingState } from 'state/predictions/hooks';\nimport { LeaderboardLoadingState } from 'state/types';\nimport { filterLeaderboard } from 'state/predictions';\nimport PageLoader from 'components/Loader/PageLoader';\nimport { PageMeta } from 'components/Layout/Page';\nimport Hero from './components/Hero';\nimport Results from './components/Results';\nimport ConnectedWalletResult from './components/Results/ConnectedWalletResult';\nimport Filters from './components/Filters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Leaderboard = () => {\n  _s();\n\n  const leaderboardLoadingState = useGetLeaderboardLoadingState();\n  const filters = useGetLeaderboardFilters();\n  const {\n    account\n  } = useWeb3React();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(filterLeaderboard({\n      filters\n    }));\n  }, [account, filters, dispatch]);\n\n  if (leaderboardLoadingState === LeaderboardLoadingState.INITIAL) {\n    return /*#__PURE__*/_jsxDEV(PageLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageMeta, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConnectedWalletResult, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Results, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Leaderboard, \"eOAwgPU1DVOG6jev7OuS8GWdTHo=\", false, function () {\n  return [useGetLeaderboardLoadingState, useGetLeaderboardFilters, useWeb3React, useAppDispatch];\n});\n\n_c = Leaderboard;\nexport default Leaderboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/Leaderboard/index.tsx"],"names":["React","useEffect","useWeb3React","useAppDispatch","useGetLeaderboardFilters","useGetLeaderboardLoadingState","LeaderboardLoadingState","filterLeaderboard","PageLoader","PageMeta","Hero","Results","ConnectedWalletResult","Filters","Leaderboard","leaderboardLoadingState","filters","account","dispatch","INITIAL"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,SAASC,wBAAT,EAAmCC,6BAAnC,QAAwE,yBAAxE;AACA,SAASC,uBAAT,QAAwC,aAAxC;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,qBAAP,MAAkC,4CAAlC;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,uBAAuB,GAAGV,6BAA6B,EAA7D;AACA,QAAMW,OAAO,GAAGZ,wBAAwB,EAAxC;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAcf,YAAY,EAAhC;AACA,QAAMgB,QAAQ,GAAGf,cAAc,EAA/B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,QAAQ,CAACX,iBAAiB,CAAC;AAAES,MAAAA;AAAF,KAAD,CAAlB,CAAR;AACD,GAFQ,EAEN,CAACC,OAAD,EAAUD,OAAV,EAAmBE,QAAnB,CAFM,CAAT;;AAIA,MAAIH,uBAAuB,KAAKT,uBAAuB,CAACa,OAAxD,EAAiE;AAC/D,wBAAO,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD,CAvBD;;GAAML,W;UAC4BT,6B,EAChBD,wB,EACIF,Y,EACHC,c;;;KAJbW,W;AAyBN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { useGetLeaderboardFilters, useGetLeaderboardLoadingState } from 'state/predictions/hooks'\nimport { LeaderboardLoadingState } from 'state/types'\nimport { filterLeaderboard } from 'state/predictions'\nimport PageLoader from 'components/Loader/PageLoader'\nimport { PageMeta } from 'components/Layout/Page'\nimport Hero from './components/Hero'\nimport Results from './components/Results'\nimport ConnectedWalletResult from './components/Results/ConnectedWalletResult'\nimport Filters from './components/Filters'\n\nconst Leaderboard = () => {\n  const leaderboardLoadingState = useGetLeaderboardLoadingState()\n  const filters = useGetLeaderboardFilters()\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(filterLeaderboard({ filters }))\n  }, [account, filters, dispatch])\n\n  if (leaderboardLoadingState === LeaderboardLoadingState.INITIAL) {\n    return <PageLoader />\n  }\n\n  return (\n    <>\n      <PageMeta />\n      <Hero />\n      <Filters />\n      <ConnectedWalletResult />\n      <Results />\n    </>\n  )\n}\n\nexport default Leaderboard\n"]},"metadata":{},"sourceType":"module"}