{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React,{useState}from'react';import styled from'styled-components';import{Modal,Box,Text,Flex,Input,OpenNewIcon,useMatchBreakpoints,Spinner}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import useTheme from'hooks/useTheme';import truncateHash from'utils/truncateHash';import useWhitelistedAddresses from'../hooks/useWhitelistedAddresses';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledModal=styled(Modal)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  & > div:nth-child(2) {\\n    padding: 0;\\n  }\\n\"])));var InputContainer=styled(Flex)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  border-bottom: 1px solid \",\";\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.cardBorder;});var AddressRowContainer=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: 3fr 5fr 0.5fr;\\n  border-bottom: 1px solid \",\";\\n  padding: 8px 24px;\\n  &:hover {\\n    cursor: pointer;\\n    opacity: 0.5;\\n  }\\n\"])),function(_ref2){var theme=_ref2.theme;return theme.colors.cardBorder;});var AddressRow=function AddressRow(_ref3){var bidder=_ref3.bidder,isMobile=_ref3.isMobile;var farmName=bidder.farmName,tokenName=bidder.tokenName,account=bidder.account,projectSite=bidder.projectSite;return/*#__PURE__*/_jsx(\"a\",{href:projectSite,target:\"_blank\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsxs(AddressRowContainer,{children:[/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",flex:\"3\",children:[/*#__PURE__*/_jsx(Text,{children:farmName}),/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",children:tokenName})]}),/*#__PURE__*/_jsx(Flex,{justifyContent:['center',null,'flex-start'],alignItems:\"center\",flex:\"6\",children:/*#__PURE__*/_jsx(Text,{mr:\"8px\",children:isMobile?truncateHash(account):account})}),/*#__PURE__*/_jsx(OpenNewIcon,{color:\"primary\"})]})});};var WhitelistedBiddersModal=function WhitelistedBiddersModal(_ref4){var onDismiss=_ref4.onDismiss;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),searchTerm=_useState2[0],setSearchTerm=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var _useTheme=useTheme(),theme=_useTheme.theme;var _useMatchBreakpoints=useMatchBreakpoints(),isMobile=_useMatchBreakpoints.isMobile;var bidders=useWhitelistedAddresses();var handleSearchChange=function handleSearchChange(e){setSearchTerm(e.target.value);};var filteredBidders=bidders?bidders.filter(function(_ref5){var farmName=_ref5.farmName,tokenName=_ref5.tokenName,account=_ref5.account;return farmName.toLowerCase().includes(searchTerm.toLowerCase())||tokenName.toLowerCase().includes(searchTerm.toLowerCase())||account.toLowerCase().includes(searchTerm.toLowerCase());}):[];var modalContent=bidders?filteredBidders.map(function(bidder){return/*#__PURE__*/_jsx(AddressRow,{bidder:bidder,isMobile:isMobile},bidder.account);}):/*#__PURE__*/_jsx(Flex,{justifyContent:\"center\",alignItems:\"center\",py:\"24px\",children:/*#__PURE__*/_jsx(Spinner,{})});return/*#__PURE__*/_jsxs(StyledModal,{p:\"0\",title:t('All Whitelisted Project Wallets'),onDismiss:onDismiss,headerBackground:theme.colors.gradients.cardHeader,children:[/*#__PURE__*/_jsx(InputContainer,{py:\"16px\",px:\"24px\",children:/*#__PURE__*/_jsx(Input,{placeholder:t('Search address or token'),value:searchTerm,onChange:handleSearchChange})}),/*#__PURE__*/_jsx(Box,{pb:\"24px\",overflow:\"scroll\",maxHeight:\"245px\",children:modalContent})]});};export default WhitelistedBiddersModal;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/FarmAuction/components/WhitelistedBiddersModal.tsx"],"names":["React","useState","styled","Modal","Box","Text","Flex","Input","OpenNewIcon","useMatchBreakpoints","Spinner","useTranslation","useTheme","truncateHash","useWhitelistedAddresses","StyledModal","InputContainer","theme","colors","cardBorder","AddressRowContainer","div","AddressRow","bidder","isMobile","farmName","tokenName","account","projectSite","WhitelistedBiddersModal","onDismiss","searchTerm","setSearchTerm","t","bidders","handleSearchChange","e","target","value","filteredBidders","filter","toLowerCase","includes","modalContent","map","gradients","cardHeader"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Box, Text, Flex, Input, OpenNewIcon, useMatchBreakpoints, Spinner } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { FarmAuctionBidderConfig } from 'config/constants/types'\nimport truncateHash from 'utils/truncateHash'\nimport useWhitelistedAddresses from '../hooks/useWhitelistedAddresses'\n\ninterface WhitelistedBiddersModalProps {\n  onDismiss?: () => void\n}\n\nconst StyledModal = styled(Modal)`\n  & > div:nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst InputContainer = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AddressRowContainer = styled.div`\n  display: grid;\n  grid-template-columns: 3fr 5fr 0.5fr;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 8px 24px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.5;\n  }\n`\n\nconst AddressRow: React.FC<{ bidder: FarmAuctionBidderConfig; isMobile: boolean }> = ({ bidder, isMobile }) => {\n  const { farmName, tokenName, account, projectSite } = bidder\n  return (\n    <a href={projectSite} target=\"_blank\" rel=\"noopener noreferrer\">\n      <AddressRowContainer>\n        <Flex flexDirection=\"column\" flex=\"3\">\n          <Text>{farmName}</Text>\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {tokenName}\n          </Text>\n        </Flex>\n        <Flex justifyContent={['center', null, 'flex-start']} alignItems=\"center\" flex=\"6\">\n          <Text mr=\"8px\">{isMobile ? truncateHash(account) : account}</Text>\n        </Flex>\n        <OpenNewIcon color=\"primary\" />\n      </AddressRowContainer>\n    </a>\n  )\n}\n\nconst WhitelistedBiddersModal: React.FC<WhitelistedBiddersModalProps> = ({ onDismiss }) => {\n  const [searchTerm, setSearchTerm] = useState('')\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { isMobile } = useMatchBreakpoints()\n  const bidders = useWhitelistedAddresses()\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.target.value)\n  }\n\n  const filteredBidders = bidders\n    ? bidders.filter(\n        ({ farmName, tokenName, account }) =>\n          farmName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          tokenName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          account.toLowerCase().includes(searchTerm.toLowerCase()),\n      )\n    : []\n\n  const modalContent = bidders ? (\n    filteredBidders.map((bidder) => <AddressRow key={bidder.account} bidder={bidder} isMobile={isMobile} />)\n  ) : (\n    <Flex justifyContent=\"center\" alignItems=\"center\" py=\"24px\">\n      <Spinner />\n    </Flex>\n  )\n\n  return (\n    <StyledModal\n      p=\"0\"\n      title={t('All Whitelisted Project Wallets')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <InputContainer py=\"16px\" px=\"24px\">\n        <Input placeholder={t('Search address or token')} value={searchTerm} onChange={handleSearchChange} />\n      </InputContainer>\n\n      <Box pb=\"24px\" overflow=\"scroll\" maxHeight=\"245px\">\n        {modalContent}\n      </Box>\n    </StyledModal>\n  )\n}\n\nexport default WhitelistedBiddersModal\n"]},"metadata":{},"sourceType":"module"}