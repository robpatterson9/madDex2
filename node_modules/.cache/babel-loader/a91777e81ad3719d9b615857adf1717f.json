{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import{Text}from'@pancakeswap/uikit';import{AuctionStatus}from'config/constants/types';import{useTranslation}from'contexts/Localization';import React from'react';import styled from'styled-components';import{jsx as _jsx}from\"react/jsx-runtime\";var StyledRibbon=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  background-color: \",\";\\n  color: white;\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  text-align: center;\\n  width: 94px;\\n  height: 94px;\\n  z-index: 1;\\n  clip-path: polygon(0 0, 40% 0, 100% 60%, 100% 100%);\\n\\n  & > div {\\n    padding-top: 23%;\\n    overflow: hidden;\\n    transform: rotate(45deg);\\n  }\\n\"])),function(_ref){var theme=_ref.theme,color=_ref.color;return theme.colors[color];});var AuctionRibbon=function AuctionRibbon(_ref2){var auction=_ref2.auction,noAuctionHistory=_ref2.noAuctionHistory;var _useTranslation=useTranslation(),t=_useTranslation.t;var status=auction.status;// Don't show Live or Finished in case of fresh contract with no history\nif(noAuctionHistory){return null;}var ribbonText=t('Finished');var color='textDisabled';if(status===AuctionStatus.Open){ribbonText=\"\".concat(t('Live'),\"!\");color='success';}if(status===AuctionStatus.Pending){ribbonText=\"\".concat(t('Get ready'),\"!\");color='warning';}return/*#__PURE__*/_jsx(StyledRibbon,{color:color,children:/*#__PURE__*/_jsx(Text,{color:\"white\",textTransform:\"uppercase\",children:ribbonText})});};export default AuctionRibbon;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/FarmAuction/components/AuctionLeaderboard/AuctionRibbon.tsx"],"names":["Text","AuctionStatus","useTranslation","React","styled","StyledRibbon","div","theme","color","colors","AuctionRibbon","auction","noAuctionHistory","t","status","ribbonText","Open","Pending"],"mappings":"4LAAA,OAASA,IAAT,KAAqB,oBAArB,CACA,OAAkBC,aAAlB,KAAuC,wBAAvC,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,C,2CAEA,GAAMC,CAAAA,YAAY,CAAGD,MAAM,CAACE,GAAV,2aAGI,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,CAAUC,KAAV,MAAUA,KAAV,OAAsBD,CAAAA,KAAK,CAACE,MAAN,CAAaD,KAAb,CAAtB,EAHJ,CAAlB,CAqBA,GAAME,CAAAA,aAAwE,CAAG,QAA3EA,CAAAA,aAA2E,OAAmC,IAAhCC,CAAAA,OAAgC,OAAhCA,OAAgC,CAAvBC,gBAAuB,OAAvBA,gBAAuB,CAClH,oBAAcV,cAAc,EAA5B,CAAQW,CAAR,iBAAQA,CAAR,CACA,GAAQC,CAAAA,MAAR,CAAmBH,OAAnB,CAAQG,MAAR,CAEA;AACA,GAAIF,gBAAJ,CAAsB,CACpB,MAAO,KAAP,CACD,CAED,GAAIG,CAAAA,UAAU,CAAGF,CAAC,CAAC,UAAD,CAAlB,CACA,GAAIL,CAAAA,KAAK,CAAG,cAAZ,CACA,GAAIM,MAAM,GAAKb,aAAa,CAACe,IAA7B,CAAmC,CACjCD,UAAU,WAAMF,CAAC,CAAC,MAAD,CAAP,KAAV,CACAL,KAAK,CAAG,SAAR,CACD,CACD,GAAIM,MAAM,GAAKb,aAAa,CAACgB,OAA7B,CAAsC,CACpCF,UAAU,WAAMF,CAAC,CAAC,WAAD,CAAP,KAAV,CACAL,KAAK,CAAG,SAAR,CACD,CACD,mBACE,KAAC,YAAD,EAAc,KAAK,CAAEA,KAArB,uBACE,KAAC,IAAD,EAAM,KAAK,CAAC,OAAZ,CAAoB,aAAa,CAAC,WAAlC,UACGO,UADH,EADF,EADF,CAOD,CA1BD,CA4BA,cAAeL,CAAAA,aAAf","sourcesContent":["import { Text } from '@pancakeswap/uikit'\nimport { Auction, AuctionStatus } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst StyledRibbon = styled.div<{ color: string }>`\n  display: flex;\n  justify-content: center;\n  background-color: ${({ theme, color }) => theme.colors[color]};\n  color: white;\n  position: absolute;\n  right: 0;\n  top: 0;\n  text-align: center;\n  width: 94px;\n  height: 94px;\n  z-index: 1;\n  clip-path: polygon(0 0, 40% 0, 100% 60%, 100% 100%);\n\n  & > div {\n    padding-top: 23%;\n    overflow: hidden;\n    transform: rotate(45deg);\n  }\n`\n\nconst AuctionRibbon: React.FC<{ auction: Auction; noAuctionHistory: boolean }> = ({ auction, noAuctionHistory }) => {\n  const { t } = useTranslation()\n  const { status } = auction\n\n  // Don't show Live or Finished in case of fresh contract with no history\n  if (noAuctionHistory) {\n    return null\n  }\n\n  let ribbonText = t('Finished')\n  let color = 'textDisabled'\n  if (status === AuctionStatus.Open) {\n    ribbonText = `${t('Live')}!`\n    color = 'success'\n  }\n  if (status === AuctionStatus.Pending) {\n    ribbonText = `${t('Get ready')}!`\n    color = 'warning'\n  }\n  return (\n    <StyledRibbon color={color}>\n      <Text color=\"white\" textTransform=\"uppercase\">\n        {ribbonText}\n      </Text>\n    </StyledRibbon>\n  )\n}\n\nexport default AuctionRibbon\n"]},"metadata":{},"sourceType":"module"}