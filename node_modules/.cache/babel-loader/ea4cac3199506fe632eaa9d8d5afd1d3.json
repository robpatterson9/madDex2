{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useEffect,useState}from'react';import{BigNumber}from'@ethersproject/bignumber';import{currencyEquals,ETHER,WETH}from'@pancakeswap/sdk';import{Button,Text,Flex,AddIcon,CardBody,Message,useModal}from'@pancakeswap/uikit';import{useIsTransactionUnsupported}from'hooks/Trades';import{useTranslation}from'contexts/Localization';import UnsupportedCurrencyFooter from'components/UnsupportedCurrencyFooter';import useActiveWeb3React from'hooks/useActiveWeb3React';import{useDispatch}from'react-redux';import{LightCard}from'../../components/Card';import{AutoColumn,ColumnCenter}from'../../components/Layout/Column';import TransactionConfirmationModal,{ConfirmationModalContent}from'../../components/TransactionConfirmationModal';import CurrencyInputPanel from'../../components/CurrencyInputPanel';import{DoubleCurrencyLogo}from'../../components/Logo';import{AppHeader,AppBody}from'../../components/App';import{MinimalPositionCard}from'../../components/PositionCard';import Row,{RowBetween}from'../../components/Layout/Row';import ConnectWalletButton from'../../components/ConnectWalletButton';import{ROUTER_ADDRESS}from'../../config/constants';import{PairState}from'../../hooks/usePairs';import{useCurrency}from'../../hooks/Tokens';import{ApprovalState,useApproveCallback}from'../../hooks/useApproveCallback';import useTransactionDeadline from'../../hooks/useTransactionDeadline';import{Field,resetMintState}from'../../state/mint/actions';import{useDerivedMintInfo,useMintActionHandlers,useMintState}from'../../state/mint/hooks';import{useTransactionAdder}from'../../state/transactions/hooks';import{useGasPrice,useIsExpertMode,useUserSlippageTolerance}from'../../state/user/hooks';import{calculateGasMargin,calculateSlippageAmount,getRouterContract}from'../../utils';import{maxAmountSpend}from'../../utils/maxAmountSpend';import{wrappedCurrency}from'../../utils/wrappedCurrency';import Dots from'../../components/Loader/Dots';import ConfirmAddModalBottom from'./ConfirmAddModalBottom';import{currencyId}from'../../utils/currencyId';import PoolPriceBar from'./PoolPriceBar';import Page from'../Page';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function AddLiquidity(_ref){var _parsedAmounts$depend,_parsedAmounts$depend2,_formattedAmounts,_parsedAmounts$Field$,_parsedAmounts$Field$2,_currencies$Field$CUR5,_currencies$Field$CUR6,_parsedAmounts$Field$3,_parsedAmounts$Field$4,_currencies$Field$CUR7,_currencies$Field$CUR8,_currencies$Field$CUR9,_currencies$Field$CUR10,_currencies$Field$CUR11,_currencies$Field$CUR12;var _ref$match$params=_ref.match.params,currencyIdA=_ref$match$params.currencyIdA,currencyIdB=_ref$match$params.currencyIdB,history=_ref.history;var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account,chainId=_useActiveWeb3React.chainId,library=_useActiveWeb3React.library;var dispatch=useDispatch();var _useTranslation=useTranslation(),t=_useTranslation.t;var gasPrice=useGasPrice();var currencyA=useCurrency(currencyIdA);var currencyB=useCurrency(currencyIdB);useEffect(function(){if(!currencyIdA&&!currencyIdB){dispatch(resetMintState());}},[dispatch,currencyIdA,currencyIdB]);var oneCurrencyIsWETH=Boolean(chainId&&(currencyA&&currencyEquals(currencyA,WETH[chainId])||currencyB&&currencyEquals(currencyB,WETH[chainId])));var expertMode=useIsExpertMode();// mint state\nvar _useMintState=useMintState(),independentField=_useMintState.independentField,typedValue=_useMintState.typedValue,otherTypedValue=_useMintState.otherTypedValue;var _useDerivedMintInfo=useDerivedMintInfo(currencyA!==null&&currencyA!==void 0?currencyA:undefined,currencyB!==null&&currencyB!==void 0?currencyB:undefined),dependentField=_useDerivedMintInfo.dependentField,currencies=_useDerivedMintInfo.currencies,pair=_useDerivedMintInfo.pair,pairState=_useDerivedMintInfo.pairState,currencyBalances=_useDerivedMintInfo.currencyBalances,parsedAmounts=_useDerivedMintInfo.parsedAmounts,price=_useDerivedMintInfo.price,noLiquidity=_useDerivedMintInfo.noLiquidity,liquidityMinted=_useDerivedMintInfo.liquidityMinted,poolTokenPercentage=_useDerivedMintInfo.poolTokenPercentage,error=_useDerivedMintInfo.error;var _useMintActionHandler=useMintActionHandlers(noLiquidity),onFieldAInput=_useMintActionHandler.onFieldAInput,onFieldBInput=_useMintActionHandler.onFieldBInput;var isValid=!error;// modal and loading\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),attemptingTxn=_useState2[0],setAttemptingTxn=_useState2[1];// clicked confirm\n// txn values\nvar deadline=useTransactionDeadline();// custom from users settings\nvar _useUserSlippageToler=useUserSlippageTolerance(),_useUserSlippageToler2=_slicedToArray(_useUserSlippageToler,1),allowedSlippage=_useUserSlippageToler2[0];// custom from users\nvar _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),txHash=_useState4[0],setTxHash=_useState4[1];// get formatted amounts\nvar formattedAmounts=(_formattedAmounts={},_defineProperty(_formattedAmounts,independentField,typedValue),_defineProperty(_formattedAmounts,dependentField,noLiquidity?otherTypedValue:(_parsedAmounts$depend=(_parsedAmounts$depend2=parsedAmounts[dependentField])===null||_parsedAmounts$depend2===void 0?void 0:_parsedAmounts$depend2.toSignificant(6))!==null&&_parsedAmounts$depend!==void 0?_parsedAmounts$depend:''),_formattedAmounts);// get the max amounts user can add\nvar maxAmounts=[Field.CURRENCY_A,Field.CURRENCY_B].reduce(function(accumulator,field){return _objectSpread(_objectSpread({},accumulator),{},_defineProperty({},field,maxAmountSpend(currencyBalances[field])));},{});var atMaxAmounts=[Field.CURRENCY_A,Field.CURRENCY_B].reduce(function(accumulator,field){var _maxAmounts$field,_parsedAmounts$field;return _objectSpread(_objectSpread({},accumulator),{},_defineProperty({},field,(_maxAmounts$field=maxAmounts[field])===null||_maxAmounts$field===void 0?void 0:_maxAmounts$field.equalTo((_parsedAmounts$field=parsedAmounts[field])!==null&&_parsedAmounts$field!==void 0?_parsedAmounts$field:'0')));},{});// check whether the user has approved the router on the tokens\nvar _useApproveCallback=useApproveCallback(parsedAmounts[Field.CURRENCY_A],ROUTER_ADDRESS),_useApproveCallback2=_slicedToArray(_useApproveCallback,2),approvalA=_useApproveCallback2[0],approveACallback=_useApproveCallback2[1];var _useApproveCallback3=useApproveCallback(parsedAmounts[Field.CURRENCY_B],ROUTER_ADDRESS),_useApproveCallback4=_slicedToArray(_useApproveCallback3,2),approvalB=_useApproveCallback4[0],approveBCallback=_useApproveCallback4[1];var addTransaction=useTransactionAdder();function onAdd(){return _onAdd.apply(this,arguments);}function _onAdd(){_onAdd=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _amountsMin;var router,parsedAmountA,parsedAmountB,amountsMin,estimate,method,args,value,_wrappedCurrency$addr,_wrappedCurrency,tokenBIsETH,_wrappedCurrency$addr2,_wrappedCurrency2,_wrappedCurrency$addr3,_wrappedCurrency3;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(!chainId||!library||!account)){_context.next=2;break;}return _context.abrupt(\"return\");case 2:router=getRouterContract(chainId,library,account);parsedAmountA=parsedAmounts[Field.CURRENCY_A],parsedAmountB=parsedAmounts[Field.CURRENCY_B];if(!(!parsedAmountA||!parsedAmountB||!currencyA||!currencyB||!deadline)){_context.next=6;break;}return _context.abrupt(\"return\");case 6:amountsMin=(_amountsMin={},_defineProperty(_amountsMin,Field.CURRENCY_A,calculateSlippageAmount(parsedAmountA,noLiquidity?0:allowedSlippage)[0]),_defineProperty(_amountsMin,Field.CURRENCY_B,calculateSlippageAmount(parsedAmountB,noLiquidity?0:allowedSlippage)[0]),_amountsMin);if(currencyA===ETHER||currencyB===ETHER){tokenBIsETH=currencyB===ETHER;estimate=router.estimateGas.addLiquidityETH;method=router.addLiquidityETH;args=[(_wrappedCurrency$addr=(_wrappedCurrency=wrappedCurrency(tokenBIsETH?currencyA:currencyB,chainId))===null||_wrappedCurrency===void 0?void 0:_wrappedCurrency.address)!==null&&_wrappedCurrency$addr!==void 0?_wrappedCurrency$addr:'',// token\n(tokenBIsETH?parsedAmountA:parsedAmountB).raw.toString(),// token desired\namountsMin[tokenBIsETH?Field.CURRENCY_A:Field.CURRENCY_B].toString(),// token min\namountsMin[tokenBIsETH?Field.CURRENCY_B:Field.CURRENCY_A].toString(),// eth min\naccount,deadline.toHexString()];value=BigNumber.from((tokenBIsETH?parsedAmountB:parsedAmountA).raw.toString());}else{estimate=router.estimateGas.addLiquidity;method=router.addLiquidity;args=[(_wrappedCurrency$addr2=(_wrappedCurrency2=wrappedCurrency(currencyA,chainId))===null||_wrappedCurrency2===void 0?void 0:_wrappedCurrency2.address)!==null&&_wrappedCurrency$addr2!==void 0?_wrappedCurrency$addr2:'',(_wrappedCurrency$addr3=(_wrappedCurrency3=wrappedCurrency(currencyB,chainId))===null||_wrappedCurrency3===void 0?void 0:_wrappedCurrency3.address)!==null&&_wrappedCurrency$addr3!==void 0?_wrappedCurrency$addr3:'',parsedAmountA.raw.toString(),parsedAmountB.raw.toString(),amountsMin[Field.CURRENCY_A].toString(),amountsMin[Field.CURRENCY_B].toString(),account,deadline.toHexString()];value=null;}setAttemptingTxn(true);_context.next=11;return estimate.apply(void 0,_toConsumableArray(args).concat([value?{value:value}:{}])).then(function(estimatedGasLimit){return method.apply(void 0,_toConsumableArray(args).concat([_objectSpread(_objectSpread({},value?{value:value}:{}),{},{gasLimit:calculateGasMargin(estimatedGasLimit),gasPrice:gasPrice})])).then(function(response){var _parsedAmounts$Field$5,_currencies$Field$CUR13,_parsedAmounts$Field$6,_currencies$Field$CUR14;setAttemptingTxn(false);addTransaction(response,{summary:\"Add \".concat((_parsedAmounts$Field$5=parsedAmounts[Field.CURRENCY_A])===null||_parsedAmounts$Field$5===void 0?void 0:_parsedAmounts$Field$5.toSignificant(3),\" \").concat((_currencies$Field$CUR13=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR13===void 0?void 0:_currencies$Field$CUR13.symbol,\" and \").concat((_parsedAmounts$Field$6=parsedAmounts[Field.CURRENCY_B])===null||_parsedAmounts$Field$6===void 0?void 0:_parsedAmounts$Field$6.toSignificant(3),\" \").concat((_currencies$Field$CUR14=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR14===void 0?void 0:_currencies$Field$CUR14.symbol)});setTxHash(response.hash);});}).catch(function(err){setAttemptingTxn(false);// we only care if the error is something _other_ than the user rejected the tx\n// we only care if the error is something _other_ than the user rejected the tx\nif((err===null||err===void 0?void 0:err.code)!==4001){console.error(err);}});case 11:case\"end\":return _context.stop();}}},_callee);}));return _onAdd.apply(this,arguments);}var modalHeader=function modalHeader(){var _currencies$Field$CUR,_currencies$Field$CUR2,_currencies$Field$CUR3,_currencies$Field$CUR4;return noLiquidity?/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"48px\",marginRight:\"10px\",children:\"\".concat((_currencies$Field$CUR=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR===void 0?void 0:_currencies$Field$CUR.symbol,\"/\").concat((_currencies$Field$CUR2=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR2===void 0?void 0:_currencies$Field$CUR2.symbol)}),/*#__PURE__*/_jsx(DoubleCurrencyLogo,{currency0:currencies[Field.CURRENCY_A],currency1:currencies[Field.CURRENCY_B],size:30})]}):/*#__PURE__*/_jsxs(AutoColumn,{children:[/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"48px\",marginRight:\"10px\",children:liquidityMinted===null||liquidityMinted===void 0?void 0:liquidityMinted.toSignificant(6)}),/*#__PURE__*/_jsx(DoubleCurrencyLogo,{currency0:currencies[Field.CURRENCY_A],currency1:currencies[Field.CURRENCY_B],size:30})]}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Text,{fontSize:\"24px\",children:\"\".concat((_currencies$Field$CUR3=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR3===void 0?void 0:_currencies$Field$CUR3.symbol,\"/\").concat((_currencies$Field$CUR4=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR4===void 0?void 0:_currencies$Field$CUR4.symbol,\" Pool Tokens\")})}),/*#__PURE__*/_jsx(Text,{small:true,textAlign:\"left\",my:\"24px\",children:t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.',{slippage:allowedSlippage/100})})]});};var modalBottom=function modalBottom(){return/*#__PURE__*/_jsx(ConfirmAddModalBottom,{price:price,currencies:currencies,parsedAmounts:parsedAmounts,noLiquidity:noLiquidity,onAdd:onAdd,poolTokenPercentage:poolTokenPercentage});};var pendingText=t('Supplying %amountA% %symbolA% and %amountB% %symbolB%',{amountA:(_parsedAmounts$Field$=(_parsedAmounts$Field$2=parsedAmounts[Field.CURRENCY_A])===null||_parsedAmounts$Field$2===void 0?void 0:_parsedAmounts$Field$2.toSignificant(6))!==null&&_parsedAmounts$Field$!==void 0?_parsedAmounts$Field$:'',symbolA:(_currencies$Field$CUR5=(_currencies$Field$CUR6=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR6===void 0?void 0:_currencies$Field$CUR6.symbol)!==null&&_currencies$Field$CUR5!==void 0?_currencies$Field$CUR5:'',amountB:(_parsedAmounts$Field$3=(_parsedAmounts$Field$4=parsedAmounts[Field.CURRENCY_B])===null||_parsedAmounts$Field$4===void 0?void 0:_parsedAmounts$Field$4.toSignificant(6))!==null&&_parsedAmounts$Field$3!==void 0?_parsedAmounts$Field$3:'',symbolB:(_currencies$Field$CUR7=(_currencies$Field$CUR8=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR8===void 0?void 0:_currencies$Field$CUR8.symbol)!==null&&_currencies$Field$CUR7!==void 0?_currencies$Field$CUR7:''});var handleCurrencyASelect=useCallback(function(currencyA_){var newCurrencyIdA=currencyId(currencyA_);if(newCurrencyIdA===currencyIdB){history.push(\"/add/\".concat(currencyIdB,\"/\").concat(currencyIdA));}else if(currencyIdB){history.push(\"/add/\".concat(newCurrencyIdA,\"/\").concat(currencyIdB));}else{history.push(\"/add/\".concat(newCurrencyIdA));}},[currencyIdB,history,currencyIdA]);var handleCurrencyBSelect=useCallback(function(currencyB_){var newCurrencyIdB=currencyId(currencyB_);if(currencyIdA===newCurrencyIdB){if(currencyIdB){history.push(\"/add/\".concat(currencyIdB,\"/\").concat(newCurrencyIdB));}else{history.push(\"/add/\".concat(newCurrencyIdB));}}else{history.push(\"/add/\".concat(currencyIdA||'BNB',\"/\").concat(newCurrencyIdB));}},[currencyIdA,history,currencyIdB]);var handleDismissConfirmation=useCallback(function(){// if there was a tx hash, we want to clear the input\nif(txHash){onFieldAInput('');}setTxHash('');},[onFieldAInput,txHash]);var addIsUnsupported=useIsTransactionUnsupported(currencies===null||currencies===void 0?void 0:currencies.CURRENCY_A,currencies===null||currencies===void 0?void 0:currencies.CURRENCY_B);var _useModal=useModal(/*#__PURE__*/_jsx(TransactionConfirmationModal,{title:noLiquidity?t('You are creating a pool'):t('You will receive'),customOnDismiss:handleDismissConfirmation,attemptingTxn:attemptingTxn,hash:txHash,content:function content(){return/*#__PURE__*/_jsx(ConfirmationModalContent,{topContent:modalHeader,bottomContent:modalBottom});},pendingText:pendingText,currencyToAdd:pair===null||pair===void 0?void 0:pair.liquidityToken}),true,true,'addLiquidityModal'),_useModal2=_slicedToArray(_useModal,1),onPresentAddLiquidityModal=_useModal2[0];return/*#__PURE__*/_jsxs(Page,{children:[/*#__PURE__*/_jsxs(AppBody,{children:[/*#__PURE__*/_jsx(AppHeader,{title:t('Add Liquidity'),subtitle:t('Add liquidity to receive LP tokens'),helper:t('Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.'),backTo:\"/pool\"}),/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsxs(AutoColumn,{gap:\"20px\",children:[noLiquidity&&/*#__PURE__*/_jsx(ColumnCenter,{children:/*#__PURE__*/_jsx(Message,{variant:\"warning\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Text,{bold:true,mb:\"8px\",children:t('You are the first liquidity provider.')}),/*#__PURE__*/_jsx(Text,{mb:\"8px\",children:t('The ratio of tokens you add will set the price of this pool.')}),/*#__PURE__*/_jsx(Text,{children:t('Once you are happy with the rate click supply to review.')})]})})}),/*#__PURE__*/_jsx(CurrencyInputPanel,{value:formattedAmounts[Field.CURRENCY_A],onUserInput:onFieldAInput,onMax:function onMax(){var _maxAmounts$Field$CUR,_maxAmounts$Field$CUR2;onFieldAInput((_maxAmounts$Field$CUR=(_maxAmounts$Field$CUR2=maxAmounts[Field.CURRENCY_A])===null||_maxAmounts$Field$CUR2===void 0?void 0:_maxAmounts$Field$CUR2.toExact())!==null&&_maxAmounts$Field$CUR!==void 0?_maxAmounts$Field$CUR:'');},onCurrencySelect:handleCurrencyASelect,showMaxButton:!atMaxAmounts[Field.CURRENCY_A],currency:currencies[Field.CURRENCY_A],id:\"add-liquidity-input-tokena\",showCommonBases:true}),/*#__PURE__*/_jsx(ColumnCenter,{children:/*#__PURE__*/_jsx(AddIcon,{width:\"16px\"})}),/*#__PURE__*/_jsx(CurrencyInputPanel,{value:formattedAmounts[Field.CURRENCY_B],onUserInput:onFieldBInput,onCurrencySelect:handleCurrencyBSelect,onMax:function onMax(){var _maxAmounts$Field$CUR3,_maxAmounts$Field$CUR4;onFieldBInput((_maxAmounts$Field$CUR3=(_maxAmounts$Field$CUR4=maxAmounts[Field.CURRENCY_B])===null||_maxAmounts$Field$CUR4===void 0?void 0:_maxAmounts$Field$CUR4.toExact())!==null&&_maxAmounts$Field$CUR3!==void 0?_maxAmounts$Field$CUR3:'');},showMaxButton:!atMaxAmounts[Field.CURRENCY_B],currency:currencies[Field.CURRENCY_B],id:\"add-liquidity-input-tokenb\",showCommonBases:true}),currencies[Field.CURRENCY_A]&&currencies[Field.CURRENCY_B]&&pairState!==PairState.INVALID&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(LightCard,{padding:\"0px\",borderRadius:\"20px\",children:[/*#__PURE__*/_jsx(RowBetween,{padding:\"1rem\",children:/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",children:noLiquidity?t('Initial prices and pool share'):t('Prices and pool share')})}),' ',/*#__PURE__*/_jsx(LightCard,{padding:\"1rem\",borderRadius:\"20px\",children:/*#__PURE__*/_jsx(PoolPriceBar,{currencies:currencies,poolTokenPercentage:poolTokenPercentage,noLiquidity:noLiquidity,price:price})})]})}),addIsUnsupported?/*#__PURE__*/_jsx(Button,{disabled:true,mb:\"4px\",children:t('Unsupported Asset')}):!account?/*#__PURE__*/_jsx(ConnectWalletButton,{}):/*#__PURE__*/_jsxs(AutoColumn,{gap:\"md\",children:[(approvalA===ApprovalState.NOT_APPROVED||approvalA===ApprovalState.PENDING||approvalB===ApprovalState.NOT_APPROVED||approvalB===ApprovalState.PENDING)&&isValid&&/*#__PURE__*/_jsxs(RowBetween,{children:[approvalA!==ApprovalState.APPROVED&&/*#__PURE__*/_jsx(Button,{onClick:approveACallback,disabled:approvalA===ApprovalState.PENDING,width:approvalB!==ApprovalState.APPROVED?'48%':'100%',children:approvalA===ApprovalState.PENDING?/*#__PURE__*/_jsx(Dots,{children:t('Enabling %asset%',{asset:(_currencies$Field$CUR9=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR9===void 0?void 0:_currencies$Field$CUR9.symbol})}):t('Enable %asset%',{asset:(_currencies$Field$CUR10=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR10===void 0?void 0:_currencies$Field$CUR10.symbol})}),approvalB!==ApprovalState.APPROVED&&/*#__PURE__*/_jsx(Button,{onClick:approveBCallback,disabled:approvalB===ApprovalState.PENDING,width:approvalA!==ApprovalState.APPROVED?'48%':'100%',children:approvalB===ApprovalState.PENDING?/*#__PURE__*/_jsx(Dots,{children:t('Enabling %asset%',{asset:(_currencies$Field$CUR11=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR11===void 0?void 0:_currencies$Field$CUR11.symbol})}):t('Enable %asset%',{asset:(_currencies$Field$CUR12=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR12===void 0?void 0:_currencies$Field$CUR12.symbol})})]}),/*#__PURE__*/_jsx(Button,{variant:!isValid&&!!parsedAmounts[Field.CURRENCY_A]&&!!parsedAmounts[Field.CURRENCY_B]?'danger':'primary',onClick:function onClick(){if(expertMode){onAdd();}else{onPresentAddLiquidityModal();}},disabled:!isValid||approvalA!==ApprovalState.APPROVED||approvalB!==ApprovalState.APPROVED,children:error!==null&&error!==void 0?error:t('Supply')})]})]})})]}),!addIsUnsupported?pair&&!noLiquidity&&pairState!==PairState.INVALID?/*#__PURE__*/_jsx(AutoColumn,{style:{minWidth:'20rem',width:'100%',maxWidth:'400px',marginTop:'1rem'},children:/*#__PURE__*/_jsx(MinimalPositionCard,{showUnwrapped:oneCurrencyIsWETH,pair:pair})}):null:/*#__PURE__*/_jsx(UnsupportedCurrencyFooter,{currencies:[currencies.CURRENCY_A,currencies.CURRENCY_B]})]});}","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/AddLiquidity/index.tsx"],"names":["React","useCallback","useEffect","useState","BigNumber","currencyEquals","ETHER","WETH","Button","Text","Flex","AddIcon","CardBody","Message","useModal","useIsTransactionUnsupported","useTranslation","UnsupportedCurrencyFooter","useActiveWeb3React","useDispatch","LightCard","AutoColumn","ColumnCenter","TransactionConfirmationModal","ConfirmationModalContent","CurrencyInputPanel","DoubleCurrencyLogo","AppHeader","AppBody","MinimalPositionCard","Row","RowBetween","ConnectWalletButton","ROUTER_ADDRESS","PairState","useCurrency","ApprovalState","useApproveCallback","useTransactionDeadline","Field","resetMintState","useDerivedMintInfo","useMintActionHandlers","useMintState","useTransactionAdder","useGasPrice","useIsExpertMode","useUserSlippageTolerance","calculateGasMargin","calculateSlippageAmount","getRouterContract","maxAmountSpend","wrappedCurrency","Dots","ConfirmAddModalBottom","currencyId","PoolPriceBar","Page","AddLiquidity","match","params","currencyIdA","currencyIdB","history","account","chainId","library","dispatch","t","gasPrice","currencyA","currencyB","oneCurrencyIsWETH","Boolean","expertMode","independentField","typedValue","otherTypedValue","undefined","dependentField","currencies","pair","pairState","currencyBalances","parsedAmounts","price","noLiquidity","liquidityMinted","poolTokenPercentage","error","onFieldAInput","onFieldBInput","isValid","attemptingTxn","setAttemptingTxn","deadline","allowedSlippage","txHash","setTxHash","formattedAmounts","toSignificant","maxAmounts","CURRENCY_A","CURRENCY_B","reduce","accumulator","field","atMaxAmounts","equalTo","approvalA","approveACallback","approvalB","approveBCallback","addTransaction","onAdd","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","estimateGas","addLiquidityETH","method","args","address","raw","toString","toHexString","value","from","addLiquidity","then","estimatedGasLimit","gasLimit","response","summary","symbol","hash","catch","err","code","console","modalHeader","slippage","modalBottom","pendingText","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","push","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","liquidityToken","onPresentAddLiquidityModal","toExact","INVALID","NOT_APPROVED","PENDING","APPROVED","asset","minWidth","width","maxWidth","marginTop"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from '@pancakeswap/uikit'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from '../../state'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field, resetMintState } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useGasPrice, useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const gasPrice = useGasPrice()\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  useEffect(() => {\n    if (!currencyIdA && !currencyIdB) {\n      dispatch(resetMintState())\n    }\n  }, [dispatch, currencyIdA, currencyIdB])\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n          gasPrice,\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else if (currencyIdB) {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}