{"ast":null,"code":"import _defineProperty from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/* eslint-disable no-param-reassign */import{createReducer}from'@reduxjs/toolkit';import{updateProtocolData,updateProtocolChartData,updateProtocolTransactions,updatePoolData,addPoolKeys,updatePoolChartData,updatePoolTransactions,updateTokenData,addTokenKeys,addTokenPoolAddresses,updateTokenChartData,updateTokenPriceData,updateTokenTransactions}from'./actions';var initialState={protocol:{overview:undefined,chartData:undefined,transactions:undefined},pools:{byAddress:{}},tokens:{byAddress:{}}};export default createReducer(initialState,function(builder){return builder// Protocol actions\n.addCase(updateProtocolData,function(state,_ref){var protocolData=_ref.payload.protocolData;state.protocol.overview=protocolData;}).addCase(updateProtocolChartData,function(state,_ref2){var chartData=_ref2.payload.chartData;state.protocol.chartData=chartData;}).addCase(updateProtocolTransactions,function(state,_ref3){var transactions=_ref3.payload.transactions;state.protocol.transactions=transactions;})// Pools actions\n.addCase(updatePoolData,function(state,_ref4){var pools=_ref4.payload.pools;pools.forEach(function(poolData){state.pools.byAddress[poolData.address]=_objectSpread(_objectSpread({},state.pools.byAddress[poolData.address]),{},{data:poolData});});}).addCase(addPoolKeys,function(state,_ref5){var poolAddresses=_ref5.payload.poolAddresses;poolAddresses.forEach(function(address){if(!state.pools.byAddress[address]){state.pools.byAddress[address]={data:undefined,chartData:undefined,transactions:undefined};}});}).addCase(updatePoolChartData,function(state,_ref6){var _ref6$payload=_ref6.payload,poolAddress=_ref6$payload.poolAddress,chartData=_ref6$payload.chartData;state.pools.byAddress[poolAddress]=_objectSpread(_objectSpread({},state.pools.byAddress[poolAddress]),{},{chartData:chartData});}).addCase(updatePoolTransactions,function(state,_ref7){var _ref7$payload=_ref7.payload,poolAddress=_ref7$payload.poolAddress,transactions=_ref7$payload.transactions;state.pools.byAddress[poolAddress]=_objectSpread(_objectSpread({},state.pools.byAddress[poolAddress]),{},{transactions:transactions});})// Tokens actions\n.addCase(updateTokenData,function(state,_ref8){var tokens=_ref8.payload.tokens;tokens.forEach(function(tokenData){state.tokens.byAddress[tokenData.address]=_objectSpread(_objectSpread({},state.tokens.byAddress[tokenData.address]),{},{data:tokenData});});}).addCase(addTokenKeys,function(state,_ref9){var tokenAddresses=_ref9.payload.tokenAddresses;tokenAddresses.forEach(function(address){if(!state.tokens.byAddress[address]){state.tokens.byAddress[address]={poolAddresses:undefined,data:undefined,chartData:undefined,priceData:{},transactions:undefined};}});}).addCase(addTokenPoolAddresses,function(state,_ref10){var _ref10$payload=_ref10.payload,tokenAddress=_ref10$payload.tokenAddress,poolAddresses=_ref10$payload.poolAddresses;state.tokens.byAddress[tokenAddress]=_objectSpread(_objectSpread({},state.tokens.byAddress[tokenAddress]),{},{poolAddresses:poolAddresses});}).addCase(updateTokenChartData,function(state,_ref11){var _ref11$payload=_ref11.payload,tokenAddress=_ref11$payload.tokenAddress,chartData=_ref11$payload.chartData;state.tokens.byAddress[tokenAddress]=_objectSpread(_objectSpread({},state.tokens.byAddress[tokenAddress]),{},{chartData:chartData});}).addCase(updateTokenTransactions,function(state,_ref12){var _ref12$payload=_ref12.payload,tokenAddress=_ref12$payload.tokenAddress,transactions=_ref12$payload.transactions;state.tokens.byAddress[tokenAddress]=_objectSpread(_objectSpread({},state.tokens.byAddress[tokenAddress]),{},{transactions:transactions});}).addCase(updateTokenPriceData,function(state,_ref13){var _objectSpread2;var _ref13$payload=_ref13.payload,tokenAddress=_ref13$payload.tokenAddress,secondsInterval=_ref13$payload.secondsInterval,priceData=_ref13$payload.priceData,oldestFetchedTimestamp=_ref13$payload.oldestFetchedTimestamp;state.tokens.byAddress[tokenAddress]=_objectSpread(_objectSpread({},state.tokens.byAddress[tokenAddress]),{},{priceData:_objectSpread(_objectSpread({},state.tokens.byAddress[tokenAddress].priceData),{},(_objectSpread2={},_defineProperty(_objectSpread2,secondsInterval,priceData),_defineProperty(_objectSpread2,\"oldestFetchedTimestamp\",oldestFetchedTimestamp),_objectSpread2))});});});","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/state/info/index.ts"],"names":["createReducer","updateProtocolData","updateProtocolChartData","updateProtocolTransactions","updatePoolData","addPoolKeys","updatePoolChartData","updatePoolTransactions","updateTokenData","addTokenKeys","addTokenPoolAddresses","updateTokenChartData","updateTokenPriceData","updateTokenTransactions","initialState","protocol","overview","undefined","chartData","transactions","pools","byAddress","tokens","builder","addCase","state","protocolData","payload","forEach","poolData","address","data","poolAddresses","poolAddress","tokenData","tokenAddresses","priceData","tokenAddress","secondsInterval","oldestFetchedTimestamp"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport { InfoState } from './types'\nimport {\n  updateProtocolData,\n  updateProtocolChartData,\n  updateProtocolTransactions,\n  updatePoolData,\n  addPoolKeys,\n  updatePoolChartData,\n  updatePoolTransactions,\n  updateTokenData,\n  addTokenKeys,\n  addTokenPoolAddresses,\n  updateTokenChartData,\n  updateTokenPriceData,\n  updateTokenTransactions,\n} from './actions'\n\nconst initialState: InfoState = {\n  protocol: {\n    overview: undefined,\n    chartData: undefined,\n    transactions: undefined,\n  },\n  pools: { byAddress: {} },\n  tokens: { byAddress: {} },\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    // Protocol actions\n    .addCase(updateProtocolData, (state, { payload: { protocolData } }) => {\n      state.protocol.overview = protocolData\n    })\n    .addCase(updateProtocolChartData, (state, { payload: { chartData } }) => {\n      state.protocol.chartData = chartData\n    })\n    .addCase(updateProtocolTransactions, (state, { payload: { transactions } }) => {\n      state.protocol.transactions = transactions\n    })\n    // Pools actions\n    .addCase(updatePoolData, (state, { payload: { pools } }) => {\n      pools.forEach((poolData) => {\n        state.pools.byAddress[poolData.address] = {\n          ...state.pools.byAddress[poolData.address],\n          data: poolData,\n        }\n      })\n    })\n    .addCase(addPoolKeys, (state, { payload: { poolAddresses } }) => {\n      poolAddresses.forEach((address) => {\n        if (!state.pools.byAddress[address]) {\n          state.pools.byAddress[address] = {\n            data: undefined,\n            chartData: undefined,\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(updatePoolChartData, (state, { payload: { poolAddress, chartData } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], chartData }\n    })\n    .addCase(updatePoolTransactions, (state, { payload: { poolAddress, transactions } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], transactions }\n    })\n    // Tokens actions\n    .addCase(updateTokenData, (state, { payload: { tokens } }) => {\n      tokens.forEach((tokenData) => {\n        state.tokens.byAddress[tokenData.address] = {\n          ...state.tokens.byAddress[tokenData.address],\n          data: tokenData,\n        }\n      })\n    })\n    .addCase(addTokenKeys, (state, { payload: { tokenAddresses } }) => {\n      tokenAddresses.forEach((address) => {\n        if (!state.tokens.byAddress[address]) {\n          state.tokens.byAddress[address] = {\n            poolAddresses: undefined,\n            data: undefined,\n            chartData: undefined,\n            priceData: {},\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(addTokenPoolAddresses, (state, { payload: { tokenAddress, poolAddresses } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], poolAddresses }\n    })\n    .addCase(updateTokenChartData, (state, { payload: { tokenAddress, chartData } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], chartData }\n    })\n    .addCase(updateTokenTransactions, (state, { payload: { tokenAddress, transactions } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], transactions }\n    })\n    .addCase(\n      updateTokenPriceData,\n      (state, { payload: { tokenAddress, secondsInterval, priceData, oldestFetchedTimestamp } }) => {\n        state.tokens.byAddress[tokenAddress] = {\n          ...state.tokens.byAddress[tokenAddress],\n          priceData: {\n            ...state.tokens.byAddress[tokenAddress].priceData,\n            [secondsInterval]: priceData,\n            oldestFetchedTimestamp,\n          },\n        }\n      },\n    ),\n)\n"]},"metadata":{},"sourceType":"module"}