{"ast":null,"code":"import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7;import React from'react';import styled,{keyframes,css}from'styled-components';import{Box,Button,Flex,HelpIcon,Link,LinkExternal,MetamaskIcon,Skeleton,Text,TimerIcon,useTooltip}from'@pancakeswap/uikit';import{BASE_BSC_SCAN_URL}from'config';import{getBscScanLink}from'utils';import{useBlock}from'state/block/hooks';import{useCakeVault}from'state/pools/hooks';import BigNumber from'bignumber.js';import{useTranslation}from'contexts/Localization';import Balance from'components/Balance';import{CompoundingPoolTag,ManualPoolTag}from'components/Tags';import{getAddress,getCakeVaultAddress}from'utils/addressHelpers';import{BIG_ZERO}from'utils/bigNumber';import{registerToken}from'utils/wallet';import{getBalanceNumber,getFullDisplayBalance}from'utils/formatBalance';import{convertSharesToCake,getPoolBlockInfo}from'views/Pools/helpers';import Harvest from'./Harvest';import Stake from'./Stake';import Apr from'../Apr';import AutoHarvest from'./AutoHarvest';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var expandAnimation=keyframes(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  from {\\n    max-height: 0px;\\n  }\\n  to {\\n    max-height: 700px;\\n  }\\n\"])));var collapseAnimation=keyframes(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  from {\\n    max-height: 700px;\\n  }\\n  to {\\n    max-height: 0px;\\n  }\\n\"])));var StyledActionPanel=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  animation: \",\";\\n  overflow: hidden;\\n  background: \",\";\\n  display: flex;\\n  flex-direction: column-reverse;\\n  justify-content: center;\\n  padding: 12px;\\n\\n  \",\" {\\n    flex-direction: row;\\n    padding: 16px 32px;\\n  }\\n\"])),function(_ref){var expanded=_ref.expanded;return expanded?css(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n          \",\" 300ms linear forwards\\n        \"])),expandAnimation):css(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n          \",\" 300ms linear forwards\\n        \"])),collapseAnimation);},function(_ref2){var theme=_ref2.theme;return theme.colors.dropdown;},function(_ref3){var theme=_ref3.theme;return theme.mediaQueries.lg;});var ActionContainer=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n\\n  \",\" {\\n    flex-direction: row;\\n    align-items: center;\\n    flex-grow: 1;\\n    flex-basis: 0;\\n  }\\n\"])),function(_ref4){var theme=_ref4.theme;return theme.mediaQueries.sm;});var InfoSection=styled(Box)(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  flex-grow: 0;\\n  flex-shrink: 0;\\n  flex-basis: auto;\\n  padding: 8px 8px;\\n  \",\" {\\n    padding: 0;\\n    flex-basis: 230px;\\n  }\\n\"])),function(_ref5){var theme=_ref5.theme;return theme.mediaQueries.lg;});var ActionPanel=function ActionPanel(_ref6){var _window$ethereum;var account=_ref6.account,pool=_ref6.pool,userDataLoaded=_ref6.userDataLoaded,expanded=_ref6.expanded,breakpoints=_ref6.breakpoints;var sousId=pool.sousId,stakingToken=pool.stakingToken,earningToken=pool.earningToken,totalStaked=pool.totalStaked,startBlock=pool.startBlock,endBlock=pool.endBlock,stakingLimit=pool.stakingLimit,contractAddress=pool.contractAddress,userData=pool.userData,isAutoVault=pool.isAutoVault;var _useTranslation=useTranslation(),t=_useTranslation.t;var poolContractAddress=getAddress(contractAddress);var cakeVaultContractAddress=getCakeVaultAddress();var _useBlock=useBlock(),currentBlock=_useBlock.currentBlock;var isXs=breakpoints.isXs,isSm=breakpoints.isSm,isMd=breakpoints.isMd;var showSubtitle=(isXs||isSm)&&sousId===0;var _getPoolBlockInfo=getPoolBlockInfo(pool,currentBlock),shouldShowBlockCountdown=_getPoolBlockInfo.shouldShowBlockCountdown,blocksUntilStart=_getPoolBlockInfo.blocksUntilStart,blocksRemaining=_getPoolBlockInfo.blocksRemaining,hasPoolStarted=_getPoolBlockInfo.hasPoolStarted,blocksToDisplay=_getPoolBlockInfo.blocksToDisplay;var isMetaMaskInScope=!!((_window$ethereum=window.ethereum)===null||_window$ethereum===void 0?void 0:_window$ethereum.isMetaMask);var tokenAddress=earningToken.address||'';var _useCakeVault=useCakeVault(),totalCakeInVault=_useCakeVault.totalCakeInVault,userShares=_useCakeVault.userData.userShares,performanceFee=_useCakeVault.fees.performanceFee,pricePerFullShare=_useCakeVault.pricePerFullShare;var stakingTokenBalance=(userData===null||userData===void 0?void 0:userData.stakingTokenBalance)?new BigNumber(userData.stakingTokenBalance):BIG_ZERO;var stakedBalance=(userData===null||userData===void 0?void 0:userData.stakedBalance)?new BigNumber(userData.stakedBalance):BIG_ZERO;var _convertSharesToCake=convertSharesToCake(userShares,pricePerFullShare),cakeAsBigNumber=_convertSharesToCake.cakeAsBigNumber;var poolStakingTokenBalance=isAutoVault?cakeAsBigNumber.plus(stakingTokenBalance):stakedBalance.plus(stakingTokenBalance);var performanceFeeAsDecimal=performanceFee&&performanceFee/100;var isManualCakePool=sousId===0;var getTotalStakedBalance=function getTotalStakedBalance(){if(isAutoVault){return getBalanceNumber(totalCakeInVault,stakingToken.decimals);}if(isManualCakePool){var manualCakeTotalMinusAutoVault=new BigNumber(totalStaked).minus(totalCakeInVault);return getBalanceNumber(manualCakeTotalMinusAutoVault,stakingToken.decimals);}return getBalanceNumber(totalStaked,stakingToken.decimals);};var _useTooltip=useTooltip(t('Total amount of %symbol% staked in this pool',{symbol:stakingToken.symbol}),{placement:'bottom'}),totalStakedTargetRef=_useTooltip.targetRef,totalStakedTooltip=_useTooltip.tooltip,totalStakedTooltipVisible=_useTooltip.tooltipVisible;var manualTooltipText=t('You must harvest and compound your earnings from this pool manually.');var autoTooltipText=t('Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.');var _useTooltip2=useTooltip(isAutoVault?autoTooltipText:manualTooltipText,{placement:'bottom-start'}),tagTargetRef=_useTooltip2.targetRef,tagTooltip=_useTooltip2.tooltip,tagTooltipVisible=_useTooltip2.tooltipVisible;var maxStakeRow=stakingLimit.gt(0)?/*#__PURE__*/_jsxs(Flex,{mb:\"8px\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Text,{children:[t('Max. stake per user'),\":\"]}),/*#__PURE__*/_jsx(Text,{children:\"\".concat(getFullDisplayBalance(stakingLimit,stakingToken.decimals,0),\" \").concat(stakingToken.symbol)})]}):null;var blocksRow=blocksRemaining||blocksUntilStart?/*#__PURE__*/_jsxs(Flex,{mb:\"8px\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Text,{children:[hasPoolStarted?t('Ends in'):t('Starts in'),\":\"]}),/*#__PURE__*/_jsx(Flex,{children:/*#__PURE__*/_jsxs(Link,{external:true,href:getBscScanLink(hasPoolStarted?endBlock:startBlock,'countdown'),children:[/*#__PURE__*/_jsx(Balance,{fontSize:\"16px\",value:blocksToDisplay,decimals:0,color:\"primary\"}),/*#__PURE__*/_jsx(Text,{ml:\"4px\",color:\"primary\",textTransform:\"lowercase\",children:t('Blocks')}),/*#__PURE__*/_jsx(TimerIcon,{ml:\"4px\",color:\"primary\"})]})})]}):/*#__PURE__*/_jsx(Skeleton,{width:\"56px\",height:\"16px\"});var aprRow=/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",mb:\"8px\",children:[/*#__PURE__*/_jsxs(Text,{children:[isAutoVault?t('APY'):t('APR'),\":\"]}),/*#__PURE__*/_jsx(Apr,{pool:pool,showIcon:true,stakedBalance:poolStakingTokenBalance,performanceFee:isAutoVault?performanceFeeAsDecimal:0})]});var totalStakedRow=/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",mb:\"8px\",children:[/*#__PURE__*/_jsxs(Text,{maxWidth:['50px','100%'],children:[t('Total staked'),\":\"]}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[totalStaked&&totalStaked.gte(0)?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Balance,{fontSize:\"16px\",value:getTotalStakedBalance(),decimals:0,unit:\" \".concat(stakingToken.symbol)}),/*#__PURE__*/_jsx(\"span\",{ref:totalStakedTargetRef,children:/*#__PURE__*/_jsx(HelpIcon,{color:\"textSubtle\",width:\"20px\",ml:\"4px\"})})]}):/*#__PURE__*/_jsx(Skeleton,{width:\"56px\",height:\"16px\"}),totalStakedTooltipVisible&&totalStakedTooltip]})]});return/*#__PURE__*/_jsxs(StyledActionPanel,{expanded:expanded,children:[/*#__PURE__*/_jsxs(InfoSection,{children:[maxStakeRow,(isXs||isSm)&&aprRow,(isXs||isSm||isMd)&&totalStakedRow,shouldShowBlockCountdown&&blocksRow,/*#__PURE__*/_jsx(Flex,{mb:\"8px\",justifyContent:['flex-end','flex-end','flex-start'],children:/*#__PURE__*/_jsx(LinkExternal,{href:\"/info/token/\".concat(earningToken.address),bold:false,children:t('See Token Info')})}),/*#__PURE__*/_jsx(Flex,{mb:\"8px\",justifyContent:['flex-end','flex-end','flex-start'],children:/*#__PURE__*/_jsx(LinkExternal,{href:earningToken.projectLink,bold:false,children:t('View Project Site')})}),poolContractAddress&&/*#__PURE__*/_jsx(Flex,{mb:\"8px\",justifyContent:['flex-end','flex-end','flex-start'],children:/*#__PURE__*/_jsx(LinkExternal,{href:\"\".concat(BASE_BSC_SCAN_URL,\"/address/\").concat(isAutoVault?cakeVaultContractAddress:poolContractAddress),bold:false,children:t('View Contract')})}),account&&isMetaMaskInScope&&tokenAddress&&/*#__PURE__*/_jsx(Flex,{mb:\"8px\",justifyContent:['flex-end','flex-end','flex-start'],children:/*#__PURE__*/_jsxs(Button,{variant:\"text\",p:\"0\",height:\"auto\",onClick:function onClick(){return registerToken(tokenAddress,earningToken.symbol,earningToken.decimals);},children:[/*#__PURE__*/_jsx(Text,{color:\"primary\",children:t('Add to Metamask')}),/*#__PURE__*/_jsx(MetamaskIcon,{ml:\"4px\"})]})}),isAutoVault?/*#__PURE__*/_jsx(CompoundingPoolTag,{}):/*#__PURE__*/_jsx(ManualPoolTag,{}),tagTooltipVisible&&tagTooltip,/*#__PURE__*/_jsx(\"span\",{ref:tagTargetRef,children:/*#__PURE__*/_jsx(HelpIcon,{ml:\"4px\",width:\"20px\",height:\"20px\",color:\"textSubtle\"})})]}),/*#__PURE__*/_jsxs(ActionContainer,{children:[showSubtitle&&/*#__PURE__*/_jsx(Text,{mt:\"4px\",mb:\"16px\",color:\"textSubtle\",children:isAutoVault?t('Automatic restaking'):\"\".concat(t('Earn'),\" CAKE \").concat(t('Stake').toLocaleLowerCase(),\" CAKE\")}),pool.isAutoVault?/*#__PURE__*/_jsx(AutoHarvest,_objectSpread(_objectSpread({},pool),{},{userDataLoaded:userDataLoaded})):/*#__PURE__*/_jsx(Harvest,_objectSpread(_objectSpread({},pool),{},{userDataLoaded:userDataLoaded})),/*#__PURE__*/_jsx(Stake,{pool:pool,userDataLoaded:userDataLoaded})]})]});};export default ActionPanel;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx"],"names":["React","styled","keyframes","css","Box","Button","Flex","HelpIcon","Link","LinkExternal","MetamaskIcon","Skeleton","Text","TimerIcon","useTooltip","BASE_BSC_SCAN_URL","getBscScanLink","useBlock","useCakeVault","BigNumber","useTranslation","Balance","CompoundingPoolTag","ManualPoolTag","getAddress","getCakeVaultAddress","BIG_ZERO","registerToken","getBalanceNumber","getFullDisplayBalance","convertSharesToCake","getPoolBlockInfo","Harvest","Stake","Apr","AutoHarvest","expandAnimation","collapseAnimation","StyledActionPanel","div","expanded","theme","colors","dropdown","mediaQueries","lg","ActionContainer","sm","InfoSection","ActionPanel","account","pool","userDataLoaded","breakpoints","sousId","stakingToken","earningToken","totalStaked","startBlock","endBlock","stakingLimit","contractAddress","userData","isAutoVault","t","poolContractAddress","cakeVaultContractAddress","currentBlock","isXs","isSm","isMd","showSubtitle","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","isMetaMaskInScope","window","ethereum","isMetaMask","tokenAddress","address","totalCakeInVault","userShares","performanceFee","fees","pricePerFullShare","stakingTokenBalance","stakedBalance","cakeAsBigNumber","poolStakingTokenBalance","plus","performanceFeeAsDecimal","isManualCakePool","getTotalStakedBalance","decimals","manualCakeTotalMinusAutoVault","minus","symbol","placement","totalStakedTargetRef","targetRef","totalStakedTooltip","tooltip","totalStakedTooltipVisible","tooltipVisible","manualTooltipText","autoTooltipText","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","gt","blocksRow","aprRow","totalStakedRow","gte","projectLink","toLocaleLowerCase"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { convertSharesToCake, getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\nimport AutoHarvest from './AutoHarvest'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n  isXxl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: DeserializedPool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    userData,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address || ''\n\n  const {\n    totalCakeInVault,\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const poolStakingTokenBalance = isAutoVault\n    ? cakeAsBigNumber.plus(stakingTokenBalance)\n    : stakedBalance.plus(stakingTokenBalance)\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr\n        pool={pool}\n        showIcon\n        stakedBalance={poolStakingTokenBalance}\n        performanceFee={isAutoVault ? performanceFeeAsDecimal : 0}\n      />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`/info/token/${earningToken.address}`} bold={false}>\n            {t('See Token Info')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\n          </Text>\n        )}\n        {pool.isAutoVault ? (\n          <AutoHarvest {...pool} userDataLoaded={userDataLoaded} />\n        ) : (\n          <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        )}\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n"]},"metadata":{},"sourceType":"module"}