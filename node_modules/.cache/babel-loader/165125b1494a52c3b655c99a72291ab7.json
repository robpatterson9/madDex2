{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Flex,Text,Button,Heading,useModal,Skeleton}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{getFullDisplayBalance,getBalanceNumber,formatNumber}from'utils/formatBalance';import Balance from'components/Balance';import CollectModal from'../Modals/CollectModal';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var HarvestActions=function HarvestActions(_ref){var earnings=_ref.earnings,earningToken=_ref.earningToken,sousId=_ref.sousId,isBnbPool=_ref.isBnbPool,earningTokenPrice=_ref.earningTokenPrice,_ref$isLoading=_ref.isLoading,isLoading=_ref$isLoading===void 0?false:_ref$isLoading;var _useTranslation=useTranslation(),t=_useTranslation.t;var earningTokenBalance=getBalanceNumber(earnings,earningToken.decimals);var formattedBalance=formatNumber(earningTokenBalance,3,3);var earningTokenDollarBalance=getBalanceNumber(earnings.multipliedBy(earningTokenPrice),earningToken.decimals);var fullBalance=getFullDisplayBalance(earnings,earningToken.decimals);var hasEarnings=earnings.toNumber()>0;var isCompoundPool=sousId===0;var _useModal=useModal(/*#__PURE__*/_jsx(CollectModal,{formattedBalance:formattedBalance,fullBalance:fullBalance,earningToken:earningToken,earningsDollarValue:earningTokenDollarBalance,sousId:sousId,isBnbPool:isBnbPool,isCompoundPool:isCompoundPool})),_useModal2=_slicedToArray(_useModal,1),onPresentCollect=_useModal2[0];return/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",mb:\"16px\",children:[/*#__PURE__*/_jsx(Flex,{flexDirection:\"column\",children:isLoading?/*#__PURE__*/_jsx(Skeleton,{width:\"80px\",height:\"48px\"}):/*#__PURE__*/_jsx(_Fragment,{children:hasEarnings?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Balance,{bold:true,fontSize:\"20px\",decimals:5,value:earningTokenBalance}),earningTokenPrice>0&&/*#__PURE__*/_jsx(Balance,{display:\"inline\",fontSize:\"12px\",color:\"textSubtle\",decimals:2,prefix:\"~\",value:earningTokenDollarBalance,unit:\" USD\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Heading,{color:\"textDisabled\",children:\"0\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textDisabled\",children:\"0 USD\"})]})})}),/*#__PURE__*/_jsx(Button,{disabled:!hasEarnings,onClick:onPresentCollect,children:isCompoundPool?t('Collect'):t('Harvest')})]});};export default HarvestActions;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Pools/components/PoolCard/CardActions/HarvestActions.tsx"],"names":["React","Flex","Text","Button","Heading","useModal","Skeleton","useTranslation","getFullDisplayBalance","getBalanceNumber","formatNumber","Balance","CollectModal","HarvestActions","earnings","earningToken","sousId","isBnbPool","earningTokenPrice","isLoading","t","earningTokenBalance","decimals","formattedBalance","earningTokenDollarBalance","multipliedBy","fullBalance","hasEarnings","toNumber","isCompoundPool","onPresentCollect"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from '@pancakeswap/sdk'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n"]},"metadata":{},"sourceType":"module"}