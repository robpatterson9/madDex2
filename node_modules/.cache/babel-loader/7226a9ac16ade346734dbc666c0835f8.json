{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React from'react';import styled from'styled-components';import{Flex,Box,Image}from'@pancakeswap/uikit';import CakerBunny from'../../pngs/cakers.png';import TopTradersCard from'./TopTradersCard';import Podium from'./Podium';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Wrapper=styled(Flex)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  flex-direction: column;\\n\\n  \",\" {\\n    flex-direction: row;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.mediaQueries.md;});var StyledPodiumWrapper=styled(Flex)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: space-between;\\n  margin-bottom: 40px;\\n\\n  \",\" {\\n    flex: 1;\\n    margin-right: 40px;\\n    margin-bottom: 0;\\n  }\\n\"])),function(_ref2){var theme=_ref2.theme;return theme.mediaQueries.md;});var BunnyImageWrapper=styled(Box)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: none;\\n\\n  \",\" {\\n    display: flex;\\n    width: 200px;\\n    height: 205px;\\n  }\\n\"])),function(_ref3){var theme=_ref3.theme;return theme.mediaQueries.md;});var StyledTopTradersWrapper=styled(Flex)(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  width: 100%;\\n\\n  \",\" {\\n    flex: 2;\\n  }\\n\"])),function(_ref4){var theme=_ref4.theme;return theme.mediaQueries.md;});var TeamRanks=function TeamRanks(_ref5){var team1LeaderboardInformation=_ref5.team1LeaderboardInformation,team2LeaderboardInformation=_ref5.team2LeaderboardInformation,team3LeaderboardInformation=_ref5.team3LeaderboardInformation,globalLeaderboardInformation=_ref5.globalLeaderboardInformation;var isTeamLeaderboardDataComplete=Boolean(team1LeaderboardInformation.leaderboardData&&team2LeaderboardInformation.leaderboardData&&team3LeaderboardInformation.leaderboardData);var isGlobalLeaderboardDataComplete=Boolean(isTeamLeaderboardDataComplete&&globalLeaderboardInformation);var getTeamsSortedByVolume=function getTeamsSortedByVolume(arrayOfTeams){return arrayOfTeams.sort(function(teamA,teamB){return teamB.leaderboardData.volume-teamA.leaderboardData.volume;});};return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsxs(StyledPodiumWrapper,{children:[/*#__PURE__*/_jsx(Podium,{teamsSortedByVolume:isTeamLeaderboardDataComplete&&getTeamsSortedByVolume([team1LeaderboardInformation,team2LeaderboardInformation,team3LeaderboardInformation])}),/*#__PURE__*/_jsx(BunnyImageWrapper,{mt:\"24px\",children:/*#__PURE__*/_jsx(Image,{src:CakerBunny,width:200,height:205})})]}),/*#__PURE__*/_jsx(StyledTopTradersWrapper,{children:/*#__PURE__*/_jsx(TopTradersCard,{team1LeaderboardInformation:team1LeaderboardInformation,team2LeaderboardInformation:team2LeaderboardInformation,team3LeaderboardInformation:team3LeaderboardInformation,globalLeaderboardInformation:globalLeaderboardInformation,isGlobalLeaderboardDataComplete:isGlobalLeaderboardDataComplete})})]});};export default TeamRanks;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/TradingCompetition/components/TeamRanks/index.tsx"],"names":["React","styled","Flex","Box","Image","CakerBunny","TopTradersCard","Podium","Wrapper","theme","mediaQueries","md","StyledPodiumWrapper","BunnyImageWrapper","StyledTopTradersWrapper","TeamRanks","team1LeaderboardInformation","team2LeaderboardInformation","team3LeaderboardInformation","globalLeaderboardInformation","isTeamLeaderboardDataComplete","Boolean","leaderboardData","isGlobalLeaderboardDataComplete","getTeamsSortedByVolume","arrayOfTeams","sort","teamA","teamB","volume"],"mappings":"+OAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,IAAT,CAAeC,GAAf,CAAoBC,KAApB,KAAiC,oBAAjC,CAEA,MAAOC,CAAAA,UAAP,KAAuB,uBAAvB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,C,wFAEA,GAAMC,CAAAA,OAAO,CAAGP,MAAM,CAACC,IAAD,CAAT,wIAGT,kBAAGO,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,YAAN,CAAmBC,EAAlC,EAHS,CAAb,CAQA,GAAMC,CAAAA,mBAAmB,CAAGX,MAAM,CAACC,IAAD,CAAT,iQAMrB,mBAAGO,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,YAAN,CAAmBC,EAAlC,EANqB,CAAzB,CAaA,GAAME,CAAAA,iBAAiB,CAAGZ,MAAM,CAACE,GAAD,CAAT,kKAGnB,mBAAGM,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,YAAN,CAAmBC,EAAlC,EAHmB,CAAvB,CAUA,GAAMG,CAAAA,uBAAuB,CAAGb,MAAM,CAACC,IAAD,CAAT,mHAGzB,mBAAGO,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,YAAN,CAAmBC,EAAlC,EAHyB,CAA7B,CAQA,GAAMI,CAAAA,SAAmC,CAAG,QAAtCA,CAAAA,SAAsC,OAKtC,IAJJC,CAAAA,2BAII,OAJJA,2BAII,CAHJC,2BAGI,OAHJA,2BAGI,CAFJC,2BAEI,OAFJA,2BAEI,CADJC,4BACI,OADJA,4BACI,CACJ,GAAMC,CAAAA,6BAA6B,CAAGC,OAAO,CAC3CL,2BAA2B,CAACM,eAA5B,EACEL,2BAA2B,CAACK,eAD9B,EAEEJ,2BAA2B,CAACI,eAHa,CAA7C,CAMA,GAAMC,CAAAA,+BAA+B,CAAGF,OAAO,CAACD,6BAA6B,EAAID,4BAAlC,CAA/C,CAEA,GAAMK,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACC,YAAD,CAAkB,CAC/C,MAAOA,CAAAA,YAAY,CAACC,IAAb,CAAkB,SAACC,KAAD,CAAQC,KAAR,QAAkBA,CAAAA,KAAK,CAACN,eAAN,CAAsBO,MAAtB,CAA+BF,KAAK,CAACL,eAAN,CAAsBO,MAAvE,EAAlB,CAAP,CACD,CAFD,CAIA,mBACE,MAAC,OAAD,yBACE,MAAC,mBAAD,yBACE,KAAC,MAAD,EACE,mBAAmB,CACjBT,6BAA6B,EAC7BI,sBAAsB,CAAC,CACrBR,2BADqB,CAErBC,2BAFqB,CAGrBC,2BAHqB,CAAD,CAH1B,EADF,cAWE,KAAC,iBAAD,EAAmB,EAAE,CAAC,MAAtB,uBACE,KAAC,KAAD,EAAO,GAAG,CAAEb,UAAZ,CAAwB,KAAK,CAAE,GAA/B,CAAoC,MAAM,CAAE,GAA5C,EADF,EAXF,GADF,cAgBE,KAAC,uBAAD,wBACE,KAAC,cAAD,EACE,2BAA2B,CAAEW,2BAD/B,CAEE,2BAA2B,CAAEC,2BAF/B,CAGE,2BAA2B,CAAEC,2BAH/B,CAIE,4BAA4B,CAAEC,4BAJhC,CAKE,+BAA+B,CAAEI,+BALnC,EADF,EAhBF,GADF,CA4BD,CA9CD,CAgDA,cAAeR,CAAAA,SAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Image } from '@pancakeswap/uikit'\nimport { TeamRanksProps } from '../../types'\nimport CakerBunny from '../../pngs/cakers.png'\nimport TopTradersCard from './TopTradersCard'\nimport Podium from './Podium'\n\nconst Wrapper = styled(Flex)`\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nconst StyledPodiumWrapper = styled(Flex)`\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 40px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 1;\n    margin-right: 40px;\n    margin-bottom: 0;\n  }\n`\n\nconst BunnyImageWrapper = styled(Box)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: flex;\n    width: 200px;\n    height: 205px;\n  }\n`\n\nconst StyledTopTradersWrapper = styled(Flex)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 2;\n  }\n`\n\nconst TeamRanks: React.FC<TeamRanksProps> = ({\n  team1LeaderboardInformation,\n  team2LeaderboardInformation,\n  team3LeaderboardInformation,\n  globalLeaderboardInformation,\n}) => {\n  const isTeamLeaderboardDataComplete = Boolean(\n    team1LeaderboardInformation.leaderboardData &&\n      team2LeaderboardInformation.leaderboardData &&\n      team3LeaderboardInformation.leaderboardData,\n  )\n\n  const isGlobalLeaderboardDataComplete = Boolean(isTeamLeaderboardDataComplete && globalLeaderboardInformation)\n\n  const getTeamsSortedByVolume = (arrayOfTeams) => {\n    return arrayOfTeams.sort((teamA, teamB) => teamB.leaderboardData.volume - teamA.leaderboardData.volume)\n  }\n\n  return (\n    <Wrapper>\n      <StyledPodiumWrapper>\n        <Podium\n          teamsSortedByVolume={\n            isTeamLeaderboardDataComplete &&\n            getTeamsSortedByVolume([\n              team1LeaderboardInformation,\n              team2LeaderboardInformation,\n              team3LeaderboardInformation,\n            ])\n          }\n        />\n        <BunnyImageWrapper mt=\"24px\">\n          <Image src={CakerBunny} width={200} height={205} />\n        </BunnyImageWrapper>\n      </StyledPodiumWrapper>\n      <StyledTopTradersWrapper>\n        <TopTradersCard\n          team1LeaderboardInformation={team1LeaderboardInformation}\n          team2LeaderboardInformation={team2LeaderboardInformation}\n          team3LeaderboardInformation={team3LeaderboardInformation}\n          globalLeaderboardInformation={globalLeaderboardInformation}\n          isGlobalLeaderboardDataComplete={isGlobalLeaderboardDataComplete}\n        />\n      </StyledTopTradersWrapper>\n    </Wrapper>\n  )\n}\n\nexport default TeamRanks\n"]},"metadata":{},"sourceType":"module"}