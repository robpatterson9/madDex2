{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Button,Text,useModal,Flex,Skeleton,Heading}from'@pancakeswap/uikit';import BigNumber from'bignumber.js';import{useWeb3React}from'@web3-react/core';import{PoolCategory}from'config/constants/types';import{formatNumber,getBalanceNumber,getFullDisplayBalance}from'utils/formatBalance';import{useTranslation}from'contexts/Localization';import Balance from'components/Balance';import{BIG_ZERO}from'utils/bigNumber';import{ActionContainer,ActionTitles,ActionContent}from'./styles';import CollectModal from'../../PoolCard/Modals/CollectModal';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var HarvestAction=function HarvestAction(_ref){var sousId=_ref.sousId,poolCategory=_ref.poolCategory,earningToken=_ref.earningToken,userData=_ref.userData,userDataLoaded=_ref.userDataLoaded,earningTokenPrice=_ref.earningTokenPrice;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var earnings=(userData===null||userData===void 0?void 0:userData.pendingReward)?new BigNumber(userData.pendingReward):BIG_ZERO;var earningTokenBalance=getBalanceNumber(earnings,earningToken.decimals);var earningTokenDollarBalance=getBalanceNumber(earnings.multipliedBy(earningTokenPrice),earningToken.decimals);var hasEarnings=earnings.gt(0);var fullBalance=getFullDisplayBalance(earnings,earningToken.decimals);var formattedBalance=formatNumber(earningTokenBalance,3,3);var isCompoundPool=sousId===0;var isBnbPool=poolCategory===PoolCategory.BINANCE;var _useModal=useModal(/*#__PURE__*/_jsx(CollectModal,{formattedBalance:formattedBalance,fullBalance:fullBalance,earningToken:earningToken,earningsDollarValue:earningTokenDollarBalance,sousId:sousId,isBnbPool:isBnbPool,isCompoundPool:isCompoundPool})),_useModal2=_slicedToArray(_useModal,1),onPresentCollect=_useModal2[0];var actionTitle=/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Text,{fontSize:\"12px\",bold:true,color:\"secondary\",as:\"span\",textTransform:\"uppercase\",children:[earningToken.symbol,' ']}),/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",bold:true,color:\"textSubtle\",as:\"span\",textTransform:\"uppercase\",children:t('Earned')})]});if(!account){return/*#__PURE__*/_jsxs(ActionContainer,{children:[/*#__PURE__*/_jsx(ActionTitles,{children:actionTitle}),/*#__PURE__*/_jsxs(ActionContent,{children:[/*#__PURE__*/_jsx(Heading,{children:\"0\"}),/*#__PURE__*/_jsx(Button,{disabled:true,children:isCompoundPool?t('Collect'):t('Harvest')})]})]});}if(!userDataLoaded){return/*#__PURE__*/_jsxs(ActionContainer,{children:[/*#__PURE__*/_jsx(ActionTitles,{children:actionTitle}),/*#__PURE__*/_jsx(ActionContent,{children:/*#__PURE__*/_jsx(Skeleton,{width:180,height:\"32px\",marginTop:14})})]});}return/*#__PURE__*/_jsxs(ActionContainer,{children:[/*#__PURE__*/_jsx(ActionTitles,{children:actionTitle}),/*#__PURE__*/_jsxs(ActionContent,{children:[/*#__PURE__*/_jsx(Flex,{flex:\"1\",pt:\"16px\",flexDirection:\"column\",alignSelf:\"flex-start\",children:/*#__PURE__*/_jsx(_Fragment,{children:hasEarnings?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Balance,{lineHeight:\"1\",bold:true,fontSize:\"20px\",decimals:5,value:earningTokenBalance}),earningTokenPrice>0&&/*#__PURE__*/_jsx(Balance,{display:\"inline\",fontSize:\"12px\",color:\"textSubtle\",decimals:2,prefix:\"~\",value:earningTokenDollarBalance,unit:\" USD\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Heading,{color:\"textDisabled\",children:\"0\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textDisabled\",children:\"0 USD\"})]})})}),/*#__PURE__*/_jsx(Button,{disabled:!hasEarnings,onClick:onPresentCollect,children:isCompoundPool?t('Collect'):t('Harvest')})]})]});};export default HarvestAction;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx"],"names":["React","Button","Text","useModal","Flex","Skeleton","Heading","BigNumber","useWeb3React","PoolCategory","formatNumber","getBalanceNumber","getFullDisplayBalance","useTranslation","Balance","BIG_ZERO","ActionContainer","ActionTitles","ActionContent","CollectModal","HarvestAction","sousId","poolCategory","earningToken","userData","userDataLoaded","earningTokenPrice","t","account","earnings","pendingReward","earningTokenBalance","decimals","earningTokenDollarBalance","multipliedBy","hasEarnings","gt","fullBalance","formattedBalance","isCompoundPool","isBnbPool","BINANCE","onPresentCollect","actionTitle","symbol"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, Text, useModal, Flex, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { DeserializedPool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface HarvestActionProps extends DeserializedPool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const actionTitle = (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n          {isCompoundPool ? t('Collect') : t('Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n"]},"metadata":{},"sourceType":"module"}