{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{Modal}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{LotteryStatus}from'config/constants/types';import{useLottery}from'state/lottery/hooks';import useTheme from'hooks/useTheme';import PreviousRoundTicketsInner from'./PreviousRoundTicketsInner';import CurrentRoundTicketsInner from'./CurrentRoundTicketsInner';import{jsx as _jsx}from\"react/jsx-runtime\";var StyledModal=styled(Modal)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  min-width: 280px;\\n  max-width: 320px;\\n\"])));var ViewTicketsModal=function ViewTicketsModal(_ref){var onDismiss=_ref.onDismiss,roundId=_ref.roundId,roundStatus=_ref.roundStatus;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useTheme=useTheme(),theme=_useTheme.theme;var _useLottery=useLottery(),currentLotteryId=_useLottery.currentLotteryId;var isPreviousRound=(roundStatus===null||roundStatus===void 0?void 0:roundStatus.toLowerCase())===LotteryStatus.CLAIMABLE||roundId!==currentLotteryId;return/*#__PURE__*/_jsx(StyledModal,{title:\"\".concat(t('Round'),\" \").concat(roundId),onDismiss:onDismiss,headerBackground:theme.colors.gradients.cardHeader,children:isPreviousRound?/*#__PURE__*/_jsx(PreviousRoundTicketsInner,{roundId:roundId}):/*#__PURE__*/_jsx(CurrentRoundTicketsInner,{})});};export default ViewTicketsModal;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Lottery/components/ViewTicketsModal/index.tsx"],"names":["React","styled","Modal","useTranslation","LotteryStatus","useLottery","useTheme","PreviousRoundTicketsInner","CurrentRoundTicketsInner","StyledModal","ViewTicketsModal","onDismiss","roundId","roundStatus","t","theme","currentLotteryId","isPreviousRound","toLowerCase","CLAIMABLE","colors","gradients","cardHeader"],"mappings":"4LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,KAAT,KAAsB,oBAAtB,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,aAAT,KAA8B,wBAA9B,CACA,OAASC,UAAT,KAA2B,qBAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,MAAOC,CAAAA,yBAAP,KAAsC,6BAAtC,CACA,MAAOC,CAAAA,wBAAP,KAAqC,4BAArC,C,2CAEA,GAAMC,CAAAA,WAAW,CAAGR,MAAM,CAACC,KAAD,CAAT,6GAAjB,CAWA,GAAMQ,CAAAA,gBAAiD,CAAG,QAApDA,CAAAA,gBAAoD,MAAyC,IAAtCC,CAAAA,SAAsC,MAAtCA,SAAsC,CAA3BC,OAA2B,MAA3BA,OAA2B,CAAlBC,WAAkB,MAAlBA,WAAkB,CACjG,oBAAcV,cAAc,EAA5B,CAAQW,CAAR,iBAAQA,CAAR,CACA,cAAkBR,QAAQ,EAA1B,CAAQS,KAAR,WAAQA,KAAR,CACA,gBAA6BV,UAAU,EAAvC,CAAQW,gBAAR,aAAQA,gBAAR,CACA,GAAMC,CAAAA,eAAe,CAAG,CAAAJ,WAAW,OAAX,EAAAA,WAAW,SAAX,QAAAA,WAAW,CAAEK,WAAb,MAA+Bd,aAAa,CAACe,SAA7C,EAA0DP,OAAO,GAAKI,gBAA9F,CAEA,mBACE,KAAC,WAAD,EACE,KAAK,WAAKF,CAAC,CAAC,OAAD,CAAN,aAAmBF,OAAnB,CADP,CAEE,SAAS,CAAED,SAFb,CAGE,gBAAgB,CAAEI,KAAK,CAACK,MAAN,CAAaC,SAAb,CAAuBC,UAH3C,UAKGL,eAAe,cAAG,KAAC,yBAAD,EAA2B,OAAO,CAAEL,OAApC,EAAH,cAAqD,KAAC,wBAAD,IALvE,EADF,CASD,CAfD,CAiBA,cAAeF,CAAAA,gBAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Modal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { LotteryStatus } from 'config/constants/types'\nimport { useLottery } from 'state/lottery/hooks'\nimport useTheme from 'hooks/useTheme'\nimport PreviousRoundTicketsInner from './PreviousRoundTicketsInner'\nimport CurrentRoundTicketsInner from './CurrentRoundTicketsInner'\n\nconst StyledModal = styled(Modal)`\n  min-width: 280px;\n  max-width: 320px;\n`\n\ninterface ViewTicketsModalProps {\n  roundId: string\n  roundStatus?: LotteryStatus\n  onDismiss?: () => void\n}\n\nconst ViewTicketsModal: React.FC<ViewTicketsModalProps> = ({ onDismiss, roundId, roundStatus }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { currentLotteryId } = useLottery()\n  const isPreviousRound = roundStatus?.toLowerCase() === LotteryStatus.CLAIMABLE || roundId !== currentLotteryId\n\n  return (\n    <StyledModal\n      title={`${t('Round')} ${roundId}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isPreviousRound ? <PreviousRoundTicketsInner roundId={roundId} /> : <CurrentRoundTicketsInner />}\n    </StyledModal>\n  )\n}\n\nexport default ViewTicketsModal\n"]},"metadata":{},"sourceType":"module"}