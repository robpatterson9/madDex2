{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Info/components/InfoTables/TokensTable.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Text, Flex, Box, Skeleton, useMatchBreakpoints, ArrowBackIcon, ArrowForwardIcon } from '@pancakeswap/uikit';\nimport { Link } from 'react-router-dom';\nimport { CurrencyLogo } from 'views/Info/components/CurrencyLogo';\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers';\nimport Percent from 'views/Info/components/Percent';\nimport { useTranslation } from 'contexts/Localization';\nimport { ClickableColumnHeader, TableWrapper, PageButtons, Arrow, Break } from './shared';\n/**\n *  Columns on different layouts\n *  6 = | # | Name | Price | Price Change | Volume 24H | TVL |\n *  5 = | # | Name | Price |              | Volume 24H | TVL |\n *  4 = | # | Name | Price |              | Volume 24H |     |\n *  2 = |   | Name |       |              | Volume 24H |     |\n *  On smallest screen Name is reduced to just symbol\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  align-items: center;\n\n  padding: 0 24px;\n\n  grid-template-columns: 20px 3fr repeat(4, 1fr);\n\n  @media screen and (max-width: 900px) {\n    grid-template-columns: 20px 2fr repeat(3, 1fr);\n    & :nth-child(4) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 20px 2fr repeat(2, 1fr);\n    & :nth-child(6) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 670px) {\n    grid-template-columns: 1fr 1fr;\n    > *:first-child {\n      display: none;\n    }\n    > *:nth-child(3) {\n      display: none;\n    }\n  }\n`;\n_c = ResponsiveGrid;\nconst LinkWrapper = styled(Link)`\n  text-decoration: none;\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`;\n_c2 = LinkWrapper;\nconst ResponsiveLogo = styled(CurrencyLogo)`\n  @media screen and (max-width: 670px) {\n    width: 16px;\n    height: 16px;\n  }\n`;\n_c3 = ResponsiveLogo;\n\nconst TableLoader = () => {\n  const loadingRow = /*#__PURE__*/_jsxDEV(ResponsiveGrid, {\n    children: [/*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loadingRow, loadingRow, loadingRow]\n  }, void 0, true);\n};\n\n_c4 = TableLoader;\n\nconst DataRow = ({\n  tokenData,\n  index\n}) => {\n  _s();\n\n  const {\n    isXs,\n    isSm\n  } = useMatchBreakpoints();\n  return /*#__PURE__*/_jsxDEV(LinkWrapper, {\n    to: `/info/token/${tokenData.address}`,\n    children: /*#__PURE__*/_jsxDEV(ResponsiveGrid, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(ResponsiveLogo, {\n          address: tokenData.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), (isXs || isSm) && /*#__PURE__*/_jsxDEV(Text, {\n          ml: \"8px\",\n          children: tokenData.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 30\n        }, this), !isXs && !isSm && /*#__PURE__*/_jsxDEV(Flex, {\n          marginLeft: \"10px\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: tokenData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            ml: \"8px\",\n            children: [\"(\", tokenData.symbol, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontWeight: 400,\n        children: [\"$\", formatAmount(tokenData.priceUSD, {\n          notation: 'standard'\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontWeight: 400,\n        children: /*#__PURE__*/_jsxDEV(Percent, {\n          value: tokenData.priceUSDChange,\n          fontWeight: 400\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontWeight: 400,\n        children: [\"$\", formatAmount(tokenData.volumeUSD)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontWeight: 400,\n        children: [\"$\", formatAmount(tokenData.liquidityUSD)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DataRow, \"eEEOFafrfQtwrzLIgkngOFSJcYQ=\", false, function () {\n  return [useMatchBreakpoints];\n});\n\n_c5 = DataRow;\nconst SORT_FIELD = {\n  name: 'name',\n  volumeUSD: 'volumeUSD',\n  tvlUSD: 'tvlUSD',\n  priceUSD: 'priceUSD',\n  priceUSDChange: 'priceUSDChange',\n  priceUSDChangeWeek: 'priceUSDChangeWeek'\n};\nconst MAX_ITEMS = 10;\n\nconst TokenTable = ({\n  tokenDatas,\n  maxItems = MAX_ITEMS\n}) => {\n  _s2();\n\n  const [sortField, setSortField] = useState(SORT_FIELD.volumeUSD);\n  const [sortDirection, setSortDirection] = useState(true);\n  const {\n    t\n  } = useTranslation();\n  const [page, setPage] = useState(1);\n  const [maxPage, setMaxPage] = useState(1);\n  useEffect(() => {\n    let extraPages = 1;\n\n    if (tokenDatas) {\n      if (tokenDatas.length % maxItems === 0) {\n        extraPages = 0;\n      }\n\n      setMaxPage(Math.floor(tokenDatas.length / maxItems) + extraPages);\n    }\n  }, [maxItems, tokenDatas]);\n  const sortedTokens = useMemo(() => {\n    return tokenDatas ? tokenDatas.sort((a, b) => {\n      if (a && b) {\n        return a[sortField] > b[sortField] ? (sortDirection ? -1 : 1) * 1 : (sortDirection ? -1 : 1) * -1;\n      }\n\n      return -1;\n    }).slice(maxItems * (page - 1), page * maxItems) : [];\n  }, [tokenDatas, maxItems, page, sortDirection, sortField]);\n  const handleSort = useCallback(newField => {\n    setSortField(newField);\n    setSortDirection(sortField !== newField ? true : !sortDirection);\n  }, [sortDirection, sortField]);\n  const arrow = useCallback(field => {\n    const directionArrow = !sortDirection ? '↑' : '↓';\n    return sortField === field ? directionArrow : '';\n  }, [sortDirection, sortField]);\n\n  if (!tokenDatas) {\n    return /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TableWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(ResponsiveGrid, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        color: \"secondary\",\n        fontSize: \"12px\",\n        bold: true,\n        children: \"#\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ClickableColumnHeader, {\n        color: \"secondary\",\n        fontSize: \"12px\",\n        bold: true,\n        onClick: () => handleSort(SORT_FIELD.name),\n        textTransform: \"uppercase\",\n        children: [t('Name'), \" \", arrow(SORT_FIELD.name)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ClickableColumnHeader, {\n        color: \"secondary\",\n        fontSize: \"12px\",\n        bold: true,\n        onClick: () => handleSort(SORT_FIELD.priceUSD),\n        textTransform: \"uppercase\",\n        children: [t('Price'), \" \", arrow(SORT_FIELD.priceUSD)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ClickableColumnHeader, {\n        color: \"secondary\",\n        fontSize: \"12px\",\n        bold: true,\n        onClick: () => handleSort(SORT_FIELD.priceUSDChange),\n        textTransform: \"uppercase\",\n        children: [t('Price Change'), \" \", arrow(SORT_FIELD.priceUSDChange)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ClickableColumnHeader, {\n        color: \"secondary\",\n        fontSize: \"12px\",\n        bold: true,\n        onClick: () => handleSort(SORT_FIELD.volumeUSD),\n        textTransform: \"uppercase\",\n        children: [t('Volume 24H'), \" \", arrow(SORT_FIELD.volumeUSD)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ClickableColumnHeader, {\n        color: \"secondary\",\n        fontSize: \"12px\",\n        bold: true,\n        onClick: () => handleSort(SORT_FIELD.tvlUSD),\n        textTransform: \"uppercase\",\n        children: [t('Liquidity'), \" \", arrow(SORT_FIELD.tvlUSD)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Break, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), sortedTokens.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [sortedTokens.map((data, i) => {\n        if (data) {\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(DataRow, {\n              index: (page - 1) * MAX_ITEMS + i,\n              tokenData: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Break, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this)]\n          }, data.address, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 17\n          }, this);\n        }\n\n        return null;\n      }), /*#__PURE__*/_jsxDEV(PageButtons, {\n        children: [/*#__PURE__*/_jsxDEV(Arrow, {\n          onClick: () => {\n            setPage(page === 1 ? page : page - 1);\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n            color: page === 1 ? 'textDisabled' : 'primary'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: t('Page %page% of %maxPage%', {\n            page,\n            maxPage\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Arrow, {\n          onClick: () => {\n            setPage(page === maxPage ? page : page + 1);\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n            color: page === maxPage ? 'textDisabled' : 'primary'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TableLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(TokenTable, \"wdi0S/WEYhCe4xQ2WHt6WEnfDi0=\", false, function () {\n  return [useTranslation];\n});\n\n_c6 = TokenTable;\nexport default TokenTable;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"ResponsiveGrid\");\n$RefreshReg$(_c2, \"LinkWrapper\");\n$RefreshReg$(_c3, \"ResponsiveLogo\");\n$RefreshReg$(_c4, \"TableLoader\");\n$RefreshReg$(_c5, \"DataRow\");\n$RefreshReg$(_c6, \"TokenTable\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Info/components/InfoTables/TokensTable.tsx"],"names":["React","useState","useMemo","useCallback","useEffect","styled","Text","Flex","Box","Skeleton","useMatchBreakpoints","ArrowBackIcon","ArrowForwardIcon","Link","CurrencyLogo","formatAmount","Percent","useTranslation","ClickableColumnHeader","TableWrapper","PageButtons","Arrow","Break","ResponsiveGrid","div","LinkWrapper","ResponsiveLogo","TableLoader","loadingRow","DataRow","tokenData","index","isXs","isSm","address","symbol","name","priceUSD","notation","priceUSDChange","volumeUSD","liquidityUSD","SORT_FIELD","tvlUSD","priceUSDChangeWeek","MAX_ITEMS","TokenTable","tokenDatas","maxItems","sortField","setSortField","sortDirection","setSortDirection","t","page","setPage","maxPage","setMaxPage","extraPages","length","Math","floor","sortedTokens","sort","a","b","slice","handleSort","newField","arrow","field","directionArrow","map","data","i"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useCallback, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Box, Skeleton, useMatchBreakpoints, ArrowBackIcon, ArrowForwardIcon } from '@pancakeswap/uikit'\nimport { TokenData } from 'state/info/types'\nimport { Link } from 'react-router-dom'\nimport { CurrencyLogo } from 'views/Info/components/CurrencyLogo'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport Percent from 'views/Info/components/Percent'\nimport { useTranslation } from 'contexts/Localization'\nimport { ClickableColumnHeader, TableWrapper, PageButtons, Arrow, Break } from './shared'\n\n/**\n *  Columns on different layouts\n *  6 = | # | Name | Price | Price Change | Volume 24H | TVL |\n *  5 = | # | Name | Price |              | Volume 24H | TVL |\n *  4 = | # | Name | Price |              | Volume 24H |     |\n *  2 = |   | Name |       |              | Volume 24H |     |\n *  On smallest screen Name is reduced to just symbol\n */\nconst ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  align-items: center;\n\n  padding: 0 24px;\n\n  grid-template-columns: 20px 3fr repeat(4, 1fr);\n\n  @media screen and (max-width: 900px) {\n    grid-template-columns: 20px 2fr repeat(3, 1fr);\n    & :nth-child(4) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 20px 2fr repeat(2, 1fr);\n    & :nth-child(6) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 670px) {\n    grid-template-columns: 1fr 1fr;\n    > *:first-child {\n      display: none;\n    }\n    > *:nth-child(3) {\n      display: none;\n    }\n  }\n`\n\nconst LinkWrapper = styled(Link)`\n  text-decoration: none;\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nconst ResponsiveLogo = styled(CurrencyLogo)`\n  @media screen and (max-width: 670px) {\n    width: 16px;\n    height: 16px;\n  }\n`\n\nconst TableLoader: React.FC = () => {\n  const loadingRow = (\n    <ResponsiveGrid>\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n    </ResponsiveGrid>\n  )\n  return (\n    <>\n      {loadingRow}\n      {loadingRow}\n      {loadingRow}\n    </>\n  )\n}\n\nconst DataRow: React.FC<{ tokenData: TokenData; index: number }> = ({ tokenData, index }) => {\n  const { isXs, isSm } = useMatchBreakpoints()\n  return (\n    <LinkWrapper to={`/info/token/${tokenData.address}`}>\n      <ResponsiveGrid>\n        <Flex>\n          <Text>{index + 1}</Text>\n        </Flex>\n        <Flex alignItems=\"center\">\n          <ResponsiveLogo address={tokenData.address} />\n          {(isXs || isSm) && <Text ml=\"8px\">{tokenData.symbol}</Text>}\n          {!isXs && !isSm && (\n            <Flex marginLeft=\"10px\">\n              <Text>{tokenData.name}</Text>\n              <Text ml=\"8px\">({tokenData.symbol})</Text>\n            </Flex>\n          )}\n        </Flex>\n        <Text fontWeight={400}>${formatAmount(tokenData.priceUSD, { notation: 'standard' })}</Text>\n        <Text fontWeight={400}>\n          <Percent value={tokenData.priceUSDChange} fontWeight={400} />\n        </Text>\n        <Text fontWeight={400}>${formatAmount(tokenData.volumeUSD)}</Text>\n        <Text fontWeight={400}>${formatAmount(tokenData.liquidityUSD)}</Text>\n      </ResponsiveGrid>\n    </LinkWrapper>\n  )\n}\n\nconst SORT_FIELD = {\n  name: 'name',\n  volumeUSD: 'volumeUSD',\n  tvlUSD: 'tvlUSD',\n  priceUSD: 'priceUSD',\n  priceUSDChange: 'priceUSDChange',\n  priceUSDChangeWeek: 'priceUSDChangeWeek',\n}\n\nconst MAX_ITEMS = 10\n\nconst TokenTable: React.FC<{\n  tokenDatas: TokenData[] | undefined\n  maxItems?: number\n}> = ({ tokenDatas, maxItems = MAX_ITEMS }) => {\n  const [sortField, setSortField] = useState(SORT_FIELD.volumeUSD)\n  const [sortDirection, setSortDirection] = useState<boolean>(true)\n\n  const { t } = useTranslation()\n\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  useEffect(() => {\n    let extraPages = 1\n    if (tokenDatas) {\n      if (tokenDatas.length % maxItems === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(tokenDatas.length / maxItems) + extraPages)\n    }\n  }, [maxItems, tokenDatas])\n\n  const sortedTokens = useMemo(() => {\n    return tokenDatas\n      ? tokenDatas\n          .sort((a, b) => {\n            if (a && b) {\n              return a[sortField as keyof TokenData] > b[sortField as keyof TokenData]\n                ? (sortDirection ? -1 : 1) * 1\n                : (sortDirection ? -1 : 1) * -1\n            }\n            return -1\n          })\n          .slice(maxItems * (page - 1), page * maxItems)\n      : []\n  }, [tokenDatas, maxItems, page, sortDirection, sortField])\n\n  const handleSort = useCallback(\n    (newField: string) => {\n      setSortField(newField)\n      setSortDirection(sortField !== newField ? true : !sortDirection)\n    },\n    [sortDirection, sortField],\n  )\n\n  const arrow = useCallback(\n    (field: string) => {\n      const directionArrow = !sortDirection ? '↑' : '↓'\n      return sortField === field ? directionArrow : ''\n    },\n    [sortDirection, sortField],\n  )\n\n  if (!tokenDatas) {\n    return <Skeleton />\n  }\n\n  return (\n    <TableWrapper>\n      <ResponsiveGrid>\n        <Text color=\"secondary\" fontSize=\"12px\" bold>\n          #\n        </Text>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.name)}\n          textTransform=\"uppercase\"\n        >\n          {t('Name')} {arrow(SORT_FIELD.name)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.priceUSD)}\n          textTransform=\"uppercase\"\n        >\n          {t('Price')} {arrow(SORT_FIELD.priceUSD)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.priceUSDChange)}\n          textTransform=\"uppercase\"\n        >\n          {t('Price Change')} {arrow(SORT_FIELD.priceUSDChange)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.volumeUSD)}\n          textTransform=\"uppercase\"\n        >\n          {t('Volume 24H')} {arrow(SORT_FIELD.volumeUSD)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.tvlUSD)}\n          textTransform=\"uppercase\"\n        >\n          {t('Liquidity')} {arrow(SORT_FIELD.tvlUSD)}\n        </ClickableColumnHeader>\n      </ResponsiveGrid>\n\n      <Break />\n      {sortedTokens.length > 0 ? (\n        <>\n          {sortedTokens.map((data, i) => {\n            if (data) {\n              return (\n                <React.Fragment key={data.address}>\n                  <DataRow index={(page - 1) * MAX_ITEMS + i} tokenData={data} />\n                  <Break />\n                </React.Fragment>\n              )\n            }\n            return null\n          })}\n          <PageButtons>\n            <Arrow\n              onClick={() => {\n                setPage(page === 1 ? page : page - 1)\n              }}\n            >\n              <ArrowBackIcon color={page === 1 ? 'textDisabled' : 'primary'} />\n            </Arrow>\n            <Text>{t('Page %page% of %maxPage%', { page, maxPage })}</Text>\n            <Arrow\n              onClick={() => {\n                setPage(page === maxPage ? page : page + 1)\n              }}\n            >\n              <ArrowForwardIcon color={page === maxPage ? 'textDisabled' : 'primary'} />\n            </Arrow>\n          </PageButtons>\n        </>\n      ) : (\n        <>\n          <TableLoader />\n          <Box />\n        </>\n      )}\n    </TableWrapper>\n  )\n}\n\nexport default TokenTable\n"]},"metadata":{},"sourceType":"module"}