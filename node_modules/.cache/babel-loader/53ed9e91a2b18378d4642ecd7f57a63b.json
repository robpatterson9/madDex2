{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Swap/components/AdvancedSwapDetails.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { TradeType } from '@pancakeswap/sdk';\nimport { Text } from '@pancakeswap/uikit';\nimport { Field } from 'state/swap/actions';\nimport { useTranslation } from 'contexts/Localization';\nimport { useUserSlippageTolerance } from 'state/user/hooks';\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices';\nimport { AutoColumn } from 'components/Layout/Column';\nimport QuestionHelper from 'components/QuestionHelper';\nimport { RowBetween, RowFixed } from 'components/Layout/Row';\nimport FormattedPriceImpact from './FormattedPriceImpact';\nimport SwapRoute from './SwapRoute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TradeSummary({\n  trade,\n  allowedSlippage\n}) {\n  _s();\n\n  var _ref, _slippageAdjustedAmou, _ref2, _slippageAdjustedAmou2;\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    priceImpactWithoutFee,\n    realizedLPFee\n  } = computeTradePriceBreakdown(trade);\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT;\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage);\n  return /*#__PURE__*/_jsxDEV(AutoColumn, {\n    style: {\n      padding: '0 16px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n      children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          color: \"textSubtle\",\n          children: isExactIn ? t('Minimum received') : t('Maximum sold')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n          text: t('Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.'),\n          ml: \"4px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          children: isExactIn ? (_ref = `${(_slippageAdjustedAmou = slippageAdjustedAmounts[Field.OUTPUT]) === null || _slippageAdjustedAmou === void 0 ? void 0 : _slippageAdjustedAmou.toSignificant(4)} ${trade.outputAmount.currency.symbol}`) !== null && _ref !== void 0 ? _ref : '-' : (_ref2 = `${(_slippageAdjustedAmou2 = slippageAdjustedAmounts[Field.INPUT]) === null || _slippageAdjustedAmou2 === void 0 ? void 0 : _slippageAdjustedAmou2.toSignificant(4)} ${trade.inputAmount.currency.symbol}`) !== null && _ref2 !== void 0 ? _ref2 : '-'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n      children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          color: \"textSubtle\",\n          children: t('Price Impact')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n          text: t('The difference between the market price and estimated price due to trade size.'),\n          ml: \"4px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormattedPriceImpact, {\n        priceImpact: priceImpactWithoutFee\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n      children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"14px\",\n          color: \"textSubtle\",\n          children: t('Liquidity Provider Fee')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n          text: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              mb: \"12px\",\n              children: t('For each trade a %amount% fee is paid', {\n                amount: '0.25%'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: [\"- \", t('%amount% to LP token holders', {\n                amount: '0.17%'\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: [\"- \", t('%amount% to the Treasury', {\n                amount: '0.03%'\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: [\"- \", t('%amount% towards CAKE buyback and burn', {\n                amount: '0.05%'\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true),\n          ml: \"4px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"14px\",\n        children: realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TradeSummary, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = TradeSummary;\nexport function AdvancedSwapDetails({\n  trade\n}) {\n  _s2();\n\n  const {\n    t\n  } = useTranslation();\n  const [allowedSlippage] = useUserSlippageTolerance();\n  const showRoute = Boolean(trade && trade.route.path.length > 2);\n  return /*#__PURE__*/_jsxDEV(AutoColumn, {\n    gap: \"0px\",\n    children: trade && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TradeSummary, {\n        trade: trade,\n        allowedSlippage: allowedSlippage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), showRoute && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(RowBetween, {\n          style: {\n            padding: '0 16px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"14px\",\n              color: \"textSubtle\",\n              children: t('Route')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n              text: t('Routing through these tokens resulted in the best price for your trade.'),\n              ml: \"4px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(SwapRoute, {\n            trade: trade\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AdvancedSwapDetails, \"xIwPDUzj82Aglcq7EP3PnkjN8hs=\", false, function () {\n  return [useTranslation, useUserSlippageTolerance];\n});\n\n_c2 = AdvancedSwapDetails;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TradeSummary\");\n$RefreshReg$(_c2, \"AdvancedSwapDetails\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Swap/components/AdvancedSwapDetails.tsx"],"names":["React","TradeType","Text","Field","useTranslation","useUserSlippageTolerance","computeSlippageAdjustedAmounts","computeTradePriceBreakdown","AutoColumn","QuestionHelper","RowBetween","RowFixed","FormattedPriceImpact","SwapRoute","TradeSummary","trade","allowedSlippage","t","priceImpactWithoutFee","realizedLPFee","isExactIn","tradeType","EXACT_INPUT","slippageAdjustedAmounts","padding","OUTPUT","toSignificant","outputAmount","currency","symbol","INPUT","inputAmount","amount","AdvancedSwapDetails","showRoute","Boolean","route","path","length","display","alignItems"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { t } = useTranslation()\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? t('Minimum received') : t('Maximum sold')}\n          </Text>\n          <QuestionHelper\n            text={t(\n              'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\n            )}\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {t('Price Impact')}\n          </Text>\n          <QuestionHelper\n            text={t('The difference between the market price and estimated price due to trade size.')}\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {t('Liquidity Provider Fee')}\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">{t('For each trade a %amount% fee is paid', { amount: '0.25%' })}</Text>\n                <Text>- {t('%amount% to LP token holders', { amount: '0.17%' })}</Text>\n                <Text>- {t('%amount% to the Treasury', { amount: '0.03%' })}</Text>\n                <Text>- {t('%amount% towards CAKE buyback and burn', { amount: '0.05%' })}</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const { t } = useTranslation()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    {t('Route')}\n                  </Text>\n                  <QuestionHelper\n                    text={t('Routing through these tokens resulted in the best price for your trade.')}\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}