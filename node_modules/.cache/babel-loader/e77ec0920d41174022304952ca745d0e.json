{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/ProfileCreation/UserName.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Card, CardBody, Heading, Text, Input as UIKitInput, Button, AutoRenewIcon, CheckmarkIcon, Flex, WarningIcon, useModal, Skeleton, Checkbox } from '@pancakeswap/uikit';\nimport { parseISO, formatDistance } from 'date-fns';\nimport { useWeb3React } from '@web3-react/core';\nimport { formatUnits } from '@ethersproject/units';\nimport { API_PROFILE } from 'config/constants/endpoints';\nimport useToast from 'hooks/useToast';\nimport { FetchStatus, useGetCakeBalance } from 'hooks/useTokenBalance';\nimport { signMessage } from 'utils/web3React';\nimport useWeb3Provider from 'hooks/useActiveWeb3React';\nimport { useTranslation } from 'contexts/Localization';\nimport debounce from 'lodash/debounce';\nimport ConfirmProfileCreationModal from './ConfirmProfileCreationModal';\nimport useProfileCreation from './contexts/hook';\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar ExistingUserState;\n\n(function (ExistingUserState) {\n  ExistingUserState[\"IDLE\"] = \"idle\";\n  ExistingUserState[\"CREATED\"] = \"created\";\n  ExistingUserState[\"NEW\"] = \"new\";\n})(ExistingUserState || (ExistingUserState = {}));\n\nconst InputWrap = styled.div`\n  position: relative;\n  max-width: 240px;\n`;\n_c = InputWrap;\nconst Input = styled(UIKitInput)`\n  padding-right: 40px;\n`;\n_c2 = Input;\nconst Indicator = styled(Flex)`\n  align-items: center;\n  height: 24px;\n  justify-content: center;\n  margin-top: -12px;\n  position: absolute;\n  right: 16px;\n  top: 50%;\n  width: 24px;\n`;\n_c3 = Indicator;\n\nconst UserName = () => {\n  _s();\n\n  const [isAcknowledged, setIsAcknowledged] = useState(false);\n  const {\n    teamId,\n    selectedNft,\n    userName,\n    actions,\n    minimumCakeRequired,\n    allowance\n  } = useProfileCreation();\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const {\n    toastError\n  } = useToast();\n  const {\n    library\n  } = useWeb3Provider();\n  const [existingUserState, setExistingUserState] = useState(ExistingUserState.IDLE);\n  const [isValid, setIsValid] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const {\n    balance: cakeBalance,\n    fetchStatus\n  } = useGetCakeBalance();\n  const hasMinimumCakeRequired = fetchStatus === FetchStatus.SUCCESS && cakeBalance.gte(REGISTER_COST);\n  const [onPresentConfirmProfileCreation] = useModal( /*#__PURE__*/_jsxDEV(ConfirmProfileCreationModal, {\n    userName: userName,\n    selectedNft: selectedNft,\n    account: account,\n    teamId: teamId,\n    minimumCakeRequired: minimumCakeRequired,\n    allowance: allowance\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this), false);\n  const isUserCreated = existingUserState === ExistingUserState.CREATED;\n  const checkUsernameValidity = debounce(async value => {\n    try {\n      setIsLoading(true);\n      const res = await fetch(`${API_PROFILE}/api/users/valid/${value}`);\n\n      if (res.ok) {\n        setIsValid(true);\n        setMessage('');\n      } else {\n        var _data$error;\n\n        const data = await res.json();\n        setIsValid(false);\n        setMessage(data === null || data === void 0 ? void 0 : (_data$error = data.error) === null || _data$error === void 0 ? void 0 : _data$error.message);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }, 200);\n\n  const handleChange = event => {\n    const {\n      value\n    } = event.target;\n    actions.setUserName(value);\n    checkUsernameValidity(value);\n  };\n\n  const handleConfirm = async () => {\n    try {\n      setIsLoading(true);\n      const signature = await signMessage(library, account, userName);\n      const response = await fetch(`${API_PROFILE}/api/users/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          address: account,\n          username: userName,\n          signature\n        })\n      });\n\n      if (response.ok) {\n        setExistingUserState(ExistingUserState.CREATED);\n      } else {\n        var _data$error2;\n\n        const data = await response.json();\n        toastError(t('Error'), data === null || data === void 0 ? void 0 : (_data$error2 = data.error) === null || _data$error2 === void 0 ? void 0 : _data$error2.message);\n      }\n    } catch (error) {\n      toastError((error === null || error === void 0 ? void 0 : error.message) ? error.message : JSON.stringify(error));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged); // Perform an initial check to see if the wallet has already created a username\n\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await fetch(`${API_PROFILE}/api/users/${account}`);\n        const data = await response.json();\n\n        if (response.ok) {\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date());\n          setMessage(t('Created %dateCreated% ago', {\n            dateCreated\n          }));\n          actions.setUserName(data.username);\n          setExistingUserState(ExistingUserState.CREATED);\n          setIsValid(true);\n        } else {\n          setExistingUserState(ExistingUserState.NEW);\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Unable to verify username'));\n      }\n    };\n\n    if (account) {\n      fetchUser();\n    }\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError, t]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"20px\",\n      color: \"textSubtle\",\n      bold: true,\n      children: t('Step %num%', {\n        num: 4\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h3\",\n      scale: \"xl\",\n      mb: \"24px\",\n      children: t('Set Your Name')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      mb: \"24px\",\n      children: t('This name will be shown in team leaderboards and search results as long as your profile is active.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      mb: \"24px\",\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h4\",\n          scale: \"lg\",\n          mb: \"8px\",\n          children: t('Set Your Name')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          as: \"p\",\n          color: \"textSubtle\",\n          mb: \"24px\",\n          children: t('Your name must be at least 3 and at most 15 standard letters and numbers long. You canâ€™t change this once you click Confirm.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), existingUserState === ExistingUserState.IDLE ? /*#__PURE__*/_jsxDEV(Skeleton, {\n          height: \"40px\",\n          width: \"240px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(InputWrap, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            onChange: handleChange,\n            isWarning: userName && !isValid,\n            isSuccess: userName && isValid,\n            minLength: USERNAME_MIN_LENGTH,\n            maxLength: USERNAME_MAX_LENGTH,\n            disabled: isUserCreated,\n            placeholder: t('Enter your name...'),\n            value: userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Indicator, {\n            children: [isLoading && /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n              spin: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 31\n            }, this), !isLoading && isValid && userName && /*#__PURE__*/_jsxDEV(CheckmarkIcon, {\n              color: \"success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 55\n            }, this), !isLoading && !isValid && userName && /*#__PURE__*/_jsxDEV(WarningIcon, {\n              color: \"failure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 56\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          color: \"textSubtle\",\n          fontSize: \"14px\",\n          py: \"4px\",\n          mb: \"16px\",\n          style: {\n            minHeight: '30px'\n          },\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          as: \"p\",\n          color: \"failure\",\n          mb: \"8px\",\n          children: t(\"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"checkbox\",\n          style: {\n            display: 'block',\n            cursor: 'pointer',\n            marginBottom: '24px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                id: \"checkbox\",\n                scale: \"sm\",\n                checked: isAcknowledged,\n                onChange: handleAcknowledge\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              ml: \"8px\",\n              children: t('I understand that people can view my wallet if they know my username')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirm,\n          disabled: !isValid || isUserCreated || isLoading || !isAcknowledged,\n          children: t('Confirm')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onPresentConfirmProfileCreation,\n      disabled: !isValid || !isUserCreated,\n      id: \"completeProfileCreation\",\n      children: t('Complete Profile')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), !hasMinimumCakeRequired && /*#__PURE__*/_jsxDEV(Text, {\n      color: \"failure\",\n      mt: \"16px\",\n      children: t('A minimum of %num% CAKE is required', {\n        num: formatUnits(REGISTER_COST)\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserName, \"F9rs9fRvfebEPKdLLiu3t7S85Sg=\", false, function () {\n  return [useProfileCreation, useTranslation, useWeb3React, useToast, useWeb3Provider, useGetCakeBalance, useModal];\n});\n\n_c4 = UserName;\nexport default UserName;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"InputWrap\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Indicator\");\n$RefreshReg$(_c4, \"UserName\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/ProfileCreation/UserName.tsx"],"names":["React","useEffect","useState","styled","Card","CardBody","Heading","Text","Input","UIKitInput","Button","AutoRenewIcon","CheckmarkIcon","Flex","WarningIcon","useModal","Skeleton","Checkbox","parseISO","formatDistance","useWeb3React","formatUnits","API_PROFILE","useToast","FetchStatus","useGetCakeBalance","signMessage","useWeb3Provider","useTranslation","debounce","ConfirmProfileCreationModal","useProfileCreation","USERNAME_MIN_LENGTH","USERNAME_MAX_LENGTH","REGISTER_COST","ExistingUserState","InputWrap","div","Indicator","UserName","isAcknowledged","setIsAcknowledged","teamId","selectedNft","userName","actions","minimumCakeRequired","allowance","t","account","toastError","library","existingUserState","setExistingUserState","IDLE","isValid","setIsValid","isLoading","setIsLoading","message","setMessage","balance","cakeBalance","fetchStatus","hasMinimumCakeRequired","SUCCESS","gte","onPresentConfirmProfileCreation","isUserCreated","CREATED","checkUsernameValidity","value","res","fetch","ok","data","json","error","handleChange","event","target","setUserName","handleConfirm","signature","response","method","headers","body","JSON","stringify","address","username","handleAcknowledge","fetchUser","dateCreated","created_at","Date","NEW","num","minHeight","display","cursor","marginBottom","flex"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Text,\n  Input as UIKitInput,\n  Button,\n  AutoRenewIcon,\n  CheckmarkIcon,\n  Flex,\n  WarningIcon,\n  useModal,\n  Skeleton,\n  Checkbox,\n} from '@pancakeswap/uikit'\nimport { parseISO, formatDistance } from 'date-fns'\nimport { useWeb3React } from '@web3-react/core'\nimport { formatUnits } from '@ethersproject/units'\nimport { API_PROFILE } from 'config/constants/endpoints'\nimport useToast from 'hooks/useToast'\nimport { FetchStatus, useGetCakeBalance } from 'hooks/useTokenBalance'\nimport { signMessage } from 'utils/web3React'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport debounce from 'lodash/debounce'\nimport ConfirmProfileCreationModal from './ConfirmProfileCreationModal'\nimport useProfileCreation from './contexts/hook'\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\n\nenum ExistingUserState {\n  IDLE = 'idle', // initial state\n  CREATED = 'created', // username has already been created\n  NEW = 'new', // username has not been created\n}\n\nconst InputWrap = styled.div`\n  position: relative;\n  max-width: 240px;\n`\n\nconst Input = styled(UIKitInput)`\n  padding-right: 40px;\n`\n\nconst Indicator = styled(Flex)`\n  align-items: center;\n  height: 24px;\n  justify-content: center;\n  margin-top: -12px;\n  position: absolute;\n  right: 16px;\n  top: 50%;\n  width: 24px;\n`\n\nconst UserName: React.FC = () => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const { teamId, selectedNft, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { toastError } = useToast()\n  const { library } = useWeb3Provider()\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\n  const [isValid, setIsValid] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  const { balance: cakeBalance, fetchStatus } = useGetCakeBalance()\n  const hasMinimumCakeRequired = fetchStatus === FetchStatus.SUCCESS && cakeBalance.gte(REGISTER_COST)\n  const [onPresentConfirmProfileCreation] = useModal(\n    <ConfirmProfileCreationModal\n      userName={userName}\n      selectedNft={selectedNft}\n      account={account}\n      teamId={teamId}\n      minimumCakeRequired={minimumCakeRequired}\n      allowance={allowance}\n    />,\n    false,\n  )\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\n\n  const checkUsernameValidity = debounce(async (value: string) => {\n    try {\n      setIsLoading(true)\n      const res = await fetch(`${API_PROFILE}/api/users/valid/${value}`)\n\n      if (res.ok) {\n        setIsValid(true)\n        setMessage('')\n      } else {\n        const data = await res.json()\n        setIsValid(false)\n        setMessage(data?.error?.message)\n      }\n    } finally {\n      setIsLoading(false)\n    }\n  }, 200)\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target\n    actions.setUserName(value)\n    checkUsernameValidity(value)\n  }\n\n  const handleConfirm = async () => {\n    try {\n      setIsLoading(true)\n\n      const signature = await signMessage(library, account, userName)\n      const response = await fetch(`${API_PROFILE}/api/users/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          address: account,\n          username: userName,\n          signature,\n        }),\n      })\n\n      if (response.ok) {\n        setExistingUserState(ExistingUserState.CREATED)\n      } else {\n        const data = await response.json()\n        toastError(t('Error'), data?.error?.message)\n      }\n    } catch (error) {\n      toastError(error?.message ? error.message : JSON.stringify(error))\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged)\n\n  // Perform an initial check to see if the wallet has already created a username\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await fetch(`${API_PROFILE}/api/users/${account}`)\n        const data = await response.json()\n\n        if (response.ok) {\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\n          setMessage(t('Created %dateCreated% ago', { dateCreated }))\n\n          actions.setUserName(data.username)\n          setExistingUserState(ExistingUserState.CREATED)\n          setIsValid(true)\n        } else {\n          setExistingUserState(ExistingUserState.NEW)\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Unable to verify username'))\n      }\n    }\n\n    if (account) {\n      fetchUser()\n    }\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError, t])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 4 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Set Your Name')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {t('This name will be shown in team leaderboards and search results as long as your profile is active.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Set Your Name')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t(\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You canâ€™t change this once you click Confirm.',\n            )}\n          </Text>\n          {existingUserState === ExistingUserState.IDLE ? (\n            <Skeleton height=\"40px\" width=\"240px\" />\n          ) : (\n            <InputWrap>\n              <Input\n                onChange={handleChange}\n                isWarning={userName && !isValid}\n                isSuccess={userName && isValid}\n                minLength={USERNAME_MIN_LENGTH}\n                maxLength={USERNAME_MAX_LENGTH}\n                disabled={isUserCreated}\n                placeholder={t('Enter your name...')}\n                value={userName}\n              />\n              <Indicator>\n                {isLoading && <AutoRenewIcon spin />}\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\n              </Indicator>\n            </InputWrap>\n          )}\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\n            {message}\n          </Text>\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\n            {t(\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\n            )}\n          </Text>\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\n            <Flex alignItems=\"center\">\n              <div style={{ flex: 'none' }}>\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknowledge} />\n              </div>\n              <Text ml=\"8px\">{t('I understand that people can view my wallet if they know my username')}</Text>\n            </Flex>\n          </label>\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\n            {t('Confirm')}\n          </Button>\n        </CardBody>\n      </Card>\n      <Button\n        onClick={onPresentConfirmProfileCreation}\n        disabled={!isValid || !isUserCreated}\n        id=\"completeProfileCreation\"\n      >\n        {t('Complete Profile')}\n      </Button>\n      {!hasMinimumCakeRequired && (\n        <Text color=\"failure\" mt=\"16px\">\n          {t('A minimum of %num% CAKE is required', { num: formatUnits(REGISTER_COST) })}\n        </Text>\n      )}\n    </>\n  )\n}\n\nexport default UserName\n"]},"metadata":{},"sourceType":"module"}