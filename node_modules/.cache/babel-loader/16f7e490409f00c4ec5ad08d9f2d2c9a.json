{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { usePriceCakeBusd } from 'state/farms/hooks';\nimport { useCakeVault } from 'state/pools/hooks';\nimport Balance from 'components/Balance';\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal';\nimport { convertSharesToCake } from '../../../helpers';\nimport VaultStakeModal from '../VaultStakeModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HasSharesActions = ({\n  pool,\n  stakingTokenBalance,\n  performanceFee\n}) => {\n  _s();\n\n  const {\n    userData: {\n      userShares\n    },\n    pricePerFullShare\n  } = useCakeVault();\n  const {\n    stakingToken\n  } = pool;\n  const {\n    cakeAsBigNumber,\n    cakeAsNumberBalance\n  } = convertSharesToCake(userShares, pricePerFullShare);\n  const cakePriceBusd = usePriceCakeBusd();\n  const stakedDollarValue = cakePriceBusd.gt(0) ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals) : 0;\n  const [onPresentTokenRequired] = useModal( /*#__PURE__*/_jsxDEV(NotEnoughTokensModal, {\n    tokenSymbol: stakingToken.symbol\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 45\n  }, this));\n  const [onPresentStake] = useModal( /*#__PURE__*/_jsxDEV(VaultStakeModal, {\n    stakingMax: stakingTokenBalance,\n    performanceFee: performanceFee,\n    pool: pool\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this));\n  const [onPresentUnstake] = useModal( /*#__PURE__*/_jsxDEV(VaultStakeModal, {\n    stakingMax: cakeAsBigNumber,\n    pool: pool,\n    isRemovingStake: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 39\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(Balance, {\n        fontSize: \"20px\",\n        bold: true,\n        value: cakeAsNumberBalance,\n        decimals: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"12px\",\n        color: \"textSubtle\",\n        children: cakePriceBusd.gt(0) ? /*#__PURE__*/_jsxDEV(Balance, {\n          value: stakedDollarValue,\n          fontSize: \"12px\",\n          color: \"textSubtle\",\n          decimals: 2,\n          prefix: \"~\",\n          unit: \" USD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n          mt: \"1px\",\n          height: 16,\n          width: 64\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        variant: \"secondary\",\n        onClick: onPresentUnstake,\n        mr: \"6px\",\n        children: /*#__PURE__*/_jsxDEV(MinusIcon, {\n          color: \"primary\",\n          width: \"24px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        variant: \"secondary\",\n        onClick: stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired,\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {\n          color: \"primary\",\n          width: \"24px\",\n          height: \"24px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HasSharesActions, \"sI8Vccs8fO9/btzi37YT3kqsNTA=\", false, function () {\n  return [useCakeVault, usePriceCakeBusd, useModal, useModal, useModal];\n});\n\n_c = HasSharesActions;\nexport default HasSharesActions;\n\nvar _c;\n\n$RefreshReg$(_c, \"HasSharesActions\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx"],"names":["React","Flex","Text","IconButton","AddIcon","MinusIcon","useModal","Skeleton","getBalanceNumber","usePriceCakeBusd","useCakeVault","Balance","NotEnoughTokensModal","convertSharesToCake","VaultStakeModal","HasSharesActions","pool","stakingTokenBalance","performanceFee","userData","userShares","pricePerFullShare","stakingToken","cakeAsBigNumber","cakeAsNumberBalance","cakePriceBusd","stakedDollarValue","gt","multipliedBy","decimals","onPresentTokenRequired","symbol","onPresentStake","onPresentUnstake"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  performanceFee: number\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance, performanceFee }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} performanceFee={performanceFee} pool={pool} />,\n  )\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n"]},"metadata":{},"sourceType":"module"}