{"ast":null,"code":"import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _excluded=[\"bg\",\"startIcon\",\"children\",\"onClick\"],_excluded2=[\"betPosition\",\"children\"];var _templateObject;import React from'react';import styled from'styled-components';import{ArrowUpIcon,ArrowDownIcon,Flex,Text,useTooltip,TooltipText,InfoIcon}from'@pancakeswap/uikit';import{BetPosition}from'state/types';import{useTranslation}from'contexts/Localization';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var StyledTag=styled(Flex)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  display: inline-flex;\\n\"])),function(_ref){var bg=_ref.bg,theme=_ref.theme;return theme.colors[bg];});export var Tag=function Tag(_ref2){var _ref2$bg=_ref2.bg,bg=_ref2$bg===void 0?'success':_ref2$bg,startIcon=_ref2.startIcon,children=_ref2.children,onClick=_ref2.onClick,props=_objectWithoutProperties(_ref2,_excluded);var icon=startIcon||/*#__PURE__*/_jsx(ArrowUpIcon,{color:\"white\"});return/*#__PURE__*/_jsxs(StyledTag,_objectSpread(_objectSpread({alignItems:\"center\",justifyContent:\"center\",borderRadius:\"4px\",bg:bg,py:\"4px\",px:\"8px\",onClick:onClick,style:{cursor:onClick?'pointer':'normal'}},props),{},{children:[icon,/*#__PURE__*/_jsx(Text,{textTransform:\"uppercase\",color:\"white\",ml:\"4px\",children:children})]}));};var PositionTag=function PositionTag(_ref3){var betPosition=_ref3.betPosition,children=_ref3.children,props=_objectWithoutProperties(_ref3,_excluded2);var _useTranslation=useTranslation(),t=_useTranslation.t;var isUpPosition=betPosition===BetPosition.BULL;var icon=isUpPosition?/*#__PURE__*/_jsx(ArrowUpIcon,{color:\"white\"}):/*#__PURE__*/_jsx(ArrowDownIcon,{color:\"white\"});var _useTooltip=useTooltip(/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{bold:true,mb:\"4px\",children:t('Neither side wins this round')}),/*#__PURE__*/_jsx(Text,{children:t('The Locked Price & Closed Price are exactly the same (within 8 decimals), so neither side wins. All funds entered into UP and DOWN positions will go to the weekly CAKE burn.')})]}),{placement:'right'}),targetRef=_useTooltip.targetRef,tooltip=_useTooltip.tooltip,tooltipVisible=_useTooltip.tooltipVisible;if(betPosition===BetPosition.HOUSE){return/*#__PURE__*/_jsxs(_Fragment,{children:[tooltipVisible&&tooltip,/*#__PURE__*/_jsx(TooltipText,{ref:targetRef,color:\"secondary\",fontWeight:\"300\",textTransform:\"uppercase\",children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[t('To Burn'),/*#__PURE__*/_jsx(InfoIcon,{width:\"16px\",ml:\"4px\",color:\"secondary\"})]})})]});}return/*#__PURE__*/_jsx(Tag,_objectSpread(_objectSpread({bg:isUpPosition?'success':'failure',startIcon:icon},props),{},{children:children}));};export default PositionTag;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/PositionTag.tsx"],"names":["React","styled","ArrowUpIcon","ArrowDownIcon","Flex","Text","useTooltip","TooltipText","InfoIcon","BetPosition","useTranslation","StyledTag","bg","theme","colors","Tag","startIcon","children","onClick","props","icon","cursor","PositionTag","betPosition","t","isUpPosition","BULL","placement","targetRef","tooltip","tooltipVisible","HOUSE"],"mappings":"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","sourcesContent":["import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport {\n  ArrowUpIcon,\n  ArrowDownIcon,\n  Flex,\n  FlexProps,\n  Text,\n  useTooltip,\n  TooltipText,\n  InfoIcon,\n} from '@pancakeswap/uikit'\nimport { BetPosition } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface TagProps extends FlexProps {\n  bg?: string\n  startIcon?: ReactNode\n}\n\nconst StyledTag = styled(Flex)<{ bg: TagProps['bg'] }>`\n  background-color: ${({ bg, theme }) => theme.colors[bg]};\n  display: inline-flex;\n`\n\nexport const Tag: React.FC<TagProps> = ({ bg = 'success', startIcon, children, onClick, ...props }) => {\n  const icon = startIcon || <ArrowUpIcon color=\"white\" />\n\n  return (\n    <StyledTag\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      borderRadius=\"4px\"\n      bg={bg}\n      py=\"4px\"\n      px=\"8px\"\n      onClick={onClick}\n      style={{ cursor: onClick ? 'pointer' : 'normal' }}\n      {...props}\n    >\n      {icon}\n      <Text textTransform=\"uppercase\" color=\"white\" ml=\"4px\">\n        {children}\n      </Text>\n    </StyledTag>\n  )\n}\n\ninterface PositionTagProps extends FlexProps {\n  betPosition: BetPosition\n}\n\nconst PositionTag: React.FC<PositionTagProps> = ({ betPosition, children, ...props }) => {\n  const { t } = useTranslation()\n  const isUpPosition = betPosition === BetPosition.BULL\n  const icon = isUpPosition ? <ArrowUpIcon color=\"white\" /> : <ArrowDownIcon color=\"white\" />\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Neither side wins this round')}\n      </Text>\n      <Text>\n        {t(\n          'The Locked Price & Closed Price are exactly the same (within 8 decimals), so neither side wins. All funds entered into UP and DOWN positions will go to the weekly CAKE burn.',\n        )}\n      </Text>\n    </>,\n    { placement: 'right' },\n  )\n\n  if (betPosition === BetPosition.HOUSE) {\n    return (\n      <>\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} color=\"secondary\" fontWeight=\"300\" textTransform=\"uppercase\">\n          <Flex alignItems=\"center\">\n            {t('To Burn')}\n            <InfoIcon width=\"16px\" ml=\"4px\" color=\"secondary\" />\n          </Flex>\n        </TooltipText>\n      </>\n    )\n  }\n\n  return (\n    <Tag bg={isUpPosition ? 'success' : 'failure'} startIcon={icon} {...props}>\n      {children}\n    </Tag>\n  )\n}\n\nexport default PositionTag\n"]},"metadata":{},"sourceType":"module"}