{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{Flex,TooltipText,IconButton,useModal,CalculateIcon,Skeleton,useTooltip}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import Balance from'components/Balance';import RoiCalculatorModal from'components/RoiCalculatorModal';import{getAprData}from'views/Pools/helpers';import BigNumber from'bignumber.js';import{BIG_ZERO}from'utils/bigNumber';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ApyLabelContainer=styled(Flex)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  cursor: pointer;\\n\\n  &:hover {\\n    opacity: 0.5;\\n  }\\n\"])));var AprRow=function AprRow(_ref){var pool=_ref.pool,stakedBalance=_ref.stakedBalance,_ref$performanceFee=_ref.performanceFee,performanceFee=_ref$performanceFee===void 0?0:_ref$performanceFee;var _useTranslation=useTranslation(),t=_useTranslation.t;var stakingToken=pool.stakingToken,earningToken=pool.earningToken,isFinished=pool.isFinished,apr=pool.apr,earningTokenPrice=pool.earningTokenPrice,stakingTokenPrice=pool.stakingTokenPrice,userData=pool.userData,isAutoVault=pool.isAutoVault;var stakingTokenBalance=(userData===null||userData===void 0?void 0:userData.stakingTokenBalance)?new BigNumber(userData.stakingTokenBalance):BIG_ZERO;var tooltipContent=isAutoVault?t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.'):t('This pool’s rewards aren’t compounded automatically, so we show APR');var _useTooltip=useTooltip(tooltipContent,{placement:'bottom-start'}),targetRef=_useTooltip.targetRef,tooltip=_useTooltip.tooltip,tooltipVisible=_useTooltip.tooltipVisible;var _getAprData=getAprData(pool,performanceFee),earningsPercentageToDisplay=_getAprData.apr,autoCompoundFrequency=_getAprData.autoCompoundFrequency;var apyModalLink=stakingToken.address?\"/swap?outputCurrency=\".concat(stakingToken.address):'/swap';var _useModal=useModal(/*#__PURE__*/_jsx(RoiCalculatorModal,{earningTokenPrice:earningTokenPrice,stakingTokenPrice:stakingTokenPrice,apr:apr,linkLabel:t('Get %symbol%',{symbol:stakingToken.symbol}),linkHref:apyModalLink,stakingTokenBalance:stakedBalance.plus(stakingTokenBalance),stakingTokenSymbol:stakingToken.symbol,earningTokenSymbol:earningToken.symbol,autoCompoundFrequency:autoCompoundFrequency,performanceFee:performanceFee})),_useModal2=_slicedToArray(_useModal,1),onPresentApyModal=_useModal2[0];return/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",children:[tooltipVisible&&tooltip,/*#__PURE__*/_jsx(TooltipText,{ref:targetRef,children:isAutoVault?\"\".concat(t('APY'),\":\"):\"\".concat(t('APR'),\":\")}),isFinished||!apr?/*#__PURE__*/_jsx(Skeleton,{width:\"82px\",height:\"32px\"}):/*#__PURE__*/_jsxs(ApyLabelContainer,{alignItems:\"center\",onClick:onPresentApyModal,children:[/*#__PURE__*/_jsx(Balance,{fontSize:\"16px\",isDisabled:isFinished,value:earningsPercentageToDisplay,decimals:2,unit:\"%\",onClick:onPresentApyModal}),/*#__PURE__*/_jsx(IconButton,{variant:\"text\",scale:\"sm\",children:/*#__PURE__*/_jsx(CalculateIcon,{color:\"textSubtle\",width:\"18px\"})})]})]});};export default AprRow;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Pools/components/PoolCard/AprRow.tsx"],"names":["React","styled","Flex","TooltipText","IconButton","useModal","CalculateIcon","Skeleton","useTooltip","useTranslation","Balance","RoiCalculatorModal","getAprData","BigNumber","BIG_ZERO","ApyLabelContainer","AprRow","pool","stakedBalance","performanceFee","t","stakingToken","earningToken","isFinished","apr","earningTokenPrice","stakingTokenPrice","userData","isAutoVault","stakingTokenBalance","tooltipContent","placement","targetRef","tooltip","tooltipVisible","earningsPercentageToDisplay","autoCompoundFrequency","apyModalLink","address","symbol","plus","onPresentApyModal"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { DeserializedPool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprRowProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, stakedBalance, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, stakingTokenPrice, userData, isAutoVault } =\n    pool\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      stakingTokenSymbol={stakingToken.symbol}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <ApyLabelContainer alignItems=\"center\" onClick={onPresentApyModal}>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            onClick={onPresentApyModal}\n          />\n          <IconButton variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </ApyLabelContainer>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n"]},"metadata":{},"sourceType":"module"}