{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/FarmAuction/components/ReclaimBidCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Text, Heading, Card, CardHeader, CardBody, Flex } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction';\nimport { useCake, useFarmAuctionContract } from 'hooks/useContract';\nimport { ethersToBigNumber } from 'utils/bigNumber';\nimport { useWeb3React } from '@web3-react/core';\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport useToast from 'hooks/useToast';\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { ethers } from 'ethers';\nimport ApproveConfirmButtons, { ButtonArrangement } from 'components/ApproveConfirmButtons';\nimport { ToastDescriptionWithTx } from 'components/Toast';\nimport useReclaimAuctionBid from '../hooks/useReclaimAuctionBid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledReclaimBidCard = styled(Card)`\n  margin-top: 16px;\n  flex: 1;\n`;\n_c = StyledReclaimBidCard;\n\nconst ReclaimBidCard = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const {\n    callWithGasPrice\n  } = useCallWithGasPrice();\n  const [reclaimableAuction, checkForNextReclaimableAuction] = useReclaimAuctionBid();\n  const cakeContract = useCake();\n  const farmAuctionContract = useFarmAuctionContract();\n  const {\n    toastSuccess\n  } = useToast();\n  const {\n    isApproving,\n    isApproved,\n    isConfirming,\n    handleApprove,\n    handleConfirm\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await cakeContract.allowance(account, farmAuctionContract.address);\n        const currentAllowance = ethersToBigNumber(response);\n        return currentAllowance.gt(0);\n      } catch (error) {\n        return false;\n      }\n    },\n    onApprove: () => {\n      return callWithGasPrice(cakeContract, 'approve', [farmAuctionContract.address, ethers.constants.MaxUint256]);\n    },\n    onApproveSuccess: async ({\n      receipt\n    }) => {\n      toastSuccess(t('Contract approved - you can now reclaim your bid!'), /*#__PURE__*/_jsxDEV(ToastDescriptionWithTx, {\n        txHash: receipt.transactionHash\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this));\n    },\n    onConfirm: () => {\n      return callWithGasPrice(farmAuctionContract, 'claimAuction', [reclaimableAuction.id]);\n    },\n    onSuccess: async ({\n      receipt\n    }) => {\n      checkForNextReclaimableAuction();\n      toastSuccess(t('Bid reclaimed!'), /*#__PURE__*/_jsxDEV(ToastDescriptionWithTx, {\n        txHash: receipt.transactionHash\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 41\n      }, this));\n    }\n  });\n\n  if (!reclaimableAuction) {\n    return null;\n  }\n\n  const {\n    position,\n    amount\n  } = reclaimableAuction;\n  return /*#__PURE__*/_jsxDEV(StyledReclaimBidCard, {\n    mb: ['24px', null, null, '0'],\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      children: /*#__PURE__*/_jsxDEV(Heading, {\n        children: t('Reclaim Bid')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        mb: \"16px\",\n        children: t('Your bid in Auction #%auctionId% was unsuccessful.', {\n          auctionId: reclaimableAuction.id\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        mb: \"16px\",\n        children: t('Reclaim your CAKE now.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        mb: \"8px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          color: \"textSubtle\",\n          children: t('Your total bid')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: t('%num% CAKE', {\n            num: getBalanceNumber(amount).toLocaleString()\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        mb: \"24px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          color: \"textSubtle\",\n          children: t('Your position')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"#\", position]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), account ? /*#__PURE__*/_jsxDEV(ApproveConfirmButtons, {\n        isApproveDisabled: isApproved,\n        isApproving: isApproving,\n        isConfirmDisabled: false,\n        isConfirming: isConfirming,\n        onApprove: handleApprove,\n        onConfirm: handleConfirm,\n        buttonArrangement: ButtonArrangement.SEQUENTIAL,\n        confirmLabel: t('Reclaim')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ConnectWalletButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReclaimBidCard, \"4Dg7KfP0h4e3o3dPM6ulYkpDyPI=\", false, function () {\n  return [useTranslation, useWeb3React, useCallWithGasPrice, useReclaimAuctionBid, useCake, useFarmAuctionContract, useToast, useApproveConfirmTransaction];\n});\n\n_c2 = ReclaimBidCard;\nexport default ReclaimBidCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledReclaimBidCard\");\n$RefreshReg$(_c2, \"ReclaimBidCard\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/FarmAuction/components/ReclaimBidCard.tsx"],"names":["React","styled","Text","Heading","Card","CardHeader","CardBody","Flex","useTranslation","useApproveConfirmTransaction","useCake","useFarmAuctionContract","ethersToBigNumber","useWeb3React","ConnectWalletButton","useToast","useCallWithGasPrice","getBalanceNumber","ethers","ApproveConfirmButtons","ButtonArrangement","ToastDescriptionWithTx","useReclaimAuctionBid","StyledReclaimBidCard","ReclaimBidCard","t","account","callWithGasPrice","reclaimableAuction","checkForNextReclaimableAuction","cakeContract","farmAuctionContract","toastSuccess","isApproving","isApproved","isConfirming","handleApprove","handleConfirm","onRequiresApproval","response","allowance","address","currentAllowance","gt","error","onApprove","constants","MaxUint256","onApproveSuccess","receipt","transactionHash","onConfirm","id","onSuccess","position","amount","auctionId","num","toLocaleString","SEQUENTIAL"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, Card, CardHeader, CardBody, Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useCake, useFarmAuctionContract } from 'hooks/useContract'\nimport { ethersToBigNumber } from 'utils/bigNumber'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport useToast from 'hooks/useToast'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { ethers } from 'ethers'\nimport ApproveConfirmButtons, { ButtonArrangement } from 'components/ApproveConfirmButtons'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport useReclaimAuctionBid from '../hooks/useReclaimAuctionBid'\n\nconst StyledReclaimBidCard = styled(Card)`\n  margin-top: 16px;\n  flex: 1;\n`\n\nconst ReclaimBidCard: React.FC = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n\n  const [reclaimableAuction, checkForNextReclaimableAuction] = useReclaimAuctionBid()\n\n  const cakeContract = useCake()\n  const farmAuctionContract = useFarmAuctionContract()\n\n  const { toastSuccess } = useToast()\n\n  const { isApproving, isApproved, isConfirming, handleApprove, handleConfirm } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await cakeContract.allowance(account, farmAuctionContract.address)\n        const currentAllowance = ethersToBigNumber(response)\n        return currentAllowance.gt(0)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return callWithGasPrice(cakeContract, 'approve', [farmAuctionContract.address, ethers.constants.MaxUint256])\n    },\n    onApproveSuccess: async ({ receipt }) => {\n      toastSuccess(\n        t('Contract approved - you can now reclaim your bid!'),\n        <ToastDescriptionWithTx txHash={receipt.transactionHash} />,\n      )\n    },\n    onConfirm: () => {\n      return callWithGasPrice(farmAuctionContract, 'claimAuction', [reclaimableAuction.id])\n    },\n    onSuccess: async ({ receipt }) => {\n      checkForNextReclaimableAuction()\n      toastSuccess(t('Bid reclaimed!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n    },\n  })\n\n  if (!reclaimableAuction) {\n    return null\n  }\n\n  const { position, amount } = reclaimableAuction\n\n  return (\n    <StyledReclaimBidCard mb={['24px', null, null, '0']}>\n      <CardHeader>\n        <Heading>{t('Reclaim Bid')}</Heading>\n      </CardHeader>\n      <CardBody>\n        <Text mb=\"16px\">\n          {t('Your bid in Auction #%auctionId% was unsuccessful.', { auctionId: reclaimableAuction.id })}\n        </Text>\n        <Text bold mb=\"16px\">\n          {t('Reclaim your CAKE now.')}\n        </Text>\n        <Flex justifyContent=\"space-between\" mb=\"8px\">\n          <Text color=\"textSubtle\">{t('Your total bid')}</Text>\n          <Text>{t('%num% CAKE', { num: getBalanceNumber(amount).toLocaleString() })}</Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\" mb=\"24px\">\n          <Text color=\"textSubtle\">{t('Your position')}</Text>\n          <Text>#{position}</Text>\n        </Flex>\n        {account ? (\n          <ApproveConfirmButtons\n            isApproveDisabled={isApproved}\n            isApproving={isApproving}\n            isConfirmDisabled={false}\n            isConfirming={isConfirming}\n            onApprove={handleApprove}\n            onConfirm={handleConfirm}\n            buttonArrangement={ButtonArrangement.SEQUENTIAL}\n            confirmLabel={t('Reclaim')}\n          />\n        ) : (\n          <ConnectWalletButton />\n        )}\n      </CardBody>\n    </StyledReclaimBidCard>\n  )\n}\n\nexport default ReclaimBidCard\n"]},"metadata":{},"sourceType":"module"}