{"ast":null,"code":"import React from'react';import{Box,CardBody,Flex,Text}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{useBNBBusdPrice}from'hooks/useBUSDPrice';import PreviewImage from'./PreviewImage';import{CostLabel,LowestPriceMetaRow,MetaRow}from'./styles';import LocationTag from'./LocationTag';import{useGetLowestPriceFromNft}from'../../hooks/useGetLowestPrice';import{pancakeBunniesAddress}from'../../constants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CollectibleCardBody=function CollectibleCardBody(_ref){var _nft$collectionAddres;var nft=_ref.nft,nftLocation=_ref.nftLocation,currentAskPrice=_ref.currentAskPrice,isUserNft=_ref.isUserNft;var _useTranslation=useTranslation(),t=_useTranslation.t;var name=nft.name,image=nft.image;var bnbBusdPrice=useBNBBusdPrice();var isPancakeBunny=((_nft$collectionAddres=nft.collectionAddress)===null||_nft$collectionAddres===void 0?void 0:_nft$collectionAddres.toLowerCase())===pancakeBunniesAddress.toLowerCase();var _useGetLowestPriceFro=useGetLowestPriceFromNft(nft),isFetching=_useGetLowestPriceFro.isFetching,lowestPrice=_useGetLowestPriceFro.lowestPrice;return/*#__PURE__*/_jsxs(CardBody,{p:\"8px\",children:[/*#__PURE__*/_jsx(PreviewImage,{src:image.thumbnail,height:320,width:320,mb:\"8px\"}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",children:[nft.collectionName&&/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",mb:\"8px\",children:nft.collectionName}),nftLocation&&/*#__PURE__*/_jsx(LocationTag,{nftLocation:nftLocation})]}),/*#__PURE__*/_jsx(Text,{as:\"h4\",fontWeight:\"600\",mb:\"8px\",children:name}),/*#__PURE__*/_jsxs(Box,{borderTop:\"1px solid\",borderTopColor:\"cardBorder\",pt:\"8px\",children:[isPancakeBunny&&/*#__PURE__*/_jsx(LowestPriceMetaRow,{lowestPrice:lowestPrice,isFetching:isFetching,bnbBusdPrice:bnbBusdPrice}),currentAskPrice&&/*#__PURE__*/_jsx(MetaRow,{title:isUserNft?t('Your price'):t('Asking price'),children:/*#__PURE__*/_jsx(CostLabel,{cost:currentAskPrice,bnbBusdPrice:bnbBusdPrice})})]})]});};export default CollectibleCardBody;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/components/CollectibleCard/CardBody.tsx"],"names":["React","Box","CardBody","Flex","Text","useTranslation","useBNBBusdPrice","PreviewImage","CostLabel","LowestPriceMetaRow","MetaRow","LocationTag","useGetLowestPriceFromNft","pancakeBunniesAddress","CollectibleCardBody","nft","nftLocation","currentAskPrice","isUserNft","t","name","image","bnbBusdPrice","isPancakeBunny","collectionAddress","toLowerCase","isFetching","lowestPrice","thumbnail","collectionName"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,QAAd,CAAwBC,IAAxB,CAA8BC,IAA9B,KAA0C,oBAA1C,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,eAAT,KAAgC,oBAAhC,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,OAASC,SAAT,CAAoBC,kBAApB,CAAwCC,OAAxC,KAAuD,UAAvD,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CAEA,OAASC,wBAAT,KAAyC,+BAAzC,CACA,OAASC,qBAAT,KAAsC,iBAAtC,C,wFAEA,GAAMC,CAAAA,mBAAmD,CAAG,QAAtDA,CAAAA,mBAAsD,MAAsD,8BAAnDC,CAAAA,GAAmD,MAAnDA,GAAmD,CAA9CC,WAA8C,MAA9CA,WAA8C,CAAjCC,eAAiC,MAAjCA,eAAiC,CAAhBC,SAAgB,MAAhBA,SAAgB,CAChH,oBAAcb,cAAc,EAA5B,CAAQc,CAAR,iBAAQA,CAAR,CACA,GAAQC,CAAAA,IAAR,CAAwBL,GAAxB,CAAQK,IAAR,CAAcC,KAAd,CAAwBN,GAAxB,CAAcM,KAAd,CACA,GAAMC,CAAAA,YAAY,CAAGhB,eAAe,EAApC,CACA,GAAMiB,CAAAA,cAAc,CAAG,wBAAAR,GAAG,CAACS,iBAAJ,sEAAuBC,WAAvB,MAAyCZ,qBAAqB,CAACY,WAAtB,EAAhE,CACA,0BAAoCb,wBAAwB,CAACG,GAAD,CAA5D,CAAQW,UAAR,uBAAQA,UAAR,CAAoBC,WAApB,uBAAoBA,WAApB,CAEA,mBACE,MAAC,QAAD,EAAU,CAAC,CAAC,KAAZ,wBACE,KAAC,YAAD,EAAc,GAAG,CAAEN,KAAK,CAACO,SAAzB,CAAoC,MAAM,CAAE,GAA5C,CAAiD,KAAK,CAAE,GAAxD,CAA6D,EAAE,CAAC,KAAhE,EADF,cAEE,MAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,CAA0B,cAAc,CAAC,eAAzC,WACGb,GAAG,CAACc,cAAJ,eACC,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,CAAsB,KAAK,CAAC,YAA5B,CAAyC,EAAE,CAAC,KAA5C,UACGd,GAAG,CAACc,cADP,EAFJ,CAMGb,WAAW,eAAI,KAAC,WAAD,EAAa,WAAW,CAAEA,WAA1B,EANlB,GAFF,cAUE,KAAC,IAAD,EAAM,EAAE,CAAC,IAAT,CAAc,UAAU,CAAC,KAAzB,CAA+B,EAAE,CAAC,KAAlC,UACGI,IADH,EAVF,cAaE,MAAC,GAAD,EAAK,SAAS,CAAC,WAAf,CAA2B,cAAc,CAAC,YAA1C,CAAuD,EAAE,CAAC,KAA1D,WACGG,cAAc,eACb,KAAC,kBAAD,EAAoB,WAAW,CAAEI,WAAjC,CAA8C,UAAU,CAAED,UAA1D,CAAsE,YAAY,CAAEJ,YAApF,EAFJ,CAIGL,eAAe,eACd,KAAC,OAAD,EAAS,KAAK,CAAEC,SAAS,CAAGC,CAAC,CAAC,YAAD,CAAJ,CAAqBA,CAAC,CAAC,cAAD,CAA/C,uBACE,KAAC,SAAD,EAAW,IAAI,CAAEF,eAAjB,CAAkC,YAAY,CAAEK,YAAhD,EADF,EALJ,GAbF,GADF,CA0BD,CAjCD,CAmCA,cAAeR,CAAAA,mBAAf","sourcesContent":["import React from 'react'\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useBNBBusdPrice } from 'hooks/useBUSDPrice'\nimport PreviewImage from './PreviewImage'\nimport { CostLabel, LowestPriceMetaRow, MetaRow } from './styles'\nimport LocationTag from './LocationTag'\nimport { CollectibleCardProps } from './types'\nimport { useGetLowestPriceFromNft } from '../../hooks/useGetLowestPrice'\nimport { pancakeBunniesAddress } from '../../constants'\n\nconst CollectibleCardBody: React.FC<CollectibleCardProps> = ({ nft, nftLocation, currentAskPrice, isUserNft }) => {\n  const { t } = useTranslation()\n  const { name, image } = nft\n  const bnbBusdPrice = useBNBBusdPrice()\n  const isPancakeBunny = nft.collectionAddress?.toLowerCase() === pancakeBunniesAddress.toLowerCase()\n  const { isFetching, lowestPrice } = useGetLowestPriceFromNft(nft)\n\n  return (\n    <CardBody p=\"8px\">\n      <PreviewImage src={image.thumbnail} height={320} width={320} mb=\"8px\" />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        {nft.collectionName && (\n          <Text fontSize=\"12px\" color=\"textSubtle\" mb=\"8px\">\n            {nft.collectionName}\n          </Text>\n        )}\n        {nftLocation && <LocationTag nftLocation={nftLocation} />}\n      </Flex>\n      <Text as=\"h4\" fontWeight=\"600\" mb=\"8px\">\n        {name}\n      </Text>\n      <Box borderTop=\"1px solid\" borderTopColor=\"cardBorder\" pt=\"8px\">\n        {isPancakeBunny && (\n          <LowestPriceMetaRow lowestPrice={lowestPrice} isFetching={isFetching} bnbBusdPrice={bnbBusdPrice} />\n        )}\n        {currentAskPrice && (\n          <MetaRow title={isUserNft ? t('Your price') : t('Asking price')}>\n            <CostLabel cost={currentAskPrice} bnbBusdPrice={bnbBusdPrice} />\n          </MetaRow>\n        )}\n      </Box>\n    </CardBody>\n  )\n}\n\nexport default CollectibleCardBody\n"]},"metadata":{},"sourceType":"module"}