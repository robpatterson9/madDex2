{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React,{useEffect,useState}from'react';import{Box,Text,Flex,Button,Skeleton,Ticket,PresentWonIcon,TooltipText,InfoIcon,useTooltip,useModal}from'@pancakeswap/uikit';import styled from'styled-components';import{useWeb3React}from'@web3-react/core';import{fetchLottery}from'state/lottery/helpers';import{getWinningTickets}from'state/lottery/fetchUnclaimedUserRewards';import{fetchUserTicketsForOneRound}from'state/lottery/getUserTicketsData';import{useGetUserLotteryGraphRoundById}from'state/lottery/hooks';import{useTranslation}from'contexts/Localization';import useTheme from'hooks/useTheme';import WinningNumbers from'../WinningNumbers';import{processLotteryResponse}from'../../helpers';import TicketNumber from'../TicketNumber';import ClaimPrizesModal from'../ClaimPrizesModal';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TopBox=styled(Flex)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  flex-direction: column;\\n  margin: -24px;\\n  padding: 24px;\\n  background-color: \",\";\\n  border-bottom: 1px solid \",\";\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.dropdown;},function(_ref2){var theme=_ref2.theme;return theme.colors.cardBorder;});var ScrollBox=styled(Box)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin-right: -20px;\\n  padding-right: 24px;\\n  max-height: 300px;\\n  overflow-y: scroll;\\n  margin-top: 24px;\\n\"])));var TicketSkeleton=function TicketSkeleton(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Skeleton,{width:\"32px\",height:\"12px\",mt:\"2px\",mb:\"4px\"}),/*#__PURE__*/_jsx(Skeleton,{width:\"100%\",height:\"34px\",mb:\"12px\"})]});};var PreviousRoundTicketsInner=function PreviousRoundTicketsInner(_ref3){var _userWinningTickets$a;var roundId=_ref3.roundId;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),lotteryInfo=_useState2[0],setLotteryInfo=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),allUserTickets=_useState4[0],setAllUserTickets=_useState4[1];var _useState5=useState({allWinningTickets:null,ticketsWithUnclaimedRewards:null,isFetched:false,claimData:null}),_useState6=_slicedToArray(_useState5,2),userWinningTickets=_useState6[0],setUserWinningTickets=_useState6[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var _useTheme=useTheme(),theme=_useTheme.theme;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useGetUserLotteryGra=useGetUserLotteryGraphRoundById(roundId),totalTickets=_useGetUserLotteryGra.totalTickets;var _useModal=useModal(/*#__PURE__*/_jsx(ClaimPrizesModal,{roundsToClaim:[userWinningTickets.claimData]}),false),_useModal2=_slicedToArray(_useModal,1),onPresentClaimModal=_useModal2[0];var TooltipComponent=function TooltipComponent(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{mb:\"16px\",children:t('Tickets must match the winning number in the exact same order, starting from the first digit.')}),/*#__PURE__*/_jsx(Text,{mb:\"16px\",children:t('If the winning number is “123456”:')}),/*#__PURE__*/_jsx(Text,{mb:\"4px\",children:t('“120000” matches the first 2 digits.')}),/*#__PURE__*/_jsx(Text,{children:t('“000006” matches the last digit, but since the first five digits are wrong, it doesn’t win any prizes.')})]});};var _useTooltip=useTooltip(/*#__PURE__*/_jsx(TooltipComponent,{}),{placement:'bottom-end',tooltipOffset:[20,10]}),targetRef=_useTooltip.targetRef,tooltip=_useTooltip.tooltip,tooltipVisible=_useTooltip.tooltipVisible;useEffect(function(){var addWinningTicketInfoToAllTickets=function addWinningTicketInfoToAllTickets(_allTickets,_allWinningTickets){var allTicketsWithWinningTickets=_allTickets.map(function(ticket){var winningTicketEquivalent=_allWinningTickets.find(function(winningTicket){return winningTicket.id===ticket.id;});if(winningTicketEquivalent){return winningTicketEquivalent;}return ticket;});return allTicketsWithWinningTickets;};var sortTicketsByWinningBracket=function sortTicketsByWinningBracket(tickets){return tickets.sort(function(ticketA,ticketB){var rewardBracket1=ticketA.rewardBracket===undefined?0:ticketA.rewardBracket+1;var rewardBracket2=ticketB.rewardBracket===undefined?0:ticketB.rewardBracket+1;return rewardBracket2-rewardBracket1;});};var fetchData=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var userTickets,lotteryData,processedLotteryData,winningTickets,allTicketsWithWinningTicketInfo,ticketsSortedByWinners;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetchUserTicketsForOneRound(account,roundId);case 2:userTickets=_context.sent;_context.next=5;return fetchLottery(roundId);case 5:lotteryData=_context.sent;processedLotteryData=processLotteryResponse(lotteryData);_context.next=9;return getWinningTickets({roundId:roundId,userTickets:userTickets,finalNumber:processedLotteryData.finalNumber.toString()});case 9:winningTickets=_context.sent;setUserWinningTickets({isFetched:true,allWinningTickets:winningTickets===null||winningTickets===void 0?void 0:winningTickets.allWinningTickets,ticketsWithUnclaimedRewards:winningTickets===null||winningTickets===void 0?void 0:winningTickets.ticketsWithUnclaimedRewards,claimData:winningTickets});setLotteryInfo(processedLotteryData);// If the user has some winning tickets - modify the userTickets response to include that data\nif(winningTickets===null||winningTickets===void 0?void 0:winningTickets.allWinningTickets){allTicketsWithWinningTicketInfo=addWinningTicketInfoToAllTickets(userTickets,winningTickets.allWinningTickets);ticketsSortedByWinners=sortTicketsByWinningBracket(allTicketsWithWinningTicketInfo);setAllUserTickets(ticketsSortedByWinners);}else{setAllUserTickets(userTickets);}case 13:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref4.apply(this,arguments);};}();fetchData();},[roundId,account,totalTickets]);var getFooter=function getFooter(){var _userWinningTickets$t;if((userWinningTickets===null||userWinningTickets===void 0?void 0:(_userWinningTickets$t=userWinningTickets.ticketsWithUnclaimedRewards)===null||_userWinningTickets$t===void 0?void 0:_userWinningTickets$t.length)>0){return/*#__PURE__*/_jsx(Button,{onClick:onPresentClaimModal,mt:\"24px\",width:\"100%\",children:t('Collect Prizes')});}if(!userWinningTickets.allWinningTickets){return/*#__PURE__*/_jsx(\"div\",{ref:targetRef,children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"center\",mt:\"20px\",children:[/*#__PURE__*/_jsx(InfoIcon,{height:\"20px\",width:\"20px\",color:\"textSubtle\",mr:\"8px\"}),/*#__PURE__*/_jsx(TooltipText,{color:\"textSubtle\",children:t(\"Why didn't I win?\")})]})});}return null;};return/*#__PURE__*/_jsxs(_Fragment,{children:[tooltipVisible&&tooltip,/*#__PURE__*/_jsxs(TopBox,{children:[/*#__PURE__*/_jsx(Text,{bold:true,textTransform:\"uppercase\",color:\"secondary\",fontSize:\"12px\",mb:\"4px\",children:t('Winning number')}),(lotteryInfo===null||lotteryInfo===void 0?void 0:lotteryInfo.finalNumber)?/*#__PURE__*/_jsx(WinningNumbers,{number:lotteryInfo.finalNumber.toString()}):/*#__PURE__*/_jsx(Skeleton,{width:\"230px\",height:\"34px\"})]}),/*#__PURE__*/_jsxs(ScrollBox,{children:[/*#__PURE__*/_jsx(Text,{bold:true,textTransform:\"uppercase\",color:\"secondary\",fontSize:\"12px\",my:\"16px\",children:t('Your tickets')}),/*#__PURE__*/_jsxs(Flex,{mb:\"8px\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsx(Ticket,{width:\"24px\",height:\"24px\",mr:\"8px\"}),/*#__PURE__*/_jsxs(Text,{bold:true,color:\"text\",children:[t('Total tickets'),\":\"]})]}),/*#__PURE__*/_jsx(Text,{bold:true,color:\"text\",children:allUserTickets?allUserTickets.length:/*#__PURE__*/_jsx(Skeleton,{width:\"56px\",height:\"24px\"})})]}),/*#__PURE__*/_jsxs(Flex,{mb:\"24px\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsx(PresentWonIcon,{width:\"24px\",height:\"24px\",mr:\"8px\"}),/*#__PURE__*/_jsxs(Text,{bold:true,color:\"text\",children:[t('Winning tickets'),\":\"]})]}),/*#__PURE__*/_jsx(Text,{bold:true,color:\"text\",children:userWinningTickets.isFetched?(userWinningTickets===null||userWinningTickets===void 0?void 0:(_userWinningTickets$a=userWinningTickets.allWinningTickets)===null||_userWinningTickets$a===void 0?void 0:_userWinningTickets$a.length)||'0':/*#__PURE__*/_jsx(Skeleton,{width:\"40px\",height:\"24px\"})})]}),allUserTickets?allUserTickets.map(function(ticket){return/*#__PURE__*/_jsx(TicketNumber,{id:ticket.id,number:ticket.number,rewardBracket:ticket.rewardBracket,status:ticket.status},ticket.id);}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TicketSkeleton,{}),/*#__PURE__*/_jsx(TicketSkeleton,{}),/*#__PURE__*/_jsx(TicketSkeleton,{}),/*#__PURE__*/_jsx(TicketSkeleton,{})]})]}),/*#__PURE__*/_jsx(Flex,{borderTop:\"1px solid \".concat(theme.colors.cardBorder),alignItems:\"center\",justifyContent:\"center\",children:userWinningTickets.isFetched&&getFooter()})]});};export default PreviousRoundTicketsInner;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Lottery/components/ViewTicketsModal/PreviousRoundTicketsInner.tsx"],"names":["React","useEffect","useState","Box","Text","Flex","Button","Skeleton","Ticket","PresentWonIcon","TooltipText","InfoIcon","useTooltip","useModal","styled","useWeb3React","fetchLottery","getWinningTickets","fetchUserTicketsForOneRound","useGetUserLotteryGraphRoundById","useTranslation","useTheme","WinningNumbers","processLotteryResponse","TicketNumber","ClaimPrizesModal","TopBox","theme","colors","dropdown","cardBorder","ScrollBox","TicketSkeleton","PreviousRoundTicketsInner","roundId","lotteryInfo","setLotteryInfo","allUserTickets","setAllUserTickets","allWinningTickets","ticketsWithUnclaimedRewards","isFetched","claimData","userWinningTickets","setUserWinningTickets","t","account","totalTickets","onPresentClaimModal","TooltipComponent","placement","tooltipOffset","targetRef","tooltip","tooltipVisible","addWinningTicketInfoToAllTickets","_allTickets","_allWinningTickets","allTicketsWithWinningTickets","map","ticket","winningTicketEquivalent","find","winningTicket","id","sortTicketsByWinningBracket","tickets","sort","ticketA","ticketB","rewardBracket1","rewardBracket","undefined","rewardBracket2","fetchData","userTickets","lotteryData","processedLotteryData","finalNumber","toString","winningTickets","allTicketsWithWinningTicketInfo","ticketsSortedByWinners","getFooter","length","number","status"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  Box,\n  Text,\n  Flex,\n  Button,\n  Skeleton,\n  Ticket,\n  PresentWonIcon,\n  TooltipText,\n  InfoIcon,\n  useTooltip,\n  useModal,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { LotteryTicket, LotteryTicketClaimData } from 'config/constants/types'\nimport { fetchLottery } from 'state/lottery/helpers'\nimport { getWinningTickets } from 'state/lottery/fetchUnclaimedUserRewards'\nimport { fetchUserTicketsForOneRound } from 'state/lottery/getUserTicketsData'\nimport { LotteryRound } from 'state/types'\nimport { useGetUserLotteryGraphRoundById } from 'state/lottery/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport WinningNumbers from '../WinningNumbers'\nimport { processLotteryResponse } from '../../helpers'\nimport TicketNumber from '../TicketNumber'\nimport ClaimPrizesModal from '../ClaimPrizesModal'\n\nconst TopBox = styled(Flex)`\n  flex-direction: column;\n  margin: -24px;\n  padding: 24px;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst ScrollBox = styled(Box)`\n  margin-right: -20px;\n  padding-right: 24px;\n  max-height: 300px;\n  overflow-y: scroll;\n  margin-top: 24px;\n`\n\nconst TicketSkeleton = () => {\n  return (\n    <>\n      <Skeleton width=\"32px\" height=\"12px\" mt=\"2px\" mb=\"4px\" />\n      <Skeleton width=\"100%\" height=\"34px\" mb=\"12px\" />\n    </>\n  )\n}\n\nconst PreviousRoundTicketsInner: React.FC<{ roundId: string }> = ({ roundId }) => {\n  const [lotteryInfo, setLotteryInfo] = useState<LotteryRound>(null)\n  const [allUserTickets, setAllUserTickets] = useState<LotteryTicket[]>(null)\n  const [userWinningTickets, setUserWinningTickets] = useState<{\n    allWinningTickets: LotteryTicket[]\n    ticketsWithUnclaimedRewards: LotteryTicket[]\n    isFetched: boolean\n    claimData: LotteryTicketClaimData\n  }>({ allWinningTickets: null, ticketsWithUnclaimedRewards: null, isFetched: false, claimData: null })\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { account } = useWeb3React()\n  const { totalTickets } = useGetUserLotteryGraphRoundById(roundId)\n  const [onPresentClaimModal] = useModal(<ClaimPrizesModal roundsToClaim={[userWinningTickets.claimData]} />, false)\n\n  const TooltipComponent = () => (\n    <>\n      <Text mb=\"16px\">\n        {t('Tickets must match the winning number in the exact same order, starting from the first digit.')}\n      </Text>\n      <Text mb=\"16px\">{t('If the winning number is “123456”:')}</Text>\n      <Text mb=\"4px\">{t('“120000” matches the first 2 digits.')}</Text>\n      <Text>\n        {t('“000006” matches the last digit, but since the first five digits are wrong, it doesn’t win any prizes.')}\n      </Text>\n    </>\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  useEffect(() => {\n    const addWinningTicketInfoToAllTickets = (\n      _allTickets: LotteryTicket[],\n      _allWinningTickets: LotteryTicket[],\n    ): LotteryTicket[] => {\n      const allTicketsWithWinningTickets = _allTickets.map((ticket) => {\n        const winningTicketEquivalent = _allWinningTickets.find((winningTicket) => winningTicket.id === ticket.id)\n        if (winningTicketEquivalent) {\n          return winningTicketEquivalent\n        }\n        return ticket\n      })\n      return allTicketsWithWinningTickets\n    }\n\n    const sortTicketsByWinningBracket = (tickets) => {\n      return tickets.sort((ticketA, ticketB) => {\n        const rewardBracket1 = ticketA.rewardBracket === undefined ? 0 : ticketA.rewardBracket + 1\n        const rewardBracket2 = ticketB.rewardBracket === undefined ? 0 : ticketB.rewardBracket + 1\n        return rewardBracket2 - rewardBracket1\n      })\n    }\n\n    const fetchData = async () => {\n      const userTickets = await fetchUserTicketsForOneRound(account, roundId)\n      const lotteryData = await fetchLottery(roundId)\n      const processedLotteryData = processLotteryResponse(lotteryData)\n      const winningTickets = await getWinningTickets({\n        roundId,\n        userTickets,\n        finalNumber: processedLotteryData.finalNumber.toString(),\n      })\n\n      setUserWinningTickets({\n        isFetched: true,\n        allWinningTickets: winningTickets?.allWinningTickets,\n        ticketsWithUnclaimedRewards: winningTickets?.ticketsWithUnclaimedRewards,\n        claimData: winningTickets,\n      })\n      setLotteryInfo(processedLotteryData)\n\n      // If the user has some winning tickets - modify the userTickets response to include that data\n      if (winningTickets?.allWinningTickets) {\n        const allTicketsWithWinningTicketInfo = addWinningTicketInfoToAllTickets(\n          userTickets,\n          winningTickets.allWinningTickets,\n        )\n        const ticketsSortedByWinners = sortTicketsByWinningBracket(allTicketsWithWinningTicketInfo)\n        setAllUserTickets(ticketsSortedByWinners)\n      } else {\n        setAllUserTickets(userTickets)\n      }\n    }\n\n    fetchData()\n  }, [roundId, account, totalTickets])\n\n  const getFooter = () => {\n    if (userWinningTickets?.ticketsWithUnclaimedRewards?.length > 0) {\n      return (\n        <Button onClick={onPresentClaimModal} mt=\"24px\" width=\"100%\">\n          {t('Collect Prizes')}\n        </Button>\n      )\n    }\n    if (!userWinningTickets.allWinningTickets) {\n      return (\n        <div ref={targetRef}>\n          <Flex alignItems=\"center\" justifyContent=\"center\" mt=\"20px\">\n            <InfoIcon height=\"20px\" width=\"20px\" color=\"textSubtle\" mr=\"8px\" />\n            <TooltipText color=\"textSubtle\">{t(\"Why didn't I win?\")}</TooltipText>\n          </Flex>\n        </div>\n      )\n    }\n    return null\n  }\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TopBox>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" mb=\"4px\">\n          {t('Winning number')}\n        </Text>\n        {lotteryInfo?.finalNumber ? (\n          <WinningNumbers number={lotteryInfo.finalNumber.toString()} />\n        ) : (\n          <Skeleton width=\"230px\" height=\"34px\" />\n        )}\n      </TopBox>\n      <ScrollBox>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" my=\"16px\">\n          {t('Your tickets')}\n        </Text>\n        <Flex mb=\"8px\" justifyContent=\"space-between\">\n          <Flex>\n            <Ticket width=\"24px\" height=\"24px\" mr=\"8px\" />\n            <Text bold color=\"text\">\n              {t('Total tickets')}:\n            </Text>\n          </Flex>\n          <Text bold color=\"text\">\n            {allUserTickets ? allUserTickets.length : <Skeleton width=\"56px\" height=\"24px\" />}\n          </Text>\n        </Flex>\n        <Flex mb=\"24px\" justifyContent=\"space-between\">\n          <Flex>\n            <PresentWonIcon width=\"24px\" height=\"24px\" mr=\"8px\" />\n            <Text bold color=\"text\">\n              {t('Winning tickets')}:\n            </Text>\n          </Flex>\n          <Text bold color=\"text\">\n            {userWinningTickets.isFetched ? (\n              userWinningTickets?.allWinningTickets?.length || '0'\n            ) : (\n              <Skeleton width=\"40px\" height=\"24px\" />\n            )}\n          </Text>\n        </Flex>\n        {allUserTickets ? (\n          allUserTickets.map((ticket) => {\n            return (\n              <TicketNumber\n                key={ticket.id}\n                id={ticket.id}\n                number={ticket.number}\n                rewardBracket={ticket.rewardBracket}\n                status={ticket.status}\n              />\n            )\n          })\n        ) : (\n          <>\n            <TicketSkeleton />\n            <TicketSkeleton />\n            <TicketSkeleton />\n            <TicketSkeleton />\n          </>\n        )}\n      </ScrollBox>\n      <Flex borderTop={`1px solid ${theme.colors.cardBorder}`} alignItems=\"center\" justifyContent=\"center\">\n        {userWinningTickets.isFetched && getFooter()}\n      </Flex>\n    </>\n  )\n}\n\nexport default PreviousRoundTicketsInner\n"]},"metadata":{},"sourceType":"module"}