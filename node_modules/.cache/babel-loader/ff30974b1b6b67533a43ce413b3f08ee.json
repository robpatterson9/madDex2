{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Nft/market/components/CollectibleCard/CardBody.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { useBNBBusdPrice } from 'hooks/useBUSDPrice';\nimport PreviewImage from './PreviewImage';\nimport { CostLabel, LowestPriceMetaRow, MetaRow } from './styles';\nimport LocationTag from './LocationTag';\nimport { useGetLowestPriceFromNft } from '../../hooks/useGetLowestPrice';\nimport { pancakeBunniesAddress } from '../../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CollectibleCardBody = ({\n  nft,\n  nftLocation,\n  currentAskPrice,\n  isUserNft\n}) => {\n  _s();\n\n  var _nft$collectionAddres;\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    name,\n    image\n  } = nft;\n  const bnbBusdPrice = useBNBBusdPrice();\n  const isPancakeBunny = ((_nft$collectionAddres = nft.collectionAddress) === null || _nft$collectionAddres === void 0 ? void 0 : _nft$collectionAddres.toLowerCase()) === pancakeBunniesAddress.toLowerCase();\n  const {\n    isFetching,\n    lowestPrice\n  } = useGetLowestPriceFromNft(nft);\n  return /*#__PURE__*/_jsxDEV(CardBody, {\n    p: \"8px\",\n    children: [/*#__PURE__*/_jsxDEV(PreviewImage, {\n      src: image.thumbnail,\n      height: 320,\n      width: 320,\n      mb: \"8px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      children: [nft.collectionName && /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"12px\",\n        color: \"textSubtle\",\n        mb: \"8px\",\n        children: nft.collectionName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), nftLocation && /*#__PURE__*/_jsxDEV(LocationTag, {\n        nftLocation: nftLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      as: \"h4\",\n      fontWeight: \"600\",\n      mb: \"8px\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      borderTop: \"1px solid\",\n      borderTopColor: \"cardBorder\",\n      pt: \"8px\",\n      children: [isPancakeBunny && /*#__PURE__*/_jsxDEV(LowestPriceMetaRow, {\n        lowestPrice: lowestPrice,\n        isFetching: isFetching,\n        bnbBusdPrice: bnbBusdPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), currentAskPrice && /*#__PURE__*/_jsxDEV(MetaRow, {\n        title: isUserNft ? t('Your price') : t('Asking price'),\n        children: /*#__PURE__*/_jsxDEV(CostLabel, {\n          cost: currentAskPrice,\n          bnbBusdPrice: bnbBusdPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CollectibleCardBody, \"wKbvT/NIy7ylcHl0l51wagI4dCA=\", false, function () {\n  return [useTranslation, useBNBBusdPrice, useGetLowestPriceFromNft];\n});\n\n_c = CollectibleCardBody;\nexport default CollectibleCardBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"CollectibleCardBody\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/components/CollectibleCard/CardBody.tsx"],"names":["React","Box","CardBody","Flex","Text","useTranslation","useBNBBusdPrice","PreviewImage","CostLabel","LowestPriceMetaRow","MetaRow","LocationTag","useGetLowestPriceFromNft","pancakeBunniesAddress","CollectibleCardBody","nft","nftLocation","currentAskPrice","isUserNft","t","name","image","bnbBusdPrice","isPancakeBunny","collectionAddress","toLowerCase","isFetching","lowestPrice","thumbnail","collectionName"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useBNBBusdPrice } from 'hooks/useBUSDPrice'\nimport PreviewImage from './PreviewImage'\nimport { CostLabel, LowestPriceMetaRow, MetaRow } from './styles'\nimport LocationTag from './LocationTag'\nimport { CollectibleCardProps } from './types'\nimport { useGetLowestPriceFromNft } from '../../hooks/useGetLowestPrice'\nimport { pancakeBunniesAddress } from '../../constants'\n\nconst CollectibleCardBody: React.FC<CollectibleCardProps> = ({ nft, nftLocation, currentAskPrice, isUserNft }) => {\n  const { t } = useTranslation()\n  const { name, image } = nft\n  const bnbBusdPrice = useBNBBusdPrice()\n  const isPancakeBunny = nft.collectionAddress?.toLowerCase() === pancakeBunniesAddress.toLowerCase()\n  const { isFetching, lowestPrice } = useGetLowestPriceFromNft(nft)\n\n  return (\n    <CardBody p=\"8px\">\n      <PreviewImage src={image.thumbnail} height={320} width={320} mb=\"8px\" />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        {nft.collectionName && (\n          <Text fontSize=\"12px\" color=\"textSubtle\" mb=\"8px\">\n            {nft.collectionName}\n          </Text>\n        )}\n        {nftLocation && <LocationTag nftLocation={nftLocation} />}\n      </Flex>\n      <Text as=\"h4\" fontWeight=\"600\" mb=\"8px\">\n        {name}\n      </Text>\n      <Box borderTop=\"1px solid\" borderTopColor=\"cardBorder\" pt=\"8px\">\n        {isPancakeBunny && (\n          <LowestPriceMetaRow lowestPrice={lowestPrice} isFetching={isFetching} bnbBusdPrice={bnbBusdPrice} />\n        )}\n        {currentAskPrice && (\n          <MetaRow title={isUserNft ? t('Your price') : t('Asking price')}>\n            <CostLabel cost={currentAskPrice} bnbBusdPrice={bnbBusdPrice} />\n          </MetaRow>\n        )}\n      </Box>\n    </CardBody>\n  )\n}\n\nexport default CollectibleCardBody\n"]},"metadata":{},"sourceType":"module"}