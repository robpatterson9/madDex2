{"ast":null,"code":"import React from'react';import{useTranslation}from'contexts/Localization';import{getBscScanLink}from'utils';import{Flex,Link,PocketWatchIcon,Text,Skeleton}from'@pancakeswap/uikit';import getTimePeriods from'utils/getTimePeriods';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Timer=function Timer(_ref){var publicIfoData=_ref.publicIfoData;var _useTranslation=useTranslation(),t=_useTranslation.t;var status=publicIfoData.status,secondsUntilStart=publicIfoData.secondsUntilStart,secondsUntilEnd=publicIfoData.secondsUntilEnd,startBlockNum=publicIfoData.startBlockNum;var countdownToUse=status==='coming_soon'?secondsUntilStart:secondsUntilEnd;var timeUntil=getTimePeriods(countdownToUse);var suffix=status==='coming_soon'?t('Start').toLowerCase():t('Finish').toLowerCase();return/*#__PURE__*/_jsx(Flex,{justifyContent:\"center\",mb:\"32px\",children:status==='idle'?/*#__PURE__*/_jsx(Skeleton,{animation:\"pulse\",variant:\"rect\",width:\"100%\",height:\"48px\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(PocketWatchIcon,{width:\"48px\",mr:\"16px\"}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Text,{bold:true,mr:\"16px\",children:[suffix,\":\"]}),/*#__PURE__*/_jsx(Text,{children:t('%day%d %hour%h %minute%m',{day:timeUntil.days,hour:timeUntil.hours,minute:timeUntil.minutes})}),/*#__PURE__*/_jsx(Link,{href:getBscScanLink(startBlockNum,'countdown'),target:\"blank\",rel:\"noopener noreferrer\",ml:\"8px\",textTransform:\"lowercase\",children:\"(\".concat(t('Blocks'),\")\")})]})]})});};export default Timer;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Ifos/components/IfoFoldableCard/Timer.tsx"],"names":["React","useTranslation","getBscScanLink","Flex","Link","PocketWatchIcon","Text","Skeleton","getTimePeriods","Timer","publicIfoData","t","status","secondsUntilStart","secondsUntilEnd","startBlockNum","countdownToUse","timeUntil","suffix","toLowerCase","day","days","hour","hours","minute","minutes"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,cAAT,KAA+B,OAA/B,CACA,OAASC,IAAT,CAAeC,IAAf,CAAqBC,eAArB,CAAsCC,IAAtC,CAA4CC,QAA5C,KAA4D,oBAA5D,CACA,MAAOC,CAAAA,cAAP,KAA2B,sBAA3B,C,6IAOA,GAAMC,CAAAA,KAAsB,CAAG,QAAzBA,CAAAA,KAAyB,MAAuB,IAApBC,CAAAA,aAAoB,MAApBA,aAAoB,CACpD,oBAAcT,cAAc,EAA5B,CAAQU,CAAR,iBAAQA,CAAR,CACA,GAAQC,CAAAA,MAAR,CAAsEF,aAAtE,CAAQE,MAAR,CAAgBC,iBAAhB,CAAsEH,aAAtE,CAAgBG,iBAAhB,CAAmCC,eAAnC,CAAsEJ,aAAtE,CAAmCI,eAAnC,CAAoDC,aAApD,CAAsEL,aAAtE,CAAoDK,aAApD,CACA,GAAMC,CAAAA,cAAc,CAAGJ,MAAM,GAAK,aAAX,CAA2BC,iBAA3B,CAA+CC,eAAtE,CACA,GAAMG,CAAAA,SAAS,CAAGT,cAAc,CAACQ,cAAD,CAAhC,CACA,GAAME,CAAAA,MAAM,CAAGN,MAAM,GAAK,aAAX,CAA2BD,CAAC,CAAC,OAAD,CAAD,CAAWQ,WAAX,EAA3B,CAAsDR,CAAC,CAAC,QAAD,CAAD,CAAYQ,WAAZ,EAArE,CACA,mBACE,KAAC,IAAD,EAAM,cAAc,CAAC,QAArB,CAA8B,EAAE,CAAC,MAAjC,UACGP,MAAM,GAAK,MAAX,cACC,KAAC,QAAD,EAAU,SAAS,CAAC,OAApB,CAA4B,OAAO,CAAC,MAApC,CAA2C,KAAK,CAAC,MAAjD,CAAwD,MAAM,CAAC,MAA/D,EADD,cAGC,wCACE,KAAC,eAAD,EAAiB,KAAK,CAAC,MAAvB,CAA8B,EAAE,CAAC,MAAjC,EADF,cAEE,MAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,wBACE,MAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAC,MAAd,WACGM,MADH,OADF,cAIE,KAAC,IAAD,WACGP,CAAC,CAAC,0BAAD,CAA6B,CAC7BS,GAAG,CAAEH,SAAS,CAACI,IADc,CAE7BC,IAAI,CAAEL,SAAS,CAACM,KAFa,CAG7BC,MAAM,CAAEP,SAAS,CAACQ,OAHW,CAA7B,CADJ,EAJF,cAWE,KAAC,IAAD,EACE,IAAI,CAAEvB,cAAc,CAACa,aAAD,CAAgB,WAAhB,CADtB,CAEE,MAAM,CAAC,OAFT,CAGE,GAAG,CAAC,qBAHN,CAIE,EAAE,CAAC,KAJL,CAKE,aAAa,CAAC,WALhB,qBAOOJ,CAAC,CAAC,QAAD,CAPR,OAXF,GAFF,GAJJ,EADF,CAgCD,CAtCD,CAwCA,cAAeF,CAAAA,KAAf","sourcesContent":["import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport { Flex, Link, PocketWatchIcon, Text, Skeleton } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { PublicIfoData } from 'views/Ifos/types'\n\ninterface Props {\n  publicIfoData: PublicIfoData\n}\n\nconst Timer: React.FC<Props> = ({ publicIfoData }) => {\n  const { t } = useTranslation()\n  const { status, secondsUntilStart, secondsUntilEnd, startBlockNum } = publicIfoData\n  const countdownToUse = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd\n  const timeUntil = getTimePeriods(countdownToUse)\n  const suffix = status === 'coming_soon' ? t('Start').toLowerCase() : t('Finish').toLowerCase()\n  return (\n    <Flex justifyContent=\"center\" mb=\"32px\">\n      {status === 'idle' ? (\n        <Skeleton animation=\"pulse\" variant=\"rect\" width=\"100%\" height=\"48px\" />\n      ) : (\n        <>\n          <PocketWatchIcon width=\"48px\" mr=\"16px\" />\n          <Flex alignItems=\"center\">\n            <Text bold mr=\"16px\">\n              {suffix}:\n            </Text>\n            <Text>\n              {t('%day%d %hour%h %minute%m', {\n                day: timeUntil.days,\n                hour: timeUntil.hours,\n                minute: timeUntil.minutes,\n              })}\n            </Text>\n            <Link\n              href={getBscScanLink(startBlockNum, 'countdown')}\n              target=\"blank\"\n              rel=\"noopener noreferrer\"\n              ml=\"8px\"\n              textTransform=\"lowercase\"\n            >\n              {`(${t('Blocks')})`}\n            </Link>\n          </Flex>\n        </>\n      )}\n    </Flex>\n  )\n}\n\nexport default Timer\n"]},"metadata":{},"sourceType":"module"}