{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{Link,useRouteMatch}from'react-router-dom';import{Box,Flex,ButtonMenu,ButtonMenuItem}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import Search from'views/Info/components/InfoSearch';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NavWrapper=styled(Flex)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  justify-content: space-between;\\n  padding: 20px 16px;\\n  flex-direction: column;\\n  gap: 8px;\\n  \",\" {\\n    padding: 20px 40px;\\n    flex-direction: row;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.gradients.cardHeader;},function(_ref2){var theme=_ref2.theme;return theme.mediaQueries.sm;});var InfoNav=function InfoNav(){var _useTranslation=useTranslation(),t=_useTranslation.t;var isPools=useRouteMatch(['/info/pools','/info/pool','/info/pair']);var isTokens=useRouteMatch(['/info/tokens','/info/token']);var activeIndex=0;if(isPools){activeIndex=1;}if(isTokens){activeIndex=2;}return/*#__PURE__*/_jsxs(NavWrapper,{children:[/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsxs(ButtonMenu,{activeIndex:activeIndex,scale:\"sm\",variant:\"subtle\",children:[/*#__PURE__*/_jsx(ButtonMenuItem,{as:Link,to:\"/info\",children:t('Overview')}),/*#__PURE__*/_jsx(ButtonMenuItem,{as:Link,to:\"/info/pools\",children:t('Pools')}),/*#__PURE__*/_jsx(ButtonMenuItem,{as:Link,to:\"/info/tokens\",children:t('Tokens')})]})}),/*#__PURE__*/_jsx(Box,{width:['100%','100%','250px'],children:/*#__PURE__*/_jsx(Search,{})})]});};export default InfoNav;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Info/components/InfoNav/index.tsx"],"names":["React","styled","Link","useRouteMatch","Box","Flex","ButtonMenu","ButtonMenuItem","useTranslation","Search","NavWrapper","theme","colors","gradients","cardHeader","mediaQueries","sm","InfoNav","t","isPools","isTokens","activeIndex"],"mappings":"4LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,IAAT,CAAeC,aAAf,KAAoC,kBAApC,CACA,OAASC,GAAT,CAAcC,IAAd,CAAoBC,UAApB,CAAgCC,cAAhC,KAAsD,oBAAtD,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,MAAP,KAAmB,kCAAnB,C,wFAEA,GAAMC,CAAAA,UAAU,CAAGT,MAAM,CAACI,IAAD,CAAT,0PACA,kBAAGM,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,MAAN,CAAaC,SAAb,CAAuBC,UAAtC,EADA,CAMZ,mBAAGH,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACI,YAAN,CAAmBC,EAAlC,EANY,CAAhB,CAYA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,oBAAcT,cAAc,EAA5B,CAAQU,CAAR,iBAAQA,CAAR,CACA,GAAMC,CAAAA,OAAO,CAAGhB,aAAa,CAAC,CAAC,aAAD,CAAgB,YAAhB,CAA8B,YAA9B,CAAD,CAA7B,CACA,GAAMiB,CAAAA,QAAQ,CAAGjB,aAAa,CAAC,CAAC,cAAD,CAAiB,aAAjB,CAAD,CAA9B,CACA,GAAIkB,CAAAA,WAAW,CAAG,CAAlB,CACA,GAAIF,OAAJ,CAAa,CACXE,WAAW,CAAG,CAAd,CACD,CACD,GAAID,QAAJ,CAAc,CACZC,WAAW,CAAG,CAAd,CACD,CACD,mBACE,MAAC,UAAD,yBACE,KAAC,GAAD,wBACE,MAAC,UAAD,EAAY,WAAW,CAAEA,WAAzB,CAAsC,KAAK,CAAC,IAA5C,CAAiD,OAAO,CAAC,QAAzD,wBACE,KAAC,cAAD,EAAgB,EAAE,CAAEnB,IAApB,CAA0B,EAAE,CAAC,OAA7B,UACGgB,CAAC,CAAC,UAAD,CADJ,EADF,cAIE,KAAC,cAAD,EAAgB,EAAE,CAAEhB,IAApB,CAA0B,EAAE,CAAC,aAA7B,UACGgB,CAAC,CAAC,OAAD,CADJ,EAJF,cAOE,KAAC,cAAD,EAAgB,EAAE,CAAEhB,IAApB,CAA0B,EAAE,CAAC,cAA7B,UACGgB,CAAC,CAAC,QAAD,CADJ,EAPF,GADF,EADF,cAcE,KAAC,GAAD,EAAK,KAAK,CAAE,CAAC,MAAD,CAAS,MAAT,CAAiB,OAAjB,CAAZ,uBACE,KAAC,MAAD,IADF,EAdF,GADF,CAoBD,CA/BD,CAiCA,cAAeD,CAAAA,OAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useRouteMatch } from 'react-router-dom'\nimport { Box, Flex, ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Search from 'views/Info/components/InfoSearch'\n\nconst NavWrapper = styled(Flex)`\n  background: ${({ theme }) => theme.colors.gradients.cardHeader};\n  justify-content: space-between;\n  padding: 20px 16px;\n  flex-direction: column;\n  gap: 8px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 20px 40px;\n    flex-direction: row;\n  }\n`\n\nconst InfoNav = () => {\n  const { t } = useTranslation()\n  const isPools = useRouteMatch(['/info/pools', '/info/pool', '/info/pair'])\n  const isTokens = useRouteMatch(['/info/tokens', '/info/token'])\n  let activeIndex = 0\n  if (isPools) {\n    activeIndex = 1\n  }\n  if (isTokens) {\n    activeIndex = 2\n  }\n  return (\n    <NavWrapper>\n      <Box>\n        <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"subtle\">\n          <ButtonMenuItem as={Link} to=\"/info\">\n            {t('Overview')}\n          </ButtonMenuItem>\n          <ButtonMenuItem as={Link} to=\"/info/pools\">\n            {t('Pools')}\n          </ButtonMenuItem>\n          <ButtonMenuItem as={Link} to=\"/info/tokens\">\n            {t('Tokens')}\n          </ButtonMenuItem>\n        </ButtonMenu>\n      </Box>\n      <Box width={['100%', '100%', '250px']}>\n        <Search />\n      </Box>\n    </NavWrapper>\n  )\n}\n\nexport default InfoNav\n"]},"metadata":{},"sourceType":"module"}