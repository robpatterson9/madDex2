{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Predictions/Leaderboard/components/Results/ConnectedWalletResult.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Card, Heading, Table, Th, useMatchBreakpoints } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { useWeb3React } from '@web3-react/core';\nimport Container from 'components/Layout/Container';\nimport { useAppDispatch } from 'state';\nimport { fetchProfileAvatar } from 'state/profile';\nimport { fetchAddressResult } from 'state/predictions';\nimport { useGetOrFetchLeaderboardAddressResult } from 'state/predictions/hooks';\nimport DesktopRow from './DesktopRow';\nimport MobileRow from './MobileRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ConnectedWalletResult = () => {\n  _s();\n\n  const {\n    account\n  } = useWeb3React();\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useAppDispatch();\n  const accountResult = useGetOrFetchLeaderboardAddressResult(account);\n  const {\n    isDesktop\n  } = useMatchBreakpoints();\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchProfileAvatar(account));\n      dispatch(fetchAddressResult(account));\n    }\n  }, [account, dispatch]);\n\n  if (!account || !accountResult) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    mb: \"48px\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h2\",\n      scale: \"md\",\n      color: \"secondary\",\n      mb: \"16px\",\n      children: t('My Rankings')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), isDesktop ? /*#__PURE__*/_jsxDEV(Card, {\n      isActive: true,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              width: \"60px\",\n              children: \"\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              textAlign: \"left\",\n              children: \"\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              textAlign: \"right\",\n              children: t('Net Winnings (BNB)')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              textAlign: \"center\",\n              children: t('Win Rate')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: t('Rounds Won')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: t('Rounds Played')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(DesktopRow, {\n            user: accountResult\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Card, {\n      isActive: true,\n      children: /*#__PURE__*/_jsxDEV(MobileRow, {\n        user: accountResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConnectedWalletResult, \"en38tO6IzOjPdCEjIxD9AiPu6+0=\", false, function () {\n  return [useWeb3React, useTranslation, useAppDispatch, useGetOrFetchLeaderboardAddressResult, useMatchBreakpoints];\n});\n\n_c = ConnectedWalletResult;\nexport default ConnectedWalletResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectedWalletResult\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/Leaderboard/components/Results/ConnectedWalletResult.tsx"],"names":["React","useEffect","Card","Heading","Table","Th","useMatchBreakpoints","useTranslation","useWeb3React","Container","useAppDispatch","fetchProfileAvatar","fetchAddressResult","useGetOrFetchLeaderboardAddressResult","DesktopRow","MobileRow","ConnectedWalletResult","account","t","dispatch","accountResult","isDesktop"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { Card, Heading, Table, Th, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport Container from 'components/Layout/Container'\nimport { useAppDispatch } from 'state'\nimport { fetchProfileAvatar } from 'state/profile'\nimport { fetchAddressResult } from 'state/predictions'\nimport { useGetOrFetchLeaderboardAddressResult } from 'state/predictions/hooks'\nimport DesktopRow from './DesktopRow'\nimport MobileRow from './MobileRow'\n\nconst ConnectedWalletResult = () => {\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const accountResult = useGetOrFetchLeaderboardAddressResult(account)\n  const { isDesktop } = useMatchBreakpoints()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchProfileAvatar(account))\n      dispatch(fetchAddressResult(account))\n    }\n  }, [account, dispatch])\n\n  if (!account || !accountResult) {\n    return null\n  }\n\n  return (\n    <Container mb=\"48px\">\n      <Heading as=\"h2\" scale=\"md\" color=\"secondary\" mb=\"16px\">\n        {t('My Rankings')}\n      </Heading>\n      {isDesktop ? (\n        <Card isActive>\n          <Table>\n            <thead>\n              <tr>\n                <Th width=\"60px\">&nbsp;</Th>\n                <Th textAlign=\"left\">&nbsp;</Th>\n                <Th textAlign=\"right\">{t('Net Winnings (BNB)')}</Th>\n                <Th textAlign=\"center\">{t('Win Rate')}</Th>\n                <Th>{t('Rounds Won')}</Th>\n                <Th>{t('Rounds Played')}</Th>\n              </tr>\n            </thead>\n            <tbody>\n              <DesktopRow user={accountResult} />\n            </tbody>\n          </Table>\n        </Card>\n      ) : (\n        <Card isActive>\n          <MobileRow user={accountResult} />\n        </Card>\n      )}\n    </Container>\n  )\n}\n\nexport default ConnectedWalletResult\n"]},"metadata":{},"sourceType":"module"}