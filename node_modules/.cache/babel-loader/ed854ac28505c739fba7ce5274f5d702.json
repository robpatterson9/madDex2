{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useEffect,useReducer,useRef}from'react';import{noop}from'lodash';import{useWeb3React}from'@web3-react/core';import useToast from'hooks/useToast';import{useTranslation}from'contexts/Localization';var initialState={approvalState:'idle',confirmState:'idle'};var reducer=function reducer(state,actions){switch(actions.type){case'requires_approval':return _objectSpread(_objectSpread({},state),{},{approvalState:'success'});case'approve_sending':return _objectSpread(_objectSpread({},state),{},{approvalState:'loading'});case'approve_receipt':return _objectSpread(_objectSpread({},state),{},{approvalState:'success'});case'approve_error':return _objectSpread(_objectSpread({},state),{},{approvalState:'fail'});case'confirm_sending':return _objectSpread(_objectSpread({},state),{},{confirmState:'loading'});case'confirm_receipt':return _objectSpread(_objectSpread({},state),{},{confirmState:'success'});case'confirm_error':return _objectSpread(_objectSpread({},state),{},{confirmState:'fail'});default:return state;}};var useApproveConfirmTransaction=function useApproveConfirmTransaction(_ref){var onApprove=_ref.onApprove,onConfirm=_ref.onConfirm,onRequiresApproval=_ref.onRequiresApproval,_ref$onSuccess=_ref.onSuccess,onSuccess=_ref$onSuccess===void 0?noop:_ref$onSuccess,_ref$onApproveSuccess=_ref.onApproveSuccess,onApproveSuccess=_ref$onApproveSuccess===void 0?noop:_ref$onApproveSuccess;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useReducer=useReducer(reducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var handlePreApprove=useRef(onRequiresApproval);var _useToast=useToast(),toastError=_useToast.toastError;// Check if approval is necessary, re-check if account changes\nuseEffect(function(){if(account&&handlePreApprove.current){handlePreApprove.current().then(function(result){if(result){dispatch({type:'requires_approval'});}});}},[account,handlePreApprove,dispatch]);return{isApproving:state.approvalState==='loading',isApproved:state.approvalState==='success',isConfirming:state.confirmState==='loading',isConfirmed:state.confirmState==='success',handleApprove:function(){var _handleApprove=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var tx,receipt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return onApprove();case 3:tx=_context.sent;dispatch({type:'approve_sending'});_context.next=7;return tx.wait();case 7:receipt=_context.sent;if(receipt.status){dispatch({type:'approve_receipt'});onApproveSuccess({state:state,receipt:receipt});}_context.next=15;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);dispatch({type:'approve_error'});toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));case 15:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));function handleApprove(){return _handleApprove.apply(this,arguments);}return handleApprove;}(),handleConfirm:function(){var _handleConfirm=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var tx,receipt;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch({type:'confirm_sending'});_context2.prev=1;_context2.next=4;return onConfirm();case 4:tx=_context2.sent;_context2.next=7;return tx.wait();case 7:receipt=_context2.sent;if(receipt.status){dispatch({type:'confirm_receipt'});onSuccess({state:state,receipt:receipt});}_context2.next=15;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](1);dispatch({type:'confirm_error'});toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[1,11]]);}));function handleConfirm(){return _handleConfirm.apply(this,arguments);}return handleConfirm;}()};};export default useApproveConfirmTransaction;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/hooks/useApproveConfirmTransaction.ts"],"names":["useEffect","useReducer","useRef","noop","useWeb3React","useToast","useTranslation","initialState","approvalState","confirmState","reducer","state","actions","type","useApproveConfirmTransaction","onApprove","onConfirm","onRequiresApproval","onSuccess","onApproveSuccess","t","account","dispatch","handlePreApprove","toastError","current","then","result","isApproving","isApproved","isConfirming","isConfirmed","handleApprove","tx","wait","receipt","status","handleConfirm"],"mappings":"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","sourcesContent":["import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers } from 'ethers'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt' }\n  | { type: 'approve_error' }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt' }\n  | { type: 'confirm_error' }\n\ninterface State {\n  approvalState: LoadingState\n  confirmState: LoadingState\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  confirmState: 'idle',\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n      }\n    default:\n      return state\n  }\n}\n\ninterface OnSuccessProps {\n  state: State\n  receipt: ethers.providers.TransactionReceipt\n}\n\ninterface ApproveConfirmTransaction {\n  onApprove: () => Promise<ethers.providers.TransactionResponse>\n  onConfirm: () => Promise<ethers.providers.TransactionResponse>\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: ({ state, receipt }: OnSuccessProps) => void\n  onApproveSuccess?: ({ state, receipt }: OnSuccessProps) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n  onApproveSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    handleApprove: async () => {\n      try {\n        const tx = await onApprove()\n        dispatch({ type: 'approve_sending' })\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'approve_receipt' })\n          onApproveSuccess({ state, receipt })\n        }\n      } catch (error) {\n        dispatch({ type: 'approve_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n    handleConfirm: async () => {\n      dispatch({ type: 'confirm_sending' })\n      try {\n        const tx = await onConfirm()\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'confirm_receipt' })\n          onSuccess({ state, receipt })\n        }\n      } catch (error) {\n        dispatch({ type: 'confirm_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n"]},"metadata":{},"sourceType":"module"}