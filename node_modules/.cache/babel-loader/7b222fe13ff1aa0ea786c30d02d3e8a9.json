{"ast":null,"code":"import _toConsumableArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React,{useState}from'react';import styled from'styled-components';import{Swiper,SwiperSlide}from'swiper/react';import{ArrowBackIcon,ArrowForwardIcon,Box,IconButton,Text,Flex,useMatchBreakpoints}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{useNftsFromCollection}from'state/nftMarket/hooks';import{isAddress}from'utils';import{pancakeBunniesAddress}from'../../constants';import{CollectibleLinkCard}from'../../components/CollectibleCard';import'swiper/swiper-bundle.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var INITIAL_SLIDE=4;var SwiperCircle=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  width: 12px;\\n  height: 12px;\\n  margin-right: 8px;\\n  border-radius: 50%;\\n  cursor: pointer;\\n\"])),function(_ref){var theme=_ref.theme,isActive=_ref.isActive;return isActive?theme.colors.secondary:theme.colors.textDisabled;});var StyledSwiper=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  \",\" {\\n    .swiper-wrapper {\\n      max-height: 390px;\\n    }\\n  }\\n\"])),function(_ref2){var theme=_ref2.theme;return theme.mediaQueries.md;});var MoreFromThisCollection=function MoreFromThisCollection(_ref3){var collectionAddress=_ref3.collectionAddress,currentTokenName=_ref3.currentTokenName;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),swiperRef=_useState2[0],setSwiperRef=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),activeIndex=_useState4[0],setActiveIndex=_useState4[1];var _useMatchBreakpoints=useMatchBreakpoints(),isMobile=_useMatchBreakpoints.isMobile,isMd=_useMatchBreakpoints.isMd,isLg=_useMatchBreakpoints.isLg;var nftList=useNftsFromCollection(collectionAddress);if(!nftList){return null;}var slidesPerView=4;var maxPageIndex=3;if(isLg){slidesPerView=3;maxPageIndex=4;}if(isMd){slidesPerView=2;maxPageIndex=6;}var nftsToShow=nftList.filter(function(nft){return nft.name!==currentTokenName&&nft.marketData.isTradable;});if(isAddress(collectionAddress)===pancakeBunniesAddress){// PancakeBunnies should display 1 card per bunny id\nnftsToShow=nftsToShow.reduce(function(nftArray,current){var bunnyId=current.attributes[0].value;if(!nftArray.find(function(nft){return nft.attributes[0].value===bunnyId;})){nftArray.push(current);}return nftArray;},[]);}nftsToShow=nftsToShow.slice(0,12);var nextSlide=function nextSlide(){if(activeIndex<maxPageIndex-1){setActiveIndex(activeIndex+1);swiperRef.slideNext();}};var previousSlide=function previousSlide(){if(activeIndex>0){setActiveIndex(activeIndex-1);swiperRef.slidePrev();}};var goToSlide=function goToSlide(index){setActiveIndex(index/slidesPerView);swiperRef.slideTo(index);};var updateActiveIndex=function updateActiveIndex(_ref4){var newActiveIndex=_ref4.activeIndex;if(newActiveIndex!==undefined)setActiveIndex(Math.ceil(newActiveIndex/slidesPerView));};return/*#__PURE__*/_jsxs(Box,{pt:\"56px\",mb:\"52px\",children:[/*#__PURE__*/_jsx(Text,{bold:true,mb:\"24px\",children:t('More from this collection')}),isMobile?/*#__PURE__*/_jsx(StyledSwiper,{children:/*#__PURE__*/_jsx(Swiper,{spaceBetween:16,slidesPerView:1.5,children:nftsToShow.map(function(nft){return/*#__PURE__*/_jsx(SwiperSlide,{children:/*#__PURE__*/_jsx(CollectibleLinkCard,{nft:nft})},nft.tokenId);})})}):/*#__PURE__*/_jsxs(StyledSwiper,{children:[/*#__PURE__*/_jsx(Swiper,{onSwiper:setSwiperRef,onActiveIndexChange:updateActiveIndex,spaceBetween:16,slidesPerView:slidesPerView,slidesPerGroup:slidesPerView,initialSlide:INITIAL_SLIDE,children:nftsToShow.map(function(nft){return/*#__PURE__*/_jsx(SwiperSlide,{children:/*#__PURE__*/_jsx(CollectibleLinkCard,{nft:nft})},nft.tokenId);})}),/*#__PURE__*/_jsxs(Flex,{mt:\"16px\",alignItems:\"center\",justifyContent:\"center\",children:[/*#__PURE__*/_jsx(IconButton,{variant:\"text\",onClick:previousSlide,children:/*#__PURE__*/_jsx(ArrowBackIcon,{})}),_toConsumableArray(Array(maxPageIndex).keys()).map(function(index){return/*#__PURE__*/_jsx(SwiperCircle,{onClick:function onClick(){return goToSlide(index*slidesPerView);},isActive:activeIndex===index},index);}),/*#__PURE__*/_jsx(IconButton,{variant:\"text\",onClick:nextSlide,children:/*#__PURE__*/_jsx(ArrowForwardIcon,{})})]})]})]});};export default MoreFromThisCollection;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Collection/IndividualNFTPage/MoreFromThisCollection.tsx"],"names":["React","useState","styled","Swiper","SwiperSlide","ArrowBackIcon","ArrowForwardIcon","Box","IconButton","Text","Flex","useMatchBreakpoints","useTranslation","useNftsFromCollection","isAddress","pancakeBunniesAddress","CollectibleLinkCard","INITIAL_SLIDE","SwiperCircle","div","theme","isActive","colors","secondary","textDisabled","StyledSwiper","mediaQueries","md","MoreFromThisCollection","collectionAddress","currentTokenName","t","swiperRef","setSwiperRef","activeIndex","setActiveIndex","isMobile","isMd","isLg","nftList","slidesPerView","maxPageIndex","nftsToShow","filter","nft","name","marketData","isTradable","reduce","nftArray","current","bunnyId","attributes","value","find","push","slice","nextSlide","slideNext","previousSlide","slidePrev","goToSlide","index","slideTo","updateActiveIndex","newActiveIndex","undefined","Math","ceil","map","tokenId","Array","keys"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport SwiperCore from 'swiper'\nimport { ArrowBackIcon, ArrowForwardIcon, Box, IconButton, Text, Flex, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useNftsFromCollection } from 'state/nftMarket/hooks'\nimport { isAddress } from 'utils'\nimport { pancakeBunniesAddress } from '../../constants'\nimport { CollectibleLinkCard } from '../../components/CollectibleCard'\n\nimport 'swiper/swiper-bundle.css'\n\nconst INITIAL_SLIDE = 4\n\nconst SwiperCircle = styled.div<{ isActive }>`\n  background-color: ${({ theme, isActive }) => (isActive ? theme.colors.secondary : theme.colors.textDisabled)};\n  width: 12px;\n  height: 12px;\n  margin-right: 8px;\n  border-radius: 50%;\n  cursor: pointer;\n`\n\nconst StyledSwiper = styled.div`\n  ${({ theme }) => theme.mediaQueries.md} {\n    .swiper-wrapper {\n      max-height: 390px;\n    }\n  }\n`\n\ninterface MoreFromThisCollectionProps {\n  collectionAddress: string\n  currentTokenName: string\n}\n\nconst MoreFromThisCollection: React.FC<MoreFromThisCollectionProps> = ({ collectionAddress, currentTokenName }) => {\n  const { t } = useTranslation()\n  const [swiperRef, setSwiperRef] = useState<SwiperCore>(null)\n  const [activeIndex, setActiveIndex] = useState(1)\n  const { isMobile, isMd, isLg } = useMatchBreakpoints()\n  const nftList = useNftsFromCollection(collectionAddress)\n\n  if (!nftList) {\n    return null\n  }\n\n  let slidesPerView = 4\n  let maxPageIndex = 3\n\n  if (isLg) {\n    slidesPerView = 3\n    maxPageIndex = 4\n  }\n  if (isMd) {\n    slidesPerView = 2\n    maxPageIndex = 6\n  }\n\n  let nftsToShow = nftList.filter((nft) => nft.name !== currentTokenName && nft.marketData.isTradable)\n  if (isAddress(collectionAddress) === pancakeBunniesAddress) {\n    // PancakeBunnies should display 1 card per bunny id\n    nftsToShow = nftsToShow.reduce((nftArray, current) => {\n      const bunnyId = current.attributes[0].value\n      if (!nftArray.find((nft) => nft.attributes[0].value === bunnyId)) {\n        nftArray.push(current)\n      }\n      return nftArray\n    }, [])\n  }\n  nftsToShow = nftsToShow.slice(0, 12)\n\n  const nextSlide = () => {\n    if (activeIndex < maxPageIndex - 1) {\n      setActiveIndex(activeIndex + 1)\n      swiperRef.slideNext()\n    }\n  }\n\n  const previousSlide = () => {\n    if (activeIndex > 0) {\n      setActiveIndex(activeIndex - 1)\n      swiperRef.slidePrev()\n    }\n  }\n\n  const goToSlide = (index: number) => {\n    setActiveIndex(index / slidesPerView)\n    swiperRef.slideTo(index)\n  }\n\n  const updateActiveIndex = ({ activeIndex: newActiveIndex }) => {\n    if (newActiveIndex !== undefined) setActiveIndex(Math.ceil(newActiveIndex / slidesPerView))\n  }\n\n  return (\n    <Box pt=\"56px\" mb=\"52px\">\n      <Text bold mb=\"24px\">\n        {t('More from this collection')}\n      </Text>\n      {isMobile ? (\n        <StyledSwiper>\n          <Swiper spaceBetween={16} slidesPerView={1.5}>\n            {nftsToShow.map((nft) => (\n              <SwiperSlide key={nft.tokenId}>\n                <CollectibleLinkCard nft={nft} />\n              </SwiperSlide>\n            ))}\n          </Swiper>\n        </StyledSwiper>\n      ) : (\n        <StyledSwiper>\n          <Swiper\n            onSwiper={setSwiperRef}\n            onActiveIndexChange={updateActiveIndex}\n            spaceBetween={16}\n            slidesPerView={slidesPerView}\n            slidesPerGroup={slidesPerView}\n            initialSlide={INITIAL_SLIDE}\n          >\n            {nftsToShow.map((nft) => (\n              <SwiperSlide key={nft.tokenId}>\n                <CollectibleLinkCard nft={nft} />\n              </SwiperSlide>\n            ))}\n          </Swiper>\n          <Flex mt=\"16px\" alignItems=\"center\" justifyContent=\"center\">\n            <IconButton variant=\"text\" onClick={previousSlide}>\n              <ArrowBackIcon />\n            </IconButton>\n            {[...Array(maxPageIndex).keys()].map((index) => (\n              <SwiperCircle\n                key={index}\n                onClick={() => goToSlide(index * slidesPerView)}\n                isActive={activeIndex === index}\n              />\n            ))}\n            <IconButton variant=\"text\" onClick={nextSlide}>\n              <ArrowForwardIcon />\n            </IconButton>\n          </Flex>\n        </StyledSwiper>\n      )}\n    </Box>\n  )\n}\n\nexport default MoreFromThisCollection\n"]},"metadata":{},"sourceType":"module"}