{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import{ethers}from'ethers';import BigNumber from'bignumber.js';import{useWeb3React}from'@web3-react/core';import tokens from'config/constants/tokens';import{getBep20Contract,getCakeContract}from'utils/contractHelpers';import{BIG_ZERO}from'utils/bigNumber';import{simpleRpcProvider}from'utils/providers';import useRefresh from'./useRefresh';import useLastUpdated from'./useLastUpdated';export var FetchStatus;(function(FetchStatus){FetchStatus[\"NOT_FETCHED\"]=\"not-fetched\";FetchStatus[\"SUCCESS\"]=\"success\";FetchStatus[\"FAILED\"]=\"failed\";})(FetchStatus||(FetchStatus={}));var useTokenBalance=function useTokenBalance(tokenAddress){var NOT_FETCHED=FetchStatus.NOT_FETCHED,SUCCESS=FetchStatus.SUCCESS,FAILED=FetchStatus.FAILED;var _useState=useState({balance:BIG_ZERO,fetchStatus:NOT_FETCHED}),_useState2=_slicedToArray(_useState,2),balanceState=_useState2[0],setBalanceState=_useState2[1];var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useRefresh=useRefresh(),fastRefresh=_useRefresh.fastRefresh;useEffect(function(){var fetchBalance=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var contract,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:contract=getBep20Contract(tokenAddress);_context.prev=1;_context.next=4;return contract.balanceOf(account);case 4:res=_context.sent;setBalanceState({balance:new BigNumber(res.toString()),fetchStatus:SUCCESS});_context.next=12;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);console.error(_context.t0);setBalanceState(function(prev){return _objectSpread(_objectSpread({},prev),{},{fetchStatus:FAILED});});case 12:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function fetchBalance(){return _ref.apply(this,arguments);};}();if(account){fetchBalance();}},[account,tokenAddress,fastRefresh,SUCCESS,FAILED]);return balanceState;};export var useTotalSupply=function useTotalSupply(){var _useRefresh2=useRefresh(),slowRefresh=_useRefresh2.slowRefresh;var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),totalSupply=_useState4[0],setTotalSupply=_useState4[1];useEffect(function(){function fetchTotalSupply(){return _fetchTotalSupply.apply(this,arguments);}function _fetchTotalSupply(){_fetchTotalSupply=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var cakeContract,supply;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:cakeContract=getCakeContract();_context2.next=3;return cakeContract.totalSupply();case 3:supply=_context2.sent;setTotalSupply(new BigNumber(supply.toString()));case 5:case\"end\":return _context2.stop();}}},_callee2);}));return _fetchTotalSupply.apply(this,arguments);}fetchTotalSupply();},[slowRefresh]);return totalSupply;};export var useBurnedBalance=function useBurnedBalance(tokenAddress){var _useState5=useState(BIG_ZERO),_useState6=_slicedToArray(_useState5,2),balance=_useState6[0],setBalance=_useState6[1];var _useRefresh3=useRefresh(),slowRefresh=_useRefresh3.slowRefresh;useEffect(function(){var fetchBalance=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var contract,res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:contract=getBep20Contract(tokenAddress);_context3.next=3;return contract.balanceOf('0x000000000000000000000000000000000000dEaD');case 3:res=_context3.sent;setBalance(new BigNumber(res.toString()));case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function fetchBalance(){return _ref2.apply(this,arguments);};}();fetchBalance();},[tokenAddress,slowRefresh]);return balance;};export var useGetBnbBalance=function useGetBnbBalance(){var _useState7=useState(FetchStatus.NOT_FETCHED),_useState8=_slicedToArray(_useState7,2),fetchStatus=_useState8[0],setFetchStatus=_useState8[1];var _useState9=useState(ethers.BigNumber.from(0)),_useState10=_slicedToArray(_useState9,2),balance=_useState10[0],setBalance=_useState10[1];var _useWeb3React2=useWeb3React(),account=_useWeb3React2.account;var _useLastUpdated=useLastUpdated(),lastUpdated=_useLastUpdated.lastUpdated,setLastUpdated=_useLastUpdated.setLastUpdated;useEffect(function(){var fetchBalance=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var walletBalance;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return simpleRpcProvider.getBalance(account);case 3:walletBalance=_context4.sent;setBalance(walletBalance);setFetchStatus(FetchStatus.SUCCESS);_context4.next=11;break;case 8:_context4.prev=8;_context4.t0=_context4[\"catch\"](0);setFetchStatus(FetchStatus.FAILED);case 11:case\"end\":return _context4.stop();}}},_callee4,null,[[0,8]]);}));return function fetchBalance(){return _ref3.apply(this,arguments);};}();if(account){fetchBalance();}},[account,lastUpdated,setBalance,setFetchStatus]);return{balance:balance,fetchStatus:fetchStatus,refresh:setLastUpdated};};export var useGetCakeBalance=function useGetCakeBalance(){var _useTokenBalance=useTokenBalance(tokens.mad.address),balance=_useTokenBalance.balance,fetchStatus=_useTokenBalance.fetchStatus;// TODO: Remove ethers conversion once useTokenBalance is converted to ethers.BigNumber\nreturn{balance:ethers.BigNumber.from(balance.toString()),fetchStatus:fetchStatus};};export default useTokenBalance;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/hooks/useTokenBalance.ts"],"names":["useEffect","useState","ethers","BigNumber","useWeb3React","tokens","getBep20Contract","getCakeContract","BIG_ZERO","simpleRpcProvider","useRefresh","useLastUpdated","FetchStatus","useTokenBalance","tokenAddress","NOT_FETCHED","SUCCESS","FAILED","balance","fetchStatus","balanceState","setBalanceState","account","fastRefresh","fetchBalance","contract","balanceOf","res","toString","console","error","prev","useTotalSupply","slowRefresh","totalSupply","setTotalSupply","fetchTotalSupply","cakeContract","supply","useBurnedBalance","setBalance","useGetBnbBalance","setFetchStatus","from","lastUpdated","setLastUpdated","getBalance","walletBalance","refresh","useGetCakeBalance","mad","address"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport { ethers } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport tokens from 'config/constants/tokens'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [balance, setBalance] = useState(ethers.BigNumber.from(0))\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const walletBalance = await simpleRpcProvider.getBalance(account)\n        setBalance(walletBalance)\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch {\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance, setFetchStatus])\n\n  return { balance, fetchStatus, refresh: setLastUpdated }\n}\n\nexport const useGetCakeBalance = () => {\n  const { balance, fetchStatus } = useTokenBalance(tokens.mad.address)\n\n  // TODO: Remove ethers conversion once useTokenBalance is converted to ethers.BigNumber\n  return { balance: ethers.BigNumber.from(balance.toString()), fetchStatus }\n}\n\nexport default useTokenBalance\n"]},"metadata":{},"sourceType":"module"}