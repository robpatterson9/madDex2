{"ast":null,"code":"import React from'react';import{Flex,Text}from'@pancakeswap/uikit';import{multiplyPriceByAmount}from'utils/prices';import{useTranslation}from'contexts/Localization';import{formatBnb}from'../helpers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var summaryTypeColors={won:'success',lost:'failure',entered:'text'};var summaryTypeSigns={won:'+',lost:'-',entered:''};var SummaryRow=function SummaryRow(_ref){var type=_ref.type,summary=_ref.summary,bnbBusdPrice=_ref.bnbBusdPrice;var _useTranslation=useTranslation(),t=_useTranslation.t;var color=summaryTypeColors[type];var _summary$type=summary[type],rounds=_summary$type.rounds,amount=_summary$type.amount;var totalRounds=summary.entered.rounds;var roundsInPercents=(rounds*100/totalRounds).toFixed(2);var typeTranslationKey=type.charAt(0).toUpperCase()+type.slice(1);var displayAmount=type==='won'?summary[type].payout:amount;var amountInUsd=multiplyPriceByAmount(bnbBusdPrice,displayAmount);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{mt:\"16px\",bold:true,color:\"textSubtle\",children:t(typeTranslationKey)}),/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsxs(Flex,{flex:\"2\",flexDirection:\"column\",children:[/*#__PURE__*/_jsxs(Text,{bold:true,fontSize:\"20px\",color:color,children:[rounds,\" \",t('Rounds').toLocaleLowerCase()]}),/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",children:type==='entered'?t('Total').toLocaleLowerCase():\"\".concat(roundsInPercents,\"%\")})]}),/*#__PURE__*/_jsxs(Flex,{flex:\"3\",flexDirection:\"column\",children:[/*#__PURE__*/_jsx(Text,{bold:true,fontSize:\"20px\",color:color,children:\"\".concat(summaryTypeSigns[type]).concat(formatBnb(displayAmount),\" BNB\")}),/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",children:\"~$\".concat(amountInUsd.toFixed(2))})]})]})]});};export default SummaryRow;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/History/PnlTab/SummaryRow.tsx"],"names":["React","Flex","Text","multiplyPriceByAmount","useTranslation","formatBnb","summaryTypeColors","won","lost","entered","summaryTypeSigns","SummaryRow","type","summary","bnbBusdPrice","t","color","rounds","amount","totalRounds","roundsInPercents","toFixed","typeTranslationKey","charAt","toUpperCase","slice","displayAmount","payout","amountInUsd","toLocaleLowerCase"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,IAAT,CAAeC,IAAf,KAA2B,oBAA3B,CACA,OAASC,qBAAT,KAAsC,cAAtC,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,SAAT,KAA0B,YAA1B,C,6IAUA,GAAMC,CAAAA,iBAAiB,CAAG,CACxBC,GAAG,CAAE,SADmB,CAExBC,IAAI,CAAE,SAFkB,CAGxBC,OAAO,CAAE,MAHe,CAA1B,CAMA,GAAMC,CAAAA,gBAAgB,CAAG,CACvBH,GAAG,CAAE,GADkB,CAEvBC,IAAI,CAAE,GAFiB,CAGvBC,OAAO,CAAE,EAHc,CAAzB,CAMA,GAAME,CAAAA,UAAqC,CAAG,QAAxCA,CAAAA,UAAwC,MAAqC,IAAlCC,CAAAA,IAAkC,MAAlCA,IAAkC,CAA5BC,OAA4B,MAA5BA,OAA4B,CAAnBC,YAAmB,MAAnBA,YAAmB,CACjF,oBAAcV,cAAc,EAA5B,CAAQW,CAAR,iBAAQA,CAAR,CAEA,GAAMC,CAAAA,KAAK,CAAGV,iBAAiB,CAACM,IAAD,CAA/B,CACA,kBAA2BC,OAAO,CAACD,IAAD,CAAlC,CAAQK,MAAR,eAAQA,MAAR,CAAgBC,MAAhB,eAAgBA,MAAhB,CACA,GAAMC,CAAAA,WAAW,CAAGN,OAAO,CAACJ,OAAR,CAAgBQ,MAApC,CACA,GAAMG,CAAAA,gBAAgB,CAAG,CAAEH,MAAM,CAAG,GAAV,CAAiBE,WAAlB,EAA+BE,OAA/B,CAAuC,CAAvC,CAAzB,CACA,GAAMC,CAAAA,kBAAkB,CAAGV,IAAI,CAACW,MAAL,CAAY,CAAZ,EAAeC,WAAf,GAA+BZ,IAAI,CAACa,KAAL,CAAW,CAAX,CAA1D,CACA,GAAMC,CAAAA,aAAa,CAAGd,IAAI,GAAK,KAAT,CAAiBC,OAAO,CAACD,IAAD,CAAP,CAAce,MAA/B,CAAwCT,MAA9D,CACA,GAAMU,CAAAA,WAAW,CAAGzB,qBAAqB,CAACW,YAAD,CAAeY,aAAf,CAAzC,CAEA,mBACE,wCACE,KAAC,IAAD,EAAM,EAAE,CAAC,MAAT,CAAgB,IAAI,KAApB,CAAqB,KAAK,CAAC,YAA3B,UACGX,CAAC,CAACO,kBAAD,CADJ,EADF,cAIE,MAAC,IAAD,yBACE,MAAC,IAAD,EAAM,IAAI,CAAC,GAAX,CAAe,aAAa,CAAC,QAA7B,wBACE,MAAC,IAAD,EAAM,IAAI,KAAV,CAAW,QAAQ,CAAC,MAApB,CAA2B,KAAK,CAAEN,KAAlC,WACGC,MADH,KACYF,CAAC,CAAC,QAAD,CAAD,CAAYc,iBAAZ,EADZ,GADF,cAIE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,CAAsB,KAAK,CAAC,YAA5B,UACGjB,IAAI,GAAK,SAAT,CAAqBG,CAAC,CAAC,OAAD,CAAD,CAAWc,iBAAX,EAArB,WAAyDT,gBAAzD,KADH,EAJF,GADF,cASE,MAAC,IAAD,EAAM,IAAI,CAAC,GAAX,CAAe,aAAa,CAAC,QAA7B,wBACE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,QAAQ,CAAC,MAApB,CAA2B,KAAK,CAAEJ,KAAlC,oBACMN,gBAAgB,CAACE,IAAD,CADtB,SAC+BP,SAAS,CAACqB,aAAD,CADxC,UADF,cAIE,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,CAAsB,KAAK,CAAC,YAA5B,sBACQE,WAAW,CAACP,OAAZ,CAAoB,CAApB,CADR,GAJF,GATF,GAJF,GADF,CAyBD,CApCD,CAsCA,cAAeV,CAAAA,UAAf","sourcesContent":["import React from 'react'\nimport { Price } from '@pancakeswap/sdk'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { multiplyPriceByAmount } from 'utils/prices'\nimport { useTranslation } from 'contexts/Localization'\nimport { formatBnb } from '../helpers'\n\ntype SummaryType = 'won' | 'lost' | 'entered'\n\ninterface SummaryRowProps {\n  type: SummaryType\n  summary: any\n  bnbBusdPrice: Price\n}\n\nconst summaryTypeColors = {\n  won: 'success',\n  lost: 'failure',\n  entered: 'text',\n}\n\nconst summaryTypeSigns = {\n  won: '+',\n  lost: '-',\n  entered: '',\n}\n\nconst SummaryRow: React.FC<SummaryRowProps> = ({ type, summary, bnbBusdPrice }) => {\n  const { t } = useTranslation()\n\n  const color = summaryTypeColors[type]\n  const { rounds, amount } = summary[type]\n  const totalRounds = summary.entered.rounds\n  const roundsInPercents = ((rounds * 100) / totalRounds).toFixed(2)\n  const typeTranslationKey = type.charAt(0).toUpperCase() + type.slice(1)\n  const displayAmount = type === 'won' ? summary[type].payout : amount\n  const amountInUsd = multiplyPriceByAmount(bnbBusdPrice, displayAmount)\n\n  return (\n    <>\n      <Text mt=\"16px\" bold color=\"textSubtle\">\n        {t(typeTranslationKey)}\n      </Text>\n      <Flex>\n        <Flex flex=\"2\" flexDirection=\"column\">\n          <Text bold fontSize=\"20px\" color={color}>\n            {rounds} {t('Rounds').toLocaleLowerCase()}\n          </Text>\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {type === 'entered' ? t('Total').toLocaleLowerCase() : `${roundsInPercents}%`}\n          </Text>\n        </Flex>\n        <Flex flex=\"3\" flexDirection=\"column\">\n          <Text bold fontSize=\"20px\" color={color}>\n            {`${summaryTypeSigns[type]}${formatBnb(displayAmount)} BNB`}\n          </Text>\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {`~$${amountInUsd.toFixed(2)}`}\n          </Text>\n        </Flex>\n      </Flex>\n    </>\n  )\n}\n\nexport default SummaryRow\n"]},"metadata":{},"sourceType":"module"}