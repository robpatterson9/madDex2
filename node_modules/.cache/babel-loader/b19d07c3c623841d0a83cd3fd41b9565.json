{"ast":null,"code":"import _defineProperty from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _cardConfig;import React from'react';import{useTranslation}from'contexts/Localization';import{Card,CardBody,CardHeader,Text,useTooltip,HelpIcon,Flex}from'@pancakeswap/uikit';import{PoolIds}from'config/constants/types';import{useProfile}from'state/profile/hooks';import IfoCardTokens from'./IfoCardTokens';import IfoCardActions from'./IfoCardActions';import IfoCardDetails from'./IfoCardDetails';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var cardConfig=(_cardConfig={},_defineProperty(_cardConfig,PoolIds.poolBasic,{title:'Basic Sale',variant:'blue',tooltip:'Every person can only commit a limited amount, but may expect a higher return per token committed.'}),_defineProperty(_cardConfig,PoolIds.poolUnlimited,{title:'Unlimited Sale',variant:'violet',tooltip:'No limits on the amount you can commit. Additional fee applies when claiming.'}),_cardConfig);var SmallCard=function SmallCard(_ref){var poolId=_ref.poolId,ifo=_ref.ifo,publicIfoData=_ref.publicIfoData,walletIfoData=_ref.walletIfoData,onApprove=_ref.onApprove,enableStatus=_ref.enableStatus;var _useTranslation=useTranslation(),t=_useTranslation.t;var config=cardConfig[poolId];var _useProfile=useProfile(),hasProfile=_useProfile.hasProfile,isProfileLoading=_useProfile.isLoading;var _useTooltip=useTooltip(t(config.tooltip),{placement:'bottom'}),targetRef=_useTooltip.targetRef,tooltip=_useTooltip.tooltip,tooltipVisible=_useTooltip.tooltipVisible;var isLoading=isProfileLoading||publicIfoData.status==='idle';return/*#__PURE__*/_jsxs(_Fragment,{children:[tooltipVisible&&tooltip,/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{variant:config.variant,children:/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Text,{bold:true,fontSize:\"20px\",children:t(config.title)}),/*#__PURE__*/_jsx(\"div\",{ref:targetRef,children:/*#__PURE__*/_jsx(HelpIcon,{})})]})}),/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(IfoCardTokens,{poolId:poolId,ifo:ifo,publicIfoData:publicIfoData,walletIfoData:walletIfoData,hasProfile:hasProfile,isLoading:isLoading,onApprove:onApprove,enableStatus:enableStatus}),/*#__PURE__*/_jsx(IfoCardActions,{poolId:poolId,ifo:ifo,publicIfoData:publicIfoData,walletIfoData:walletIfoData,hasProfile:hasProfile,isLoading:isLoading}),/*#__PURE__*/_jsx(IfoCardDetails,{poolId:poolId,ifo:ifo,publicIfoData:publicIfoData})]})]})]});};export default SmallCard;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Ifos/components/IfoFoldableCard/IfoPoolCard/index.tsx"],"names":["React","useTranslation","Card","CardBody","CardHeader","Text","useTooltip","HelpIcon","Flex","PoolIds","useProfile","IfoCardTokens","IfoCardActions","IfoCardDetails","cardConfig","poolBasic","title","variant","tooltip","poolUnlimited","SmallCard","poolId","ifo","publicIfoData","walletIfoData","onApprove","enableStatus","t","config","hasProfile","isProfileLoading","isLoading","placement","targetRef","tooltipVisible","status"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Card, CardBody, CardHeader, Text, useTooltip, HelpIcon, Flex } from '@pancakeswap/uikit'\nimport { Ifo, PoolIds } from 'config/constants/types'\nimport { useProfile } from 'state/profile/hooks'\nimport { PublicIfoData, WalletIfoData } from 'views/Ifos/types'\nimport { EnableStatus } from '../types'\nimport IfoCardTokens from './IfoCardTokens'\nimport IfoCardActions from './IfoCardActions'\nimport IfoCardDetails from './IfoCardDetails'\n\ninterface IfoCardProps {\n  poolId: PoolIds\n  ifo: Ifo\n  publicIfoData: PublicIfoData\n  walletIfoData: WalletIfoData\n  onApprove: () => Promise<any>\n  enableStatus: EnableStatus\n}\n\ninterface CardConfig {\n  [key: string]: {\n    title: string\n    variant: 'blue' | 'violet'\n    tooltip: string\n  }\n}\n\nconst cardConfig: CardConfig = {\n  [PoolIds.poolBasic]: {\n    title: 'Basic Sale',\n    variant: 'blue',\n    tooltip: 'Every person can only commit a limited amount, but may expect a higher return per token committed.',\n  },\n  [PoolIds.poolUnlimited]: {\n    title: 'Unlimited Sale',\n    variant: 'violet',\n    tooltip: 'No limits on the amount you can commit. Additional fee applies when claiming.',\n  },\n}\n\nconst SmallCard: React.FC<IfoCardProps> = ({ poolId, ifo, publicIfoData, walletIfoData, onApprove, enableStatus }) => {\n  const { t } = useTranslation()\n  const config = cardConfig[poolId]\n  const { hasProfile, isLoading: isProfileLoading } = useProfile()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(t(config.tooltip), { placement: 'bottom' })\n\n  const isLoading = isProfileLoading || publicIfoData.status === 'idle'\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <Card>\n        <CardHeader variant={config.variant}>\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\n            <Text bold fontSize=\"20px\">\n              {t(config.title)}\n            </Text>\n            <div ref={targetRef}>\n              <HelpIcon />\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <IfoCardTokens\n            poolId={poolId}\n            ifo={ifo}\n            publicIfoData={publicIfoData}\n            walletIfoData={walletIfoData}\n            hasProfile={hasProfile}\n            isLoading={isLoading}\n            onApprove={onApprove}\n            enableStatus={enableStatus}\n          />\n          <IfoCardActions\n            poolId={poolId}\n            ifo={ifo}\n            publicIfoData={publicIfoData}\n            walletIfoData={walletIfoData}\n            hasProfile={hasProfile}\n            isLoading={isLoading}\n          />\n          <IfoCardDetails poolId={poolId} ifo={ifo} publicIfoData={publicIfoData} />\n        </CardBody>\n      </Card>\n    </>\n  )\n}\n\nexport default SmallCard\n"]},"metadata":{},"sourceType":"module"}