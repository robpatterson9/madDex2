{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/History/BetResult.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { Box, Flex, Heading, Text, PrizeIcon, BlockIcon, LinkExternal, useTooltip, InfoIcon } from '@pancakeswap/uikit';\nimport styled from 'styled-components';\nimport { useAppDispatch } from 'state';\nimport { useTranslation } from 'contexts/Localization';\nimport { REWARD_RATE } from 'state/predictions/config';\nimport { BetPosition } from 'state/types';\nimport { fetchLedgerData, markAsCollected } from 'state/predictions';\nimport { Result } from 'state/predictions/helpers';\nimport { useGetIsClaimable } from 'state/predictions/hooks';\nimport { useBNBBusdPrice } from 'hooks/useBUSDPrice';\nimport { getBscScanLink } from 'utils';\nimport { multiplyPriceByAmount } from 'utils/prices';\nimport useIsRefundable from '../../hooks/useIsRefundable';\nimport { formatBnb, getNetPayout } from './helpers';\nimport CollectWinningsButton from '../CollectWinningsButton';\nimport PositionTag from '../PositionTag';\nimport ReclaimPositionButton from '../ReclaimPositionButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledBetResult = styled(Box)`\n  border: 2px solid ${({\n  theme\n}) => theme.colors.textDisabled};\n  border-radius: 16px;\n  margin-bottom: 24px;\n  padding: 16px;\n`;\n_c = StyledBetResult;\nconst Divider = styled.hr`\n  border: 1px solid ${({\n  theme\n}) => theme.colors.cardBorder};\n`;\n_c2 = Divider;\n\nconst BetResult = ({\n  bet,\n  result\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useAppDispatch();\n  const {\n    account\n  } = useWeb3React();\n  const {\n    isRefundable\n  } = useIsRefundable(bet.round.epoch);\n  const canClaim = useGetIsClaimable(bet.round.epoch);\n  const bnbBusdPrice = useBNBBusdPrice();\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip( /*#__PURE__*/_jsxDEV(Text, {\n    as: \"p\",\n    children: t('Includes your original position and your winnings, minus the %fee% fee.', {\n      fee: '3%'\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this), {\n    placement: 'auto'\n  });\n  const isWinner = result === Result.WIN; // Winners get the payout, otherwise the claim what they put it if it was canceled\n\n  const payout = isWinner ? getNetPayout(bet, REWARD_RATE) : bet.amount;\n  const totalPayout = multiplyPriceByAmount(bnbBusdPrice, payout);\n  const returned = payout + bet.amount;\n\n  const getHeaderColor = () => {\n    switch (result) {\n      case Result.WIN:\n        return 'warning';\n\n      case Result.LOSE:\n        return 'textSubtle';\n\n      case Result.CANCELED:\n        return 'textDisabled';\n\n      case Result.HOUSE:\n        return 'textDisabled';\n\n      default:\n        return 'text';\n    }\n  };\n\n  const getHeaderText = () => {\n    switch (result) {\n      case Result.WIN:\n        return t('Win');\n\n      case Result.LOSE:\n        return t('Lose');\n\n      case Result.CANCELED:\n        return t('Canceled');\n\n      case Result.HOUSE:\n        return t('To Burn');\n\n      default:\n        return '';\n    }\n  };\n\n  const getHeaderIcon = () => {\n    switch (result) {\n      case Result.WIN:\n        return /*#__PURE__*/_jsxDEV(PrizeIcon, {\n          color: getHeaderColor()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 16\n        }, this);\n\n      case Result.LOSE:\n      case Result.CANCELED:\n        return /*#__PURE__*/_jsxDEV(BlockIcon, {\n          color: getHeaderColor()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 16\n        }, this);\n\n      default:\n        return null;\n    }\n  };\n\n  const getResultColor = () => {\n    switch (result) {\n      case Result.WIN:\n        return 'success';\n\n      case Result.LOSE:\n        return 'failure';\n\n      case Result.CANCELED:\n      case Result.HOUSE:\n      default:\n        return 'text';\n    }\n  };\n\n  const handleSuccess = async () => {\n    // We have to mark the bet as claimed immediately because it does not update fast enough\n    dispatch(markAsCollected({\n      [bet.round.epoch]: true\n    }));\n    dispatch(fetchLedgerData({\n      account,\n      epochs: [bet.round.epoch]\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      mb: \"8px\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: t('Your History')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h3\",\n          color: getHeaderColor(),\n          textTransform: \"uppercase\",\n          bold: true,\n          mr: \"4px\",\n          children: getHeaderText()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), getHeaderIcon()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledBetResult, {\n      children: [result === Result.WIN && !canClaim && /*#__PURE__*/_jsxDEV(CollectWinningsButton, {\n        hasClaimed: !canClaim,\n        width: \"100%\",\n        mb: \"16px\",\n        onSuccess: handleSuccess,\n        children: bet.claimed ? t('Already Collected') : t('Collect Winnings')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), bet.claimed && bet.claimedHash && /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(LinkExternal, {\n          href: getBscScanLink(bet.claimedHash, 'transaction'),\n          mb: \"16px\",\n          children: t('View on BscScan')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), result === Result.CANCELED && isRefundable && /*#__PURE__*/_jsxDEV(ReclaimPositionButton, {\n        epoch: bet.round.epoch,\n        width: \"100%\",\n        mb: \"16px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        mb: \"16px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [t('Your direction'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PositionTag, {\n          betPosition: bet.position,\n          children: bet.position === BetPosition.BULL ? t('Up') : t('Down')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        mb: \"16px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: t('Your position')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: `${formatBnb(bet.amount)} BNB`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"start\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          children: [isWinner ? t('Your winnings') : t('Your Result'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          style: {\n            textAlign: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            color: getResultColor(),\n            children: `${isWinner ? '+' : '-'}${formatBnb(payout)} BNB`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"12px\",\n            color: \"textSubtle\",\n            children: `~$${totalPayout.toFixed(2)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), isWinner && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"start\",\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"14px\",\n            color: \"textSubtle\",\n            children: [t('Amount to collect'), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            justifyContent: \"end\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"14px\",\n              color: \"textSubtle\",\n              children: `${formatBnb(returned)} BNB`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              ref: targetRef,\n              children: /*#__PURE__*/_jsxDEV(InfoIcon, {\n                color: \"textSubtle\",\n                ml: \"4px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), tooltipVisible && tooltip]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BetResult, \"AW8bKhDKGF9QHfgn2251kfwgyMU=\", false, function () {\n  return [useTranslation, useAppDispatch, useWeb3React, useIsRefundable, useGetIsClaimable, useBNBBusdPrice, useTooltip];\n});\n\n_c3 = BetResult;\nexport default BetResult;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledBetResult\");\n$RefreshReg$(_c2, \"Divider\");\n$RefreshReg$(_c3, \"BetResult\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/History/BetResult.tsx"],"names":["React","useWeb3React","Box","Flex","Heading","Text","PrizeIcon","BlockIcon","LinkExternal","useTooltip","InfoIcon","styled","useAppDispatch","useTranslation","REWARD_RATE","BetPosition","fetchLedgerData","markAsCollected","Result","useGetIsClaimable","useBNBBusdPrice","getBscScanLink","multiplyPriceByAmount","useIsRefundable","formatBnb","getNetPayout","CollectWinningsButton","PositionTag","ReclaimPositionButton","StyledBetResult","theme","colors","textDisabled","Divider","hr","cardBorder","BetResult","bet","result","t","dispatch","account","isRefundable","round","epoch","canClaim","bnbBusdPrice","targetRef","tooltip","tooltipVisible","fee","placement","isWinner","WIN","payout","amount","totalPayout","returned","getHeaderColor","LOSE","CANCELED","HOUSE","getHeaderText","getHeaderIcon","getResultColor","handleSuccess","epochs","claimed","claimedHash","position","BULL","textAlign","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,SAAnC,EAA8CC,SAA9C,EAAyDC,YAAzD,EAAuEC,UAAvE,EAAmFC,QAAnF,QAAmG,oBAAnG;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAAcC,WAAd,QAAiC,aAAjC;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,mBAAjD;AACA,SAASC,MAAT,QAAuB,2BAAvB;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,SAASC,qBAAT,QAAsC,cAAtC;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,WAAxC;AACA,OAAOC,qBAAP,MAAkC,0BAAlC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,qBAAP,MAAkC,0BAAlC;;;AAOA,MAAMC,eAAe,GAAGlB,MAAM,CAACT,GAAD,CAAM;AACpC,sBAAsB,CAAC;AAAE4B,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,YAAa;AAC/D;AACA;AACA;AACA,CALA;KAAMH,e;AAON,MAAMI,OAAO,GAAGtB,MAAM,CAACuB,EAAG;AAC1B,sBAAsB,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaI,UAAW;AAC7D,CAFA;MAAMF,O;;AAIN,MAAMG,SAAmC,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAD,KAAqB;AAAA;;AAC/D,QAAM;AAAEC,IAAAA;AAAF,MAAQ1B,cAAc,EAA5B;AACA,QAAM2B,QAAQ,GAAG5B,cAAc,EAA/B;AACA,QAAM;AAAE6B,IAAAA;AAAF,MAAcxC,YAAY,EAAhC;AACA,QAAM;AAAEyC,IAAAA;AAAF,MAAmBnB,eAAe,CAACc,GAAG,CAACM,KAAJ,CAAUC,KAAX,CAAxC;AACA,QAAMC,QAAQ,GAAG1B,iBAAiB,CAACkB,GAAG,CAACM,KAAJ,CAAUC,KAAX,CAAlC;AACA,QAAME,YAAY,GAAG1B,eAAe,EAApC;AACA,QAAM;AAAE2B,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,MAAyCxC,UAAU,eACvD,QAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA,cAAc8B,CAAC,CAAC,yEAAD,EAA4E;AAAEW,MAAAA,GAAG,EAAE;AAAP,KAA5E;AAAf;AAAA;AAAA;AAAA;AAAA,UADuD,EAEvD;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAFuD,CAAzD;AAKA,QAAMC,QAAQ,GAAGd,MAAM,KAAKpB,MAAM,CAACmC,GAAnC,CAZ+D,CAc/D;;AACA,QAAMC,MAAM,GAAGF,QAAQ,GAAG3B,YAAY,CAACY,GAAD,EAAMvB,WAAN,CAAf,GAAoCuB,GAAG,CAACkB,MAA/D;AACA,QAAMC,WAAW,GAAGlC,qBAAqB,CAACwB,YAAD,EAAeQ,MAAf,CAAzC;AACA,QAAMG,QAAQ,GAAGH,MAAM,GAAGjB,GAAG,CAACkB,MAA9B;;AAEA,QAAMG,cAAc,GAAG,MAAM;AAC3B,YAAQpB,MAAR;AACE,WAAKpB,MAAM,CAACmC,GAAZ;AACE,eAAO,SAAP;;AACF,WAAKnC,MAAM,CAACyC,IAAZ;AACE,eAAO,YAAP;;AACF,WAAKzC,MAAM,CAAC0C,QAAZ;AACE,eAAO,cAAP;;AACF,WAAK1C,MAAM,CAAC2C,KAAZ;AACE,eAAO,cAAP;;AACF;AACE,eAAO,MAAP;AAVJ;AAYD,GAbD;;AAeA,QAAMC,aAAa,GAAG,MAAM;AAC1B,YAAQxB,MAAR;AACE,WAAKpB,MAAM,CAACmC,GAAZ;AACE,eAAOd,CAAC,CAAC,KAAD,CAAR;;AACF,WAAKrB,MAAM,CAACyC,IAAZ;AACE,eAAOpB,CAAC,CAAC,MAAD,CAAR;;AACF,WAAKrB,MAAM,CAAC0C,QAAZ;AACE,eAAOrB,CAAC,CAAC,UAAD,CAAR;;AACF,WAAKrB,MAAM,CAAC2C,KAAZ;AACE,eAAOtB,CAAC,CAAC,SAAD,CAAR;;AACF;AACE,eAAO,EAAP;AAVJ;AAYD,GAbD;;AAeA,QAAMwB,aAAa,GAAG,MAAM;AAC1B,YAAQzB,MAAR;AACE,WAAKpB,MAAM,CAACmC,GAAZ;AACE,4BAAO,QAAC,SAAD;AAAW,UAAA,KAAK,EAAEK,cAAc;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF,WAAKxC,MAAM,CAACyC,IAAZ;AACA,WAAKzC,MAAM,CAAC0C,QAAZ;AACE,4BAAO,QAAC,SAAD;AAAW,UAAA,KAAK,EAAEF,cAAc;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACF;AACE,eAAO,IAAP;AAPJ;AASD,GAVD;;AAYA,QAAMM,cAAc,GAAG,MAAM;AAC3B,YAAQ1B,MAAR;AACE,WAAKpB,MAAM,CAACmC,GAAZ;AACE,eAAO,SAAP;;AACF,WAAKnC,MAAM,CAACyC,IAAZ;AACE,eAAO,SAAP;;AACF,WAAKzC,MAAM,CAAC0C,QAAZ;AACA,WAAK1C,MAAM,CAAC2C,KAAZ;AACA;AACE,eAAO,MAAP;AARJ;AAUD,GAXD;;AAaA,QAAMI,aAAa,GAAG,YAAY;AAChC;AACAzB,IAAAA,QAAQ,CAACvB,eAAe,CAAC;AAAE,OAACoB,GAAG,CAACM,KAAJ,CAAUC,KAAX,GAAmB;AAArB,KAAD,CAAhB,CAAR;AACAJ,IAAAA,QAAQ,CAACxB,eAAe,CAAC;AAAEyB,MAAAA,OAAF;AAAWyB,MAAAA,MAAM,EAAE,CAAC7B,GAAG,CAACM,KAAJ,CAAUC,KAAX;AAAnB,KAAD,CAAhB,CAAR;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,UAAU,EAAC,QAAjB;AAA0B,MAAA,cAAc,EAAC,eAAzC;AAAyD,MAAA,EAAE,EAAC,KAA5D;AAAA,8BACE,QAAC,OAAD;AAAA,kBAAUL,CAAC,CAAC,cAAD;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,UAAU,EAAC,QAAjB;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,EAAE,EAAC,IAAZ;AAAiB,UAAA,KAAK,EAAEmB,cAAc,EAAtC;AAA0C,UAAA,aAAa,EAAC,WAAxD;AAAoE,UAAA,IAAI,MAAxE;AAAyE,UAAA,EAAE,EAAC,KAA5E;AAAA,oBACGI,aAAa;AADhB;AAAA;AAAA;AAAA;AAAA,gBADF,EAIGC,aAAa,EAJhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,eAAD;AAAA,iBACGzB,MAAM,KAAKpB,MAAM,CAACmC,GAAlB,IAAyB,CAACR,QAA1B,iBACC,QAAC,qBAAD;AAAuB,QAAA,UAAU,EAAE,CAACA,QAApC;AAA8C,QAAA,KAAK,EAAC,MAApD;AAA2D,QAAA,EAAE,EAAC,MAA9D;AAAqE,QAAA,SAAS,EAAEoB,aAAhF;AAAA,kBACG5B,GAAG,CAAC8B,OAAJ,GAAc5B,CAAC,CAAC,mBAAD,CAAf,GAAuCA,CAAC,CAAC,kBAAD;AAD3C;AAAA;AAAA;AAAA;AAAA,cAFJ,EAMGF,GAAG,CAAC8B,OAAJ,IAAe9B,GAAG,CAAC+B,WAAnB,iBACC,QAAC,IAAD;AAAM,QAAA,cAAc,EAAC,QAArB;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAE/C,cAAc,CAACgB,GAAG,CAAC+B,WAAL,EAAkB,aAAlB,CAAlC;AAAoE,UAAA,EAAE,EAAC,MAAvE;AAAA,oBACG7B,CAAC,CAAC,iBAAD;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPJ,EAaGD,MAAM,KAAKpB,MAAM,CAAC0C,QAAlB,IAA8BlB,YAA9B,iBACC,QAAC,qBAAD;AAAuB,QAAA,KAAK,EAAEL,GAAG,CAACM,KAAJ,CAAUC,KAAxC;AAA+C,QAAA,KAAK,EAAC,MAArD;AAA4D,QAAA,EAAE,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA,cAdJ,eAgBE,QAAC,IAAD;AAAM,QAAA,UAAU,EAAC,QAAjB;AAA0B,QAAA,cAAc,EAAC,eAAzC;AAAyD,QAAA,EAAE,EAAC,MAA5D;AAAA,gCACE,QAAC,IAAD;AAAA,qBAAOL,CAAC,CAAC,gBAAD,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAa,UAAA,WAAW,EAAEF,GAAG,CAACgC,QAA9B;AAAA,oBACGhC,GAAG,CAACgC,QAAJ,KAAiBtD,WAAW,CAACuD,IAA7B,GAAoC/B,CAAC,CAAC,IAAD,CAArC,GAA8CA,CAAC,CAAC,MAAD;AADlD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,eAsBE,QAAC,IAAD;AAAM,QAAA,UAAU,EAAC,QAAjB;AAA0B,QAAA,cAAc,EAAC,eAAzC;AAAyD,QAAA,EAAE,EAAC,MAA5D;AAAA,gCACE,QAAC,IAAD;AAAA,oBAAOA,CAAC,CAAC,eAAD;AAAR;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAA,oBAAQ,GAAEf,SAAS,CAACa,GAAG,CAACkB,MAAL,CAAa;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF,eA0BE,QAAC,IAAD;AAAM,QAAA,UAAU,EAAC,OAAjB;AAAyB,QAAA,cAAc,EAAC,eAAxC;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,qBAAYH,QAAQ,GAAGb,CAAC,CAAC,eAAD,CAAJ,GAAwBA,CAAC,CAAC,aAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,GAAD;AAAK,UAAA,KAAK,EAAE;AAAEgC,YAAAA,SAAS,EAAE;AAAb,WAAZ;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,KAAK,EAAEP,cAAc,EAAhC;AAAA,sBAAsC,GAAEZ,QAAQ,GAAG,GAAH,GAAS,GAAI,GAAE5B,SAAS,CAAC8B,MAAD,CAAS;AAAjF;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAM,YAAA,QAAQ,EAAC,MAAf;AAAsB,YAAA,KAAK,EAAC,YAA5B;AAAA,sBACI,KAAIE,WAAW,CAACgB,OAAZ,CAAoB,CAApB,CAAuB;AAD/B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BF,EAmCGpB,QAAQ,iBACP;AAAA,gCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,UAAU,EAAC,OAAjB;AAAyB,UAAA,cAAc,EAAC,eAAxC;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,QAAQ,EAAC,MAAf;AAAsB,YAAA,KAAK,EAAC,YAA5B;AAAA,uBACGb,CAAC,CAAC,mBAAD,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,IAAD;AAAM,YAAA,cAAc,EAAC,KAArB;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,QAAQ,EAAC,MAAf;AAAsB,cAAA,KAAK,EAAC,YAA5B;AAAA,wBAA2C,GAAEf,SAAS,CAACiC,QAAD,CAAW;AAAjE;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAM,cAAA,GAAG,EAAEV,SAAX;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAC,YAAhB;AAA6B,gBAAA,EAAE,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,EAUGE,cAAc,IAAID,OAVrB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBApCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AAkED,CAlJD;;GAAMZ,S;UACUvB,c,EACGD,c,EACGX,Y,EACKsB,e,EACRJ,iB,EACIC,e,EAC0BX,U;;;MAP3C2B,S;AAoJN,eAAeA,SAAf","sourcesContent":["import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Box, Flex, Heading, Text, PrizeIcon, BlockIcon, LinkExternal, useTooltip, InfoIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\nimport { REWARD_RATE } from 'state/predictions/config'\nimport { Bet, BetPosition } from 'state/types'\nimport { fetchLedgerData, markAsCollected } from 'state/predictions'\nimport { Result } from 'state/predictions/helpers'\nimport { useGetIsClaimable } from 'state/predictions/hooks'\nimport { useBNBBusdPrice } from 'hooks/useBUSDPrice'\nimport { getBscScanLink } from 'utils'\nimport { multiplyPriceByAmount } from 'utils/prices'\nimport useIsRefundable from '../../hooks/useIsRefundable'\nimport { formatBnb, getNetPayout } from './helpers'\nimport CollectWinningsButton from '../CollectWinningsButton'\nimport PositionTag from '../PositionTag'\nimport ReclaimPositionButton from '../ReclaimPositionButton'\n\ninterface BetResultProps {\n  bet: Bet\n  result: Result\n}\n\nconst StyledBetResult = styled(Box)`\n  border: 2px solid ${({ theme }) => theme.colors.textDisabled};\n  border-radius: 16px;\n  margin-bottom: 24px;\n  padding: 16px;\n`\n\nconst Divider = styled.hr`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst BetResult: React.FC<BetResultProps> = ({ bet, result }) => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const { isRefundable } = useIsRefundable(bet.round.epoch)\n  const canClaim = useGetIsClaimable(bet.round.epoch)\n  const bnbBusdPrice = useBNBBusdPrice()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <Text as=\"p\">{t('Includes your original position and your winnings, minus the %fee% fee.', { fee: '3%' })}</Text>,\n    { placement: 'auto' },\n  )\n\n  const isWinner = result === Result.WIN\n\n  // Winners get the payout, otherwise the claim what they put it if it was canceled\n  const payout = isWinner ? getNetPayout(bet, REWARD_RATE) : bet.amount\n  const totalPayout = multiplyPriceByAmount(bnbBusdPrice, payout)\n  const returned = payout + bet.amount\n\n  const getHeaderColor = () => {\n    switch (result) {\n      case Result.WIN:\n        return 'warning'\n      case Result.LOSE:\n        return 'textSubtle'\n      case Result.CANCELED:\n        return 'textDisabled'\n      case Result.HOUSE:\n        return 'textDisabled'\n      default:\n        return 'text'\n    }\n  }\n\n  const getHeaderText = () => {\n    switch (result) {\n      case Result.WIN:\n        return t('Win')\n      case Result.LOSE:\n        return t('Lose')\n      case Result.CANCELED:\n        return t('Canceled')\n      case Result.HOUSE:\n        return t('To Burn')\n      default:\n        return ''\n    }\n  }\n\n  const getHeaderIcon = () => {\n    switch (result) {\n      case Result.WIN:\n        return <PrizeIcon color={getHeaderColor()} />\n      case Result.LOSE:\n      case Result.CANCELED:\n        return <BlockIcon color={getHeaderColor()} />\n      default:\n        return null\n    }\n  }\n\n  const getResultColor = () => {\n    switch (result) {\n      case Result.WIN:\n        return 'success'\n      case Result.LOSE:\n        return 'failure'\n      case Result.CANCELED:\n      case Result.HOUSE:\n      default:\n        return 'text'\n    }\n  }\n\n  const handleSuccess = async () => {\n    // We have to mark the bet as claimed immediately because it does not update fast enough\n    dispatch(markAsCollected({ [bet.round.epoch]: true }))\n    dispatch(fetchLedgerData({ account, epochs: [bet.round.epoch] }))\n  }\n\n  return (\n    <>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Heading>{t('Your History')}</Heading>\n        <Flex alignItems=\"center\">\n          <Heading as=\"h3\" color={getHeaderColor()} textTransform=\"uppercase\" bold mr=\"4px\">\n            {getHeaderText()}\n          </Heading>\n          {getHeaderIcon()}\n        </Flex>\n      </Flex>\n      <StyledBetResult>\n        {result === Result.WIN && !canClaim && (\n          <CollectWinningsButton hasClaimed={!canClaim} width=\"100%\" mb=\"16px\" onSuccess={handleSuccess}>\n            {bet.claimed ? t('Already Collected') : t('Collect Winnings')}\n          </CollectWinningsButton>\n        )}\n        {bet.claimed && bet.claimedHash && (\n          <Flex justifyContent=\"center\">\n            <LinkExternal href={getBscScanLink(bet.claimedHash, 'transaction')} mb=\"16px\">\n              {t('View on BscScan')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {result === Result.CANCELED && isRefundable && (\n          <ReclaimPositionButton epoch={bet.round.epoch} width=\"100%\" mb=\"16px\" />\n        )}\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"16px\">\n          <Text>{t('Your direction')}:</Text>\n          <PositionTag betPosition={bet.position}>\n            {bet.position === BetPosition.BULL ? t('Up') : t('Down')}\n          </PositionTag>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"16px\">\n          <Text>{t('Your position')}</Text>\n          <Text>{`${formatBnb(bet.amount)} BNB`}</Text>\n        </Flex>\n        <Flex alignItems=\"start\" justifyContent=\"space-between\">\n          <Text bold>{isWinner ? t('Your winnings') : t('Your Result')}:</Text>\n          <Box style={{ textAlign: 'right' }}>\n            <Text bold color={getResultColor()}>{`${isWinner ? '+' : '-'}${formatBnb(payout)} BNB`}</Text>\n            <Text fontSize=\"12px\" color=\"textSubtle\">\n              {`~$${totalPayout.toFixed(2)}`}\n            </Text>\n          </Box>\n        </Flex>\n        {isWinner && (\n          <>\n            <Divider />\n            <Flex alignItems=\"start\" justifyContent=\"space-between\">\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {t('Amount to collect')}:\n              </Text>\n              <Flex justifyContent=\"end\">\n                <Text fontSize=\"14px\" color=\"textSubtle\">{`${formatBnb(returned)} BNB`}</Text>\n                <span ref={targetRef}>\n                  <InfoIcon color=\"textSubtle\" ml=\"4px\" />\n                </span>\n              </Flex>\n              {tooltipVisible && tooltip}\n            </Flex>\n          </>\n        )}\n      </StyledBetResult>\n    </>\n  )\n}\n\nexport default BetResult\n"]},"metadata":{},"sourceType":"module"}