{"ast":null,"code":"import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import{useLocation}from'react-router';import{Menu as UikitMenu}from'@pancakeswap/uikit';import{languageList}from'config/localization/languages';import{useTranslation}from'contexts/Localization';import useTheme from'hooks/useTheme';import{usePriceCakeBusd}from'state/farms/hooks';import config from'./config/config';import UserMenu from'./UserMenu';import GlobalSettings from'./GlobalSettings';import{getActiveMenuItem,getActiveSubMenuItem}from'./utils';import{jsx as _jsx}from\"react/jsx-runtime\";var Menu=function Menu(props){var _useTheme=useTheme(),isDark=_useTheme.isDark,toggleTheme=_useTheme.toggleTheme;var cakePriceUsd=usePriceCakeBusd();var _useTranslation=useTranslation(),currentLanguage=_useTranslation.currentLanguage,setLanguage=_useTranslation.setLanguage,t=_useTranslation.t;var _useLocation=useLocation(),pathname=_useLocation.pathname;var activeMenuItem=getActiveMenuItem({menuConfig:config(t),pathname:pathname});var activeSubMenuItem=getActiveSubMenuItem({menuItem:activeMenuItem,pathname:pathname});return/*#__PURE__*/_jsx(UikitMenu,_objectSpread({userMenu:/*#__PURE__*/_jsx(UserMenu,{}),globalMenu:/*#__PURE__*/_jsx(GlobalSettings,{})// isDark={isDark}\n// toggleTheme={toggleTheme}\n,currentLang:currentLanguage.code,langs:languageList,setLang:setLanguage,cakePriceUsd:\"MAD\",links:config(t),subLinks:(activeMenuItem===null||activeMenuItem===void 0?void 0:activeMenuItem.hideSubNav)?[]:activeMenuItem===null||activeMenuItem===void 0?void 0:activeMenuItem.items// footerLinks={footerLinks(t)}\n,activeItem:activeMenuItem===null||activeMenuItem===void 0?void 0:activeMenuItem.href,activeSubItem:activeSubMenuItem===null||activeSubMenuItem===void 0?void 0:activeSubMenuItem.href// buyCakeLabel={t('Buy CAKE')}\n},props));};export default Menu;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/components/Menu/index.tsx"],"names":["React","useLocation","Menu","UikitMenu","languageList","useTranslation","useTheme","usePriceCakeBusd","config","UserMenu","GlobalSettings","getActiveMenuItem","getActiveSubMenuItem","props","isDark","toggleTheme","cakePriceUsd","currentLanguage","setLanguage","t","pathname","activeMenuItem","menuConfig","activeSubMenuItem","menuItem","code","hideSubNav","items","href"],"mappings":"uJAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,cAA5B,CACA,OAASC,IAAI,GAAIC,CAAAA,SAAjB,KAAkC,oBAAlC,CACA,OAASC,YAAT,KAA6B,+BAA7B,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,OAASC,gBAAT,KAAiC,mBAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,OAASC,iBAAT,CAA4BC,oBAA5B,KAAwD,SAAxD,C,2CAGA,GAAMV,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACW,KAAD,CAAW,CACtB,cAAgCP,QAAQ,EAAxC,CAAQQ,MAAR,WAAQA,MAAR,CAAgBC,WAAhB,WAAgBA,WAAhB,CACA,GAAMC,CAAAA,YAAY,CAAGT,gBAAgB,EAArC,CACA,oBAA4CF,cAAc,EAA1D,CAAQY,eAAR,iBAAQA,eAAR,CAAyBC,WAAzB,iBAAyBA,WAAzB,CAAsCC,CAAtC,iBAAsCA,CAAtC,CACA,iBAAqBlB,WAAW,EAAhC,CAAQmB,QAAR,cAAQA,QAAR,CAEA,GAAMC,CAAAA,cAAc,CAAGV,iBAAiB,CAAC,CAAEW,UAAU,CAAEd,MAAM,CAACW,CAAD,CAApB,CAAyBC,QAAQ,CAARA,QAAzB,CAAD,CAAxC,CACA,GAAMG,CAAAA,iBAAiB,CAAGX,oBAAoB,CAAC,CAAEY,QAAQ,CAAEH,cAAZ,CAA4BD,QAAQ,CAARA,QAA5B,CAAD,CAA9C,CAEA,mBACE,KAAC,SAAD,gBACE,QAAQ,cAAE,KAAC,QAAD,IADZ,CAEE,UAAU,cAAE,KAAC,cAAD,IACZ;AACA;AAJF,CAKE,WAAW,CAAEH,eAAe,CAACQ,IAL/B,CAME,KAAK,CAAErB,YANT,CAOE,OAAO,CAAEc,WAPX,CAQE,YAAY,CAAC,KARf,CASE,KAAK,CAAEV,MAAM,CAACW,CAAD,CATf,CAUE,QAAQ,CAAE,CAAAE,cAAc,OAAd,EAAAA,cAAc,SAAd,QAAAA,cAAc,CAAEK,UAAhB,EAA6B,EAA7B,CAAkCL,cAAlC,SAAkCA,cAAlC,iBAAkCA,cAAc,CAAEM,KAC5D;AAXF,CAYE,UAAU,CAAEN,cAAF,SAAEA,cAAF,iBAAEA,cAAc,CAAEO,IAZ9B,CAaE,aAAa,CAAEL,iBAAF,SAAEA,iBAAF,iBAAEA,iBAAiB,CAAEK,IAClC;AAdF,EAeMf,KAfN,EADF,CAmBD,CA5BD,CA8BA,cAAeX,CAAAA,IAAf","sourcesContent":["import React from 'react'\nimport { useLocation } from 'react-router'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport config from './config/config'\nimport UserMenu from './UserMenu'\nimport GlobalSettings from './GlobalSettings'\nimport { getActiveMenuItem, getActiveSubMenuItem } from './utils'\nimport { footerLinks } from './config/footerConfig'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n  const { pathname } = useLocation()\n\n  const activeMenuItem = getActiveMenuItem({ menuConfig: config(t), pathname })\n  const activeSubMenuItem = getActiveSubMenuItem({ menuItem: activeMenuItem, pathname })\n\n  return (\n    <UikitMenu\n      userMenu={<UserMenu />}\n      globalMenu={<GlobalSettings />}\n      // isDark={isDark}\n      // toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd=\"MAD\"\n      links={config(t)}\n      subLinks={activeMenuItem?.hideSubNav ? [] : activeMenuItem?.items}\n      // footerLinks={footerLinks(t)}\n      activeItem={activeMenuItem?.href}\n      activeSubItem={activeSubMenuItem?.href}\n      // buyCakeLabel={t('Buy CAKE')}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n"]},"metadata":{},"sourceType":"module"}