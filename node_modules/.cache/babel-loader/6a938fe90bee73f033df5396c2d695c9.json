{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { useERC20 } from 'hooks/useContract';\nimport { useApprovePool } from '../../../hooks/useApprove';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ApprovalAction = ({\n  pool,\n  isLoading = false\n}) => {\n  _s();\n\n  const {\n    sousId,\n    stakingToken,\n    earningToken\n  } = pool;\n  const {\n    t\n  } = useTranslation();\n  const stakingTokenContract = useERC20(stakingToken.address || '');\n  const {\n    handleApprove,\n    requestedApproval\n  } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n      width: \"100%\",\n      height: \"52px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      isLoading: requestedApproval,\n      endIcon: requestedApproval ? /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n        spin: true,\n        color: \"currentColor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 40\n      }, this) : null,\n      disabled: requestedApproval,\n      onClick: handleApprove,\n      width: \"100%\",\n      children: t('Enable')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(ApprovalAction, \"zxlaYyoDorUjEwp0mIJ2MvD8+Ps=\", false, function () {\n  return [useTranslation, useERC20, useApprovePool];\n});\n\n_c = ApprovalAction;\nexport default ApprovalAction;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApprovalAction\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx"],"names":["React","Button","AutoRenewIcon","Skeleton","useTranslation","useERC20","useApprovePool","ApprovalAction","pool","isLoading","sousId","stakingToken","earningToken","t","stakingTokenContract","address","handleApprove","requestedApproval","symbol"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,aAAjB,EAAgCC,QAAhC,QAAgD,oBAAhD;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,SAASC,cAAT,QAA+B,2BAA/B;;;;AAOA,MAAMC,cAA6C,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,SAAS,GAAG;AAApB,CAAD,KAAiC;AAAA;;AACrF,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA;AAAxB,MAAyCJ,IAA/C;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAQT,cAAc,EAA5B;AACA,QAAMU,oBAAoB,GAAGT,QAAQ,CAACM,YAAY,CAACI,OAAb,IAAwB,EAAzB,CAArC;AACA,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAuCX,cAAc,CAACQ,oBAAD,EAAuBJ,MAAvB,EAA+BE,YAAY,CAACM,MAA5C,CAA3D;AAEA,sBACE;AAAA,cACGT,SAAS,gBACR,QAAC,QAAD;AAAU,MAAA,KAAK,EAAC,MAAhB;AAAuB,MAAA,MAAM,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR,QAAC,MAAD;AACE,MAAA,SAAS,EAAEQ,iBADb;AAEE,MAAA,OAAO,EAAEA,iBAAiB,gBAAG,QAAC,aAAD;AAAe,QAAA,IAAI,MAAnB;AAAoB,QAAA,KAAK,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,cAAH,GAAiD,IAF7E;AAGE,MAAA,QAAQ,EAAEA,iBAHZ;AAIE,MAAA,OAAO,EAAED,aAJX;AAKE,MAAA,KAAK,EAAC,MALR;AAAA,gBAOGH,CAAC,CAAC,QAAD;AAPJ;AAAA;AAAA;AAAA;AAAA;AAJJ,mBADF;AAiBD,CAvBD;;GAAMN,c;UAEUH,c,EACeC,Q,EACgBC,c;;;KAJzCC,c;AAyBN,eAAeA,cAAf","sourcesContent":["import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { DeserializedPool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: DeserializedPool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address || '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n"]},"metadata":{},"sourceType":"module"}