{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{Flex,Heading}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import AchievementCard from'./AchievementCard';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Grid=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-gap: 16px;\\n  grid-template-columns: 1fr;\\n\\n  \",\" {\\n    grid-template-columns: repeat(2, 1fr);\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.mediaQueries.sm;});var AchievementsList=function AchievementsList(_ref2){var achievements=_ref2.achievements;var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Grid,{children:achievements.map(function(achievement){return/*#__PURE__*/_jsx(AchievementCard,{achievement:achievement},achievement.id);})}),achievements.length===0&&/*#__PURE__*/_jsx(Flex,{alignItems:\"center\",justifyContent:\"center\",style:{height:'64px'},children:/*#__PURE__*/_jsx(Heading,{as:\"h5\",scale:\"md\",color:\"textDisabled\",children:t('No achievements yet!')})})]});};export default AchievementsList;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Profile/components/Achievements/AchievementsList.tsx"],"names":["React","styled","Flex","Heading","useTranslation","AchievementCard","Grid","div","theme","mediaQueries","sm","AchievementsList","achievements","t","map","achievement","id","length","height"],"mappings":"4LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,IAAT,CAAeC,OAAf,KAA8B,oBAA9B,CACA,OAASC,cAAT,KAA+B,uBAA/B,CAEA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,C,6IAEA,GAAMC,CAAAA,IAAI,CAAGL,MAAM,CAACM,GAAV,mMAKN,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,YAAN,CAAmBC,EAAlC,EALM,CAAV,CAUA,GAAMC,CAAAA,gBAA2D,CAAG,QAA9DA,CAAAA,gBAA8D,OAAsB,IAAnBC,CAAAA,YAAmB,OAAnBA,YAAmB,CACxF,oBAAcR,cAAc,EAA5B,CAAQS,CAAR,iBAAQA,CAAR,CAEA,mBACE,wCACE,KAAC,IAAD,WACGD,YAAY,CAACE,GAAb,CAAiB,SAACC,WAAD,qBAChB,KAAC,eAAD,EAAsC,WAAW,CAAEA,WAAnD,EAAsBA,WAAW,CAACC,EAAlC,CADgB,EAAjB,CADH,EADF,CAMGJ,YAAY,CAACK,MAAb,GAAwB,CAAxB,eACC,KAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,CAA0B,cAAc,CAAC,QAAzC,CAAkD,KAAK,CAAE,CAAEC,MAAM,CAAE,MAAV,CAAzD,uBACE,KAAC,OAAD,EAAS,EAAE,CAAC,IAAZ,CAAiB,KAAK,CAAC,IAAvB,CAA4B,KAAK,CAAC,cAAlC,UACGL,CAAC,CAAC,sBAAD,CADJ,EADF,EAPJ,GADF,CAgBD,CAnBD,CAqBA,cAAeF,CAAAA,gBAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Achievement } from 'state/types'\nimport AchievementCard from './AchievementCard'\n\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: 1fr;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`\n\nconst AchievementsList: React.FC<{ achievements: Achievement[] }> = ({ achievements }) => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Grid>\n        {achievements.map((achievement) => (\n          <AchievementCard key={achievement.id} achievement={achievement} />\n        ))}\n      </Grid>\n      {achievements.length === 0 && (\n        <Flex alignItems=\"center\" justifyContent=\"center\" style={{ height: '64px' }}>\n          <Heading as=\"h5\" scale=\"md\" color=\"textDisabled\">\n            {t('No achievements yet!')}\n          </Heading>\n        </Flex>\n      )}\n    </>\n  )\n}\n\nexport default AchievementsList\n"]},"metadata":{},"sourceType":"module"}