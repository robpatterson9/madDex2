{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Lottery/components/YourHistoryCard/FinishedRoundTable.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Text, Box, Flex, Button } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { LotteryStatus } from 'config/constants/types';\nimport { useGetUserLotteriesGraphData } from 'state/lottery/hooks';\nimport FinishedRoundRow from './FinishedRoundRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Grid = styled(Box)`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr) auto;\n`;\n_c = Grid;\n\nconst FinishedRoundTable = ({\n  handleShowMoreClick,\n  numUserRoundsRequested,\n  handleHistoryRowClick\n}) => {\n  _s();\n\n  var _userLotteryData$roun;\n\n  const {\n    t\n  } = useTranslation();\n  const userLotteryData = useGetUserLotteriesGraphData();\n  const filteredForClaimable = userLotteryData === null || userLotteryData === void 0 ? void 0 : userLotteryData.rounds.filter(round => {\n    return round.status.toLowerCase() === LotteryStatus.CLAIMABLE;\n  });\n  const sortedByRoundId = filteredForClaimable === null || filteredForClaimable === void 0 ? void 0 : filteredForClaimable.sort((roundA, roundB) => {\n    return parseInt(roundB.lotteryId, 10) - parseInt(roundA.lotteryId, 10);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      px: \"24px\",\n      pt: \"24px\",\n      mb: \"8px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        fontSize: \"12px\",\n        color: \"secondary\",\n        children: \"#\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        fontSize: \"12px\",\n        color: \"secondary\",\n        textTransform: \"uppercase\",\n        children: t('Date')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        fontSize: \"12px\",\n        color: \"secondary\",\n        textTransform: \"uppercase\",\n        children: t('Your Tickets')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        width: \"20px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      px: \"24px\",\n      pb: \"24px\",\n      flexDirection: \"column\",\n      overflowY: \"scroll\",\n      height: \"240px\",\n      children: [userLotteryData && sortedByRoundId.map(finishedRound => /*#__PURE__*/_jsxDEV(FinishedRoundRow, {\n        roundId: finishedRound.lotteryId,\n        hasWon: finishedRound.claimed,\n        numberTickets: finishedRound.totalTickets,\n        endTime: finishedRound.endTime,\n        onClick: handleHistoryRowClick\n      }, finishedRound.lotteryId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)), (userLotteryData === null || userLotteryData === void 0 ? void 0 : (_userLotteryData$roun = userLotteryData.rounds) === null || _userLotteryData$roun === void 0 ? void 0 : _userLotteryData$roun.length) === numUserRoundsRequested && /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          mt: \"12px\",\n          variant: \"text\",\n          width: \"fit-content\",\n          onClick: handleShowMoreClick,\n          children: t('Show More')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FinishedRoundTable, \"Qr2OChCKJG5sZYlz999BglXEFoo=\", false, function () {\n  return [useTranslation, useGetUserLotteriesGraphData];\n});\n\n_c2 = FinishedRoundTable;\nexport default FinishedRoundTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Grid\");\n$RefreshReg$(_c2, \"FinishedRoundTable\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Lottery/components/YourHistoryCard/FinishedRoundTable.tsx"],"names":["React","styled","Text","Box","Flex","Button","useTranslation","LotteryStatus","useGetUserLotteriesGraphData","FinishedRoundRow","Grid","FinishedRoundTable","handleShowMoreClick","numUserRoundsRequested","handleHistoryRowClick","t","userLotteryData","filteredForClaimable","rounds","filter","round","status","toLowerCase","CLAIMABLE","sortedByRoundId","sort","roundA","roundB","parseInt","lotteryId","map","finishedRound","claimed","totalTickets","endTime","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Box, Flex, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { LotteryStatus } from 'config/constants/types'\nimport { useGetUserLotteriesGraphData } from 'state/lottery/hooks'\nimport FinishedRoundRow from './FinishedRoundRow'\n\nconst Grid = styled(Box)`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr) auto;\n`\n\ninterface FinishedRoundTableProps {\n  handleHistoryRowClick: (string) => void\n  handleShowMoreClick: () => void\n  numUserRoundsRequested: number\n}\n\nconst FinishedRoundTable: React.FC<FinishedRoundTableProps> = ({\n  handleShowMoreClick,\n  numUserRoundsRequested,\n  handleHistoryRowClick,\n}) => {\n  const { t } = useTranslation()\n  const userLotteryData = useGetUserLotteriesGraphData()\n\n  const filteredForClaimable = userLotteryData?.rounds.filter((round) => {\n    return round.status.toLowerCase() === LotteryStatus.CLAIMABLE\n  })\n\n  const sortedByRoundId = filteredForClaimable?.sort((roundA, roundB) => {\n    return parseInt(roundB.lotteryId, 10) - parseInt(roundA.lotteryId, 10)\n  })\n\n  return (\n    <>\n      <Grid px=\"24px\" pt=\"24px\" mb=\"8px\">\n        <Text bold fontSize=\"12px\" color=\"secondary\">\n          #\n        </Text>\n        <Text bold fontSize=\"12px\" color=\"secondary\" textTransform=\"uppercase\">\n          {t('Date')}\n        </Text>\n        <Text bold fontSize=\"12px\" color=\"secondary\" textTransform=\"uppercase\">\n          {t('Your Tickets')}\n        </Text>\n        <Box width=\"20px\" />\n      </Grid>\n      <Flex px=\"24px\" pb=\"24px\" flexDirection=\"column\" overflowY=\"scroll\" height=\"240px\">\n        {userLotteryData &&\n          sortedByRoundId.map((finishedRound) => (\n            <FinishedRoundRow\n              key={finishedRound.lotteryId}\n              roundId={finishedRound.lotteryId}\n              hasWon={finishedRound.claimed}\n              numberTickets={finishedRound.totalTickets}\n              endTime={finishedRound.endTime}\n              onClick={handleHistoryRowClick}\n            />\n          ))}\n        {userLotteryData?.rounds?.length === numUserRoundsRequested && (\n          <Flex justifyContent=\"center\">\n            <Button mt=\"12px\" variant=\"text\" width=\"fit-content\" onClick={handleShowMoreClick}>\n              {t('Show More')}\n            </Button>\n          </Flex>\n        )}\n      </Flex>\n    </>\n  )\n}\n\nexport default FinishedRoundTable\n"]},"metadata":{},"sourceType":"module"}