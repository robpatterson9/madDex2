{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{useWeb3React}from'@web3-react/core';import{useSelector}from'react-redux';import{isAddress}from'utils';import{useAppDispatch}from'state';import usePreviousValue from'hooks/usePreviousValue';import{getAchievements}from'state/achievements/helpers';import{ProfileAvatarFetchStatus}from'../types';import{fetchProfile,fetchProfileAvatar,fetchProfileUsername}from'.';import{getProfile}from'./helpers';export var useFetchProfile=function useFetchProfile(){var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var dispatch=useAppDispatch();useEffect(function(){if(account){dispatch(fetchProfile(account));}},[account,dispatch]);};export var useProfileForAddress=function useProfileForAddress(address){var _useState=useState({profile:null,isFetching:true}),_useState2=_slicedToArray(_useState,2),profileState=_useState2[0],setProfileState=_useState2[1];var previousAddress=usePreviousValue(address);var hasAddressChanged=previousAddress!==address;useEffect(function(){var fetchProfileForAddress=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var profile;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return getProfile(address);case 3:profile=_context.sent;setProfileState({profile:profile,isFetching:false});_context.next=11;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.error(\"Failed to fetch profile for address \".concat(address),_context.t0);setProfileState({profile:null,isFetching:false});case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function fetchProfileForAddress(){return _ref.apply(this,arguments);};}();if(hasAddressChanged||!profileState.isFetching&&!profileState.profile){fetchProfileForAddress();}},[profileState,address,hasAddressChanged]);// Clear state on account switch\nuseEffect(function(){setProfileState({profile:null,isFetching:true});},[address]);return profileState;};export var useAchievementsForAddress=function useAchievementsForAddress(address){var _useState3=useState({achievements:[],isFetching:false}),_useState4=_slicedToArray(_useState3,2),state=_useState4[0],setState=_useState4[1];var previousAddress=usePreviousValue(address);var hasAddressChanged=previousAddress!==address;useEffect(function(){var fetchProfileForAddress=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var achievements;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setState({achievements:[],isFetching:true});_context2.prev=1;_context2.next=4;return getAchievements(address);case 4:achievements=_context2.sent;setState({achievements:achievements,isFetching:false});_context2.next=12;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](1);console.error(\"Failed to fetch achievements for address \".concat(address),_context2.t0);setState({achievements:[],isFetching:false});case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[1,8]]);}));return function fetchProfileForAddress(){return _ref2.apply(this,arguments);};}();if(hasAddressChanged||!state.isFetching&&!state.achievements){fetchProfileForAddress();}},[state,address,hasAddressChanged]);// Clear state on account switch\nuseEffect(function(){setState({achievements:[],isFetching:true});},[address]);return state;};export var useProfile=function useProfile(){var _useSelector=useSelector(function(state){return state.profile;}),isInitialized=_useSelector.isInitialized,isLoading=_useSelector.isLoading,data=_useSelector.data,hasRegistered=_useSelector.hasRegistered;return{profile:data,hasProfile:isInitialized&&hasRegistered,isInitialized:isInitialized,isLoading:isLoading};};export var useGetProfileAvatar=function useGetProfileAvatar(account){var profileAvatar=useSelector(function(state){return state.profile.profileAvatars[account];});var _ref3=profileAvatar||{},username=_ref3.username,nft=_ref3.nft,hasRegistered=_ref3.hasRegistered,usernameFetchStatus=_ref3.usernameFetchStatus,avatarFetchStatus=_ref3.avatarFetchStatus;var dispatch=useAppDispatch();useEffect(function(){var address=isAddress(account);if(!nft&&avatarFetchStatus!==ProfileAvatarFetchStatus.FETCHED&&address){dispatch(fetchProfileAvatar(account));}if(!username&&avatarFetchStatus===ProfileAvatarFetchStatus.FETCHED&&usernameFetchStatus!==ProfileAvatarFetchStatus.FETCHED&&address){dispatch(fetchProfileUsername({account:account,hasRegistered:hasRegistered}));}},[account,nft,username,hasRegistered,avatarFetchStatus,usernameFetchStatus,dispatch]);return{username:username,nft:nft,usernameFetchStatus:usernameFetchStatus,avatarFetchStatus:avatarFetchStatus};};","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/state/profile/hooks.ts"],"names":["useState","useEffect","useWeb3React","useSelector","isAddress","useAppDispatch","usePreviousValue","getAchievements","ProfileAvatarFetchStatus","fetchProfile","fetchProfileAvatar","fetchProfileUsername","getProfile","useFetchProfile","account","dispatch","useProfileForAddress","address","profile","isFetching","profileState","setProfileState","previousAddress","hasAddressChanged","fetchProfileForAddress","console","error","useAchievementsForAddress","achievements","state","setState","useProfile","isInitialized","isLoading","data","hasRegistered","hasProfile","useGetProfileAvatar","profileAvatar","profileAvatars","username","nft","usernameFetchStatus","avatarFetchStatus","FETCHED"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { isAddress } from 'utils'\nimport { useAppDispatch } from 'state'\nimport usePreviousValue from 'hooks/usePreviousValue'\nimport { getAchievements } from 'state/achievements/helpers'\nimport { State, ProfileState, Achievement, ProfileAvatarFetchStatus } from '../types'\nimport { fetchProfile, fetchProfileAvatar, fetchProfileUsername } from '.'\nimport { getProfile, GetProfileResponse } from './helpers'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchProfile(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useProfileForAddress = (address: string) => {\n  const [profileState, setProfileState] = useState<{ profile: GetProfileResponse; isFetching: boolean }>({\n    profile: null,\n    isFetching: true,\n  })\n  const previousAddress = usePreviousValue(address)\n  const hasAddressChanged = previousAddress !== address\n\n  useEffect(() => {\n    const fetchProfileForAddress = async () => {\n      try {\n        const profile = await getProfile(address)\n        setProfileState({ profile, isFetching: false })\n      } catch (error) {\n        console.error(`Failed to fetch profile for address ${address}`, error)\n        setProfileState({ profile: null, isFetching: false })\n      }\n    }\n    if (hasAddressChanged || (!profileState.isFetching && !profileState.profile)) {\n      fetchProfileForAddress()\n    }\n  }, [profileState, address, hasAddressChanged])\n\n  // Clear state on account switch\n  useEffect(() => {\n    setProfileState({ profile: null, isFetching: true })\n  }, [address])\n\n  return profileState\n}\n\nexport const useAchievementsForAddress = (address: string) => {\n  const [state, setState] = useState<{ achievements: Achievement[]; isFetching: boolean }>({\n    achievements: [],\n    isFetching: false,\n  })\n  const previousAddress = usePreviousValue(address)\n  const hasAddressChanged = previousAddress !== address\n\n  useEffect(() => {\n    const fetchProfileForAddress = async () => {\n      setState({ achievements: [], isFetching: true })\n      try {\n        const achievements = await getAchievements(address)\n        setState({ achievements, isFetching: false })\n      } catch (error) {\n        console.error(`Failed to fetch achievements for address ${address}`, error)\n        setState({ achievements: [], isFetching: false })\n      }\n    }\n    if (hasAddressChanged || (!state.isFetching && !state.achievements)) {\n      fetchProfileForAddress()\n    }\n  }, [state, address, hasAddressChanged])\n\n  // Clear state on account switch\n  useEffect(() => {\n    setState({ achievements: [], isFetching: true })\n  }, [address])\n\n  return state\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\nexport const useGetProfileAvatar = (account: string) => {\n  const profileAvatar = useSelector((state: State) => state.profile.profileAvatars[account])\n  const { username, nft, hasRegistered, usernameFetchStatus, avatarFetchStatus } = profileAvatar || {}\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const address = isAddress(account)\n\n    if (!nft && avatarFetchStatus !== ProfileAvatarFetchStatus.FETCHED && address) {\n      dispatch(fetchProfileAvatar(account))\n    }\n\n    if (\n      !username &&\n      avatarFetchStatus === ProfileAvatarFetchStatus.FETCHED &&\n      usernameFetchStatus !== ProfileAvatarFetchStatus.FETCHED &&\n      address\n    ) {\n      dispatch(fetchProfileUsername({ account, hasRegistered }))\n    }\n  }, [account, nft, username, hasRegistered, avatarFetchStatus, usernameFetchStatus, dispatch])\n\n  return { username, nft, usernameFetchStatus, avatarFetchStatus }\n}\n"]},"metadata":{},"sourceType":"module"}