{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useEffect,useMemo}from'react';import BigNumber from'bignumber.js';import{useWeb3React}from'@web3-react/core';import{useSelector}from'react-redux';import{useAppDispatch}from'state';import{simpleRpcProvider}from'utils/providers';import useRefresh from'hooks/useRefresh';import{fetchPoolsPublicDataAsync,fetchPoolsUserDataAsync,fetchCakeVaultPublicData,fetchCakeVaultUserData,fetchCakeVaultFees,fetchPoolsStakingLimitsAsync}from'.';import{transformPool}from'./helpers';export var useFetchPublicPoolsData=function useFetchPublicPoolsData(){var dispatch=useAppDispatch();var _useRefresh=useRefresh(),slowRefresh=_useRefresh.slowRefresh;useEffect(function(){var fetchPoolsPublicData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var blockNumber;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return simpleRpcProvider.getBlockNumber();case 2:blockNumber=_context.sent;dispatch(fetchPoolsPublicDataAsync(blockNumber));case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchPoolsPublicData(){return _ref.apply(this,arguments);};}();fetchPoolsPublicData();dispatch(fetchPoolsStakingLimitsAsync());},[dispatch,slowRefresh]);};export var useFetchUserPools=function useFetchUserPools(account){var _useRefresh2=useRefresh(),fastRefresh=_useRefresh2.fastRefresh;var dispatch=useAppDispatch();useEffect(function(){if(account){dispatch(fetchPoolsUserDataAsync(account));}},[account,dispatch,fastRefresh]);};export var usePools=function usePools(){var _useSelector=useSelector(function(state){return{pools:state.pools.data,userDataLoaded:state.pools.userDataLoaded};}),pools=_useSelector.pools,userDataLoaded=_useSelector.userDataLoaded;return{pools:pools.map(transformPool),userDataLoaded:userDataLoaded};};export var useFetchCakeVault=function useFetchCakeVault(){var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useRefresh3=useRefresh(),fastRefresh=_useRefresh3.fastRefresh;var dispatch=useAppDispatch();useEffect(function(){dispatch(fetchCakeVaultPublicData());},[dispatch,fastRefresh]);useEffect(function(){dispatch(fetchCakeVaultUserData({account:account}));},[dispatch,fastRefresh,account]);useEffect(function(){dispatch(fetchCakeVaultFees());},[dispatch]);};export var useCakeVault=function useCakeVault(){var _useSelector2=useSelector(function(state){return state.pools.cakeVault;}),totalSharesAsString=_useSelector2.totalShares,pricePerFullShareAsString=_useSelector2.pricePerFullShare,totalCakeInVaultAsString=_useSelector2.totalCakeInVault,estimatedCakeBountyRewardAsString=_useSelector2.estimatedCakeBountyReward,totalPendingCakeHarvestAsString=_useSelector2.totalPendingCakeHarvest,_useSelector2$fees=_useSelector2.fees,performanceFee=_useSelector2$fees.performanceFee,callFee=_useSelector2$fees.callFee,withdrawalFee=_useSelector2$fees.withdrawalFee,withdrawalFeePeriod=_useSelector2$fees.withdrawalFeePeriod,_useSelector2$userDat=_useSelector2.userData,isLoading=_useSelector2$userDat.isLoading,userSharesAsString=_useSelector2$userDat.userShares,cakeAtLastUserActionAsString=_useSelector2$userDat.cakeAtLastUserAction,lastDepositedTime=_useSelector2$userDat.lastDepositedTime,lastUserActionTime=_useSelector2$userDat.lastUserActionTime;var estimatedCakeBountyReward=useMemo(function(){return new BigNumber(estimatedCakeBountyRewardAsString);},[estimatedCakeBountyRewardAsString]);var totalPendingCakeHarvest=useMemo(function(){return new BigNumber(totalPendingCakeHarvestAsString);},[totalPendingCakeHarvestAsString]);var totalShares=useMemo(function(){return new BigNumber(totalSharesAsString);},[totalSharesAsString]);var pricePerFullShare=useMemo(function(){return new BigNumber(pricePerFullShareAsString);},[pricePerFullShareAsString]);var totalCakeInVault=useMemo(function(){return new BigNumber(totalCakeInVaultAsString);},[totalCakeInVaultAsString]);var userShares=useMemo(function(){return new BigNumber(userSharesAsString);},[userSharesAsString]);var cakeAtLastUserAction=useMemo(function(){return new BigNumber(cakeAtLastUserActionAsString);},[cakeAtLastUserActionAsString]);return{totalShares:totalShares,pricePerFullShare:pricePerFullShare,totalCakeInVault:totalCakeInVault,estimatedCakeBountyReward:estimatedCakeBountyReward,totalPendingCakeHarvest:totalPendingCakeHarvest,fees:{performanceFee:performanceFee,callFee:callFee,withdrawalFee:withdrawalFee,withdrawalFeePeriod:withdrawalFeePeriod},userData:{isLoading:isLoading,userShares:userShares,cakeAtLastUserAction:cakeAtLastUserAction,lastDepositedTime:lastDepositedTime,lastUserActionTime:lastUserActionTime}};};","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/state/pools/hooks.ts"],"names":["useEffect","useMemo","BigNumber","useWeb3React","useSelector","useAppDispatch","simpleRpcProvider","useRefresh","fetchPoolsPublicDataAsync","fetchPoolsUserDataAsync","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","fetchPoolsStakingLimitsAsync","transformPool","useFetchPublicPoolsData","dispatch","slowRefresh","fetchPoolsPublicData","getBlockNumber","blockNumber","useFetchUserPools","account","fastRefresh","usePools","state","pools","data","userDataLoaded","map","useFetchCakeVault","useCakeVault","cakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","userData","isLoading","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime"],"mappings":"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","sourcesContent":["import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, DeserializedPool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useFetchUserPools = (account) => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n}\n\nexport const usePools = (): { pools: DeserializedPool[]; userDataLoaded: boolean } => {\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}