{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nconst VISIBILITY_STATE_SUPPORTED = ('visibilityState' in document);\n\nfunction isWindowVisible() {\n  if (!VISIBILITY_STATE_SUPPORTED) {\n    return true;\n  }\n\n  return document.visibilityState === 'visible';\n}\n/**\n * Returns whether the window is currently visible to the user.\n */\n\n\nexport default function useIsWindowVisible() {\n  _s();\n\n  const [isVisible, setIsVisible] = useState(isWindowVisible());\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined;\n\n    const handleVisibilityChange = () => {\n      setIsVisible(isWindowVisible());\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, [setIsVisible]);\n  return isVisible;\n}\n\n_s(useIsWindowVisible, \"2HNbigW25KyQroevnL57ae39ZQ4=\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/hooks/useIsWindowVisible.ts"],"names":["useEffect","useState","VISIBILITY_STATE_SUPPORTED","document","isWindowVisible","visibilityState","useIsWindowVisible","isVisible","setIsVisible","undefined","handleVisibilityChange","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,MAAMC,0BAA0B,IAAG,qBAAqBC,QAAxB,CAAhC;;AAEA,SAASC,eAAT,GAA2B;AACzB,MAAI,CAACF,0BAAL,EAAiC;AAC/B,WAAO,IAAP;AACD;;AAED,SAAOC,QAAQ,CAACE,eAAT,KAA6B,SAApC;AACD;AAED;AACA;AACA;;;AACA,eAAe,SAASC,kBAAT,GAA8B;AAAA;;AAC3C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAACG,eAAe,EAAhB,CAA1C;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACE,0BAAL,EAAiC,OAAOO,SAAP;;AAEjC,UAAMC,sBAAsB,GAAG,MAAM;AACnCF,MAAAA,YAAY,CAACJ,eAAe,EAAhB,CAAZ;AACD,KAFD;;AAIAD,IAAAA,QAAQ,CAACQ,gBAAT,CAA0B,kBAA1B,EAA8CD,sBAA9C;AACA,WAAO,MAAM;AACXP,MAAAA,QAAQ,CAACS,mBAAT,CAA6B,kBAA7B,EAAiDF,sBAAjD;AACD,KAFD;AAGD,GAXQ,EAWN,CAACF,YAAD,CAXM,CAAT;AAaA,SAAOD,SAAP;AACD;;GAjBuBD,kB","sourcesContent":["import { useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  if (!VISIBILITY_STATE_SUPPORTED) {\n    return true\n  }\n\n  return document.visibilityState === 'visible'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible() {\n  const [isVisible, setIsVisible] = useState(isWindowVisible())\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    const handleVisibilityChange = () => {\n      setIsVisible(isWindowVisible())\n    }\n\n    document.addEventListener('visibilitychange', handleVisibilityChange)\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange)\n    }\n  }, [setIsVisible])\n\n  return isVisible\n}\n"]},"metadata":{},"sourceType":"module"}