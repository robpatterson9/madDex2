{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Lottery/components/HowToPlay.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Box, Flex, Text, Heading, useMatchBreakpoints, Link, Image } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport useTheme from 'hooks/useTheme';\nimport { BallWithNumber, MatchExampleA, MatchExampleB, PoolAllocationChart } from '../svgs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Divider = styled.div`\n  background-color: ${({\n  theme\n}) => theme.colors.cardBorder};\n  height: 1px;\n  margin: 40px 0;\n  width: 100%;\n`;\n_c = Divider;\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin-left: 8px;\n  padding: 0;\n  li {\n    margin: 0;\n    padding: 0;\n  }\n  li::before {\n    content: '•';\n    margin-right: 4px;\n    color: ${({\n  theme\n}) => theme.colors.textSubtle};\n  }\n  li::marker {\n    font-size: 12px;\n  }\n`;\n_c2 = BulletList;\nconst StepContainer = styled(Flex)`\n  gap: 24px;\n  width: 100%;\n  flex-direction: column;\n  ${({\n  theme\n}) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`;\n_c3 = StepContainer;\nconst StyledStepCard = styled(Box)`\n  display: flex;\n  align-self: baseline;\n  position: relative;\n  background: ${({\n  theme\n}) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  border-radius: ${({\n  theme\n}) => theme.radii.card};\n`;\n_c4 = StyledStepCard;\nconst StepCardInner = styled(Box)`\n  width: 100%;\n  padding: 24px;\n  background: ${({\n  theme\n}) => theme.card.background};\n  border-radius: ${({\n  theme\n}) => theme.radii.card};\n`;\n_c5 = StepCardInner;\n\nconst StepCard = ({\n  step\n}) => {\n  return /*#__PURE__*/_jsxDEV(StyledStepCard, {\n    width: \"100%\",\n    children: /*#__PURE__*/_jsxDEV(StepCardInner, {\n      height: ['200px', '180px', null, '200px'],\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        mb: \"16px\",\n        fontSize: \"12px\",\n        bold: true,\n        textAlign: \"right\",\n        textTransform: \"uppercase\",\n        children: step.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        mb: \"16px\",\n        scale: \"lg\",\n        color: \"secondary\",\n        children: step.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"textSubtle\",\n        children: step.subtitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_c6 = StepCard;\nconst BallsContainer = styled(Flex)`\n  gap: 6.5px;\n  padding-left: 7px;\n  align-items: center;\n  width: 100%;\n`;\n_c7 = BallsContainer;\nconst InlineLink = styled(Link)`\n  display: inline;\n`;\n_c8 = InlineLink;\n\nconst ExampleBalls = () => {\n  _s();\n\n  const {\n    isDesktop\n  } = useMatchBreakpoints();\n  const ballSize = isDesktop ? '24px' : '32px';\n  const fontSize = isDesktop ? '14px' : '16px';\n  return /*#__PURE__*/_jsxDEV(BallsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(BallWithNumber, {\n      size: ballSize,\n      fontSize: fontSize,\n      color: \"yellow\",\n      number: \"9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BallWithNumber, {\n      size: ballSize,\n      fontSize: fontSize,\n      color: \"green\",\n      number: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BallWithNumber, {\n      size: ballSize,\n      fontSize: fontSize,\n      color: \"aqua\",\n      number: \"3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BallWithNumber, {\n      size: ballSize,\n      fontSize: fontSize,\n      color: \"teal\",\n      number: \"6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BallWithNumber, {\n      size: ballSize,\n      fontSize: fontSize,\n      color: \"lilac\",\n      number: \"6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BallWithNumber, {\n      size: ballSize,\n      fontSize: fontSize,\n      color: \"pink\",\n      number: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExampleBalls, \"/Ak+89Tl9xWCJPZ4WVVNHDpjPv0=\", false, function () {\n  return [useMatchBreakpoints];\n});\n\n_c9 = ExampleBalls;\nconst MatchExampleContainer = styled.div`\n  height: 100%;\n  display: grid;\n  grid-template-columns: 1fr 5fr;\n  grid-template-rows: 46px 64px 64px;\n`;\n_c10 = MatchExampleContainer;\n\nconst MatchExampleCard = () => {\n  _s2();\n\n  const {\n    isDark\n  } = useTheme();\n  const {\n    isXs\n  } = useMatchBreakpoints();\n  const {\n    t\n  } = useTranslation();\n  const exampleWidth = isXs ? '210px' : '258px';\n  return /*#__PURE__*/_jsxDEV(StyledStepCard, {\n    width: ['280px', '330px', '380px'],\n    children: /*#__PURE__*/_jsxDEV(StepCardInner, {\n      height: \"220px\",\n      children: /*#__PURE__*/_jsxDEV(MatchExampleContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ExampleBalls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          lineHeight: \"72px\",\n          textAlign: \"right\",\n          color: \"secondary\",\n          bold: true,\n          mr: \"20px\",\n          children: t('A')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MatchExampleA, {\n          width: exampleWidth,\n          height: \"46px\",\n          isDark: isDark\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          lineHeight: \"72px\",\n          textAlign: \"right\",\n          color: \"secondary\",\n          bold: true,\n          mr: \"20px\",\n          children: t('B')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MatchExampleB, {\n          width: exampleWidth,\n          height: \"46px\",\n          isDark: isDark\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(MatchExampleCard, \"ltr+wrzSqVaF1gTmh9WPjuIrvdQ=\", false, function () {\n  return [useTheme, useMatchBreakpoints, useTranslation];\n});\n\n_c11 = MatchExampleCard;\nconst AllocationGrid = styled.div`\n  display: grid;\n  grid-template-columns: 4fr 1fr;\n  grid-auto-rows: max-content;\n  row-gap: 4px;\n`;\n_c12 = AllocationGrid;\nconst AllocationColorCircle = styled.div`\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  margin-right: 8px;\n  background-color: ${({\n  color\n}) => color};\n`;\n_c13 = AllocationColorCircle;\n\nconst AllocationMatch = ({\n  color,\n  text\n}) => {\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(AllocationColorCircle, {\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      color: \"textSubtle\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n\n_c14 = AllocationMatch;\n\nconst PoolAllocations = () => {\n  _s3();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(StyledStepCard, {\n    width: ['280px', '330px', '380px'],\n    children: /*#__PURE__*/_jsxDEV(StepCardInner, {\n      height: \"auto\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        mb: \"32px\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(PoolAllocationChart, {\n          width: \"100px\",\n          height: \"100px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          color: \"secondary\",\n          bold: true,\n          textTransform: \"uppercase\",\n          children: t('Digits matched')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          color: \"secondary\",\n          bold: true,\n          textAlign: \"right\",\n          textTransform: \"uppercase\",\n          children: t('Prize pool allocation')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AllocationGrid, {\n        children: [/*#__PURE__*/_jsxDEV(AllocationMatch, {\n          color: \"#FFE362\",\n          text: t('Matches first %digits%', {\n            digits: 1\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          textAlign: \"right\",\n          bold: true,\n          children: \"2%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AllocationMatch, {\n          color: \"#85C54E\",\n          text: t('Matches first %digits%', {\n            digits: 2\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          textAlign: \"right\",\n          bold: true,\n          children: \"3%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AllocationMatch, {\n          color: \"#028E75\",\n          text: t('Matches first %digits%', {\n            digits: 3\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          textAlign: \"right\",\n          bold: true,\n          children: \"5%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AllocationMatch, {\n          color: \"#36E8F5\",\n          text: t('Matches first %digits%', {\n            digits: 4\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          textAlign: \"right\",\n          bold: true,\n          children: \"10%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AllocationMatch, {\n          color: \"#A881FC\",\n          text: t('Matches first %digits%', {\n            digits: 5\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          textAlign: \"right\",\n          bold: true,\n          children: \"20%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AllocationMatch, {\n          color: \"#D750B2\",\n          text: t('Matches all 6')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          textAlign: \"right\",\n          bold: true,\n          children: \"40%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AllocationMatch, {\n          color: \"#BDC2C4\",\n          text: t('Burn Pool')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          textAlign: \"right\",\n          bold: true,\n          children: \"20%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(PoolAllocations, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c15 = PoolAllocations;\nconst GappedFlex = styled(Flex)`\n  gap: 24px;\n`;\n_c16 = GappedFlex;\n\nconst HowToPlay = () => {\n  _s4();\n\n  const {\n    t\n  } = useTranslation();\n  const steps = [{\n    label: t('Step %number%', {\n      number: 1\n    }),\n    title: t('Buy Tickets'),\n    subtitle: t('Prices are set when the round starts, equal to 5 USD in CAKE per ticket.')\n  }, {\n    label: t('Step %number%', {\n      number: 2\n    }),\n    title: t('Wait for the Draw'),\n    subtitle: t('There are two draws every day: one every 12 hours.')\n  }, {\n    label: t('Step %number%', {\n      number: 3\n    }),\n    title: t('Check for Prizes'),\n    subtitle: t('Once the round’s over, come back to the page and check to see if you’ve won!')\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: \"100%\",\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      mb: \"40px\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        mb: \"24px\",\n        scale: \"xl\",\n        color: \"secondary\",\n        children: t('How to Play')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        textAlign: \"center\",\n        children: t('If the digits on your tickets match the winning numbers in the correct order, you win a portion of the prize pool.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: t('Simple!')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StepContainer, {\n      children: steps.map(step => /*#__PURE__*/_jsxDEV(StepCard, {\n        step: step\n      }, step.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GappedFlex, {\n      flexDirection: ['column', 'column', 'column', 'row'],\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        flex: \"2\",\n        flexDirection: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          mb: \"24px\",\n          scale: \"lg\",\n          color: \"secondary\",\n          children: t('Winning Criteria')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          mb: \"24px\",\n          scale: \"md\",\n          children: t('The digits on your ticket must match in the correct order to win.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          mb: \"16px\",\n          color: \"textSubtle\",\n          children: t('Here’s an example lottery draw, with two tickets, A and B.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BulletList, {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              display: \"inline\",\n              color: \"textSubtle\",\n              children: t('Ticket A: The first 3 digits and the last 2 digits match, but the 4th digit is wrong, so this ticket only wins a “Match first 3” prize.')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              display: \"inline\",\n              color: \"textSubtle\",\n              children: t('Ticket B: Even though the last 5 digits match, the first digit is wrong, so this ticket doesn’t win a prize.')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          mt: \"16px\",\n          color: \"textSubtle\",\n          children: t('Prize brackets don’t ‘stack’: if you match the first 3 digits in order, you’ll only win prizes from the ‘Match 3’ bracket, and not from ‘Match 1’ and ‘Match 2’.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        flex: \"1\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(MatchExampleCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GappedFlex, {\n      flexDirection: ['column', 'column', 'column', 'row'],\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        flex: \"2\",\n        flexDirection: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          mb: \"24px\",\n          scale: \"lg\",\n          color: \"secondary\",\n          children: t('Prize Funds')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          color: \"textSubtle\",\n          children: t('The prizes for each lottery round come from three sources:')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          my: \"16px\",\n          scale: \"md\",\n          children: t('Ticket Purchases')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BulletList, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              display: \"inline\",\n              color: \"textSubtle\",\n              children: t('100% of the CAKE paid by people buying tickets that round goes back into the prize pools.')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          my: \"16px\",\n          scale: \"md\",\n          children: t('Rollover Prizes')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BulletList, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              display: \"inline\",\n              color: \"textSubtle\",\n              children: t('After every round, if nobody wins in one of the prize brackets, the unclaimed CAKE for that bracket rolls over into the next round and are redistributed among the prize pools.')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          my: \"16px\",\n          scale: \"md\",\n          children: t('CAKE Injections')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BulletList, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              display: \"inline\",\n              color: \"textSubtle\",\n              children: [t('An average total of 35,000 CAKE from the treasury is added to lottery rounds over the course of a week. This CAKE is of course also included in rollovers! Read more in our guide to '), /*#__PURE__*/_jsxDEV(InlineLink, {\n                href: \"https://docs.pancakeswap.finance/tokenomics/cake/cake-tokenomics\",\n                children: t('CAKE Tokenomics')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        flex: \"1\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(PoolAllocations, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: ['column', 'column', 'row'],\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        width: 240,\n        height: 172,\n        src: \"/images/lottery/tombola.png\",\n        alt: \"tombola bunny\",\n        mr: \"8px\",\n        mb: \"16px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        maxWidth: \"300px\",\n        flexDirection: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          mb: \"16px\",\n          scale: \"md\",\n          children: t('Still got questions?')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [t('Check our in-depth guide on'), ' ', /*#__PURE__*/_jsxDEV(InlineLink, {\n            href: \"https://docs.pancakeswap.finance/products/lottery/lottery-guide\",\n            children: t('how to play the PancakeSwap lottery!')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(HowToPlay, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c17 = HowToPlay;\nexport default HowToPlay;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17;\n\n$RefreshReg$(_c, \"Divider\");\n$RefreshReg$(_c2, \"BulletList\");\n$RefreshReg$(_c3, \"StepContainer\");\n$RefreshReg$(_c4, \"StyledStepCard\");\n$RefreshReg$(_c5, \"StepCardInner\");\n$RefreshReg$(_c6, \"StepCard\");\n$RefreshReg$(_c7, \"BallsContainer\");\n$RefreshReg$(_c8, \"InlineLink\");\n$RefreshReg$(_c9, \"ExampleBalls\");\n$RefreshReg$(_c10, \"MatchExampleContainer\");\n$RefreshReg$(_c11, \"MatchExampleCard\");\n$RefreshReg$(_c12, \"AllocationGrid\");\n$RefreshReg$(_c13, \"AllocationColorCircle\");\n$RefreshReg$(_c14, \"AllocationMatch\");\n$RefreshReg$(_c15, \"PoolAllocations\");\n$RefreshReg$(_c16, \"GappedFlex\");\n$RefreshReg$(_c17, \"HowToPlay\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Lottery/components/HowToPlay.tsx"],"names":["React","styled","Box","Flex","Text","Heading","useMatchBreakpoints","Link","Image","useTranslation","useTheme","BallWithNumber","MatchExampleA","MatchExampleB","PoolAllocationChart","Divider","div","theme","colors","cardBorder","BulletList","ul","textSubtle","StepContainer","mediaQueries","md","StyledStepCard","radii","card","StepCardInner","background","StepCard","step","label","title","subtitle","BallsContainer","InlineLink","ExampleBalls","isDesktop","ballSize","fontSize","MatchExampleContainer","MatchExampleCard","isDark","isXs","t","exampleWidth","AllocationGrid","AllocationColorCircle","color","AllocationMatch","text","PoolAllocations","digits","GappedFlex","HowToPlay","steps","number","map"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Text, Heading, useMatchBreakpoints, Link, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { BallWithNumber, MatchExampleA, MatchExampleB, PoolAllocationChart } from '../svgs'\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  height: 1px;\n  margin: 40px 0;\n  width: 100%;\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin-left: 8px;\n  padding: 0;\n  li {\n    margin: 0;\n    padding: 0;\n  }\n  li::before {\n    content: '•';\n    margin-right: 4px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n  li::marker {\n    font-size: 12px;\n  }\n`\n\nconst StepContainer = styled(Flex)`\n  gap: 24px;\n  width: 100%;\n  flex-direction: column;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nconst StyledStepCard = styled(Box)`\n  display: flex;\n  align-self: baseline;\n  position: relative;\n  background: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  border-radius: ${({ theme }) => theme.radii.card};\n`\n\nconst StepCardInner = styled(Box)`\n  width: 100%;\n  padding: 24px;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: ${({ theme }) => theme.radii.card};\n`\n\ntype Step = { title: string; subtitle: string; label: string }\n\nconst StepCard: React.FC<{ step: Step }> = ({ step }) => {\n  return (\n    <StyledStepCard width=\"100%\">\n      <StepCardInner height={['200px', '180px', null, '200px']}>\n        <Text mb=\"16px\" fontSize=\"12px\" bold textAlign=\"right\" textTransform=\"uppercase\">\n          {step.label}\n        </Text>\n        <Heading mb=\"16px\" scale=\"lg\" color=\"secondary\">\n          {step.title}\n        </Heading>\n        <Text color=\"textSubtle\">{step.subtitle}</Text>\n      </StepCardInner>\n    </StyledStepCard>\n  )\n}\n\nconst BallsContainer = styled(Flex)`\n  gap: 6.5px;\n  padding-left: 7px;\n  align-items: center;\n  width: 100%;\n`\n\nconst InlineLink = styled(Link)`\n  display: inline;\n`\n\nconst ExampleBalls = () => {\n  const { isDesktop } = useMatchBreakpoints()\n  const ballSize = isDesktop ? '24px' : '32px'\n  const fontSize = isDesktop ? '14px' : '16px'\n  return (\n    <BallsContainer>\n      <BallWithNumber size={ballSize} fontSize={fontSize} color=\"yellow\" number=\"9\" />\n      <BallWithNumber size={ballSize} fontSize={fontSize} color=\"green\" number=\"1\" />\n      <BallWithNumber size={ballSize} fontSize={fontSize} color=\"aqua\" number=\"3\" />\n      <BallWithNumber size={ballSize} fontSize={fontSize} color=\"teal\" number=\"6\" />\n      <BallWithNumber size={ballSize} fontSize={fontSize} color=\"lilac\" number=\"6\" />\n      <BallWithNumber size={ballSize} fontSize={fontSize} color=\"pink\" number=\"2\" />\n    </BallsContainer>\n  )\n}\n\nconst MatchExampleContainer = styled.div`\n  height: 100%;\n  display: grid;\n  grid-template-columns: 1fr 5fr;\n  grid-template-rows: 46px 64px 64px;\n`\n\nconst MatchExampleCard = () => {\n  const { isDark } = useTheme()\n  const { isXs } = useMatchBreakpoints()\n  const { t } = useTranslation()\n  const exampleWidth = isXs ? '210px' : '258px'\n  return (\n    <StyledStepCard width={['280px', '330px', '380px']}>\n      <StepCardInner height=\"220px\">\n        <MatchExampleContainer>\n          <Box />\n          <ExampleBalls />\n          <Text lineHeight=\"72px\" textAlign=\"right\" color=\"secondary\" bold mr=\"20px\">\n            {t('A')}\n          </Text>\n          <MatchExampleA width={exampleWidth} height=\"46px\" isDark={isDark} />\n          <Text lineHeight=\"72px\" textAlign=\"right\" color=\"secondary\" bold mr=\"20px\">\n            {t('B')}\n          </Text>\n          <MatchExampleB width={exampleWidth} height=\"46px\" isDark={isDark} />\n        </MatchExampleContainer>\n      </StepCardInner>\n    </StyledStepCard>\n  )\n}\n\nconst AllocationGrid = styled.div`\n  display: grid;\n  grid-template-columns: 4fr 1fr;\n  grid-auto-rows: max-content;\n  row-gap: 4px;\n`\n\nconst AllocationColorCircle = styled.div<{ color: string }>`\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  margin-right: 8px;\n  background-color: ${({ color }) => color};\n`\n\nconst AllocationMatch: React.FC<{ color: string; text: string }> = ({ color, text }) => {\n  return (\n    <Flex alignItems=\"center\">\n      <AllocationColorCircle color={color} />\n      <Text color=\"textSubtle\">{text}</Text>\n    </Flex>\n  )\n}\n\nconst PoolAllocations = () => {\n  const { t } = useTranslation()\n  return (\n    <StyledStepCard width={['280px', '330px', '380px']}>\n      <StepCardInner height=\"auto\">\n        <Flex mb=\"32px\" justifyContent=\"center\">\n          <PoolAllocationChart width=\"100px\" height=\"100px\" />\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\n            {t('Digits matched')}\n          </Text>\n          <Text fontSize=\"12px\" color=\"secondary\" bold textAlign=\"right\" textTransform=\"uppercase\">\n            {t('Prize pool allocation')}\n          </Text>\n        </Flex>\n        <AllocationGrid>\n          <AllocationMatch color=\"#FFE362\" text={t('Matches first %digits%', { digits: 1 })} />\n          <Text textAlign=\"right\" bold>\n            2%\n          </Text>\n          <AllocationMatch color=\"#85C54E\" text={t('Matches first %digits%', { digits: 2 })} />\n          <Text textAlign=\"right\" bold>\n            3%\n          </Text>\n          <AllocationMatch color=\"#028E75\" text={t('Matches first %digits%', { digits: 3 })} />\n          <Text textAlign=\"right\" bold>\n            5%\n          </Text>\n          <AllocationMatch color=\"#36E8F5\" text={t('Matches first %digits%', { digits: 4 })} />\n          <Text textAlign=\"right\" bold>\n            10%\n          </Text>\n          <AllocationMatch color=\"#A881FC\" text={t('Matches first %digits%', { digits: 5 })} />\n          <Text textAlign=\"right\" bold>\n            20%\n          </Text>\n          <AllocationMatch color=\"#D750B2\" text={t('Matches all 6')} />\n          <Text textAlign=\"right\" bold>\n            40%\n          </Text>\n          <AllocationMatch color=\"#BDC2C4\" text={t('Burn Pool')} />\n          <Text textAlign=\"right\" bold>\n            20%\n          </Text>\n        </AllocationGrid>\n      </StepCardInner>\n    </StyledStepCard>\n  )\n}\n\nconst GappedFlex = styled(Flex)`\n  gap: 24px;\n`\n\nconst HowToPlay: React.FC = () => {\n  const { t } = useTranslation()\n\n  const steps: Step[] = [\n    {\n      label: t('Step %number%', { number: 1 }),\n      title: t('Buy Tickets'),\n      subtitle: t('Prices are set when the round starts, equal to 5 USD in CAKE per ticket.'),\n    },\n    {\n      label: t('Step %number%', { number: 2 }),\n      title: t('Wait for the Draw'),\n      subtitle: t('There are two draws every day: one every 12 hours.'),\n    },\n    {\n      label: t('Step %number%', { number: 3 }),\n      title: t('Check for Prizes'),\n      subtitle: t('Once the round’s over, come back to the page and check to see if you’ve won!'),\n    },\n  ]\n  return (\n    <Box width=\"100%\">\n      <Flex mb=\"40px\" alignItems=\"center\" flexDirection=\"column\">\n        <Heading mb=\"24px\" scale=\"xl\" color=\"secondary\">\n          {t('How to Play')}\n        </Heading>\n        <Text textAlign=\"center\">\n          {t(\n            'If the digits on your tickets match the winning numbers in the correct order, you win a portion of the prize pool.',\n          )}\n        </Text>\n        <Text>{t('Simple!')}</Text>\n      </Flex>\n      <StepContainer>\n        {steps.map((step) => (\n          <StepCard key={step.label} step={step} />\n        ))}\n      </StepContainer>\n      <Divider />\n      <GappedFlex flexDirection={['column', 'column', 'column', 'row']}>\n        <Flex flex=\"2\" flexDirection=\"column\">\n          <Heading mb=\"24px\" scale=\"lg\" color=\"secondary\">\n            {t('Winning Criteria')}\n          </Heading>\n          <Heading mb=\"24px\" scale=\"md\">\n            {t('The digits on your ticket must match in the correct order to win.')}\n          </Heading>\n          <Text mb=\"16px\" color=\"textSubtle\">\n            {t('Here’s an example lottery draw, with two tickets, A and B.')}\n          </Text>\n          <BulletList>\n            <li>\n              <Text display=\"inline\" color=\"textSubtle\">\n                {t(\n                  'Ticket A: The first 3 digits and the last 2 digits match, but the 4th digit is wrong, so this ticket only wins a “Match first 3” prize.',\n                )}\n              </Text>\n            </li>\n            <li>\n              <Text display=\"inline\" color=\"textSubtle\">\n                {t(\n                  'Ticket B: Even though the last 5 digits match, the first digit is wrong, so this ticket doesn’t win a prize.',\n                )}\n              </Text>\n            </li>\n          </BulletList>\n          <Text mt=\"16px\" color=\"textSubtle\">\n            {t(\n              'Prize brackets don’t ‘stack’: if you match the first 3 digits in order, you’ll only win prizes from the ‘Match 3’ bracket, and not from ‘Match 1’ and ‘Match 2’.',\n            )}\n          </Text>\n        </Flex>\n        <Flex flex=\"1\" justifyContent=\"center\">\n          <MatchExampleCard />\n        </Flex>\n      </GappedFlex>\n      <Divider />\n      <GappedFlex flexDirection={['column', 'column', 'column', 'row']}>\n        <Flex flex=\"2\" flexDirection=\"column\">\n          <Heading mb=\"24px\" scale=\"lg\" color=\"secondary\">\n            {t('Prize Funds')}\n          </Heading>\n          <Text color=\"textSubtle\">{t('The prizes for each lottery round come from three sources:')}</Text>\n          <Heading my=\"16px\" scale=\"md\">\n            {t('Ticket Purchases')}\n          </Heading>\n          <BulletList>\n            <li>\n              <Text display=\"inline\" color=\"textSubtle\">\n                {t('100% of the CAKE paid by people buying tickets that round goes back into the prize pools.')}\n              </Text>\n            </li>\n          </BulletList>\n          <Heading my=\"16px\" scale=\"md\">\n            {t('Rollover Prizes')}\n          </Heading>\n          <BulletList>\n            <li>\n              <Text display=\"inline\" color=\"textSubtle\">\n                {t(\n                  'After every round, if nobody wins in one of the prize brackets, the unclaimed CAKE for that bracket rolls over into the next round and are redistributed among the prize pools.',\n                )}\n              </Text>\n            </li>\n          </BulletList>\n          <Heading my=\"16px\" scale=\"md\">\n            {t('CAKE Injections')}\n          </Heading>\n          <BulletList>\n            <li>\n              <Text display=\"inline\" color=\"textSubtle\">\n                {t(\n                  'An average total of 35,000 CAKE from the treasury is added to lottery rounds over the course of a week. This CAKE is of course also included in rollovers! Read more in our guide to ',\n                )}\n                <InlineLink href=\"https://docs.pancakeswap.finance/tokenomics/cake/cake-tokenomics\">\n                  {t('CAKE Tokenomics')}\n                </InlineLink>\n              </Text>\n            </li>\n          </BulletList>\n        </Flex>\n        <Flex flex=\"1\" justifyContent=\"center\">\n          <PoolAllocations />\n        </Flex>\n      </GappedFlex>\n      <Divider />\n      <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection={['column', 'column', 'row']}>\n        <Image width={240} height={172} src=\"/images/lottery/tombola.png\" alt=\"tombola bunny\" mr=\"8px\" mb=\"16px\" />\n        <Flex maxWidth=\"300px\" flexDirection=\"column\">\n          <Heading mb=\"16px\" scale=\"md\">\n            {t('Still got questions?')}\n          </Heading>\n          <Text>\n            {t('Check our in-depth guide on')}{' '}\n            <InlineLink href=\"https://docs.pancakeswap.finance/products/lottery/lottery-guide\">\n              {t('how to play the PancakeSwap lottery!')}\n            </InlineLink>\n          </Text>\n        </Flex>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default HowToPlay\n"]},"metadata":{},"sourceType":"module"}