{"ast":null,"code":"import React from'react';import{CheckmarkCircleIcon,CheckmarkCircleFillIcon,Tag,useTooltip}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{formatBnbv2}from'../../helpers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var EnteredTag=function EnteredTag(_ref){var amount=_ref.amount,_ref$hasClaimed=_ref.hasClaimed,hasClaimed=_ref$hasClaimed===void 0?false:_ref$hasClaimed;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useTooltip=useTooltip(/*#__PURE__*/_jsx(\"div\",{style:{whiteSpace:'nowrap'},children:\"\".concat(formatBnbv2(amount),\" BNB\")}),{placement:'bottom'}),targetRef=_useTooltip.targetRef,tooltipVisible=_useTooltip.tooltipVisible,tooltip=_useTooltip.tooltip;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"span\",{ref:targetRef,children:[/*#__PURE__*/_jsx(Tag,{variant:\"secondary\",fontWeight:\"bold\",textTransform:\"uppercase\",outline:!hasClaimed,startIcon:hasClaimed?/*#__PURE__*/_jsx(CheckmarkCircleFillIcon,{width:\"18px\"}):/*#__PURE__*/_jsx(CheckmarkCircleIcon,{width:\"18px\"}),children:hasClaimed?t('Claimed'):t('Entered')}),' ']}),' ',tooltipVisible&&tooltip]});};export default EnteredTag;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/RoundCard/EnteredTag.tsx"],"names":["React","CheckmarkCircleIcon","CheckmarkCircleFillIcon","Tag","useTooltip","useTranslation","formatBnbv2","EnteredTag","amount","hasClaimed","t","whiteSpace","placement","targetRef","tooltipVisible","tooltip"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,mBAAT,CAA8BC,uBAA9B,CAAuDC,GAAvD,CAA4DC,UAA5D,KAA8E,oBAA9E,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,WAAT,KAA4B,eAA5B,C,6IAOA,GAAMC,CAAAA,UAAqC,CAAG,QAAxCA,CAAAA,UAAwC,MAAoC,IAAjCC,CAAAA,MAAiC,MAAjCA,MAAiC,sBAAzBC,UAAyB,CAAzBA,UAAyB,0BAAZ,KAAY,iBAChF,oBAAcJ,cAAc,EAA5B,CAAQK,CAAR,iBAAQA,CAAR,CACA,gBAA+CN,UAAU,cACvD,YAAK,KAAK,CAAE,CAAEO,UAAU,CAAE,QAAd,CAAZ,oBAA0CL,WAAW,CAACE,MAAD,CAArD,UADuD,CAEvD,CAAEI,SAAS,CAAE,QAAb,CAFuD,CAAzD,CAAQC,SAAR,aAAQA,SAAR,CAAmBC,cAAnB,aAAmBA,cAAnB,CAAmCC,OAAnC,aAAmCA,OAAnC,CAKA,mBACE,wCACE,cAAM,GAAG,CAAEF,SAAX,wBACE,KAAC,GAAD,EACE,OAAO,CAAC,WADV,CAEE,UAAU,CAAC,MAFb,CAGE,aAAa,CAAC,WAHhB,CAIE,OAAO,CAAE,CAACJ,UAJZ,CAKE,SAAS,CAAEA,UAAU,cAAG,KAAC,uBAAD,EAAyB,KAAK,CAAC,MAA/B,EAAH,cAA8C,KAAC,mBAAD,EAAqB,KAAK,CAAC,MAA3B,EALrE,UAOGA,UAAU,CAAGC,CAAC,CAAC,SAAD,CAAJ,CAAkBA,CAAC,CAAC,SAAD,CAPhC,EADF,CASS,GATT,GADF,CAWU,GAXV,CAYGI,cAAc,EAAIC,OAZrB,GADF,CAgBD,CAvBD,CAyBA,cAAeR,CAAAA,UAAf","sourcesContent":["import React from 'react'\nimport { ethers } from 'ethers'\nimport { CheckmarkCircleIcon, CheckmarkCircleFillIcon, Tag, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { formatBnbv2 } from '../../helpers'\n\ninterface EnteredTagProps {\n  amount?: ethers.BigNumber\n  hasClaimed?: boolean\n}\n\nconst EnteredTag: React.FC<EnteredTagProps> = ({ amount, hasClaimed = false }) => {\n  const { t } = useTranslation()\n  const { targetRef, tooltipVisible, tooltip } = useTooltip(\n    <div style={{ whiteSpace: 'nowrap' }}>{`${formatBnbv2(amount)} BNB`}</div>,\n    { placement: 'bottom' },\n  )\n\n  return (\n    <>\n      <span ref={targetRef}>\n        <Tag\n          variant=\"secondary\"\n          fontWeight=\"bold\"\n          textTransform=\"uppercase\"\n          outline={!hasClaimed}\n          startIcon={hasClaimed ? <CheckmarkCircleFillIcon width=\"18px\" /> : <CheckmarkCircleIcon width=\"18px\" />}\n        >\n          {hasClaimed ? t('Claimed') : t('Entered')}\n        </Tag>{' '}\n      </span>{' '}\n      {tooltipVisible && tooltip}\n    </>\n  )\n}\n\nexport default EnteredTag\n"]},"metadata":{},"sourceType":"module"}