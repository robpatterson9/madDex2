{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useEffect,useReducer}from'react';import{useWeb3React}from'@web3-react/core';import{useFarmAuctionContract}from'hooks/useContract';import{RECLAIM_AUCTIONS_TO_FETCH}from'config';import{processBidderAuctions,sortAuctionBidders}from'../helpers';var initialState={auctions:[],currentCursor:0,nextCursor:0,nextAuctionToCheck:0,auctionToReclaim:null,loading:false};var reclaimReducer=function reclaimReducer(state,action){switch(action.type){case'setAuctions':return{auctions:action.payload.auctions,currentCursor:state.currentCursor,nextCursor:action.payload.nextCursor,nextAuctionToCheck:0,auctionToReclaim:null,loading:false};case'setAuctionToReclaim':return _objectSpread(_objectSpread({},state),{},{auctionToReclaim:action.payload.auctionToReclaim,loading:false});case'checkNextAuction':{var nextAuctionToCheck=state.nextAuctionToCheck+1;if(nextAuctionToCheck===state.auctions.length){// Checked all auctions in the batch\nreturn _objectSpread(_objectSpread({},state),{},{auctions:[],currentCursor:state.nextCursor,auctionToReclaim:null,loading:false});}return _objectSpread(_objectSpread({},state),{},{nextAuctionToCheck:nextAuctionToCheck,auctionToReclaim:null,loading:false});}case'setLoading':return _objectSpread(_objectSpread({},state),{},{loading:action.payload.loading});case'reset':return initialState;default:return state;}};/**\n * This hook checks if user has participated in previous auctions and has some bids to claim back.\n */var useReclaimAuctionBid=function useReclaimAuctionBid(){var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useReducer=useReducer(reclaimReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var farmAuctionContract=useFarmAuctionContract();var checkNextAuction=function checkNextAuction(){dispatch({type:'checkNextAuction'});};// Reset checking if account was switched\nuseEffect(function(){dispatch({type:'reset'});},[account]);// Fetch auction data for auctions account has participated\nuseEffect(function(){var fetchBidderAuctions=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var bidderAuctionsResponse,_processBidderAuction,auctions,nextCursor;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch({type:'setLoading',payload:{loading:true}});_context.next=4;return farmAuctionContract.viewBidderAuctions(account,state.currentCursor,RECLAIM_AUCTIONS_TO_FETCH);case 4:bidderAuctionsResponse=_context.sent;_processBidderAuction=processBidderAuctions(bidderAuctionsResponse),auctions=_processBidderAuction.auctions,nextCursor=_processBidderAuction.nextCursor;if(auctions.length>0){dispatch({type:'setAuctions',payload:{auctions:auctions,nextCursor:nextCursor}});}_context.next=13;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.error('Failed to fetch auctions for bidder',_context.t0);dispatch({type:'setLoading',payload:{loading:false}});case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function fetchBidderAuctions(){return _ref.apply(this,arguments);};}();if(!state.loading&&account&&state.currentCursor===state.nextCursor){fetchBidderAuctions();}},[account,state,farmAuctionContract]);useEffect(function(){var checkIfAuctionIsClaimable=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(auctionToCheck){var isClaimable,_yield$farmAuctionCon,_yield$farmAuctionCon2,auctionBidders,sortedBidders,accountBidderData,position,auctionToReclaim;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch({type:'setLoading',payload:{loading:true}});_context2.prev=1;_context2.next=4;return farmAuctionContract.claimable(auctionToCheck.id,account);case 4:isClaimable=_context2.sent;if(!isClaimable){_context2.next=18;break;}_context2.next=8;return farmAuctionContract.viewBidsPerAuction(auctionToCheck.id,0,500);case 8:_yield$farmAuctionCon=_context2.sent;_yield$farmAuctionCon2=_slicedToArray(_yield$farmAuctionCon,1);auctionBidders=_yield$farmAuctionCon2[0];sortedBidders=sortAuctionBidders(auctionBidders);accountBidderData=sortedBidders.find(function(bidder){return bidder.account===account;});position=accountBidderData===null||accountBidderData===void 0?void 0:accountBidderData.position;auctionToReclaim={id:auctionToCheck.id,amount:auctionToCheck.amount,position:position};dispatch({type:'setAuctionToReclaim',payload:{auctionToReclaim:auctionToReclaim}});_context2.next=19;break;case 18:dispatch({type:'checkNextAuction'});case 19:_context2.next=25;break;case 21:_context2.prev=21;_context2.t0=_context2[\"catch\"](1);dispatch({type:'setLoading',payload:{loading:false}});console.error('Failed to check for unclaim bids',_context2.t0);case 25:case\"end\":return _context2.stop();}}},_callee2,null,[[1,21]]);}));return function checkIfAuctionIsClaimable(_x){return _ref2.apply(this,arguments);};}();var auctions=state.auctions,nextAuctionToCheck=state.nextAuctionToCheck,loading=state.loading;if(auctions.length>0&&account&&!loading){var auctionToCheck=auctions[nextAuctionToCheck];checkIfAuctionIsClaimable(auctionToCheck);}},[account,state,farmAuctionContract]);return[state.auctionToReclaim,checkNextAuction];};export default useReclaimAuctionBid;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/FarmAuction/hooks/useReclaimAuctionBid.ts"],"names":["useEffect","useReducer","useWeb3React","useFarmAuctionContract","RECLAIM_AUCTIONS_TO_FETCH","processBidderAuctions","sortAuctionBidders","initialState","auctions","currentCursor","nextCursor","nextAuctionToCheck","auctionToReclaim","loading","reclaimReducer","state","action","type","payload","length","useReclaimAuctionBid","account","dispatch","farmAuctionContract","checkNextAuction","fetchBidderAuctions","viewBidderAuctions","bidderAuctionsResponse","console","error","checkIfAuctionIsClaimable","auctionToCheck","claimable","id","isClaimable","viewBidsPerAuction","auctionBidders","sortedBidders","accountBidderData","find","bidder","position","amount"],"mappings":"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","sourcesContent":["import { useEffect, useReducer } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BidderAuction } from 'config/constants/types'\nimport { useFarmAuctionContract } from 'hooks/useContract'\nimport { RECLAIM_AUCTIONS_TO_FETCH } from 'config'\nimport { processBidderAuctions, sortAuctionBidders } from '../helpers'\n\ninterface ReclaimableAuction {\n  id: number\n  amount: BigNumber\n  position: number\n}\n\ninterface ReclaimReducerState {\n  auctions: BidderAuction[]\n  currentCursor: number\n  nextCursor: number\n  nextAuctionToCheck: number // nextAuctionToCheck is array index in auctions\n  auctionToReclaim: ReclaimableAuction | null\n  loading: boolean\n}\n\nconst initialState: ReclaimReducerState = {\n  auctions: [],\n  currentCursor: 0,\n  nextCursor: 0,\n  nextAuctionToCheck: 0,\n  auctionToReclaim: null,\n  loading: false,\n}\n\nconst reclaimReducer = (state: ReclaimReducerState, action: { type: string; payload?: any }): ReclaimReducerState => {\n  switch (action.type) {\n    case 'setAuctions':\n      return {\n        auctions: action.payload.auctions,\n        currentCursor: state.currentCursor,\n        nextCursor: action.payload.nextCursor,\n        nextAuctionToCheck: 0,\n        auctionToReclaim: null,\n        loading: false,\n      }\n    case 'setAuctionToReclaim':\n      return {\n        ...state,\n        auctionToReclaim: action.payload.auctionToReclaim,\n        loading: false,\n      }\n    case 'checkNextAuction': {\n      const nextAuctionToCheck = state.nextAuctionToCheck + 1\n      if (nextAuctionToCheck === state.auctions.length) {\n        // Checked all auctions in the batch\n        return {\n          ...state,\n          auctions: [],\n          currentCursor: state.nextCursor,\n          auctionToReclaim: null,\n          loading: false,\n        }\n      }\n      return {\n        ...state,\n        nextAuctionToCheck,\n        auctionToReclaim: null,\n        loading: false,\n      }\n    }\n    case 'setLoading':\n      return { ...state, loading: action.payload.loading }\n    case 'reset':\n      return initialState\n    default:\n      return state\n  }\n}\n\n/**\n * This hook checks if user has participated in previous auctions and has some bids to claim back.\n */\nconst useReclaimAuctionBid = (): [ReclaimableAuction | null, () => void] => {\n  const { account } = useWeb3React()\n\n  const [state, dispatch] = useReducer(reclaimReducer, initialState)\n\n  const farmAuctionContract = useFarmAuctionContract()\n\n  const checkNextAuction = () => {\n    dispatch({ type: 'checkNextAuction' })\n  }\n\n  // Reset checking if account was switched\n  useEffect(() => {\n    dispatch({ type: 'reset' })\n  }, [account])\n\n  // Fetch auction data for auctions account has participated\n  useEffect(() => {\n    const fetchBidderAuctions = async () => {\n      try {\n        dispatch({ type: 'setLoading', payload: { loading: true } })\n\n        const bidderAuctionsResponse = await farmAuctionContract.viewBidderAuctions(\n          account,\n          state.currentCursor,\n          RECLAIM_AUCTIONS_TO_FETCH,\n        )\n\n        const { auctions, nextCursor } = processBidderAuctions(bidderAuctionsResponse)\n        if (auctions.length > 0) {\n          dispatch({ type: 'setAuctions', payload: { auctions, nextCursor } })\n        }\n      } catch (error) {\n        console.error('Failed to fetch auctions for bidder', error)\n        dispatch({ type: 'setLoading', payload: { loading: false } })\n      }\n    }\n\n    if (!state.loading && account && state.currentCursor === state.nextCursor) {\n      fetchBidderAuctions()\n    }\n  }, [account, state, farmAuctionContract])\n\n  useEffect(() => {\n    const checkIfAuctionIsClaimable = async (auctionToCheck: BidderAuction) => {\n      dispatch({ type: 'setLoading', payload: { loading: true } })\n      try {\n        const isClaimable = await farmAuctionContract.claimable(auctionToCheck.id, account)\n        if (isClaimable) {\n          const [auctionBidders] = await farmAuctionContract.viewBidsPerAuction(auctionToCheck.id, 0, 500)\n          const sortedBidders = sortAuctionBidders(auctionBidders)\n          const accountBidderData = sortedBidders.find((bidder) => bidder.account === account)\n          const position = accountBidderData?.position\n          const auctionToReclaim = { id: auctionToCheck.id, amount: auctionToCheck.amount, position }\n          dispatch({ type: 'setAuctionToReclaim', payload: { auctionToReclaim } })\n        } else {\n          dispatch({ type: 'checkNextAuction' })\n        }\n      } catch (error) {\n        dispatch({ type: 'setLoading', payload: { loading: false } })\n        console.error('Failed to check for unclaim bids', error)\n      }\n    }\n    const { auctions, nextAuctionToCheck, loading } = state\n    if (auctions.length > 0 && account && !loading) {\n      const auctionToCheck = auctions[nextAuctionToCheck]\n      checkIfAuctionIsClaimable(auctionToCheck)\n    }\n  }, [account, state, farmAuctionContract])\n\n  return [state.auctionToReclaim, checkNextAuction]\n}\n\nexport default useReclaimAuctionBid\n"]},"metadata":{},"sourceType":"module"}