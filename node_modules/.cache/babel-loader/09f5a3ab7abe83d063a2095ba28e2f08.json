{"ast":null,"code":"import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import{Text}from'@pancakeswap/uikit';import{toDate,format}from'date-fns';import{useTranslation}from'contexts/Localization';import{ProposalState}from'state/types';import{jsx as _jsx}from\"react/jsx-runtime\";var getFormattedDate=function getFormattedDate(timestamp){var date=toDate(timestamp*1000);return format(date,'MMM do, yyyy HH:mm');};var TimeFrame=function TimeFrame(_ref){var startDate=_ref.startDate,endDate=_ref.endDate,proposalState=_ref.proposalState;var _useTranslation=useTranslation(),t=_useTranslation.t;var textProps={fontSize:'16px',color:'textSubtle',ml:'8px'};if(proposalState===ProposalState.CLOSED){return/*#__PURE__*/_jsx(Text,_objectSpread(_objectSpread({},textProps),{},{children:t('Ended %date%',{date:getFormattedDate(endDate)})}));}if(proposalState===ProposalState.PENDING){return/*#__PURE__*/_jsx(Text,_objectSpread(_objectSpread({},textProps),{},{children:t('Starts %date%',{date:getFormattedDate(startDate)})}));}return/*#__PURE__*/_jsx(Text,_objectSpread(_objectSpread({},textProps),{},{children:t('Ends %date%',{date:getFormattedDate(endDate)})}));};export default TimeFrame;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Voting/components/Proposals/TimeFrame.tsx"],"names":["React","Text","toDate","format","useTranslation","ProposalState","getFormattedDate","timestamp","date","TimeFrame","startDate","endDate","proposalState","t","textProps","fontSize","color","ml","CLOSED","PENDING"],"mappings":"uJAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,oBAArB,CACA,OAASC,MAAT,CAAiBC,MAAjB,KAA+B,UAA/B,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,aAAT,KAA8B,aAA9B,C,2CAQA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,SAAD,CAAuB,CAC9C,GAAMC,CAAAA,IAAI,CAAGN,MAAM,CAACK,SAAS,CAAG,IAAb,CAAnB,CACA,MAAOJ,CAAAA,MAAM,CAACK,IAAD,CAAO,oBAAP,CAAb,CACD,CAHD,CAKA,GAAMC,CAAAA,SAAmC,CAAG,QAAtCA,CAAAA,SAAsC,MAA2C,IAAxCC,CAAAA,SAAwC,MAAxCA,SAAwC,CAA7BC,OAA6B,MAA7BA,OAA6B,CAApBC,aAAoB,MAApBA,aAAoB,CACrF,oBAAcR,cAAc,EAA5B,CAAQS,CAAR,iBAAQA,CAAR,CACA,GAAMC,CAAAA,SAAS,CAAG,CAChBC,QAAQ,CAAE,MADM,CAEhBC,KAAK,CAAE,YAFS,CAGhBC,EAAE,CAAE,KAHY,CAAlB,CAMA,GAAIL,aAAa,GAAKP,aAAa,CAACa,MAApC,CAA4C,CAC1C,mBAAO,KAAC,IAAD,gCAAUJ,SAAV,eAAsBD,CAAC,CAAC,cAAD,CAAiB,CAAEL,IAAI,CAAEF,gBAAgB,CAACK,OAAD,CAAxB,CAAjB,CAAvB,GAAP,CACD,CAED,GAAIC,aAAa,GAAKP,aAAa,CAACc,OAApC,CAA6C,CAC3C,mBAAO,KAAC,IAAD,gCAAUL,SAAV,eAAsBD,CAAC,CAAC,eAAD,CAAkB,CAAEL,IAAI,CAAEF,gBAAgB,CAACI,SAAD,CAAxB,CAAlB,CAAvB,GAAP,CACD,CAED,mBAAO,KAAC,IAAD,gCAAUI,SAAV,eAAsBD,CAAC,CAAC,aAAD,CAAgB,CAAEL,IAAI,CAAEF,gBAAgB,CAACK,OAAD,CAAxB,CAAhB,CAAvB,GAAP,CACD,CAjBD,CAmBA,cAAeF,CAAAA,SAAf","sourcesContent":["import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { toDate, format } from 'date-fns'\nimport { useTranslation } from 'contexts/Localization'\nimport { ProposalState } from 'state/types'\n\ninterface TimeFrameProps {\n  startDate: number\n  endDate: number\n  proposalState: ProposalState\n}\n\nconst getFormattedDate = (timestamp: number) => {\n  const date = toDate(timestamp * 1000)\n  return format(date, 'MMM do, yyyy HH:mm')\n}\n\nconst TimeFrame: React.FC<TimeFrameProps> = ({ startDate, endDate, proposalState }) => {\n  const { t } = useTranslation()\n  const textProps = {\n    fontSize: '16px',\n    color: 'textSubtle',\n    ml: '8px',\n  }\n\n  if (proposalState === ProposalState.CLOSED) {\n    return <Text {...textProps}>{t('Ended %date%', { date: getFormattedDate(endDate) })}</Text>\n  }\n\n  if (proposalState === ProposalState.PENDING) {\n    return <Text {...textProps}>{t('Starts %date%', { date: getFormattedDate(startDate) })}</Text>\n  }\n\n  return <Text {...textProps}>{t('Ends %date%', { date: getFormattedDate(endDate) })}</Text>\n}\n\nexport default TimeFrame\n"]},"metadata":{},"sourceType":"module"}