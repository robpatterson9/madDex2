{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{createContext,useEffect,useMemo,useReducer}from'react';import{useWeb3React}from'@web3-react/core';import{getBunnyFactoryContract}from'utils/contractHelpers';import{MINT_COST,REGISTER_COST,ALLOWANCE_MULTIPLIER}from'../config';import{jsx as _jsx}from\"react/jsx-runtime\";var totalCost=MINT_COST.add(REGISTER_COST);var allowance=totalCost.mul(ALLOWANCE_MULTIPLIER);var initialState={isInitialized:false,currentStep:0,teamId:null,selectedNft:{collectionAddress:null,tokenId:null},userName:'',minimumCakeRequired:totalCost,allowance:allowance};var reducer=function reducer(state,action){switch(action.type){case'initialize':return _objectSpread(_objectSpread({},state),{},{isInitialized:true,currentStep:action.step});case'next_step':return _objectSpread(_objectSpread({},state),{},{currentStep:state.currentStep+1});case'set_team':return _objectSpread(_objectSpread({},state),{},{teamId:action.teamId});case'set_selected_nft':return _objectSpread(_objectSpread({},state),{},{selectedNft:{tokenId:action.tokenId,collectionAddress:action.collectionAddress}});case'set_username':return _objectSpread(_objectSpread({},state),{},{userName:action.userName});default:return state;}};export var ProfileCreationContext=/*#__PURE__*/createContext(null);var ProfileCreationProvider=function ProfileCreationProvider(_ref){var children=_ref.children;var _useReducer=useReducer(reducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var _useWeb3React=useWeb3React(),account=_useWeb3React.account;// Initial checks\nuseEffect(function(){var isSubscribed=true;var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var bunnyFactoryContract,canMint;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:bunnyFactoryContract=getBunnyFactoryContract();_context.next=3;return bunnyFactoryContract.canMint(account);case 3:canMint=_context.sent;dispatch({type:'initialize',step:canMint?0:1});// When changing wallets quickly unmounting before the hasClaim finished causes a React error\nif(isSubscribed){dispatch({type:'initialize',step:canMint?0:1});}case 6:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref2.apply(this,arguments);};}();if(account){fetchData();}return function(){isSubscribed=false;};},[account,dispatch]);var actions=useMemo(function(){return{nextStep:function nextStep(){return dispatch({type:'next_step'});},setTeamId:function setTeamId(teamId){return dispatch({type:'set_team',teamId:teamId});},setSelectedNft:function setSelectedNft(tokenId,collectionAddress){return dispatch({type:'set_selected_nft',tokenId:tokenId,collectionAddress:collectionAddress});},setUserName:function setUserName(userName){return dispatch({type:'set_username',userName:userName});}};},[dispatch]);return/*#__PURE__*/_jsx(ProfileCreationContext.Provider,{value:_objectSpread(_objectSpread({},state),{},{actions:actions}),children:children});};export default ProfileCreationProvider;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/ProfileCreation/contexts/ProfileCreationProvider.tsx"],"names":["React","createContext","useEffect","useMemo","useReducer","useWeb3React","getBunnyFactoryContract","MINT_COST","REGISTER_COST","ALLOWANCE_MULTIPLIER","totalCost","add","allowance","mul","initialState","isInitialized","currentStep","teamId","selectedNft","collectionAddress","tokenId","userName","minimumCakeRequired","reducer","state","action","type","step","ProfileCreationContext","ProfileCreationProvider","children","dispatch","account","isSubscribed","fetchData","bunnyFactoryContract","canMint","actions","nextStep","setTeamId","setSelectedNft","setUserName"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useMemo, useReducer } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\nimport { MINT_COST, REGISTER_COST, ALLOWANCE_MULTIPLIER } from '../config'\nimport { Actions, State, ContextType } from './types'\n\nconst totalCost = MINT_COST.add(REGISTER_COST)\nconst allowance = totalCost.mul(ALLOWANCE_MULTIPLIER)\n\nconst initialState: State = {\n  isInitialized: false,\n  currentStep: 0,\n  teamId: null,\n  selectedNft: {\n    collectionAddress: null,\n    tokenId: null,\n  },\n  userName: '',\n  minimumCakeRequired: totalCost,\n  allowance,\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'initialize':\n      return {\n        ...state,\n        isInitialized: true,\n        currentStep: action.step,\n      }\n    case 'next_step':\n      return {\n        ...state,\n        currentStep: state.currentStep + 1,\n      }\n    case 'set_team':\n      return {\n        ...state,\n        teamId: action.teamId,\n      }\n    case 'set_selected_nft':\n      return {\n        ...state,\n        selectedNft: {\n          tokenId: action.tokenId,\n          collectionAddress: action.collectionAddress,\n        },\n      }\n    case 'set_username':\n      return {\n        ...state,\n        userName: action.userName,\n      }\n    default:\n      return state\n  }\n}\n\nexport const ProfileCreationContext = createContext<ContextType>(null)\n\nconst ProfileCreationProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { account } = useWeb3React()\n\n  // Initial checks\n  useEffect(() => {\n    let isSubscribed = true\n\n    const fetchData = async () => {\n      const bunnyFactoryContract = getBunnyFactoryContract()\n      const canMint = await bunnyFactoryContract.canMint(account)\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\n      if (isSubscribed) {\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n      }\n    }\n\n    if (account) {\n      fetchData()\n    }\n\n    return () => {\n      isSubscribed = false\n    }\n  }, [account, dispatch])\n\n  const actions: ContextType['actions'] = useMemo(\n    () => ({\n      nextStep: () => dispatch({ type: 'next_step' }),\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\n      setSelectedNft: (tokenId: string, collectionAddress: string) =>\n        dispatch({ type: 'set_selected_nft', tokenId, collectionAddress }),\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\n    }),\n    [dispatch],\n  )\n\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\n}\n\nexport default ProfileCreationProvider\n"]},"metadata":{},"sourceType":"module"}