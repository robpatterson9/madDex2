{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import SwiperCore,{Keyboard,Mousewheel}from'swiper';import{Swiper,SwiperSlide}from'swiper/react';import{Box}from'@pancakeswap/uikit';import{useGetCurrentEpoch,useGetSortedRounds}from'state/predictions/hooks';import'swiper/swiper.min.css';import RoundCard from'./components/RoundCard';import Menu from'./components/Menu';import useSwiper from'./hooks/useSwiper';import useOnNextRound from'./hooks/useOnNextRound';import useOnViewChange from'./hooks/useOnViewChange';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";SwiperCore.use([Keyboard,Mousewheel]);var StyledSwiper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  .swiper-wrapper {\\n    align-items: center;\\n    display: flex;\\n  }\\n\\n  .swiper-slide {\\n    width: 320px;\\n  }\\n\"])));var Positions=function Positions(_ref){var view=_ref.view;var _useSwiper=useSwiper(),setSwiper=_useSwiper.setSwiper;var rounds=useGetSortedRounds();var currentEpoch=useGetCurrentEpoch();var previousEpoch=currentEpoch>0?currentEpoch-1:currentEpoch;var previousRound=rounds.find(function(round){return round.epoch===previousEpoch;});var swiperIndex=rounds.indexOf(previousRound);useOnNextRound();useOnViewChange(swiperIndex,view);return/*#__PURE__*/_jsxs(Box,{overflow:\"hidden\",children:[/*#__PURE__*/_jsx(Menu,{}),/*#__PURE__*/_jsx(StyledSwiper,{children:/*#__PURE__*/_jsx(Swiper,{initialSlide:swiperIndex,onSwiper:setSwiper,spaceBetween:16,slidesPerView:\"auto\",freeMode:true,freeModeSticky:true,centeredSlides:true,freeModeMomentumRatio:0.25,freeModeMomentumVelocityRatio:0.5,mousewheel:true,keyboard:true,resizeObserver:true,children:rounds.map(function(round){return/*#__PURE__*/_jsx(SwiperSlide,{children:/*#__PURE__*/_jsx(RoundCard,{round:round})},round.epoch);})})})]});};export default Positions;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/Positions.tsx"],"names":["React","styled","SwiperCore","Keyboard","Mousewheel","Swiper","SwiperSlide","Box","useGetCurrentEpoch","useGetSortedRounds","RoundCard","Menu","useSwiper","useOnNextRound","useOnViewChange","use","StyledSwiper","div","Positions","view","setSwiper","rounds","currentEpoch","previousEpoch","previousRound","find","round","epoch","swiperIndex","indexOf","map"],"mappings":"4LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,UAAP,EAAqBC,QAArB,CAA+BC,UAA/B,KAAiD,QAAjD,CACA,OAASC,MAAT,CAAiBC,WAAjB,KAAoC,cAApC,CACA,OAASC,GAAT,KAAoB,oBAApB,CACA,OAASC,kBAAT,CAA6BC,kBAA7B,KAAuD,yBAAvD,CACA,MAAO,uBAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,SAAP,KAAsB,mBAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,wBAA3B,CACA,MAAOC,CAAAA,eAAP,KAA4B,yBAA5B,C,wFAGAZ,UAAU,CAACa,GAAX,CAAe,CAACZ,QAAD,CAAWC,UAAX,CAAf,EAEA,GAAMY,CAAAA,YAAY,CAAGf,MAAM,CAACgB,GAAV,wLAAlB,CAUA,GAAMC,CAAAA,SAAwC,CAAG,QAA3CA,CAAAA,SAA2C,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CAC7D,eAAsBP,SAAS,EAA/B,CAAQQ,SAAR,YAAQA,SAAR,CACA,GAAMC,CAAAA,MAAM,CAAGZ,kBAAkB,EAAjC,CACA,GAAMa,CAAAA,YAAY,CAAGd,kBAAkB,EAAvC,CACA,GAAMe,CAAAA,aAAa,CAAGD,YAAY,CAAG,CAAf,CAAmBA,YAAY,CAAG,CAAlC,CAAsCA,YAA5D,CACA,GAAME,CAAAA,aAAa,CAAGH,MAAM,CAACI,IAAP,CAAY,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,KAAN,GAAgBJ,aAA3B,EAAZ,CAAtB,CACA,GAAMK,CAAAA,WAAW,CAAGP,MAAM,CAACQ,OAAP,CAAeL,aAAf,CAApB,CAEAX,cAAc,GACdC,eAAe,CAACc,WAAD,CAAcT,IAAd,CAAf,CAEA,mBACE,MAAC,GAAD,EAAK,QAAQ,CAAC,QAAd,wBACE,KAAC,IAAD,IADF,cAEE,KAAC,YAAD,wBACE,KAAC,MAAD,EACE,YAAY,CAAES,WADhB,CAEE,QAAQ,CAAER,SAFZ,CAGE,YAAY,CAAE,EAHhB,CAIE,aAAa,CAAC,MAJhB,CAKE,QAAQ,KALV,CAME,cAAc,KANhB,CAOE,cAAc,KAPhB,CAQE,qBAAqB,CAAE,IARzB,CASE,6BAA6B,CAAE,GATjC,CAUE,UAAU,KAVZ,CAWE,QAAQ,KAXV,CAYE,cAAc,KAZhB,UAcGC,MAAM,CAACS,GAAP,CAAW,SAACJ,KAAD,qBACV,KAAC,WAAD,wBACE,KAAC,SAAD,EAAW,KAAK,CAAEA,KAAlB,EADF,EAAkBA,KAAK,CAACC,KAAxB,CADU,EAAX,CAdH,EADF,EAFF,GADF,CA2BD,CAtCD,CAwCA,cAAeT,CAAAA,SAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport SwiperCore, { Keyboard, Mousewheel } from 'swiper'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport { Box } from '@pancakeswap/uikit'\nimport { useGetCurrentEpoch, useGetSortedRounds } from 'state/predictions/hooks'\nimport 'swiper/swiper.min.css'\nimport RoundCard from './components/RoundCard'\nimport Menu from './components/Menu'\nimport useSwiper from './hooks/useSwiper'\nimport useOnNextRound from './hooks/useOnNextRound'\nimport useOnViewChange from './hooks/useOnViewChange'\nimport { PageView } from './types'\n\nSwiperCore.use([Keyboard, Mousewheel])\n\nconst StyledSwiper = styled.div`\n  .swiper-wrapper {\n    align-items: center;\n    display: flex;\n  }\n\n  .swiper-slide {\n    width: 320px;\n  }\n`\nconst Positions: React.FC<{ view?: PageView }> = ({ view }) => {\n  const { setSwiper } = useSwiper()\n  const rounds = useGetSortedRounds()\n  const currentEpoch = useGetCurrentEpoch()\n  const previousEpoch = currentEpoch > 0 ? currentEpoch - 1 : currentEpoch\n  const previousRound = rounds.find((round) => round.epoch === previousEpoch)\n  const swiperIndex = rounds.indexOf(previousRound)\n\n  useOnNextRound()\n  useOnViewChange(swiperIndex, view)\n\n  return (\n    <Box overflow=\"hidden\">\n      <Menu />\n      <StyledSwiper>\n        <Swiper\n          initialSlide={swiperIndex}\n          onSwiper={setSwiper}\n          spaceBetween={16}\n          slidesPerView=\"auto\"\n          freeMode\n          freeModeSticky\n          centeredSlides\n          freeModeMomentumRatio={0.25}\n          freeModeMomentumVelocityRatio={0.5}\n          mousewheel\n          keyboard\n          resizeObserver\n        >\n          {rounds.map((round) => (\n            <SwiperSlide key={round.epoch}>\n              <RoundCard round={round} />\n            </SwiperSlide>\n          ))}\n        </Swiper>\n      </StyledSwiper>\n    </Box>\n  )\n}\n\nexport default Positions\n"]},"metadata":{},"sourceType":"module"}