{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/History/PnlTab/PnlTab.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useWeb3React } from '@web3-react/core';\nimport { Box, Flex, Heading, Text, Button, Link, OpenNewIcon } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { getRoundResult, Result } from 'state/predictions/helpers';\nimport { REWARD_RATE } from 'state/predictions/config';\nimport { getBscScanLink } from 'utils';\nimport { multiplyPriceByAmount } from 'utils/prices';\nimport { useBNBBusdPrice } from 'hooks/useBUSDPrice';\nimport { useGetCurrentEpoch } from 'state/predictions/hooks';\nimport { BetPosition } from 'state/types';\nimport { formatBnb, getMultiplier, getNetPayout } from '../helpers';\nimport PnlChart from './PnlChart';\nimport SummaryRow from './SummaryRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Divider = styled.div`\n  background-color: ${({\n  theme\n}) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 24px auto;\n  width: 100%;\n`;\n_c = Divider;\nconst initialPnlSummary = {\n  won: {\n    rounds: 0,\n    amount: 0,\n    payout: 0,\n    // net payout after all deductions\n    bestRound: {\n      id: '0',\n      payout: 0,\n      // net payout after all deductions\n      multiplier: 0\n    }\n  },\n  lost: {\n    rounds: 0,\n    amount: 0\n  },\n  entered: {\n    rounds: 0,\n    amount: 0\n  }\n};\n\nconst getPnlSummary = (bets, currentEpoch) => {\n  return bets.reduce((summary, bet) => {\n    const roundResult = getRoundResult(bet, currentEpoch);\n\n    if (roundResult === Result.WIN) {\n      const payout = getNetPayout(bet, REWARD_RATE);\n      let {\n        bestRound\n      } = summary.won;\n\n      if (payout > bestRound.payout) {\n        const {\n          bullAmount,\n          bearAmount,\n          totalAmount\n        } = bet.round;\n        const multiplier = getMultiplier(totalAmount, bet.position === BetPosition.BULL ? bullAmount : bearAmount);\n        bestRound = {\n          id: bet.round.epoch.toString(),\n          payout,\n          multiplier\n        };\n      }\n\n      return {\n        won: {\n          rounds: summary.won.rounds + 1,\n          amount: summary.won.amount + bet.amount,\n          payout: summary.won.payout + payout,\n          bestRound\n        },\n        entered: {\n          rounds: summary.entered.rounds + 1,\n          amount: summary.entered.amount + bet.amount\n        },\n        lost: summary.lost\n      };\n    }\n\n    if (roundResult === Result.LOSE || roundResult === Result.HOUSE) {\n      return {\n        lost: {\n          rounds: summary.lost.rounds + 1,\n          amount: summary.lost.amount + bet.amount\n        },\n        entered: {\n          rounds: summary.entered.rounds + 1,\n          amount: summary.entered.amount + bet.amount\n        },\n        won: summary.won\n      };\n    } // Ignore Canceled and Live rounds\n\n\n    return summary;\n  }, initialPnlSummary);\n};\n\nconst PnlTab = ({\n  hasBetHistory,\n  bets\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const currentEpoch = useGetCurrentEpoch();\n  const bnbBusdPrice = useBNBBusdPrice();\n  const summary = getPnlSummary(bets, currentEpoch);\n  const netResultAmount = summary.won.payout - summary.lost.amount;\n  const netResultIsPositive = netResultAmount > 0;\n  const avgPositionEntered = summary.entered.amount / summary.entered.rounds;\n  const avgBnbWonPerRound = netResultAmount / summary.entered.rounds;\n  const avgBnbWonIsPositive = avgBnbWonPerRound > 0; // Guard in case user has only lost rounds\n\n  const hasBestRound = summary.won.bestRound.payout !== 0;\n  const netResultInUsd = multiplyPriceByAmount(bnbBusdPrice, netResultAmount);\n  const avgBnbWonInUsd = multiplyPriceByAmount(bnbBusdPrice, avgBnbWonPerRound);\n  const betRoundInUsd = multiplyPriceByAmount(bnbBusdPrice, summary.won.bestRound.payout);\n  const avgPositionEnteredInUsd = multiplyPriceByAmount(bnbBusdPrice, avgPositionEntered);\n  return hasBetHistory ? /*#__PURE__*/_jsxDEV(Box, {\n    p: \"16px\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      bold: true,\n      fontSize: \"24px\",\n      color: \"secondary\",\n      pb: \"24px\",\n      children: t('Your history')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(PnlChart, {\n        lost: summary.lost.rounds,\n        won: summary.won.rounds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        pl: \"24px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          color: \"textSubtle\",\n          children: t('Net results')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          fontSize: \"24px\",\n          lineHeight: \"1\",\n          color: netResultIsPositive ? 'success' : 'failure',\n          children: `${netResultIsPositive ? '+' : ''}${formatBnb(netResultAmount)} BNB`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          color: \"textSubtle\",\n          children: `~$${netResultInUsd.toFixed(2)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      pl: \"8px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        mt: \"24px\",\n        bold: true,\n        color: \"textSubtle\",\n        children: t('Average return / round')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        color: avgBnbWonIsPositive ? 'success' : 'failure',\n        children: `${avgBnbWonIsPositive ? '+' : ''}${formatBnb(avgBnbWonPerRound)} BNB`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        small: true,\n        color: \"textSubtle\",\n        children: `~$${avgBnbWonInUsd.toFixed(2)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), hasBestRound && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          mt: \"16px\",\n          bold: true,\n          color: \"textSubtle\",\n          children: t('Best round: #%roundId%', {\n            roundId: summary.won.bestRound.id\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"flex-end\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            color: \"success\",\n            children: `+${formatBnb(summary.won.bestRound.payout)} BNB`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            ml: \"4px\",\n            small: true,\n            color: \"textSubtle\",\n            children: [\"(\", summary.won.bestRound.multiplier.toFixed(2), \"x)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          color: \"textSubtle\",\n          children: `~$${betRoundInUsd.toFixed(2)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Text, {\n        mt: \"16px\",\n        bold: true,\n        color: \"textSubtle\",\n        children: t('Average position entered / round')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        children: `${formatBnb(avgPositionEntered)} BNB`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        small: true,\n        color: \"textSubtle\",\n        children: `~$${avgPositionEnteredInUsd.toFixed(2)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SummaryRow, {\n        type: \"won\",\n        summary: summary,\n        bnbBusdPrice: bnbBusdPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SummaryRow, {\n        type: \"lost\",\n        summary: summary,\n        bnbBusdPrice: bnbBusdPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SummaryRow, {\n        type: \"entered\",\n        summary: summary,\n        bnbBusdPrice: bnbBusdPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"center\",\n        mt: \"24px\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: `${getBscScanLink(account, 'address')}#internaltx`,\n          mb: \"16px\",\n          external: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            mt: \"8px\",\n            width: \"100%\",\n            children: [t('View Reclaimed & Won'), /*#__PURE__*/_jsxDEV(OpenNewIcon, {\n              color: \"white\",\n              ml: \"4px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Box, {\n    p: \"24px\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      size: \"lg\",\n      textAlign: \"center\",\n      mb: \"8px\",\n      children: t('No prediction history available')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      textAlign: \"center\",\n      children: t('If you are sure you should see history here, make sure you’re connected to the correct wallet and try again.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PnlTab, \"hgFIbFd3UN1d4EdMzIPbIS3bWfU=\", false, function () {\n  return [useTranslation, useWeb3React, useGetCurrentEpoch, useBNBBusdPrice];\n});\n\n_c2 = PnlTab;\nexport default PnlTab;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Divider\");\n$RefreshReg$(_c2, \"PnlTab\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/History/PnlTab/PnlTab.tsx"],"names":["React","styled","useWeb3React","Box","Flex","Heading","Text","Button","Link","OpenNewIcon","useTranslation","getRoundResult","Result","REWARD_RATE","getBscScanLink","multiplyPriceByAmount","useBNBBusdPrice","useGetCurrentEpoch","BetPosition","formatBnb","getMultiplier","getNetPayout","PnlChart","SummaryRow","Divider","div","theme","colors","backgroundDisabled","initialPnlSummary","won","rounds","amount","payout","bestRound","id","multiplier","lost","entered","getPnlSummary","bets","currentEpoch","reduce","summary","bet","roundResult","WIN","bullAmount","bearAmount","totalAmount","round","position","BULL","epoch","toString","LOSE","HOUSE","PnlTab","hasBetHistory","t","account","bnbBusdPrice","netResultAmount","netResultIsPositive","avgPositionEntered","avgBnbWonPerRound","avgBnbWonIsPositive","hasBestRound","netResultInUsd","avgBnbWonInUsd","betRoundInUsd","avgPositionEnteredInUsd","toFixed","roundId"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,MAAnC,EAA2CC,IAA3C,EAAiDC,WAAjD,QAAoE,oBAApE;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,cAAT,EAAyBC,MAAzB,QAAuC,2BAAvC;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,SAASC,qBAAT,QAAsC,cAAtC;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AACA,SAAcC,WAAd,QAAiC,aAAjC;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,YAAnC,QAAuD,YAAvD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAkBA,MAAMC,OAAO,GAAGvB,MAAM,CAACwB,GAAI;AAC3B,sBAAsB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,kBAAmB;AACrE;AACA;AACA;AACA,CALA;KAAMJ,O;AAON,MAAMK,iBAA6B,GAAG;AACpCC,EAAAA,GAAG,EAAE;AACHC,IAAAA,MAAM,EAAE,CADL;AAEHC,IAAAA,MAAM,EAAE,CAFL;AAGHC,IAAAA,MAAM,EAAE,CAHL;AAGQ;AACXC,IAAAA,SAAS,EAAE;AACTC,MAAAA,EAAE,EAAE,GADK;AAETF,MAAAA,MAAM,EAAE,CAFC;AAEE;AACXG,MAAAA,UAAU,EAAE;AAHH;AAJR,GAD+B;AAWpCC,EAAAA,IAAI,EAAE;AACJN,IAAAA,MAAM,EAAE,CADJ;AAEJC,IAAAA,MAAM,EAAE;AAFJ,GAX8B;AAepCM,EAAAA,OAAO,EAAE;AACPP,IAAAA,MAAM,EAAE,CADD;AAEPC,IAAAA,MAAM,EAAE;AAFD;AAf2B,CAAtC;;AAqBA,MAAMO,aAAa,GAAG,CAACC,IAAD,EAAcC,YAAd,KAAmD;AACvE,SAAOD,IAAI,CAACE,MAAL,CAAY,CAACC,OAAD,EAAsBC,GAAtB,KAA8B;AAC/C,UAAMC,WAAW,GAAGlC,cAAc,CAACiC,GAAD,EAAMH,YAAN,CAAlC;;AACA,QAAII,WAAW,KAAKjC,MAAM,CAACkC,GAA3B,EAAgC;AAC9B,YAAMb,MAAM,GAAGZ,YAAY,CAACuB,GAAD,EAAM/B,WAAN,CAA3B;AACA,UAAI;AAAEqB,QAAAA;AAAF,UAAgBS,OAAO,CAACb,GAA5B;;AACA,UAAIG,MAAM,GAAGC,SAAS,CAACD,MAAvB,EAA+B;AAC7B,cAAM;AAAEc,UAAAA,UAAF;AAAcC,UAAAA,UAAd;AAA0BC,UAAAA;AAA1B,YAA0CL,GAAG,CAACM,KAApD;AACA,cAAMd,UAAU,GAAGhB,aAAa,CAAC6B,WAAD,EAAcL,GAAG,CAACO,QAAJ,KAAiBjC,WAAW,CAACkC,IAA7B,GAAoCL,UAApC,GAAiDC,UAA/D,CAAhC;AACAd,QAAAA,SAAS,GAAG;AAAEC,UAAAA,EAAE,EAAES,GAAG,CAACM,KAAJ,CAAUG,KAAV,CAAgBC,QAAhB,EAAN;AAAkCrB,UAAAA,MAAlC;AAA0CG,UAAAA;AAA1C,SAAZ;AACD;;AACD,aAAO;AACLN,QAAAA,GAAG,EAAE;AACHC,UAAAA,MAAM,EAAEY,OAAO,CAACb,GAAR,CAAYC,MAAZ,GAAqB,CAD1B;AAEHC,UAAAA,MAAM,EAAEW,OAAO,CAACb,GAAR,CAAYE,MAAZ,GAAqBY,GAAG,CAACZ,MAF9B;AAGHC,UAAAA,MAAM,EAAEU,OAAO,CAACb,GAAR,CAAYG,MAAZ,GAAqBA,MAH1B;AAIHC,UAAAA;AAJG,SADA;AAOLI,QAAAA,OAAO,EAAE;AACPP,UAAAA,MAAM,EAAEY,OAAO,CAACL,OAAR,CAAgBP,MAAhB,GAAyB,CAD1B;AAEPC,UAAAA,MAAM,EAAEW,OAAO,CAACL,OAAR,CAAgBN,MAAhB,GAAyBY,GAAG,CAACZ;AAF9B,SAPJ;AAWLK,QAAAA,IAAI,EAAEM,OAAO,CAACN;AAXT,OAAP;AAaD;;AACD,QAAIQ,WAAW,KAAKjC,MAAM,CAAC2C,IAAvB,IAA+BV,WAAW,KAAKjC,MAAM,CAAC4C,KAA1D,EAAiE;AAC/D,aAAO;AACLnB,QAAAA,IAAI,EAAE;AACJN,UAAAA,MAAM,EAAEY,OAAO,CAACN,IAAR,CAAaN,MAAb,GAAsB,CAD1B;AAEJC,UAAAA,MAAM,EAAEW,OAAO,CAACN,IAAR,CAAaL,MAAb,GAAsBY,GAAG,CAACZ;AAF9B,SADD;AAKLM,QAAAA,OAAO,EAAE;AACPP,UAAAA,MAAM,EAAEY,OAAO,CAACL,OAAR,CAAgBP,MAAhB,GAAyB,CAD1B;AAEPC,UAAAA,MAAM,EAAEW,OAAO,CAACL,OAAR,CAAgBN,MAAhB,GAAyBY,GAAG,CAACZ;AAF9B,SALJ;AASLF,QAAAA,GAAG,EAAEa,OAAO,CAACb;AATR,OAAP;AAWD,KApC8C,CAqC/C;;;AACA,WAAOa,OAAP;AACD,GAvCM,EAuCJd,iBAvCI,CAAP;AAwCD,CAzCD;;AA2CA,MAAM4B,MAA6B,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBlB,EAAAA;AAAjB,CAAD,KAA6B;AAAA;;AACjE,QAAM;AAAEmB,IAAAA;AAAF,MAAQjD,cAAc,EAA5B;AACA,QAAM;AAAEkD,IAAAA;AAAF,MAAc1D,YAAY,EAAhC;AACA,QAAMuC,YAAY,GAAGxB,kBAAkB,EAAvC;AACA,QAAM4C,YAAY,GAAG7C,eAAe,EAApC;AAEA,QAAM2B,OAAO,GAAGJ,aAAa,CAACC,IAAD,EAAOC,YAAP,CAA7B;AAEA,QAAMqB,eAAe,GAAGnB,OAAO,CAACb,GAAR,CAAYG,MAAZ,GAAqBU,OAAO,CAACN,IAAR,CAAaL,MAA1D;AACA,QAAM+B,mBAAmB,GAAGD,eAAe,GAAG,CAA9C;AACA,QAAME,kBAAkB,GAAGrB,OAAO,CAACL,OAAR,CAAgBN,MAAhB,GAAyBW,OAAO,CAACL,OAAR,CAAgBP,MAApE;AACA,QAAMkC,iBAAiB,GAAGH,eAAe,GAAGnB,OAAO,CAACL,OAAR,CAAgBP,MAA5D;AACA,QAAMmC,mBAAmB,GAAGD,iBAAiB,GAAG,CAAhD,CAZiE,CAcjE;;AACA,QAAME,YAAY,GAAGxB,OAAO,CAACb,GAAR,CAAYI,SAAZ,CAAsBD,MAAtB,KAAiC,CAAtD;AAEA,QAAMmC,cAAc,GAAGrD,qBAAqB,CAAC8C,YAAD,EAAeC,eAAf,CAA5C;AACA,QAAMO,cAAc,GAAGtD,qBAAqB,CAAC8C,YAAD,EAAeI,iBAAf,CAA5C;AACA,QAAMK,aAAa,GAAGvD,qBAAqB,CAAC8C,YAAD,EAAelB,OAAO,CAACb,GAAR,CAAYI,SAAZ,CAAsBD,MAArC,CAA3C;AACA,QAAMsC,uBAAuB,GAAGxD,qBAAqB,CAAC8C,YAAD,EAAeG,kBAAf,CAArD;AAEA,SAAON,aAAa,gBAClB,QAAC,GAAD;AAAK,IAAA,CAAC,EAAC,MAAP;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,QAAQ,EAAC,MAApB;AAA2B,MAAA,KAAK,EAAC,WAAjC;AAA6C,MAAA,EAAE,EAAC,MAAhD;AAAA,gBACGC,CAAC,CAAC,cAAD;AADJ;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEhB,OAAO,CAACN,IAAR,CAAaN,MAA7B;AAAqC,QAAA,GAAG,EAAEY,OAAO,CAACb,GAAR,CAAYC;AAAtD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,aAAa,EAAC,QAApB;AAA6B,QAAA,cAAc,EAAC,QAA5C;AAAqD,QAAA,EAAE,EAAC,MAAxD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,KAAK,EAAC,YAAjB;AAAA,oBACG4B,CAAC,CAAC,aAAD;AADJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,QAAQ,EAAC,MAApB;AAA2B,UAAA,UAAU,EAAC,GAAtC;AAA0C,UAAA,KAAK,EAAEI,mBAAmB,GAAG,SAAH,GAAe,SAAnF;AAAA,oBACI,GAAEA,mBAAmB,GAAG,GAAH,GAAS,EAAG,GAAE5C,SAAS,CAAC2C,eAAD,CAAkB;AADlE;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,QAAC,IAAD;AAAM,UAAA,KAAK,MAAX;AAAY,UAAA,KAAK,EAAC,YAAlB;AAAA,oBACI,KAAIM,cAAc,CAACI,OAAf,CAAuB,CAAvB,CAA0B;AADlC;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAkBE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,MAAT;AAAgB,QAAA,IAAI,MAApB;AAAqB,QAAA,KAAK,EAAC,YAA3B;AAAA,kBACGb,CAAC,CAAC,wBAAD;AADJ;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,KAAK,EAAEO,mBAAmB,GAAG,SAAH,GAAe,SAApD;AAAA,kBACI,GAAEA,mBAAmB,GAAG,GAAH,GAAS,EAAG,GAAE/C,SAAS,CAAC8C,iBAAD,CAAoB;AADpE;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,IAAD;AAAM,QAAA,KAAK,MAAX;AAAY,QAAA,KAAK,EAAC,YAAlB;AAAA,kBACI,KAAII,cAAc,CAACG,OAAf,CAAuB,CAAvB,CAA0B;AADlC;AAAA;AAAA;AAAA;AAAA,cAPF,EAWGL,YAAY,iBACX;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,MAAT;AAAgB,UAAA,IAAI,MAApB;AAAqB,UAAA,KAAK,EAAC,YAA3B;AAAA,oBACGR,CAAC,CAAC,wBAAD,EAA2B;AAAEc,YAAAA,OAAO,EAAE9B,OAAO,CAACb,GAAR,CAAYI,SAAZ,CAAsBC;AAAjC,WAA3B;AADJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,IAAD;AAAM,UAAA,UAAU,EAAC,UAAjB;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,KAAK,EAAC,SAAjB;AAAA,sBAA6B,IAAGhB,SAAS,CAACwB,OAAO,CAACb,GAAR,CAAYI,SAAZ,CAAsBD,MAAvB,CAA+B;AAAxE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,KAAT;AAAe,YAAA,KAAK,MAApB;AAAqB,YAAA,KAAK,EAAC,YAA3B;AAAA,4BACIU,OAAO,CAACb,GAAR,CAAYI,SAAZ,CAAsBE,UAAtB,CAAiCoC,OAAjC,CAAyC,CAAzC,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAUE,QAAC,IAAD;AAAM,UAAA,KAAK,MAAX;AAAY,UAAA,KAAK,EAAC,YAAlB;AAAA,oBACI,KAAIF,aAAa,CAACE,OAAd,CAAsB,CAAtB,CAAyB;AADjC;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA,sBAZJ,eA4BE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,MAAT;AAAgB,QAAA,IAAI,MAApB;AAAqB,QAAA,KAAK,EAAC,YAA3B;AAAA,kBACGb,CAAC,CAAC,kCAAD;AADJ;AAAA;AAAA;AAAA;AAAA,cA5BF,eA+BE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,kBAAa,GAAExC,SAAS,CAAC6C,kBAAD,CAAqB;AAA7C;AAAA;AAAA;AAAA;AAAA,cA/BF,eAgCE,QAAC,IAAD;AAAM,QAAA,KAAK,MAAX;AAAY,QAAA,KAAK,EAAC,YAAlB;AAAA,kBACI,KAAIO,uBAAuB,CAACC,OAAxB,CAAgC,CAAhC,CAAmC;AAD3C;AAAA;AAAA;AAAA;AAAA,cAhCF,eAoCE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cApCF,eAsCE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAC,KAAjB;AAAuB,QAAA,OAAO,EAAE7B,OAAhC;AAAyC,QAAA,YAAY,EAAEkB;AAAvD;AAAA;AAAA;AAAA;AAAA,cAtCF,eAuCE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAC,MAAjB;AAAwB,QAAA,OAAO,EAAElB,OAAjC;AAA0C,QAAA,YAAY,EAAEkB;AAAxD;AAAA;AAAA;AAAA;AAAA,cAvCF,eAwCE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAC,SAAjB;AAA2B,QAAA,OAAO,EAAElB,OAApC;AAA6C,QAAA,YAAY,EAAEkB;AAA3D;AAAA;AAAA;AAAA;AAAA,cAxCF,eA0CE,QAAC,IAAD;AAAM,QAAA,cAAc,EAAC,QAArB;AAA8B,QAAA,EAAE,EAAC,MAAjC;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAG,GAAE/C,cAAc,CAAC8C,OAAD,EAAU,SAAV,CAAqB,aAAlD;AAAgE,UAAA,EAAE,EAAC,MAAnE;AAA0E,UAAA,QAAQ,MAAlF;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,EAAE,EAAC,KAAX;AAAiB,YAAA,KAAK,EAAC,MAAvB;AAAA,uBACGD,CAAC,CAAC,sBAAD,CADJ,eAEE,QAAC,WAAD;AAAa,cAAA,KAAK,EAAC,OAAnB;AAA2B,cAAA,EAAE,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA1CF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADkB,gBAwElB,QAAC,GAAD;AAAK,IAAA,CAAC,EAAC,MAAP;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAC,IAAd;AAAmB,MAAA,SAAS,EAAC,QAA7B;AAAsC,MAAA,EAAE,EAAC,KAAzC;AAAA,gBACGA,CAAC,CAAC,iCAAD;AADJ;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,QAAvB;AAAA,gBACGA,CAAC,CACA,8GADA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UAxEF;AAmFD,CAzGD;;GAAMF,M;UACU/C,c,EACMR,Y,EACCe,kB,EACAD,e;;;MAJjByC,M;AA2GN,eAAeA,MAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Box, Flex, Heading, Text, Button, Link, OpenNewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getRoundResult, Result } from 'state/predictions/helpers'\nimport { REWARD_RATE } from 'state/predictions/config'\nimport { getBscScanLink } from 'utils'\nimport { multiplyPriceByAmount } from 'utils/prices'\nimport { useBNBBusdPrice } from 'hooks/useBUSDPrice'\nimport { useGetCurrentEpoch } from 'state/predictions/hooks'\nimport { Bet, BetPosition } from 'state/types'\nimport { formatBnb, getMultiplier, getNetPayout } from '../helpers'\nimport PnlChart from './PnlChart'\nimport SummaryRow from './SummaryRow'\n\ninterface PnlTabProps {\n  hasBetHistory: boolean\n  bets: Bet[]\n}\n\ninterface PnlCategory {\n  rounds: number\n  amount: number\n}\n\ninterface PnlSummary {\n  won: PnlCategory & { payout: number; bestRound: { id: string; payout: number; multiplier: number } }\n  lost: PnlCategory\n  entered: PnlCategory\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 24px auto;\n  width: 100%;\n`\n\nconst initialPnlSummary: PnlSummary = {\n  won: {\n    rounds: 0,\n    amount: 0,\n    payout: 0, // net payout after all deductions\n    bestRound: {\n      id: '0',\n      payout: 0, // net payout after all deductions\n      multiplier: 0,\n    },\n  },\n  lost: {\n    rounds: 0,\n    amount: 0,\n  },\n  entered: {\n    rounds: 0,\n    amount: 0,\n  },\n}\n\nconst getPnlSummary = (bets: Bet[], currentEpoch: number): PnlSummary => {\n  return bets.reduce((summary: PnlSummary, bet) => {\n    const roundResult = getRoundResult(bet, currentEpoch)\n    if (roundResult === Result.WIN) {\n      const payout = getNetPayout(bet, REWARD_RATE)\n      let { bestRound } = summary.won\n      if (payout > bestRound.payout) {\n        const { bullAmount, bearAmount, totalAmount } = bet.round\n        const multiplier = getMultiplier(totalAmount, bet.position === BetPosition.BULL ? bullAmount : bearAmount)\n        bestRound = { id: bet.round.epoch.toString(), payout, multiplier }\n      }\n      return {\n        won: {\n          rounds: summary.won.rounds + 1,\n          amount: summary.won.amount + bet.amount,\n          payout: summary.won.payout + payout,\n          bestRound,\n        },\n        entered: {\n          rounds: summary.entered.rounds + 1,\n          amount: summary.entered.amount + bet.amount,\n        },\n        lost: summary.lost,\n      }\n    }\n    if (roundResult === Result.LOSE || roundResult === Result.HOUSE) {\n      return {\n        lost: {\n          rounds: summary.lost.rounds + 1,\n          amount: summary.lost.amount + bet.amount,\n        },\n        entered: {\n          rounds: summary.entered.rounds + 1,\n          amount: summary.entered.amount + bet.amount,\n        },\n        won: summary.won,\n      }\n    }\n    // Ignore Canceled and Live rounds\n    return summary\n  }, initialPnlSummary)\n}\n\nconst PnlTab: React.FC<PnlTabProps> = ({ hasBetHistory, bets }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const currentEpoch = useGetCurrentEpoch()\n  const bnbBusdPrice = useBNBBusdPrice()\n\n  const summary = getPnlSummary(bets, currentEpoch)\n\n  const netResultAmount = summary.won.payout - summary.lost.amount\n  const netResultIsPositive = netResultAmount > 0\n  const avgPositionEntered = summary.entered.amount / summary.entered.rounds\n  const avgBnbWonPerRound = netResultAmount / summary.entered.rounds\n  const avgBnbWonIsPositive = avgBnbWonPerRound > 0\n\n  // Guard in case user has only lost rounds\n  const hasBestRound = summary.won.bestRound.payout !== 0\n\n  const netResultInUsd = multiplyPriceByAmount(bnbBusdPrice, netResultAmount)\n  const avgBnbWonInUsd = multiplyPriceByAmount(bnbBusdPrice, avgBnbWonPerRound)\n  const betRoundInUsd = multiplyPriceByAmount(bnbBusdPrice, summary.won.bestRound.payout)\n  const avgPositionEnteredInUsd = multiplyPriceByAmount(bnbBusdPrice, avgPositionEntered)\n\n  return hasBetHistory ? (\n    <Box p=\"16px\">\n      <Text bold fontSize=\"24px\" color=\"secondary\" pb=\"24px\">\n        {t('Your history')}\n      </Text>\n      <Flex>\n        <PnlChart lost={summary.lost.rounds} won={summary.won.rounds} />\n        <Flex flexDirection=\"column\" justifyContent=\"center\" pl=\"24px\">\n          <Text bold color=\"textSubtle\">\n            {t('Net results')}\n          </Text>\n          <Text bold fontSize=\"24px\" lineHeight=\"1\" color={netResultIsPositive ? 'success' : 'failure'}>\n            {`${netResultIsPositive ? '+' : ''}${formatBnb(netResultAmount)} BNB`}\n          </Text>\n          <Text small color=\"textSubtle\">\n            {`~$${netResultInUsd.toFixed(2)}`}\n          </Text>\n        </Flex>\n      </Flex>\n      <Box pl=\"8px\">\n        <Text mt=\"24px\" bold color=\"textSubtle\">\n          {t('Average return / round')}\n        </Text>\n        <Text bold color={avgBnbWonIsPositive ? 'success' : 'failure'}>\n          {`${avgBnbWonIsPositive ? '+' : ''}${formatBnb(avgBnbWonPerRound)} BNB`}\n        </Text>\n        <Text small color=\"textSubtle\">\n          {`~$${avgBnbWonInUsd.toFixed(2)}`}\n        </Text>\n\n        {hasBestRound && (\n          <>\n            <Text mt=\"16px\" bold color=\"textSubtle\">\n              {t('Best round: #%roundId%', { roundId: summary.won.bestRound.id })}\n            </Text>\n            <Flex alignItems=\"flex-end\">\n              <Text bold color=\"success\">{`+${formatBnb(summary.won.bestRound.payout)} BNB`}</Text>\n              <Text ml=\"4px\" small color=\"textSubtle\">\n                ({summary.won.bestRound.multiplier.toFixed(2)}x)\n              </Text>\n            </Flex>\n            <Text small color=\"textSubtle\">\n              {`~$${betRoundInUsd.toFixed(2)}`}\n            </Text>\n          </>\n        )}\n\n        <Text mt=\"16px\" bold color=\"textSubtle\">\n          {t('Average position entered / round')}\n        </Text>\n        <Text bold>{`${formatBnb(avgPositionEntered)} BNB`}</Text>\n        <Text small color=\"textSubtle\">\n          {`~$${avgPositionEnteredInUsd.toFixed(2)}`}\n        </Text>\n\n        <Divider />\n\n        <SummaryRow type=\"won\" summary={summary} bnbBusdPrice={bnbBusdPrice} />\n        <SummaryRow type=\"lost\" summary={summary} bnbBusdPrice={bnbBusdPrice} />\n        <SummaryRow type=\"entered\" summary={summary} bnbBusdPrice={bnbBusdPrice} />\n\n        <Flex justifyContent=\"center\" mt=\"24px\">\n          <Link href={`${getBscScanLink(account, 'address')}#internaltx`} mb=\"16px\" external>\n            <Button mt=\"8px\" width=\"100%\">\n              {t('View Reclaimed & Won')}\n              <OpenNewIcon color=\"white\" ml=\"4px\" />\n            </Button>\n          </Link>\n        </Flex>\n      </Box>\n    </Box>\n  ) : (\n    <Box p=\"24px\">\n      <Heading size=\"lg\" textAlign=\"center\" mb=\"8px\">\n        {t('No prediction history available')}\n      </Heading>\n      <Text as=\"p\" textAlign=\"center\">\n        {t(\n          'If you are sure you should see history here, make sure you’re connected to the correct wallet and try again.',\n        )}\n      </Text>\n    </Box>\n  )\n}\n\nexport default PnlTab\n"]},"metadata":{},"sourceType":"module"}