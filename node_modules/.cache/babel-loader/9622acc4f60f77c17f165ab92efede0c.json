{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React from'react';import{Button,Text,CheckmarkCircleIcon}from'@pancakeswap/uikit';import{AutoRow,RowFixed}from'components/Layout/Row';import{AutoColumn}from'components/Layout/Column';import CurrencyLogo from'components/Logo/CurrencyLogo';import{ListLogo}from'components/Logo';import useActiveWeb3React from'hooks/useActiveWeb3React';import{useCombinedInactiveList}from'state/lists/hooks';import styled from'styled-components';import{useIsUserAddedToken,useIsTokenActive}from'hooks/Tokens';import{useTranslation}from'contexts/Localization';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TokenSection=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding: 4px 20px;\\n  height: 56px;\\n  display: grid;\\n  grid-template-columns: auto minmax(auto, 1fr) auto;\\n  grid-gap: 16px;\\n  align-items: center;\\n\\n  opacity: \",\";\\n\"])),function(_ref){var dim=_ref.dim;return dim?'0.4':'1';});var CheckIcon=styled(CheckmarkCircleIcon)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  height: 16px;\\n  width: 16px;\\n  margin-right: 6px;\\n  stroke: \",\";\\n\"])),function(_ref2){var theme=_ref2.theme;return theme.colors.success;});var NameOverflow=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  max-width: 140px;\\n  font-size: 12px;\\n\"])));export default function ImportRow(_ref3){var _inactiveTokenList$ch,_inactiveTokenList$ch2;var token=_ref3.token,style=_ref3.style,dim=_ref3.dim,showImportView=_ref3.showImportView,setImportToken=_ref3.setImportToken;// globals\nvar _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var _useTranslation=useTranslation(),t=_useTranslation.t;// check if token comes from list\nvar inactiveTokenList=useCombinedInactiveList();var list=chainId&&(inactiveTokenList===null||inactiveTokenList===void 0?void 0:(_inactiveTokenList$ch=inactiveTokenList[chainId])===null||_inactiveTokenList$ch===void 0?void 0:(_inactiveTokenList$ch2=_inactiveTokenList$ch[token.address])===null||_inactiveTokenList$ch2===void 0?void 0:_inactiveTokenList$ch2.list);// check if already active on list or local storage tokens\nvar isAdded=useIsUserAddedToken(token);var isActive=useIsTokenActive(token);return/*#__PURE__*/_jsxs(TokenSection,{style:style,children:[/*#__PURE__*/_jsx(CurrencyLogo,{currency:token,size:\"24px\",style:{opacity:dim?'0.6':'1'}}),/*#__PURE__*/_jsxs(AutoColumn,{gap:\"4px\",style:{opacity:dim?'0.6':'1'},children:[/*#__PURE__*/_jsxs(AutoRow,{children:[/*#__PURE__*/_jsx(Text,{children:token.symbol}),/*#__PURE__*/_jsx(Text,{color:\"textDisabled\",ml:\"8px\",children:/*#__PURE__*/_jsx(NameOverflow,{title:token.name,children:token.name})})]}),list&&list.logoURI&&/*#__PURE__*/_jsxs(RowFixed,{children:[/*#__PURE__*/_jsxs(Text,{small:true,mr:\"4px\",color:\"textSubtle\",children:[t('via'),\" \",list.name]}),/*#__PURE__*/_jsx(ListLogo,{logoURI:list.logoURI,size:\"12px\"})]})]}),!isActive&&!isAdded?/*#__PURE__*/_jsx(Button,{width:\"fit-content\",onClick:function onClick(){if(setImportToken){setImportToken(token);}showImportView();},children:t('Import')}):/*#__PURE__*/_jsxs(RowFixed,{style:{minWidth:'fit-content'},children:[/*#__PURE__*/_jsx(CheckIcon,{}),/*#__PURE__*/_jsx(Text,{color:\"success\",children:\"Active\"})]})]});}","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/components/SearchModal/ImportRow.tsx"],"names":["React","Button","Text","CheckmarkCircleIcon","AutoRow","RowFixed","AutoColumn","CurrencyLogo","ListLogo","useActiveWeb3React","useCombinedInactiveList","styled","useIsUserAddedToken","useIsTokenActive","useTranslation","TokenSection","div","dim","CheckIcon","theme","colors","success","NameOverflow","ImportRow","token","style","showImportView","setImportToken","chainId","t","inactiveTokenList","list","address","isAdded","isActive","opacity","symbol","name","logoURI","minWidth"],"mappings":"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","sourcesContent":["import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // globals\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}