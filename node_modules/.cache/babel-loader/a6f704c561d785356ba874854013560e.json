{"ast":null,"code":"/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */export var getRoundBaseFields=function getRoundBaseFields(){return\"\\n  id\\n  epoch\\n  position\\n  failed\\n  startAt\\n  startBlock\\n  startHash\\n  lockAt\\n  lockBlock\\n  lockHash\\n  lockPrice\\n  lockRoundId\\n  closeAt\\n  closeBlock\\n  closeHash\\n  closePrice\\n  closeRoundId\\n  totalBets\\n  totalAmount\\n  bullBets\\n  bullAmount\\n  bearBets\\n  bearAmount\\n\";};export var getBetBaseFields=function getBetBaseFields(){return\"\\n id\\n hash  \\n amount\\n position\\n claimed\\n claimedAt\\n claimedHash\\n claimedBlock\\n claimedBNB\\n claimedNetBNB\\n createdAt\\n updatedAt\\n\";};export var getUserBaseFields=function getUserBaseFields(){return\"\\n  id\\n  createdAt\\n  updatedAt\\n  block\\n  totalBets\\n  totalBetsBull\\n  totalBetsBear\\n  totalBNB\\n  totalBNBBull\\n  totalBNBBear\\n  totalBetsClaimed\\n  totalBNBClaimed\\n  winRate\\n  averageBNB\\n  netBNB\\n\";};","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/state/predictions/queries.ts"],"names":["getRoundBaseFields","getBetBaseFields","getUserBaseFields"],"mappings":"AAkFA;AACA;AACA,GACA,MAAO,IAAMA,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,6SAA3B,CA0BP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,yJAAzB,CAeP,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,6NAA1B","sourcesContent":["export interface UserResponse {\n  id: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  totalBets: string\n  totalBetsBull: string\n  totalBetsBear: string\n  totalBNB: string\n  totalBNBBull: string\n  totalBNBBear: string\n  totalBetsClaimed: string\n  totalBNBClaimed: string\n  winRate: string\n  averageBNB: string\n  netBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedAt: string\n  claimedBlock: string\n  claimedHash: string\n  claimedBNB: string\n  claimedNetBNB: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  position: string\n  failed: boolean\n  startAt: string\n  startBlock: string\n  startHash: string\n  lockAt: string\n  lockBlock: string\n  lockHash: string\n  lockPrice: string\n  lockRoundId: string\n  closeAt: string\n  closeBlock: string\n  closeHash: string\n  closePrice: string\n  closeRoundId: string\n  totalBets: string\n  totalAmount: string\n  bullBets: string\n  bullAmount: string\n  bearBets: string\n  bearAmount: string\n  bets?: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  position\n  failed\n  startAt\n  startBlock\n  startHash\n  lockAt\n  lockBlock\n  lockHash\n  lockPrice\n  lockRoundId\n  closeAt\n  closeBlock\n  closeHash\n  closePrice\n  closeRoundId\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n`\n\nexport const getBetBaseFields = () => `\n id\n hash  \n amount\n position\n claimed\n claimedAt\n claimedHash\n claimedBlock\n claimedBNB\n claimedNetBNB\n createdAt\n updatedAt\n`\n\nexport const getUserBaseFields = () => `\n  id\n  createdAt\n  updatedAt\n  block\n  totalBets\n  totalBetsBull\n  totalBetsBear\n  totalBNB\n  totalBNBBull\n  totalBNBBear\n  totalBetsClaimed\n  totalBNBClaimed\n  winRate\n  averageBNB\n  netBNB\n`\n"]},"metadata":{},"sourceType":"module"}