{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Heading,Flex,Button,Grid,ChevronRightIcon}from'@pancakeswap/uikit';import{Link}from'react-router-dom';import{getLatestListedNfts,getNftsFromDifferentCollectionsApi}from'state/nftMarket/helpers';import{TMP_SEE_ALL_LINK}from'views/Nft/market/constants';import{CollectibleLinkCard}from'../components/CollectibleCard';import GridPlaceholder from'../components/GridPlaceholder';/**\n * Fetch latest NFTs data from SG+API and combine them\n * @returns Array of NftToken\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useNewestNfts=function useNewestNfts(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),newestNfts=_useState2[0],setNewestNfts=_useState2[1];useEffect(function(){var fetchNewestNfts=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var nftsFromSg,nftsFromApi,nfts;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getLatestListedNfts(8);case 2:nftsFromSg=_context.sent;_context.next=5;return getNftsFromDifferentCollectionsApi(nftsFromSg.map(function(nft){return{collectionAddress:nft.collection.id,tokenId:nft.tokenId};}));case 5:nftsFromApi=_context.sent;nfts=nftsFromSg.map(function(nftFromSg,index){var nftFromApi=nftsFromApi[index];return _objectSpread(_objectSpread({},nftFromApi),{},{marketData:nftFromSg});});setNewestNfts(nfts);case 8:case\"end\":return _context.stop();}}},_callee);}));return function fetchNewestNfts(){return _ref.apply(this,arguments);};}();fetchNewestNfts();},[]);return newestNfts;};var Newest=function Newest(){var nfts=useNewestNfts();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",mb:\"26px\",children:[/*#__PURE__*/_jsx(Heading,{children:\"Newest Arrivals\"}),/*#__PURE__*/_jsx(Button,{as:Link,to:TMP_SEE_ALL_LINK,variant:\"secondary\",scale:\"sm\",endIcon:/*#__PURE__*/_jsx(ChevronRightIcon,{color:\"primary\"}),children:\"View All\"})]}),nfts?/*#__PURE__*/_jsx(Grid,{gridRowGap:\"24px\",gridColumnGap:\"16px\",gridTemplateColumns:['1fr','repeat(2, 1fr)','repeat(2, 1fr)','repeat(4, 1fr)'],children:nfts.map(function(nft){return/*#__PURE__*/_jsx(CollectibleLinkCard,{nft:nft},nft.collectionAddress+nft.tokenId);})}):/*#__PURE__*/_jsx(GridPlaceholder,{numItems:8})]});};export default Newest;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Home/Newest.tsx"],"names":["React","useState","useEffect","Heading","Flex","Button","Grid","ChevronRightIcon","Link","getLatestListedNfts","getNftsFromDifferentCollectionsApi","TMP_SEE_ALL_LINK","CollectibleLinkCard","GridPlaceholder","useNewestNfts","newestNfts","setNewestNfts","fetchNewestNfts","nftsFromSg","map","nft","collectionAddress","collection","id","tokenId","nftsFromApi","nfts","nftFromSg","index","nftFromApi","marketData","Newest"],"mappings":"4lBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,OAAT,CAAkBC,IAAlB,CAAwBC,MAAxB,CAAgCC,IAAhC,CAAsCC,gBAAtC,KAA8D,oBAA9D,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA,OAASC,mBAAT,CAA8BC,kCAA9B,KAAwE,yBAAxE,CACA,OAASC,gBAAT,KAAiC,4BAAjC,CACA,OAASC,mBAAT,KAAoC,+BAApC,CACA,MAAOC,CAAAA,eAAP,KAA4B,+BAA5B,CAEA;AACA;AACA;AACA,G,wFACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,cAAoCb,QAAQ,CAAa,IAAb,CAA5C,wCAAOc,UAAP,eAAmBC,aAAnB,eAEAd,SAAS,CAAC,UAAM,CACd,GAAMe,CAAAA,eAAe,0FAAG,yLACGR,CAAAA,mBAAmB,CAAC,CAAD,CADtB,QAChBS,UADgB,qCAEIR,CAAAA,kCAAkC,CAC1DQ,UAAU,CAACC,GAAX,CAAe,SAACC,GAAD,QAAU,CAAEC,iBAAiB,CAAED,GAAG,CAACE,UAAJ,CAAeC,EAApC,CAAwCC,OAAO,CAAEJ,GAAG,CAACI,OAArD,CAAV,EAAf,CAD0D,CAFtC,QAEhBC,WAFgB,eAMhBC,IANgB,CAMTR,UAAU,CAACC,GAAX,CAAe,SAACQ,SAAD,CAAYC,KAAZ,CAAsB,CAChD,GAAMC,CAAAA,UAAU,CAAGJ,WAAW,CAACG,KAAD,CAA9B,CACA,sCAAYC,UAAZ,MAAwBC,UAAU,CAAEH,SAApC,GACD,CAHY,CANS,CAUtBX,aAAa,CAACU,IAAD,CAAb,CAVsB,sDAAH,kBAAfT,CAAAA,eAAe,0CAArB,CAYAA,eAAe,GAChB,CAdQ,CAcN,EAdM,CAAT,CAgBA,MAAOF,CAAAA,UAAP,CACD,CApBD,CAsBA,GAAMgB,CAAAA,MAAgB,CAAG,QAAnBA,CAAAA,MAAmB,EAAM,CAC7B,GAAML,CAAAA,IAAI,CAAGZ,aAAa,EAA1B,CAEA,mBACE,oCACE,MAAC,IAAD,EAAM,cAAc,CAAC,eAArB,CAAqC,UAAU,CAAC,QAAhD,CAAyD,EAAE,CAAC,MAA5D,wBACE,KAAC,OAAD,8BADF,cAEE,KAAC,MAAD,EACE,EAAE,CAAEN,IADN,CAEE,EAAE,CAAEG,gBAFN,CAGE,OAAO,CAAC,WAHV,CAIE,KAAK,CAAC,IAJR,CAKE,OAAO,cAAE,KAAC,gBAAD,EAAkB,KAAK,CAAC,SAAxB,EALX,sBAFF,GADF,CAaGe,IAAI,cACH,KAAC,IAAD,EACE,UAAU,CAAC,MADb,CAEE,aAAa,CAAC,MAFhB,CAGE,mBAAmB,CAAE,CAAC,KAAD,CAAQ,gBAAR,CAA0B,gBAA1B,CAA4C,gBAA5C,CAHvB,UAKGA,IAAI,CAACP,GAAL,CAAS,SAACC,GAAD,CAAS,CACjB,mBAAO,KAAC,mBAAD,EAA+D,GAAG,CAAEA,GAApE,EAA0BA,GAAG,CAACC,iBAAJ,CAAwBD,GAAG,CAACI,OAAtD,CAAP,CACD,CAFA,CALH,EADG,cAWH,KAAC,eAAD,EAAiB,QAAQ,CAAE,CAA3B,EAxBJ,GADF,CA6BD,CAhCD,CAkCA,cAAeO,CAAAA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Heading, Flex, Button, Grid, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { NftToken } from 'state/nftMarket/types'\nimport { getLatestListedNfts, getNftsFromDifferentCollectionsApi } from 'state/nftMarket/helpers'\nimport { TMP_SEE_ALL_LINK } from 'views/Nft/market/constants'\nimport { CollectibleLinkCard } from '../components/CollectibleCard'\nimport GridPlaceholder from '../components/GridPlaceholder'\n\n/**\n * Fetch latest NFTs data from SG+API and combine them\n * @returns Array of NftToken\n */\nconst useNewestNfts = () => {\n  const [newestNfts, setNewestNfts] = useState<NftToken[]>(null)\n\n  useEffect(() => {\n    const fetchNewestNfts = async () => {\n      const nftsFromSg = await getLatestListedNfts(8)\n      const nftsFromApi = await getNftsFromDifferentCollectionsApi(\n        nftsFromSg.map((nft) => ({ collectionAddress: nft.collection.id, tokenId: nft.tokenId })),\n      )\n\n      const nfts = nftsFromSg.map((nftFromSg, index) => {\n        const nftFromApi = nftsFromApi[index]\n        return { ...nftFromApi, marketData: nftFromSg }\n      })\n      setNewestNfts(nfts)\n    }\n    fetchNewestNfts()\n  }, [])\n\n  return newestNfts\n}\n\nconst Newest: React.FC = () => {\n  const nfts = useNewestNfts()\n\n  return (\n    <div>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"26px\">\n        <Heading>Newest Arrivals</Heading>\n        <Button\n          as={Link}\n          to={TMP_SEE_ALL_LINK}\n          variant=\"secondary\"\n          scale=\"sm\"\n          endIcon={<ChevronRightIcon color=\"primary\" />}\n        >\n          View All\n        </Button>\n      </Flex>\n      {nfts ? (\n        <Grid\n          gridRowGap=\"24px\"\n          gridColumnGap=\"16px\"\n          gridTemplateColumns={['1fr', 'repeat(2, 1fr)', 'repeat(2, 1fr)', 'repeat(4, 1fr)']}\n        >\n          {nfts.map((nft) => {\n            return <CollectibleLinkCard key={nft.collectionAddress + nft.tokenId} nft={nft} />\n          })}\n        </Grid>\n      ) : (\n        <GridPlaceholder numItems={8} />\n      )}\n    </div>\n  )\n}\n\nexport default Newest\n"]},"metadata":{},"sourceType":"module"}