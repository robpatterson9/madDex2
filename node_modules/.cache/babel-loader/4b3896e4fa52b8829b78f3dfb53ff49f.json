{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useCallback}from'react';import{UnsupportedChainIdError,useWeb3React}from'@web3-react/core';import{NoBscProviderError}from'@binance-chain/bsc-connector';import{NoEthereumProviderError,UserRejectedRequestError as UserRejectedRequestErrorInjected}from'@web3-react/injected-connector';import{UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,WalletConnectConnector}from'@web3-react/walletconnect-connector';import{connectorLocalStorageKey}from'@pancakeswap/uikit';import{connectorsByName}from'utils/web3React';import{setupNetwork}from'utils/wallet';import useToast from'hooks/useToast';import{profileClear}from'state/profile';import{useAppDispatch}from'state';import{useTranslation}from'contexts/Localization';import{clearAllTransactions}from'state/transactions/actions';var useAuth=function useAuth(){var _useTranslation=useTranslation(),t=_useTranslation.t;var dispatch=useAppDispatch();var _useWeb3React=useWeb3React(),chainId=_useWeb3React.chainId,activate=_useWeb3React.activate,deactivate=_useWeb3React.deactivate;var _useToast=useToast(),toastError=_useToast.toastError;var login=useCallback(function(connectorID){var connector=connectorsByName[connectorID];if(connector){activate(connector,/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(error){var hasSetup,walletConnector;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(error instanceof UnsupportedChainIdError)){_context.next=7;break;}_context.next=3;return setupNetwork();case 3:hasSetup=_context.sent;if(hasSetup){activate(connector);}_context.next=9;break;case 7:window.localStorage.removeItem(connectorLocalStorageKey);if(error instanceof NoEthereumProviderError||error instanceof NoBscProviderError){toastError(t('Provider Error'),t('No provider was found'));}else if(error instanceof UserRejectedRequestErrorInjected||error instanceof UserRejectedRequestErrorWalletConnect){if(connector instanceof WalletConnectConnector){walletConnector=connector;walletConnector.walletConnectProvider=null;}toastError(t('Authorization Error'),t('Please authorize to access your account'));}else{toastError(error.name,error.message);}case 9:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());}else{toastError(t('Unable to find connector'),t('The connector config is wrong'));}},[t,activate,toastError]);var logout=useCallback(function(){dispatch(profileClear());deactivate();// This localStorage key is set by @web3-react/walletconnect-connector\nif(window.localStorage.getItem('walletconnect')){connectorsByName.walletconnect.close();connectorsByName.walletconnect.walletConnectProvider=null;}window.localStorage.removeItem(connectorLocalStorageKey);if(chainId){dispatch(clearAllTransactions({chainId:chainId}));}},[deactivate,dispatch,chainId]);return{login:login,logout:logout};};export default useAuth;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/hooks/useAuth.ts"],"names":["useCallback","UnsupportedChainIdError","useWeb3React","NoBscProviderError","NoEthereumProviderError","UserRejectedRequestError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","connectorLocalStorageKey","connectorsByName","setupNetwork","useToast","profileClear","useAppDispatch","useTranslation","clearAllTransactions","useAuth","t","dispatch","chainId","activate","deactivate","toastError","login","connectorID","connector","error","hasSetup","window","localStorage","removeItem","walletConnector","walletConnectProvider","name","message","logout","getItem","walletconnect","close"],"mappings":"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","sourcesContent":["import { useCallback } from 'react'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\nimport { clearAllTransactions } from 'state/transactions/actions'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { chainId, activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n    window.localStorage.removeItem(connectorLocalStorageKey)\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }, [deactivate, dispatch, chainId])\n\n  return { login, logout }\n}\n\nexport default useAuth\n"]},"metadata":{},"sourceType":"module"}