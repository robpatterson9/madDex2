{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Button,Text,ErrorIcon,Flex,Message,Checkbox,Link,Tag,Grid}from'@pancakeswap/uikit';import{AutoColumn}from'components/Layout/Column';import{useAddUserToken}from'state/user/hooks';import{getBscScanLink}from'utils';import truncateHash from'utils/truncateHash';import useActiveWeb3React from'hooks/useActiveWeb3React';import{useCombinedInactiveList}from'state/lists/hooks';import{ListLogo}from'components/Logo';import{useTranslation}from'contexts/Localization';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ImportToken(_ref){var tokens=_ref.tokens,handleCurrencySelect=_ref.handleCurrencySelect;var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),confirmed=_useState2[0],setConfirmed=_useState2[1];var addToken=useAddUserToken();// use for showing import source on inactive tokens\nvar inactiveTokenList=useCombinedInactiveList();return/*#__PURE__*/_jsxs(AutoColumn,{gap:\"lg\",children:[/*#__PURE__*/_jsx(Message,{variant:\"warning\",children:/*#__PURE__*/_jsxs(Text,{children:[t('Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.'),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),t('If you purchase an arbitrary token, you may be unable to sell it back.')]})}),tokens.map(function(token){var _inactiveTokenList$ch,_inactiveTokenList$ch2;var list=chainId&&(inactiveTokenList===null||inactiveTokenList===void 0?void 0:(_inactiveTokenList$ch=inactiveTokenList[chainId])===null||_inactiveTokenList$ch===void 0?void 0:(_inactiveTokenList$ch2=_inactiveTokenList$ch[token.address])===null||_inactiveTokenList$ch2===void 0?void 0:_inactiveTokenList$ch2.list);var address=token.address?\"\".concat(truncateHash(token.address)):null;return/*#__PURE__*/_jsxs(Grid,{gridTemplateRows:\"1fr 1fr 1fr\",gridGap:\"4px\",children:[list!==undefined?/*#__PURE__*/_jsxs(Tag,{variant:\"success\",outline:true,scale:\"sm\",startIcon:list.logoURI&&/*#__PURE__*/_jsx(ListLogo,{logoURI:list.logoURI,size:\"12px\"}),children:[t('via'),\" \",list.name]}):/*#__PURE__*/_jsx(Tag,{variant:\"failure\",outline:true,scale:\"sm\",startIcon:/*#__PURE__*/_jsx(ErrorIcon,{color:\"failure\"}),children:t('Unknown Source')}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(Text,{mr:\"8px\",children:token.name}),/*#__PURE__*/_jsxs(Text,{children:[\"(\",token.symbol,\")\"]})]}),chainId&&/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",width:\"100%\",children:[/*#__PURE__*/_jsx(Text,{mr:\"4px\",children:address}),/*#__PURE__*/_jsxs(Link,{href:getBscScanLink(token.address,'address',chainId),external:true,children:[\"(\",t('View on BscScan'),\")\"]})]})]},token.address);}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",onClick:function onClick(){return setConfirmed(!confirmed);},children:[/*#__PURE__*/_jsx(Checkbox,{scale:\"sm\",name:\"confirmed\",type:\"checkbox\",checked:confirmed,onChange:function onChange(){return setConfirmed(!confirmed);}}),/*#__PURE__*/_jsx(Text,{ml:\"8px\",style:{userSelect:'none'},children:t('I understand')})]}),/*#__PURE__*/_jsx(Button,{variant:\"danger\",disabled:!confirmed,onClick:function onClick(){tokens.map(function(token){return addToken(token);});if(handleCurrencySelect){handleCurrencySelect(tokens[0]);}},className:\".token-dismiss-button\",children:t('Import')})]})]});}export default ImportToken;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/components/SearchModal/ImportToken.tsx"],"names":["React","useState","Button","Text","ErrorIcon","Flex","Message","Checkbox","Link","Tag","Grid","AutoColumn","useAddUserToken","getBscScanLink","truncateHash","useActiveWeb3React","useCombinedInactiveList","ListLogo","useTranslation","ImportToken","tokens","handleCurrencySelect","chainId","t","confirmed","setConfirmed","addToken","inactiveTokenList","map","token","list","address","undefined","logoURI","name","symbol","userSelect"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport truncateHash from 'utils/truncateHash'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address ? `${truncateHash(token.address)}` : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n"]},"metadata":{},"sourceType":"module"}