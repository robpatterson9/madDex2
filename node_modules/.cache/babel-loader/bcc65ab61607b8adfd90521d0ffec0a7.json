{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Predictions/Leaderboard/components/AddressSearch.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport { useModal } from '@pancakeswap/uikit';\nimport { useAppDispatch } from 'state';\nimport { fetchAddressResult, setSelectedAddress } from 'state/predictions';\nimport AddressInputSelect from 'components/AddressInputSelect';\nimport WalletStatsModal from './WalletStatsModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddressSearch = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n\n  const handleBeforeDismiss = () => {\n    dispatch(setSelectedAddress(null));\n  };\n\n  const [onPresentWalletStatsModal] = useModal( /*#__PURE__*/_jsxDEV(WalletStatsModal, {\n    onBeforeDismiss: handleBeforeDismiss\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 48\n  }, this));\n  const handleValidAddress = useCallback(async value => {\n    var _response$payload;\n\n    const response = await dispatch(fetchAddressResult(value));\n    return ((_response$payload = response.payload) === null || _response$payload === void 0 ? void 0 : _response$payload.data) !== undefined;\n  }, [dispatch]);\n\n  const handleAddressClick = async value => {\n    await dispatch(setSelectedAddress(value));\n    onPresentWalletStatsModal();\n  };\n\n  return /*#__PURE__*/_jsxDEV(AddressInputSelect, {\n    onAddressClick: handleAddressClick,\n    onValidAddress: handleValidAddress\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AddressSearch, \"DIYjFAbrXqcFyX244GWpDVIKyTI=\", false, function () {\n  return [useAppDispatch, useModal];\n});\n\n_c = AddressSearch;\nexport default AddressSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressSearch\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/Leaderboard/components/AddressSearch.tsx"],"names":["React","useCallback","useModal","useAppDispatch","fetchAddressResult","setSelectedAddress","AddressInputSelect","WalletStatsModal","AddressSearch","dispatch","handleBeforeDismiss","onPresentWalletStatsModal","handleValidAddress","value","response","payload","data","undefined","handleAddressClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,mBAAvD;AACA,OAAOC,kBAAP,MAA+B,+BAA/B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAMC,QAAQ,GAAGN,cAAc,EAA/B;;AAEA,QAAMO,mBAAmB,GAAG,MAAM;AAChCD,IAAAA,QAAQ,CAACJ,kBAAkB,CAAC,IAAD,CAAnB,CAAR;AACD,GAFD;;AAIA,QAAM,CAACM,yBAAD,IAA8BT,QAAQ,eAAC,QAAC,gBAAD;AAAkB,IAAA,eAAe,EAAEQ;AAAnC;AAAA;AAAA;AAAA;AAAA,UAAD,CAA5C;AACA,QAAME,kBAAkB,GAAGX,WAAW,CACpC,MAAOY,KAAP,IAAyB;AAAA;;AACvB,UAAMC,QAAa,GAAG,MAAML,QAAQ,CAACL,kBAAkB,CAACS,KAAD,CAAnB,CAApC;AACA,WAAO,sBAAAC,QAAQ,CAACC,OAAT,wEAAkBC,IAAlB,MAA2BC,SAAlC;AACD,GAJmC,EAKpC,CAACR,QAAD,CALoC,CAAtC;;AAQA,QAAMS,kBAAkB,GAAG,MAAOL,KAAP,IAAyB;AAClD,UAAMJ,QAAQ,CAACJ,kBAAkB,CAACQ,KAAD,CAAnB,CAAd;AACAF,IAAAA,yBAAyB;AAC1B,GAHD;;AAKA,sBAAO,QAAC,kBAAD;AAAoB,IAAA,cAAc,EAAEO,kBAApC;AAAwD,IAAA,cAAc,EAAEN;AAAxE;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAtBD;;GAAMJ,a;UACaL,c,EAMmBD,Q;;;KAPhCM,a;AAwBN,eAAeA,aAAf","sourcesContent":["import React, { useCallback } from 'react'\nimport { useModal } from '@pancakeswap/uikit'\nimport { useAppDispatch } from 'state'\nimport { fetchAddressResult, setSelectedAddress } from 'state/predictions'\nimport AddressInputSelect from 'components/AddressInputSelect'\nimport WalletStatsModal from './WalletStatsModal'\n\nconst AddressSearch = () => {\n  const dispatch = useAppDispatch()\n\n  const handleBeforeDismiss = () => {\n    dispatch(setSelectedAddress(null))\n  }\n\n  const [onPresentWalletStatsModal] = useModal(<WalletStatsModal onBeforeDismiss={handleBeforeDismiss} />)\n  const handleValidAddress = useCallback(\n    async (value: string) => {\n      const response: any = await dispatch(fetchAddressResult(value))\n      return response.payload?.data !== undefined\n    },\n    [dispatch],\n  )\n\n  const handleAddressClick = async (value: string) => {\n    await dispatch(setSelectedAddress(value))\n    onPresentWalletStatsModal()\n  }\n\n  return <AddressInputSelect onAddressClick={handleAddressClick} onValidAddress={handleValidAddress} />\n}\n\nexport default AddressSearch\n"]},"metadata":{},"sourceType":"module"}