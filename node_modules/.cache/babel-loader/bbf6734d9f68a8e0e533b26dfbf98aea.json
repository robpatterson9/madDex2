{"ast":null,"code":"import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"lockTimestamp\",\"closeTimestamp\"];import React from'react';import{Progress}from'@pancakeswap/uikit';import{jsx as _jsx}from\"react/jsx-runtime\";var RoundProgress=function RoundProgress(_ref){var lockTimestamp=_ref.lockTimestamp,closeTimestamp=_ref.closeTimestamp,props=_objectWithoutProperties(_ref,_excluded);var startMs=lockTimestamp*1000;var endMs=closeTimestamp*1000;var now=Date.now();var rawProgress=(now-startMs)/(endMs-startMs)*100;var progress=rawProgress<=100?rawProgress:100;return/*#__PURE__*/_jsx(Progress,_objectSpread({primaryStep:progress},props));};export default RoundProgress;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/components/RoundProgress.tsx"],"names":["React","Progress","RoundProgress","lockTimestamp","closeTimestamp","props","startMs","endMs","now","Date","rawProgress","progress"],"mappings":"oXAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAwC,oBAAxC,C,2CAOA,GAAMC,CAAAA,aAA2C,CAAG,QAA9CA,CAAAA,aAA8C,MAAiD,IAA9CC,CAAAA,aAA8C,MAA9CA,aAA8C,CAA/BC,cAA+B,MAA/BA,cAA+B,CAAZC,KAAY,0CACnG,GAAMC,CAAAA,OAAO,CAAGH,aAAa,CAAG,IAAhC,CACA,GAAMI,CAAAA,KAAK,CAAGH,cAAc,CAAG,IAA/B,CACA,GAAMI,CAAAA,GAAG,CAAGC,IAAI,CAACD,GAAL,EAAZ,CACA,GAAME,CAAAA,WAAW,CAAI,CAACF,GAAG,CAAGF,OAAP,GAAmBC,KAAK,CAAGD,OAA3B,CAAD,CAAwC,GAA5D,CACA,GAAMK,CAAAA,QAAQ,CAAGD,WAAW,EAAI,GAAf,CAAqBA,WAArB,CAAmC,GAApD,CAEA,mBAAO,KAAC,QAAD,gBAAU,WAAW,CAAEC,QAAvB,EAAqCN,KAArC,EAAP,CACD,CARD,CAUA,cAAeH,CAAAA,aAAf","sourcesContent":["import React from 'react'\nimport { Progress, ProgressProps } from '@pancakeswap/uikit'\n\ninterface RoundProgressProps extends ProgressProps {\n  lockTimestamp: number\n  closeTimestamp: number\n}\n\nconst RoundProgress: React.FC<RoundProgressProps> = ({ lockTimestamp, closeTimestamp, ...props }) => {\n  const startMs = lockTimestamp * 1000\n  const endMs = closeTimestamp * 1000\n  const now = Date.now()\n  const rawProgress = ((now - startMs) / (endMs - startMs)) * 100\n  const progress = rawProgress <= 100 ? rawProgress : 100\n\n  return <Progress primaryStep={progress} {...props} />\n}\n\nexport default RoundProgress\n"]},"metadata":{},"sourceType":"module"}