{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from'react';import{Text,Heading,Flex,Skeleton,MedalBronzeIcon,MedalGoldIcon,MedalPurpleIcon,MedalSilverIcon,MedalTealIcon,BlockIcon,Button,useModal}from'@pancakeswap/uikit';import styled from'styled-components';import{useTranslation}from'contexts/Localization';import{LIVE}from'config/constants/trading-competition/easterPhases';import UserRankBox from'./UserRankBox';import NextRankBox from'./NextRankBox';import ShareImageModal from'../ShareImageModal';import{localiseTradingVolume}from'../../helpers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var TeamRankTextWrapper=styled(Flex)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  justify-content: center;\\n  svg {\\n    width: 24px;\\n  }\\n\"])));var RanksWrapper=styled(Flex)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  margin-top: 24px;\\n  flex-direction: column;\\n\\n  \",\" {\\n    flex-direction: row;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.mediaQueries.sm;});var CardUserInfo=function CardUserInfo(_ref2){var hasRegistered=_ref2.hasRegistered,account=_ref2.account,profile=_ref2.profile,userLeaderboardInformation=_ref2.userLeaderboardInformation,currentPhase=_ref2.currentPhase;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useModal=useModal(/*#__PURE__*/_jsx(ShareImageModal,{profile:profile,userLeaderboardInformation:userLeaderboardInformation}),false),_useModal2=_slicedToArray(_useModal,1),onPresentShareModal=_useModal2[0];var global=userLeaderboardInformation.global,team=userLeaderboardInformation.team,volume=userLeaderboardInformation.volume,nextRank=userLeaderboardInformation.next_rank;var shouldShowUserRanks=account&&hasRegistered;var getMedal=function getMedal(currentRank){if(currentRank===1){return{current:/*#__PURE__*/_jsx(MedalGoldIcon,{}),next:null};}if(currentRank<=10){return{current:/*#__PURE__*/_jsx(MedalSilverIcon,{}),next:/*#__PURE__*/_jsx(MedalGoldIcon,{})};}if(currentRank<=100){return{current:/*#__PURE__*/_jsx(MedalBronzeIcon,{}),next:/*#__PURE__*/_jsx(MedalSilverIcon,{})};}if(currentRank<=500){return{current:/*#__PURE__*/_jsx(MedalPurpleIcon,{}),next:/*#__PURE__*/_jsx(MedalBronzeIcon,{})};}if(currentRank>500){return{current:/*#__PURE__*/_jsx(MedalTealIcon,{}),next:/*#__PURE__*/_jsx(MedalPurpleIcon,{})};}return{current:/*#__PURE__*/_jsx(BlockIcon,{}),next:/*#__PURE__*/_jsx(MedalTealIcon,{})};};var getNextTier=function getNextTier(currentRank){if(currentRank===1){return{color:null,rank:null};}if(currentRank<=10){return{color:'GOLD',rank:1};}if(currentRank<=100){return{color:'SILVER',rank:10};}if(currentRank<=500){return{color:'BRONZE',rank:100};}if(currentRank>500){return{color:'PURPLE',rank:500};}return{color:'',rank:500};};var getHeadingText=function getHeadingText(){if(!account){return t('Check your Rank');}if(!hasRegistered){return t('You’re not participating this time.');}return\"@\".concat(profile.username);};var getSubHeadingText=function getSubHeadingText(){if(!account){return t('Connect wallet to view');}if(!hasRegistered){return t('Sorry, you needed to register during the “entry” period!');}return\"\".concat(profile.team.name);};var headingText=getHeadingText();var subHeadingText=getSubHeadingText();var nextTier=userLeaderboardInformation&&getNextTier(team);var medal=userLeaderboardInformation&&getMedal(team);return/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",alignItems:\"center\",mt:\"16px\",children:[/*#__PURE__*/_jsx(Heading,{scale:\"lg\",textAlign:\"center\",children:headingText}),/*#__PURE__*/_jsx(Text,{textAlign:\"center\",fontSize:\"14px\",color:\"textSubtle\",mt:\"4px\",children:subHeadingText}),shouldShowUserRanks&&/*#__PURE__*/_jsxs(_Fragment,{children:[profile.nft&&volume>0&&/*#__PURE__*/_jsx(Button,{mt:\"12px\",variant:\"secondary\",scale:\"sm\",onClick:onPresentShareModal,children:t('Share Score')}),/*#__PURE__*/_jsxs(RanksWrapper,{children:[/*#__PURE__*/_jsxs(Flex,{width:\"100%\",flexDirection:['column','row'],children:[volume>0&&/*#__PURE__*/_jsx(UserRankBox,{flex:\"1\",title:t('Rank in team').toUpperCase(),footer:userLeaderboardInformation?t('#%global% Overall',{global:global.toLocaleString()}):'',mr:[0,'8px'],mb:['8px',0],children:!userLeaderboardInformation?/*#__PURE__*/_jsx(Skeleton,{height:\"26px\",width:\"110px\"}):/*#__PURE__*/_jsxs(TeamRankTextWrapper,{children:[/*#__PURE__*/_jsxs(Heading,{textAlign:\"center\",scale:\"lg\",mr:\"8px\",children:[\"#\",team]}),medal.current]})}),/*#__PURE__*/_jsx(UserRankBox,{flex:\"1\",title:t('Your volume').toUpperCase(),footer:t('Since start')// Add responsive mr if competition is LIVE\n,mr:currentPhase.state===LIVE?[0,null,'8px']:0,children:!userLeaderboardInformation?/*#__PURE__*/_jsx(Skeleton,{height:\"26px\",width:\"110px\"}):/*#__PURE__*/_jsxs(Heading,{textAlign:\"center\",scale:\"lg\",children:[\"$\",userLeaderboardInformation&&localiseTradingVolume(volume)]})})]}),currentPhase.state===LIVE&&(team===1?/*#__PURE__*/ // If user is first\n_jsx(NextRankBox,{flex:\"2\",title:t('Your tier: gold').toUpperCase(),footer:t('Love, The Chefs x'),currentMedal:medal.current,hideArrow:true,children:/*#__PURE__*/_jsx(Heading,{scale:\"lg\",children:t('HECK YEAH!')})}):/*#__PURE__*/_jsx(NextRankBox,{flex:\"2\",title:\"\".concat(t('Next tier').toUpperCase(),\": \").concat(nextTier.color),footer:t('to become #%rank% in team',{rank:nextTier.rank}),currentMedal:medal.current,nextMedal:medal.next,children:/*#__PURE__*/_jsxs(Heading,{scale:\"lg\",children:[\"+$\",userLeaderboardInformation&&localiseTradingVolume(nextRank)]})}))]})]})]});};export default CardUserInfo;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/TradingCompetition/components/YourScore/CardUserInfo.tsx"],"names":["React","Text","Heading","Flex","Skeleton","MedalBronzeIcon","MedalGoldIcon","MedalPurpleIcon","MedalSilverIcon","MedalTealIcon","BlockIcon","Button","useModal","styled","useTranslation","LIVE","UserRankBox","NextRankBox","ShareImageModal","localiseTradingVolume","TeamRankTextWrapper","RanksWrapper","theme","mediaQueries","sm","CardUserInfo","hasRegistered","account","profile","userLeaderboardInformation","currentPhase","t","onPresentShareModal","global","team","volume","nextRank","next_rank","shouldShowUserRanks","getMedal","currentRank","current","next","getNextTier","color","rank","getHeadingText","username","getSubHeadingText","name","headingText","subHeadingText","nextTier","medal","nft","toUpperCase","toLocaleString","state"],"mappings":"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","sourcesContent":["import React, { ReactText } from 'react'\nimport {\n  Text,\n  Heading,\n  Flex,\n  Skeleton,\n  MedalBronzeIcon,\n  MedalGoldIcon,\n  MedalPurpleIcon,\n  MedalSilverIcon,\n  MedalTealIcon,\n  BlockIcon,\n  Button,\n  useModal,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { LIVE } from 'config/constants/trading-competition/easterPhases'\nimport { YourScoreProps } from '../../types'\nimport UserRankBox from './UserRankBox'\nimport NextRankBox from './NextRankBox'\nimport ShareImageModal from '../ShareImageModal'\nimport { localiseTradingVolume } from '../../helpers'\n\nconst TeamRankTextWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: center;\n  svg {\n    width: 24px;\n  }\n`\n\nconst RanksWrapper = styled(Flex)`\n  width: 100%;\n  margin-top: 24px;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst CardUserInfo: React.FC<YourScoreProps> = ({\n  hasRegistered,\n  account,\n  profile,\n  userLeaderboardInformation,\n  currentPhase,\n}) => {\n  const { t } = useTranslation()\n  const [onPresentShareModal] = useModal(\n    <ShareImageModal profile={profile} userLeaderboardInformation={userLeaderboardInformation} />,\n    false,\n  )\n  const { global, team, volume, next_rank: nextRank } = userLeaderboardInformation\n  const shouldShowUserRanks = account && hasRegistered\n\n  const getMedal = (currentRank: ReactText) => {\n    if (currentRank === 1) {\n      return {\n        current: <MedalGoldIcon />,\n        next: null,\n      }\n    }\n    if (currentRank <= 10) {\n      return {\n        current: <MedalSilverIcon />,\n        next: <MedalGoldIcon />,\n      }\n    }\n    if (currentRank <= 100) {\n      return {\n        current: <MedalBronzeIcon />,\n        next: <MedalSilverIcon />,\n      }\n    }\n    if (currentRank <= 500) {\n      return {\n        current: <MedalPurpleIcon />,\n        next: <MedalBronzeIcon />,\n      }\n    }\n    if (currentRank > 500) {\n      return {\n        current: <MedalTealIcon />,\n        next: <MedalPurpleIcon />,\n      }\n    }\n    return {\n      current: <BlockIcon />,\n      next: <MedalTealIcon />,\n    }\n  }\n\n  const getNextTier = (currentRank: ReactText) => {\n    if (currentRank === 1) {\n      return {\n        color: null,\n        rank: null,\n      }\n    }\n    if (currentRank <= 10) {\n      return {\n        color: 'GOLD',\n        rank: 1,\n      }\n    }\n    if (currentRank <= 100) {\n      return {\n        color: 'SILVER',\n        rank: 10,\n      }\n    }\n    if (currentRank <= 500) {\n      return {\n        color: 'BRONZE',\n        rank: 100,\n      }\n    }\n    if (currentRank > 500) {\n      return {\n        color: 'PURPLE',\n        rank: 500,\n      }\n    }\n    return {\n      color: '',\n      rank: 500,\n    }\n  }\n\n  const getHeadingText = () => {\n    if (!account) {\n      return t('Check your Rank')\n    }\n    if (!hasRegistered) {\n      return t('You’re not participating this time.')\n    }\n    return `@${profile.username}`\n  }\n\n  const getSubHeadingText = () => {\n    if (!account) {\n      return t('Connect wallet to view')\n    }\n    if (!hasRegistered) {\n      return t('Sorry, you needed to register during the “entry” period!')\n    }\n    return `${profile.team.name}`\n  }\n\n  const headingText = getHeadingText()\n  const subHeadingText = getSubHeadingText()\n  const nextTier = userLeaderboardInformation && getNextTier(team)\n  const medal = userLeaderboardInformation && getMedal(team)\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\" mt=\"16px\">\n      <Heading scale=\"lg\" textAlign=\"center\">\n        {headingText}\n      </Heading>\n      <Text textAlign=\"center\" fontSize=\"14px\" color=\"textSubtle\" mt=\"4px\">\n        {subHeadingText}\n      </Text>\n      {shouldShowUserRanks && (\n        <>\n          {profile.nft && volume > 0 && (\n            <Button mt=\"12px\" variant=\"secondary\" scale=\"sm\" onClick={onPresentShareModal}>\n              {t('Share Score')}\n            </Button>\n          )}\n          <RanksWrapper>\n            <Flex width=\"100%\" flexDirection={['column', 'row']}>\n              {volume > 0 && (\n                <UserRankBox\n                  flex=\"1\"\n                  title={t('Rank in team').toUpperCase()}\n                  footer={userLeaderboardInformation ? t('#%global% Overall', { global: global.toLocaleString() }) : ''}\n                  mr={[0, '8px']}\n                  mb={['8px', 0]}\n                >\n                  {!userLeaderboardInformation ? (\n                    <Skeleton height=\"26px\" width=\"110px\" />\n                  ) : (\n                    <TeamRankTextWrapper>\n                      <Heading textAlign=\"center\" scale=\"lg\" mr=\"8px\">\n                        #{team}\n                      </Heading>\n                      {medal.current}\n                    </TeamRankTextWrapper>\n                  )}\n                </UserRankBox>\n              )}\n              <UserRankBox\n                flex=\"1\"\n                title={t('Your volume').toUpperCase()}\n                footer={t('Since start')}\n                // Add responsive mr if competition is LIVE\n                mr={currentPhase.state === LIVE ? [0, null, '8px'] : 0}\n              >\n                {!userLeaderboardInformation ? (\n                  <Skeleton height=\"26px\" width=\"110px\" />\n                ) : (\n                  <Heading textAlign=\"center\" scale=\"lg\">\n                    ${userLeaderboardInformation && localiseTradingVolume(volume)}\n                  </Heading>\n                )}\n              </UserRankBox>\n            </Flex>\n            {/* Show next ranks if competition is LIVE */}\n            {currentPhase.state === LIVE &&\n              (team === 1 ? (\n                // If user is first\n                <NextRankBox\n                  flex=\"2\"\n                  title={t('Your tier: gold').toUpperCase()}\n                  footer={t('Love, The Chefs x')}\n                  currentMedal={medal.current}\n                  hideArrow\n                >\n                  <Heading scale=\"lg\">{t('HECK YEAH!')}</Heading>\n                </NextRankBox>\n              ) : (\n                <NextRankBox\n                  flex=\"2\"\n                  title={`${t('Next tier').toUpperCase()}: ${nextTier.color}`}\n                  footer={t('to become #%rank% in team', { rank: nextTier.rank })}\n                  currentMedal={medal.current}\n                  nextMedal={medal.next}\n                >\n                  <Heading scale=\"lg\">+${userLeaderboardInformation && localiseTradingVolume(nextRank)}</Heading>\n                </NextRankBox>\n              ))}\n          </RanksWrapper>\n        </>\n      )}\n    </Flex>\n  )\n}\n\nexport default CardUserInfo\n"]},"metadata":{},"sourceType":"module"}