{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/PositionTag.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { ArrowUpIcon, ArrowDownIcon, Flex, Text, useTooltip, TooltipText, InfoIcon } from '@pancakeswap/uikit';\nimport { BetPosition } from 'state/types';\nimport { useTranslation } from 'contexts/Localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledTag = styled(Flex)`\n  background-color: ${({\n  bg,\n  theme\n}) => theme.colors[bg]};\n  display: inline-flex;\n`;\n_c = StyledTag;\nexport const Tag = ({\n  bg = 'success',\n  startIcon,\n  children,\n  onClick,\n  ...props\n}) => {\n  const icon = startIcon || /*#__PURE__*/_jsxDEV(ArrowUpIcon, {\n    color: \"white\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 29\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(StyledTag, {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: \"4px\",\n    bg: bg,\n    py: \"4px\",\n    px: \"8px\",\n    onClick: onClick,\n    style: {\n      cursor: onClick ? 'pointer' : 'normal'\n    },\n    ...props,\n    children: [icon, /*#__PURE__*/_jsxDEV(Text, {\n      textTransform: \"uppercase\",\n      color: \"white\",\n      ml: \"4px\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Tag;\n\nconst PositionTag = ({\n  betPosition,\n  children,\n  ...props\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const isUpPosition = betPosition === BetPosition.BULL;\n  const icon = isUpPosition ? /*#__PURE__*/_jsxDEV(ArrowUpIcon, {\n    color: \"white\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 31\n  }, this) : /*#__PURE__*/_jsxDEV(ArrowDownIcon, {\n    color: \"white\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 63\n  }, this);\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      bold: true,\n      mb: \"4px\",\n      children: t('Neither side wins this round')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: t('The Locked Price & Closed Price are exactly the same (within 8 decimals), so neither side wins. All funds entered into UP and DOWN positions will go to the weekly CAKE burn.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true), {\n    placement: 'right'\n  });\n\n  if (betPosition === BetPosition.HOUSE) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [tooltipVisible && tooltip, /*#__PURE__*/_jsxDEV(TooltipText, {\n        ref: targetRef,\n        color: \"secondary\",\n        fontWeight: \"300\",\n        textTransform: \"uppercase\",\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          children: [t('To Burn'), /*#__PURE__*/_jsxDEV(InfoIcon, {\n            width: \"16px\",\n            ml: \"4px\",\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Tag, {\n    bg: isUpPosition ? 'success' : 'failure',\n    startIcon: icon,\n    ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PositionTag, \"GSMeUTDR148KmhQO/xuGuRK/xHM=\", false, function () {\n  return [useTranslation, useTooltip];\n});\n\n_c3 = PositionTag;\nexport default PositionTag;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledTag\");\n$RefreshReg$(_c2, \"Tag\");\n$RefreshReg$(_c3, \"PositionTag\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/PositionTag.tsx"],"names":["React","styled","ArrowUpIcon","ArrowDownIcon","Flex","Text","useTooltip","TooltipText","InfoIcon","BetPosition","useTranslation","StyledTag","bg","theme","colors","Tag","startIcon","children","onClick","props","icon","cursor","PositionTag","betPosition","t","isUpPosition","BULL","targetRef","tooltip","tooltipVisible","placement","HOUSE"],"mappings":"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","sourcesContent":["import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport {\n  ArrowUpIcon,\n  ArrowDownIcon,\n  Flex,\n  FlexProps,\n  Text,\n  useTooltip,\n  TooltipText,\n  InfoIcon,\n} from '@pancakeswap/uikit'\nimport { BetPosition } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface TagProps extends FlexProps {\n  bg?: string\n  startIcon?: ReactNode\n}\n\nconst StyledTag = styled(Flex)<{ bg: TagProps['bg'] }>`\n  background-color: ${({ bg, theme }) => theme.colors[bg]};\n  display: inline-flex;\n`\n\nexport const Tag: React.FC<TagProps> = ({ bg = 'success', startIcon, children, onClick, ...props }) => {\n  const icon = startIcon || <ArrowUpIcon color=\"white\" />\n\n  return (\n    <StyledTag\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      borderRadius=\"4px\"\n      bg={bg}\n      py=\"4px\"\n      px=\"8px\"\n      onClick={onClick}\n      style={{ cursor: onClick ? 'pointer' : 'normal' }}\n      {...props}\n    >\n      {icon}\n      <Text textTransform=\"uppercase\" color=\"white\" ml=\"4px\">\n        {children}\n      </Text>\n    </StyledTag>\n  )\n}\n\ninterface PositionTagProps extends FlexProps {\n  betPosition: BetPosition\n}\n\nconst PositionTag: React.FC<PositionTagProps> = ({ betPosition, children, ...props }) => {\n  const { t } = useTranslation()\n  const isUpPosition = betPosition === BetPosition.BULL\n  const icon = isUpPosition ? <ArrowUpIcon color=\"white\" /> : <ArrowDownIcon color=\"white\" />\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Neither side wins this round')}\n      </Text>\n      <Text>\n        {t(\n          'The Locked Price & Closed Price are exactly the same (within 8 decimals), so neither side wins. All funds entered into UP and DOWN positions will go to the weekly CAKE burn.',\n        )}\n      </Text>\n    </>,\n    { placement: 'right' },\n  )\n\n  if (betPosition === BetPosition.HOUSE) {\n    return (\n      <>\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} color=\"secondary\" fontWeight=\"300\" textTransform=\"uppercase\">\n          <Flex alignItems=\"center\">\n            {t('To Burn')}\n            <InfoIcon width=\"16px\" ml=\"4px\" color=\"secondary\" />\n          </Flex>\n        </TooltipText>\n      </>\n    )\n  }\n\n  return (\n    <Tag bg={isUpPosition ? 'success' : 'failure'} startIcon={icon} {...props}>\n      {children}\n    </Tag>\n  )\n}\n\nexport default PositionTag\n"]},"metadata":{},"sourceType":"module"}