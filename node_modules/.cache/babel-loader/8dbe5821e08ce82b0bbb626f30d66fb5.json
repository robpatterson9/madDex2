{"ast":null,"code":"import request, { gql } from 'graphql-request';\nimport flatten from 'lodash/flatten';\nimport { GRAPH_API_PREDICTION_V1 } from 'config/constants/endpoints';\nexport const getV1History = async (skip = 0, where = {}) => {\n  const response = await request(GRAPH_API_PREDICTION_V1, gql`\n      query getV1BetHistory($skip: Int!, $where: Bet_filter) {\n        bets(first: 1000, skip: $skip, where: $where, orderBy: createdAt, orderDirection: desc) {\n          hash\n          amount\n          position\n          claimed\n          claimedAmount\n          claimedHash\n          round {\n            epoch\n            position\n            failed\n            totalAmount\n            lockPrice\n            closePrice\n            totalBets\n            totalAmount\n          }\n        }\n      }\n    `, {\n    skip,\n    where\n  });\n  return response.bets;\n};\nexport const getAllV1History = (where = {}) => {\n  return new Promise((resolve, reject) => {\n    const bets = {};\n\n    const getHistoryChunk = async skip => {\n      try {\n        const betHistory = await getV1History(skip, where);\n        bets[skip] = betHistory;\n\n        if (betHistory.length === 0) {\n          resolve(flatten(Object.values(bets)));\n        } else {\n          getHistoryChunk(skip + 1000);\n        }\n      } catch (error) {\n        reject(error);\n      }\n    };\n\n    getHistoryChunk(0);\n  });\n};","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/v1/helpers.ts"],"names":["request","gql","flatten","GRAPH_API_PREDICTION_V1","getV1History","skip","where","response","bets","getAllV1History","Promise","resolve","reject","getHistoryChunk","betHistory","length","Object","values","error"],"mappings":"AAAA,OAAOA,OAAP,IAAkBC,GAAlB,QAA6B,iBAA7B;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,uBAAT,QAAwC,4BAAxC;AAEA,OAAO,MAAMC,YAAY,GAAG,OAAOC,IAAI,GAAG,CAAd,EAAiBC,KAAK,GAAG,EAAzB,KAAgE;AAC1F,QAAMC,QAAQ,GAAG,MAAMP,OAAO,CAC5BG,uBAD4B,EAE5BF,GAAI;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAvBgC,EAwB5B;AAAEI,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAxB4B,CAA9B;AA0BA,SAAOC,QAAQ,CAACC,IAAhB;AACD,CA5BM;AA8BP,OAAO,MAAMC,eAAe,GAAG,CAACH,KAAK,GAAG,EAAT,KAAgD;AAC7E,SAAO,IAAII,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAMJ,IAAI,GAAG,EAAb;;AAEA,UAAMK,eAAe,GAAG,MAAOR,IAAP,IAAwB;AAC9C,UAAI;AACF,cAAMS,UAAU,GAAG,MAAMV,YAAY,CAACC,IAAD,EAAOC,KAAP,CAArC;AACAE,QAAAA,IAAI,CAACH,IAAD,CAAJ,GAAaS,UAAb;;AAEA,YAAIA,UAAU,CAACC,MAAX,KAAsB,CAA1B,EAA6B;AAC3BJ,UAAAA,OAAO,CAACT,OAAO,CAACc,MAAM,CAACC,MAAP,CAAcT,IAAd,CAAD,CAAR,CAAP;AACD,SAFD,MAEO;AACLK,UAAAA,eAAe,CAACR,IAAI,GAAG,IAAR,CAAf;AACD;AACF,OATD,CASE,OAAOa,KAAP,EAAc;AACdN,QAAAA,MAAM,CAACM,KAAD,CAAN;AACD;AACF,KAbD;;AAeAL,IAAAA,eAAe,CAAC,CAAD,CAAf;AACD,GAnBM,CAAP;AAoBD,CArBM","sourcesContent":["import request, { gql } from 'graphql-request'\nimport flatten from 'lodash/flatten'\nimport { GRAPH_API_PREDICTION_V1 } from 'config/constants/endpoints'\n\nexport const getV1History = async (skip = 0, where = {}): Promise<Record<string, any>[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION_V1,\n    gql`\n      query getV1BetHistory($skip: Int!, $where: Bet_filter) {\n        bets(first: 1000, skip: $skip, where: $where, orderBy: createdAt, orderDirection: desc) {\n          hash\n          amount\n          position\n          claimed\n          claimedAmount\n          claimedHash\n          round {\n            epoch\n            position\n            failed\n            totalAmount\n            lockPrice\n            closePrice\n            totalBets\n            totalAmount\n          }\n        }\n      }\n    `,\n    { skip, where },\n  )\n  return response.bets\n}\n\nexport const getAllV1History = (where = {}): Promise<Record<string, any>[]> => {\n  return new Promise((resolve, reject) => {\n    const bets = {}\n\n    const getHistoryChunk = async (skip: number) => {\n      try {\n        const betHistory = await getV1History(skip, where)\n        bets[skip] = betHistory\n\n        if (betHistory.length === 0) {\n          resolve(flatten(Object.values(bets)))\n        } else {\n          getHistoryChunk(skip + 1000)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    getHistoryChunk(0)\n  })\n}\n"]},"metadata":{},"sourceType":"module"}