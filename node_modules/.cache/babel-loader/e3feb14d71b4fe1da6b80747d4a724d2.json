{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import{ethers}from'ethers';import{useTranslation}from'contexts/Localization';import{multicallv2}from'utils/multicall';import profileABI from'config/abi/pancakeProfile.json';import{getPancakeProfileAddress}from'utils/addressHelpers';import useToast from'hooks/useToast';var useGetProfileCosts=function useGetProfileCosts(){var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState({numberCakeToReactivate:ethers.BigNumber.from(0),numberCakeToRegister:ethers.BigNumber.from(0),numberCakeToUpdate:ethers.BigNumber.from(0)}),_useState2=_slicedToArray(_useState,2),costs=_useState2[0],setCosts=_useState2[1];var _useToast=useToast(),toastError=_useToast.toastError;useEffect(function(){var fetchCosts=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var calls,_yield$multicallv,_yield$multicallv2,_yield$multicallv2$,numberCakeToReactivate,_yield$multicallv2$2,numberCakeToRegister,_yield$multicallv2$3,numberCakeToUpdate;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;calls=['numberCakeToReactivate','numberCakeToRegister','numberCakeToUpdate'].map(function(method){return{address:getPancakeProfileAddress(),name:method};});_context.next=4;return multicallv2(profileABI,calls);case 4:_yield$multicallv=_context.sent;_yield$multicallv2=_slicedToArray(_yield$multicallv,3);_yield$multicallv2$=_slicedToArray(_yield$multicallv2[0],1);numberCakeToReactivate=_yield$multicallv2$[0];_yield$multicallv2$2=_slicedToArray(_yield$multicallv2[1],1);numberCakeToRegister=_yield$multicallv2$2[0];_yield$multicallv2$3=_slicedToArray(_yield$multicallv2[2],1);numberCakeToUpdate=_yield$multicallv2$3[0];setCosts({numberCakeToReactivate:numberCakeToReactivate,numberCakeToRegister:numberCakeToRegister,numberCakeToUpdate:numberCakeToUpdate});_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);toastError(t('Error'),t('Could not retrieve CAKE costs for profile'));case 18:case\"end\":return _context.stop();}}},_callee,null,[[0,15]]);}));return function fetchCosts(){return _ref.apply(this,arguments);};}();fetchCosts();},[setCosts,toastError,t]);return costs;};export default useGetProfileCosts;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Profile/hooks/useGetProfileCosts.ts"],"names":["useEffect","useState","ethers","useTranslation","multicallv2","profileABI","getPancakeProfileAddress","useToast","useGetProfileCosts","t","numberCakeToReactivate","BigNumber","from","numberCakeToRegister","numberCakeToUpdate","costs","setCosts","toastError","fetchCosts","calls","map","method","address","name"],"mappings":"qcAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,MAAT,KAAuB,QAAvB,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,WAAT,KAA4B,iBAA5B,CACA,MAAOC,CAAAA,UAAP,KAAuB,gCAAvB,CACA,OAASC,wBAAT,KAAyC,sBAAzC,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/B,oBAAcL,cAAc,EAA5B,CAAQM,CAAR,iBAAQA,CAAR,CACA,cAA0BR,QAAQ,CAAC,CACjCS,sBAAsB,CAAER,MAAM,CAACS,SAAP,CAAiBC,IAAjB,CAAsB,CAAtB,CADS,CAEjCC,oBAAoB,CAAEX,MAAM,CAACS,SAAP,CAAiBC,IAAjB,CAAsB,CAAtB,CAFW,CAGjCE,kBAAkB,CAAEZ,MAAM,CAACS,SAAP,CAAiBC,IAAjB,CAAsB,CAAtB,CAHa,CAAD,CAAlC,wCAAOG,KAAP,eAAcC,QAAd,eAKA,cAAuBT,QAAQ,EAA/B,CAAQU,UAAR,WAAQA,UAAR,CAEAjB,SAAS,CAAC,UAAM,CACd,GAAMkB,CAAAA,UAAU,0FAAG,+TAETC,KAFS,CAED,CAAC,wBAAD,CAA2B,sBAA3B,CAAmD,oBAAnD,EAAyEC,GAAzE,CAA6E,SAACC,MAAD,QAAa,CACtGC,OAAO,CAAEhB,wBAAwB,EADqE,CAEtGiB,IAAI,CAAEF,MAFgG,CAAb,EAA7E,CAFC,uBAMwEjB,CAAAA,WAAW,CAEhGC,UAFgG,CAEpFc,KAFoF,CANnF,2JAMPT,sBANO,qFAMmBG,oBANnB,sFAM2CC,kBAN3C,yBAUfE,QAAQ,CAAC,CACPN,sBAAsB,CAAtBA,sBADO,CAEPG,oBAAoB,CAApBA,oBAFO,CAGPC,kBAAkB,CAAlBA,kBAHO,CAAD,CAAR,CAVe,iFAgBfG,UAAU,CAACR,CAAC,CAAC,OAAD,CAAF,CAAaA,CAAC,CAAC,2CAAD,CAAd,CAAV,CAhBe,qEAAH,kBAAVS,CAAAA,UAAU,0CAAhB,CAoBAA,UAAU,GACX,CAtBQ,CAsBN,CAACF,QAAD,CAAWC,UAAX,CAAuBR,CAAvB,CAtBM,CAAT,CAwBA,MAAOM,CAAAA,KAAP,CACD,CAlCD,CAoCA,cAAeP,CAAAA,kBAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport { ethers } from 'ethers'\nimport { useTranslation } from 'contexts/Localization'\nimport { multicallv2 } from 'utils/multicall'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport useToast from 'hooks/useToast'\n\nconst useGetProfileCosts = () => {\n  const { t } = useTranslation()\n  const [costs, setCosts] = useState({\n    numberCakeToReactivate: ethers.BigNumber.from(0),\n    numberCakeToRegister: ethers.BigNumber.from(0),\n    numberCakeToUpdate: ethers.BigNumber.from(0),\n  })\n  const { toastError } = useToast()\n\n  useEffect(() => {\n    const fetchCosts = async () => {\n      try {\n        const calls = ['numberCakeToReactivate', 'numberCakeToRegister', 'numberCakeToUpdate'].map((method) => ({\n          address: getPancakeProfileAddress(),\n          name: method,\n        }))\n        const [[numberCakeToReactivate], [numberCakeToRegister], [numberCakeToUpdate]] = await multicallv2<\n          [[ethers.BigNumber], [ethers.BigNumber], [ethers.BigNumber]]\n        >(profileABI, calls)\n\n        setCosts({\n          numberCakeToReactivate,\n          numberCakeToRegister,\n          numberCakeToUpdate,\n        })\n      } catch (error) {\n        toastError(t('Error'), t('Could not retrieve CAKE costs for profile'))\n      }\n    }\n\n    fetchCosts()\n  }, [setCosts, toastError, t])\n\n  return costs\n}\n\nexport default useGetProfileCosts\n"]},"metadata":{},"sourceType":"module"}