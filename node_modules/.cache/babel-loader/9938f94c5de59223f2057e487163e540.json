{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React from'react';import{BlockIcon,CheckmarkCircleIcon,Flex,Link,OpenNewIcon,RefreshIcon}from'@pancakeswap/uikit';import styled from'styled-components';import useActiveWeb3React from'hooks/useActiveWeb3React';import{getBscScanLink}from'utils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TxnIcon=styled(Flex)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  flex: none;\\n  width: 24px;\\n\"])));var Summary=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  padding: 0 8px;\\n\"])));var TxnLink=styled(Link)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  color: \",\";\\n  display: flex;\\n  margin-bottom: 16px;\\n  width: 100%;\\n\\n  &:hover {\\n    text-decoration: none;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.text;});var renderIcon=function renderIcon(txn){var _txn$receipt,_txn$receipt2;if(!txn.receipt){return/*#__PURE__*/_jsx(RefreshIcon,{spin:true,width:\"24px\"});}return((_txn$receipt=txn.receipt)===null||_txn$receipt===void 0?void 0:_txn$receipt.status)===1||typeof((_txn$receipt2=txn.receipt)===null||_txn$receipt2===void 0?void 0:_txn$receipt2.status)==='undefined'?/*#__PURE__*/_jsx(CheckmarkCircleIcon,{color:\"success\",width:\"24px\"}):/*#__PURE__*/_jsx(BlockIcon,{color:\"failure\",width:\"24px\"});};var TransactionRow=function TransactionRow(_ref2){var _txn$summary;var txn=_ref2.txn;var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;if(!txn){return null;}return/*#__PURE__*/_jsxs(TxnLink,{href:getBscScanLink(txn.hash,'transaction',chainId),external:true,children:[/*#__PURE__*/_jsx(TxnIcon,{children:renderIcon(txn)}),/*#__PURE__*/_jsx(Summary,{children:(_txn$summary=txn.summary)!==null&&_txn$summary!==void 0?_txn$summary:txn.hash}),/*#__PURE__*/_jsx(TxnIcon,{children:/*#__PURE__*/_jsx(OpenNewIcon,{width:\"24px\",color:\"primary\"})})]});};export default TransactionRow;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/components/Menu/UserMenu/TransactionRow.tsx"],"names":["React","BlockIcon","CheckmarkCircleIcon","Flex","Link","OpenNewIcon","RefreshIcon","styled","useActiveWeb3React","getBscScanLink","TxnIcon","Summary","div","TxnLink","theme","colors","text","renderIcon","txn","receipt","status","TransactionRow","chainId","hash","summary"],"mappings":"8NAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,mBAApB,CAAyCC,IAAzC,CAA+CC,IAA/C,CAAqDC,WAArD,CAAkEC,WAAlE,KAAqF,oBAArF,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,MAAOC,CAAAA,kBAAP,KAA+B,0BAA/B,CACA,OAASC,cAAT,KAA+B,OAA/B,C,wFAMA,GAAMC,CAAAA,OAAO,CAAGH,MAAM,CAACJ,IAAD,CAAT,0HAAb,CAMA,GAAMQ,CAAAA,OAAO,CAAGJ,MAAM,CAACK,GAAV,oGAAb,CAKA,GAAMC,CAAAA,OAAO,CAAGN,MAAM,CAACH,IAAD,CAAT,sNAEF,kBAAGU,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,MAAN,CAAaC,IAA5B,EAFE,CAAb,CAYA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,GAAD,CAA6B,gCAC9C,GAAI,CAACA,GAAG,CAACC,OAAT,CAAkB,CAChB,mBAAO,KAAC,WAAD,EAAa,IAAI,KAAjB,CAAkB,KAAK,CAAC,MAAxB,EAAP,CACD,CAED,MAAO,eAAAD,GAAG,CAACC,OAAJ,oDAAaC,MAAb,IAAwB,CAAxB,EAA6B,sBAAOF,GAAG,CAACC,OAAX,wCAAO,cAAaC,MAApB,IAA+B,WAA5D,cACL,KAAC,mBAAD,EAAqB,KAAK,CAAC,SAA3B,CAAqC,KAAK,CAAC,MAA3C,EADK,cAGL,KAAC,SAAD,EAAW,KAAK,CAAC,SAAjB,CAA2B,KAAK,CAAC,MAAjC,EAHF,CAKD,CAVD,CAYA,GAAMC,CAAAA,cAA6C,CAAG,QAAhDA,CAAAA,cAAgD,OAAa,qBAAVH,CAAAA,GAAU,OAAVA,GAAU,CACjE,wBAAoBV,kBAAkB,EAAtC,CAAQc,OAAR,qBAAQA,OAAR,CAEA,GAAI,CAACJ,GAAL,CAAU,CACR,MAAO,KAAP,CACD,CAED,mBACE,MAAC,OAAD,EAAS,IAAI,CAAET,cAAc,CAACS,GAAG,CAACK,IAAL,CAAW,aAAX,CAA0BD,OAA1B,CAA7B,CAAiE,QAAQ,KAAzE,wBACE,KAAC,OAAD,WAAUL,UAAU,CAACC,GAAD,CAApB,EADF,cAEE,KAAC,OAAD,yBAAUA,GAAG,CAACM,OAAd,6CAAyBN,GAAG,CAACK,IAA7B,EAFF,cAGE,KAAC,OAAD,wBACE,KAAC,WAAD,EAAa,KAAK,CAAC,MAAnB,CAA0B,KAAK,CAAC,SAAhC,EADF,EAHF,GADF,CASD,CAhBD,CAkBA,cAAeF,CAAAA,cAAf","sourcesContent":["import React from 'react'\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\n\ninterface TransactionRowProps {\n  txn: TransactionDetails\n}\n\nconst TxnIcon = styled(Flex)`\n  align-items: center;\n  flex: none;\n  width: 24px;\n`\n\nconst Summary = styled.div`\n  flex: 1;\n  padding: 0 8px;\n`\n\nconst TxnLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst renderIcon = (txn: TransactionDetails) => {\n  if (!txn.receipt) {\n    return <RefreshIcon spin width=\"24px\" />\n  }\n\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\n  ) : (\n    <BlockIcon color=\"failure\" width=\"24px\" />\n  )\n}\n\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!txn) {\n    return null\n  }\n\n  return (\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\n      <Summary>{txn.summary ?? txn.hash}</Summary>\n      <TxnIcon>\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\n      </TxnIcon>\n    </TxnLink>\n  )\n}\n\nexport default TransactionRow\n"]},"metadata":{},"sourceType":"module"}