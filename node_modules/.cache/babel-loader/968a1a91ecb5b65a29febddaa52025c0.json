{"ast":null,"code":"import React from'react';import{Flex,Skeleton,Text}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{usePriceCakeBusd}from'state/farms/hooks';import Balance from'components/Balance';import{getBalanceNumber,getFullDisplayBalance}from'utils/formatBalance';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RewardBracketDetail=function RewardBracketDetail(_ref){var rewardBracket=_ref.rewardBracket,cakeAmount=_ref.cakeAmount,numberWinners=_ref.numberWinners,isHistoricRound=_ref.isHistoricRound,isBurn=_ref.isBurn,isLoading=_ref.isLoading;var _useTranslation=useTranslation(),t=_useTranslation.t;var cakePriceBusd=usePriceCakeBusd();var getRewardText=function getRewardText(){var numberMatch=rewardBracket+1;if(isBurn){return t('Burn');}if(rewardBracket===5){return t('Match all %numberMatch%',{numberMatch:numberMatch});}return t('Match first %numberMatch%',{numberMatch:numberMatch});};return/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",children:[isLoading?/*#__PURE__*/_jsx(Skeleton,{mb:\"4px\",mt:\"8px\",height:16,width:80}):/*#__PURE__*/_jsx(Text,{bold:true,color:isBurn?'failure':'secondary',children:getRewardText()}),/*#__PURE__*/_jsxs(_Fragment,{children:[isLoading||cakeAmount.isNaN()?/*#__PURE__*/_jsx(Skeleton,{my:\"4px\",mr:\"10px\",height:20,width:110}):/*#__PURE__*/_jsx(Balance,{fontSize:\"20px\",bold:true,unit:\" CAKE\",value:getBalanceNumber(cakeAmount),decimals:0}),isLoading||cakeAmount.isNaN()?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Skeleton,{mt:\"4px\",mb:\"16px\",height:12,width:70})}):/*#__PURE__*/_jsx(Balance,{fontSize:\"12px\",color:\"textSubtle\",prefix:\"~$\",value:getBalanceNumber(cakeAmount.times(cakePriceBusd)),decimals:0}),isHistoricRound&&cakeAmount&&/*#__PURE__*/_jsxs(_Fragment,{children:[numberWinners!=='0'&&/*#__PURE__*/_jsxs(Text,{fontSize:\"12px\",color:\"textSubtle\",children:[getFullDisplayBalance(cakeAmount.div(parseInt(numberWinners,10)),18,2),\" CAKE \",t('each')]}),/*#__PURE__*/_jsxs(Text,{fontSize:\"12px\",color:\"textSubtle\",children:[numberWinners,\" \",t('Winners')]})]})]})]});};export default RewardBracketDetail;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Lottery/components/RewardBracketDetail.tsx"],"names":["React","Flex","Skeleton","Text","useTranslation","usePriceCakeBusd","Balance","getBalanceNumber","getFullDisplayBalance","RewardBracketDetail","rewardBracket","cakeAmount","numberWinners","isHistoricRound","isBurn","isLoading","t","cakePriceBusd","getRewardText","numberMatch","isNaN","times","div","parseInt"],"mappings":"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","sourcesContent":["import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Balance from 'components/Balance'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface RewardBracketDetailProps {\n  cakeAmount: BigNumber\n  rewardBracket?: number\n  numberWinners?: string\n  isBurn?: boolean\n  isHistoricRound?: boolean\n  isLoading?: boolean\n}\n\nconst RewardBracketDetail: React.FC<RewardBracketDetailProps> = ({\n  rewardBracket,\n  cakeAmount,\n  numberWinners,\n  isHistoricRound,\n  isBurn,\n  isLoading,\n}) => {\n  const { t } = useTranslation()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const getRewardText = () => {\n    const numberMatch = rewardBracket + 1\n    if (isBurn) {\n      return t('Burn')\n    }\n    if (rewardBracket === 5) {\n      return t('Match all %numberMatch%', { numberMatch })\n    }\n    return t('Match first %numberMatch%', { numberMatch })\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      {isLoading ? (\n        <Skeleton mb=\"4px\" mt=\"8px\" height={16} width={80} />\n      ) : (\n        <Text bold color={isBurn ? 'failure' : 'secondary'}>\n          {getRewardText()}\n        </Text>\n      )}\n      <>\n        {isLoading || cakeAmount.isNaN() ? (\n          <Skeleton my=\"4px\" mr=\"10px\" height={20} width={110} />\n        ) : (\n          <Balance fontSize=\"20px\" bold unit=\" CAKE\" value={getBalanceNumber(cakeAmount)} decimals={0} />\n        )}\n        {isLoading || cakeAmount.isNaN() ? (\n          <>\n            <Skeleton mt=\"4px\" mb=\"16px\" height={12} width={70} />\n          </>\n        ) : (\n          <Balance\n            fontSize=\"12px\"\n            color=\"textSubtle\"\n            prefix=\"~$\"\n            value={getBalanceNumber(cakeAmount.times(cakePriceBusd))}\n            decimals={0}\n          />\n        )}\n        {isHistoricRound && cakeAmount && (\n          <>\n            {numberWinners !== '0' && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                {getFullDisplayBalance(cakeAmount.div(parseInt(numberWinners, 10)), 18, 2)} CAKE {t('each')}\n              </Text>\n            )}\n            <Text fontSize=\"12px\" color=\"textSubtle\">\n              {numberWinners} {t('Winners')}\n            </Text>\n          </>\n        )}\n      </>\n    </Flex>\n  )\n}\n\nexport default RewardBracketDetail\n"]},"metadata":{},"sourceType":"module"}