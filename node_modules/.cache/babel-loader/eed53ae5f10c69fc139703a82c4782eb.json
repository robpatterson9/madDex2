{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Nft/market/components/ProfileCell.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Box, Flex, BunnyPlaceholderIcon, Skeleton, Text } from '@pancakeswap/uikit';\nimport truncateHash from 'utils/truncateHash';\nimport { useGetProfileAvatar } from 'state/profile/hooks';\nimport { ProfileAvatarFetchStatus } from 'state/types';\nimport { Link } from 'react-router-dom';\nimport { nftsBaseUrl } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Avatar = styled.img`\n  margin-right: 4px;\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n\n  ${({\n  theme\n}) => theme.mediaQueries.md} {\n    margin-right: 12px;\n  }\n`;\n_c = Avatar;\nconst StyledFlex = styled(Flex)`\n  align-items: center;\n  transition: opacity 200ms ease-in;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n_c2 = StyledFlex;\n\nconst ProfileCell = ({\n  accountAddress\n}) => {\n  _s();\n\n  const {\n    username,\n    nft: profileNft,\n    usernameFetchStatus,\n    avatarFetchStatus\n  } = useGetProfileAvatar(accountAddress);\n  const profileName = username || '-';\n\n  let sellerProfilePicComponent = /*#__PURE__*/_jsxDEV(Skeleton, {\n    width: \"32px\",\n    height: \"32px\",\n    mr: ['4px', null, '12px']\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 35\n  }, this);\n\n  if (avatarFetchStatus === ProfileAvatarFetchStatus.FETCHED) {\n    var _profileNft$image;\n\n    if (profileNft === null || profileNft === void 0 ? void 0 : (_profileNft$image = profileNft.image) === null || _profileNft$image === void 0 ? void 0 : _profileNft$image.thumbnail) {\n      var _profileNft$image2;\n\n      sellerProfilePicComponent = /*#__PURE__*/_jsxDEV(Avatar, {\n        src: profileNft === null || profileNft === void 0 ? void 0 : (_profileNft$image2 = profileNft.image) === null || _profileNft$image2 === void 0 ? void 0 : _profileNft$image2.thumbnail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 35\n      }, this);\n    } else {\n      sellerProfilePicComponent = /*#__PURE__*/_jsxDEV(BunnyPlaceholderIcon, {\n        width: \"32px\",\n        height: \"32px\",\n        mr: ['4px', null, '12px']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 35\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: `${nftsBaseUrl}/profile/${accountAddress}`,\n    children: /*#__PURE__*/_jsxDEV(StyledFlex, {\n      children: [sellerProfilePicComponent, /*#__PURE__*/_jsxDEV(Box, {\n        display: \"inline\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          lineHeight: \"1.25\",\n          children: truncateHash(accountAddress)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), usernameFetchStatus !== ProfileAvatarFetchStatus.FETCHED ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Text, {\n          lineHeight: \"1.25\",\n          children: profileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileCell, \"281SVTFFd/GBlh0vUvqamFJ8u1E=\", false, function () {\n  return [useGetProfileAvatar];\n});\n\n_c3 = ProfileCell;\nexport default ProfileCell;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Avatar\");\n$RefreshReg$(_c2, \"StyledFlex\");\n$RefreshReg$(_c3, \"ProfileCell\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/components/ProfileCell.tsx"],"names":["React","styled","Box","Flex","BunnyPlaceholderIcon","Skeleton","Text","truncateHash","useGetProfileAvatar","ProfileAvatarFetchStatus","Link","nftsBaseUrl","Avatar","img","theme","mediaQueries","md","StyledFlex","ProfileCell","accountAddress","username","nft","profileNft","usernameFetchStatus","avatarFetchStatus","profileName","sellerProfilePicComponent","FETCHED","image","thumbnail"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,oBAApB,EAA0CC,QAA1C,EAAoDC,IAApD,QAAgE,oBAAhE;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,SAASC,wBAAT,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,cAA5B;;AAEA,MAAMC,MAAM,GAAGX,MAAM,CAACY,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA,CATA;KAAMJ,M;AAWN,MAAMK,UAAU,GAAGhB,MAAM,CAACE,IAAD,CAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMc,U;;AASN,MAAMC,WAAiD,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AAAA;;AAChF,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,GAAG,EAAEC,UAAjB;AAA6BC,IAAAA,mBAA7B;AAAkDC,IAAAA;AAAlD,MAAwEhB,mBAAmB,CAACW,cAAD,CAAjG;AACA,QAAMM,WAAW,GAAGL,QAAQ,IAAI,GAAhC;;AAEA,MAAIM,yBAAyB,gBAAG,QAAC,QAAD;AAAU,IAAA,KAAK,EAAC,MAAhB;AAAuB,IAAA,MAAM,EAAC,MAA9B;AAAqC,IAAA,EAAE,EAAE,CAAC,KAAD,EAAQ,IAAR,EAAc,MAAd;AAAzC;AAAA;AAAA;AAAA;AAAA,UAAhC;;AACA,MAAIF,iBAAiB,KAAKf,wBAAwB,CAACkB,OAAnD,EAA4D;AAAA;;AAC1D,QAAIL,UAAJ,aAAIA,UAAJ,4CAAIA,UAAU,CAAEM,KAAhB,sDAAI,kBAAmBC,SAAvB,EAAkC;AAAA;;AAChCH,MAAAA,yBAAyB,gBAAG,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAEJ,UAAF,aAAEA,UAAF,6CAAEA,UAAU,CAAEM,KAAd,uDAAE,mBAAmBC;AAAhC;AAAA;AAAA;AAAA;AAAA,cAA5B;AACD,KAFD,MAEO;AACLH,MAAAA,yBAAyB,gBAAG,QAAC,oBAAD;AAAsB,QAAA,KAAK,EAAC,MAA5B;AAAmC,QAAA,MAAM,EAAC,MAA1C;AAAiD,QAAA,EAAE,EAAE,CAAC,KAAD,EAAQ,IAAR,EAAc,MAAd;AAArD;AAAA;AAAA;AAAA;AAAA,cAA5B;AACD;AACF;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAG,GAAEf,WAAY,YAAWQ,cAAe,EAAnD;AAAA,2BACE,QAAC,UAAD;AAAA,iBACGO,yBADH,eAEE,QAAC,GAAD;AAAK,QAAA,OAAO,EAAC,QAAb;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,UAAU,EAAC,MAAjB;AAAA,oBAAyBnB,YAAY,CAACY,cAAD;AAArC;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGI,mBAAmB,KAAKd,wBAAwB,CAACkB,OAAjD,gBACC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBADD,gBAGC,QAAC,IAAD;AAAM,UAAA,UAAU,EAAC,MAAjB;AAAA,oBAAyBF;AAAzB;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA5BD;;GAAMP,W;UAC0EV,mB;;;MAD1EU,W;AA8BN,eAAeA,WAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, BunnyPlaceholderIcon, Skeleton, Text } from '@pancakeswap/uikit'\nimport truncateHash from 'utils/truncateHash'\nimport { useGetProfileAvatar } from 'state/profile/hooks'\nimport { ProfileAvatarFetchStatus } from 'state/types'\nimport { Link } from 'react-router-dom'\nimport { nftsBaseUrl } from '../constants'\n\nconst Avatar = styled.img`\n  margin-right: 4px;\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 12px;\n  }\n`\n\nconst StyledFlex = styled(Flex)`\n  align-items: center;\n  transition: opacity 200ms ease-in;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\nconst ProfileCell: React.FC<{ accountAddress: string }> = ({ accountAddress }) => {\n  const { username, nft: profileNft, usernameFetchStatus, avatarFetchStatus } = useGetProfileAvatar(accountAddress)\n  const profileName = username || '-'\n\n  let sellerProfilePicComponent = <Skeleton width=\"32px\" height=\"32px\" mr={['4px', null, '12px']} />\n  if (avatarFetchStatus === ProfileAvatarFetchStatus.FETCHED) {\n    if (profileNft?.image?.thumbnail) {\n      sellerProfilePicComponent = <Avatar src={profileNft?.image?.thumbnail} />\n    } else {\n      sellerProfilePicComponent = <BunnyPlaceholderIcon width=\"32px\" height=\"32px\" mr={['4px', null, '12px']} />\n    }\n  }\n\n  return (\n    <Link to={`${nftsBaseUrl}/profile/${accountAddress}`}>\n      <StyledFlex>\n        {sellerProfilePicComponent}\n        <Box display=\"inline\">\n          <Text lineHeight=\"1.25\">{truncateHash(accountAddress)}</Text>\n          {usernameFetchStatus !== ProfileAvatarFetchStatus.FETCHED ? (\n            <Skeleton />\n          ) : (\n            <Text lineHeight=\"1.25\">{profileName}</Text>\n          )}\n        </Box>\n      </StyledFlex>\n    </Link>\n  )\n}\n\nexport default ProfileCell\n"]},"metadata":{},"sourceType":"module"}