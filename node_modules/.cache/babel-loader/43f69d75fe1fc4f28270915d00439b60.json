{"ast":null,"code":"import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"title\"];import React from'react';import{Text}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{jsx as _jsx}from\"react/jsx-runtime\";var AchievementTitle=function AchievementTitle(_ref){var title=_ref.title,props=_objectWithoutProperties(_ref,_excluded);var _useTranslation=useTranslation(),t=_useTranslation.t;if(typeof title==='string'){return/*#__PURE__*/_jsx(Text,_objectSpread(_objectSpread({bold:true},props),{},{children:title}));}var key=title.key,_title$data=title.data,data=_title$data===void 0?{}:_title$data;return/*#__PURE__*/_jsx(Text,_objectSpread(_objectSpread({bold:true},props),{},{children:t(key,data)}));};export default AchievementTitle;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Profile/components/Achievements/AchievementTitle.tsx"],"names":["React","Text","useTranslation","AchievementTitle","title","props","t","key","data"],"mappings":"2VAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAgC,oBAAhC,CACA,OAASC,cAAT,KAA+B,uBAA/B,C,2CAOA,GAAMC,CAAAA,gBAAiD,CAAG,QAApDA,CAAAA,gBAAoD,MAAyB,IAAtBC,CAAAA,KAAsB,MAAtBA,KAAsB,CAAZC,KAAY,0CACjF,oBAAcH,cAAc,EAA5B,CAAQI,CAAR,iBAAQA,CAAR,CAEA,GAAI,MAAOF,CAAAA,KAAP,GAAiB,QAArB,CAA+B,CAC7B,mBACE,KAAC,IAAD,8BAAM,IAAI,KAAV,EAAeC,KAAf,eACGD,KADH,GADF,CAKD,CAED,GAAQG,CAAAA,GAAR,CAA2BH,KAA3B,CAAQG,GAAR,aAA2BH,KAA3B,CAAaI,IAAb,CAAaA,IAAb,sBAAoB,EAApB,aAEA,mBACE,KAAC,IAAD,8BAAM,IAAI,KAAV,EAAeH,KAAf,eACGC,CAAC,CAACC,GAAD,CAAMC,IAAN,CADJ,GADF,CAKD,CAlBD,CAoBA,cAAeL,CAAAA,gBAAf","sourcesContent":["import React from 'react'\nimport { Text, TextProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { TranslatableText as AchievementTitleType } from 'config/constants/types'\n\ninterface AchievementTitleProps extends TextProps {\n  title: AchievementTitleType\n}\n\nconst AchievementTitle: React.FC<AchievementTitleProps> = ({ title, ...props }) => {\n  const { t } = useTranslation()\n\n  if (typeof title === 'string') {\n    return (\n      <Text bold {...props}>\n        {title}\n      </Text>\n    )\n  }\n\n  const { key, data = {} } = title\n\n  return (\n    <Text bold {...props}>\n      {t(key, data)}\n    </Text>\n  )\n}\n\nexport default AchievementTitle\n"]},"metadata":{},"sourceType":"module"}