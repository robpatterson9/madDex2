{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useWeb3React}from'@web3-react/core';import{parseUnits}from'ethers/lib/utils';import useTheme from'hooks/useTheme';import useApproveConfirmTransaction from'hooks/useApproveConfirmTransaction';import{useCallWithGasPrice}from'hooks/useCallWithGasPrice';import useToast from'hooks/useToast';import{ToastDescriptionWithTx}from'components/Toast';import{useTranslation}from'contexts/Localization';import{isAddress}from'utils';import{useNftMarketContract,usePancakeRabbits}from'hooks/useContract';import{useAppDispatch}from'state';import{removeUserNft,updateUserNft}from'state/nftMarket/reducer';import{NftLocation}from'state/nftMarket/types';import{useGetLowestPriceFromNft}from'views/Nft/market/hooks/useGetLowestPrice';import SellStage from'./SellStage';import SetPriceStage from'./SetPriceStage';import EditStage from'./EditStage';import ApproveAndConfirmStage from'../shared/ApproveAndConfirmStage';import TransactionConfirmed from'../shared/TransactionConfirmed';import{StyledModal,stagesWithBackButton}from'./styles';import{SellingStage}from'./types';import ConfirmStage from'../shared/ConfirmStage';import RemoveStage from'./RemoveStage';import TransferStage from'./TransferStage';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var modalTitles=function modalTitles(stage,t){switch(stage){// Sell flow\ncase SellingStage.SELL:return t('Details');case SellingStage.SET_PRICE:case SellingStage.APPROVE_AND_CONFIRM_SELL:return t('Back');// Adjust price flow\ncase SellingStage.EDIT:return t('Details');case SellingStage.ADJUST_PRICE:return t('Back');case SellingStage.CONFIRM_ADJUST_PRICE:return t('Confirm transaction');// Remove from market flow\ncase SellingStage.REMOVE_FROM_MARKET:return t('Back');case SellingStage.CONFIRM_REMOVE_FROM_MARKET:return t('Confirm transaction');// Transfer flow\ncase SellingStage.TRANSFER:return t('Back');case SellingStage.CONFIRM_TRANSFER:return t('Confirm transaction');// Common\ncase SellingStage.TX_CONFIRMED:return t('Transaction Confirmed');default:return'';}};var getToastText=function getToastText(variant,stage,t){if(stage===SellingStage.CONFIRM_REMOVE_FROM_MARKET){return t('Your NFT has been returned to your wallet');}if(stage===SellingStage.CONFIRM_TRANSFER){return t('Your NFT has been transferred to another wallet');}if(variant==='sell'){return t('Your NFT has been listed for sale!');}return t('Your NFT listing has been changed.');};var SellModal=function SellModal(_ref){var variant=_ref.variant,nftToSell=_ref.nftToSell,onDismiss=_ref.onDismiss;var _useState=useState(variant==='sell'?SellingStage.SELL:SellingStage.EDIT),_useState2=_slicedToArray(_useState,2),stage=_useState2[0],setStage=_useState2[1];var _useState3=useState(variant==='sell'?'':nftToSell.marketData.currentAskPrice),_useState4=_slicedToArray(_useState3,2),price=_useState4[0],setPrice=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),transferAddress=_useState6[0],setTransferAddress=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),confirmedTxHash=_useState8[0],setConfirmedTxHash=_useState8[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var _useTheme=useTheme(),theme=_useTheme.theme;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useCallWithGasPrice=useCallWithGasPrice(),callWithGasPrice=_useCallWithGasPrice.callWithGasPrice;var _useToast=useToast(),toastSuccess=_useToast.toastSuccess;var pancakeBunniesContract=usePancakeRabbits();var nftMarketContract=useNftMarketContract();var dispatch=useAppDispatch();var isInvalidTransferAddress=transferAddress.length>0&&!isAddress(transferAddress);var _useGetLowestPriceFro=useGetLowestPriceFromNft(nftToSell),lowestPrice=_useGetLowestPriceFro.lowestPrice;var goBack=function goBack(){switch(stage){case SellingStage.SET_PRICE:setStage(SellingStage.SELL);break;case SellingStage.APPROVE_AND_CONFIRM_SELL:setStage(SellingStage.SET_PRICE);break;case SellingStage.ADJUST_PRICE:setPrice(nftToSell.marketData.currentAskPrice);setStage(SellingStage.EDIT);break;case SellingStage.CONFIRM_ADJUST_PRICE:setStage(SellingStage.ADJUST_PRICE);break;case SellingStage.REMOVE_FROM_MARKET:setStage(SellingStage.EDIT);break;case SellingStage.CONFIRM_REMOVE_FROM_MARKET:setStage(SellingStage.REMOVE_FROM_MARKET);break;case SellingStage.TRANSFER:setStage(SellingStage.SELL);break;case SellingStage.CONFIRM_TRANSFER:setStage(SellingStage.TRANSFER);break;default:break;}};var continueToNextStage=function continueToNextStage(){switch(stage){case SellingStage.SELL:setStage(SellingStage.SET_PRICE);break;case SellingStage.SET_PRICE:setStage(SellingStage.APPROVE_AND_CONFIRM_SELL);break;case SellingStage.EDIT:setStage(SellingStage.ADJUST_PRICE);break;case SellingStage.ADJUST_PRICE:setStage(SellingStage.CONFIRM_ADJUST_PRICE);break;case SellingStage.REMOVE_FROM_MARKET:setStage(SellingStage.CONFIRM_REMOVE_FROM_MARKET);break;case SellingStage.TRANSFER:setStage(SellingStage.CONFIRM_TRANSFER);break;default:break;}};var continueToRemoveFromMarketStage=function continueToRemoveFromMarketStage(){setStage(SellingStage.REMOVE_FROM_MARKET);};var continueToTransferStage=function continueToTransferStage(){setStage(SellingStage.TRANSFER);};var dispatchSuccessAction=function dispatchSuccessAction(){switch(stage){// Remove from sale\ncase SellingStage.CONFIRM_REMOVE_FROM_MARKET:dispatch(updateUserNft({tokenId:nftToSell.tokenId,collectionAddress:nftToSell.collectionAddress,location:NftLocation.WALLET}));break;// Transfer NFT\ncase SellingStage.CONFIRM_TRANSFER:dispatch(removeUserNft({tokenId:nftToSell.tokenId}));break;default:// Modify listing OR list for sale\ndispatch(updateUserNft({tokenId:nftToSell.tokenId,collectionAddress:nftToSell.collectionAddress,location:NftLocation.FORSALE}));break;}};var _useApproveConfirmTra=useApproveConfirmTransaction({onRequiresApproval:function(){var _onRequiresApproval=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var approvedForContract;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return pancakeBunniesContract.getApproved(nftToSell.tokenId);case 3:approvedForContract=_context.sent;return _context.abrupt(\"return\",approvedForContract.toLowerCase()===nftMarketContract.address.toLowerCase());case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",false);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));function onRequiresApproval(){return _onRequiresApproval.apply(this,arguments);}return onRequiresApproval;}(),onApprove:function onApprove(){return callWithGasPrice(pancakeBunniesContract,'approve',[nftMarketContract.address,nftToSell.tokenId]);},onApproveSuccess:function(){var _onApproveSuccess=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2){var receipt;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:receipt=_ref2.receipt;toastSuccess(t('Contract approved - you can now put your NFT for sale!'),/*#__PURE__*/_jsx(ToastDescriptionWithTx,{txHash:receipt.transactionHash}));case 2:case\"end\":return _context2.stop();}}},_callee2);}));function onApproveSuccess(_x){return _onApproveSuccess.apply(this,arguments);}return onApproveSuccess;}(),onConfirm:function onConfirm(){if(stage===SellingStage.CONFIRM_REMOVE_FROM_MARKET){return callWithGasPrice(nftMarketContract,'cancelAskOrder',[nftToSell.collectionAddress,nftToSell.tokenId]);}if(stage===SellingStage.CONFIRM_TRANSFER){return callWithGasPrice(pancakeBunniesContract,'safeTransferFrom(address,address,uint256)',[account,transferAddress,nftToSell.tokenId]);}var methodName=variant==='sell'?'createAskOrder':'modifyAskOrder';var askPrice=parseUnits(price);return callWithGasPrice(nftMarketContract,methodName,[nftToSell.collectionAddress,nftToSell.tokenId,askPrice]);},onSuccess:function(){var _onSuccess=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref3){var receipt;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:receipt=_ref3.receipt;toastSuccess(getToastText(variant,stage,t),/*#__PURE__*/_jsx(ToastDescriptionWithTx,{txHash:receipt.transactionHash}));dispatchSuccessAction();setConfirmedTxHash(receipt.transactionHash);setStage(SellingStage.TX_CONFIRMED);case 5:case\"end\":return _context3.stop();}}},_callee3);}));function onSuccess(_x2){return _onSuccess.apply(this,arguments);}return onSuccess;}()}),isApproving=_useApproveConfirmTra.isApproving,isApproved=_useApproveConfirmTra.isApproved,isConfirming=_useApproveConfirmTra.isConfirming,handleApprove=_useApproveConfirmTra.handleApprove,handleConfirm=_useApproveConfirmTra.handleConfirm;var showBackButton=stagesWithBackButton.includes(stage)&&!isConfirming&&!isApproving;return/*#__PURE__*/_jsxs(StyledModal,{title:modalTitles[stage],stage:stage,onDismiss:onDismiss,onBack:showBackButton?goBack:null,headerBackground:theme.colors.gradients.cardHeader,children:[stage===SellingStage.SELL&&/*#__PURE__*/_jsx(SellStage,{nftToSell:nftToSell,lowestPrice:lowestPrice,continueToNextStage:continueToNextStage,continueToTransferStage:continueToTransferStage}),stage===SellingStage.SET_PRICE&&/*#__PURE__*/_jsx(SetPriceStage,{nftToSell:nftToSell,variant:\"set\",continueToNextStage:continueToNextStage,lowestPrice:lowestPrice,price:price,setPrice:setPrice}),stage===SellingStage.APPROVE_AND_CONFIRM_SELL&&/*#__PURE__*/_jsx(ApproveAndConfirmStage,{variant:\"sell\",isApproved:isApproved,isApproving:isApproving,isConfirming:isConfirming,handleApprove:handleApprove,handleConfirm:handleConfirm}),stage===SellingStage.TX_CONFIRMED&&/*#__PURE__*/_jsx(TransactionConfirmed,{txHash:confirmedTxHash,onDismiss:onDismiss}),stage===SellingStage.EDIT&&/*#__PURE__*/_jsx(EditStage,{nftToSell:nftToSell,lowestPrice:lowestPrice,continueToAdjustPriceStage:continueToNextStage,continueToRemoveFromMarketStage:continueToRemoveFromMarketStage}),stage===SellingStage.ADJUST_PRICE&&/*#__PURE__*/_jsx(SetPriceStage,{nftToSell:nftToSell,variant:\"adjust\",continueToNextStage:continueToNextStage,currentPrice:nftToSell.marketData.currentAskPrice,lowestPrice:lowestPrice,price:price,setPrice:setPrice}),stage===SellingStage.CONFIRM_ADJUST_PRICE&&/*#__PURE__*/_jsx(ConfirmStage,{isConfirming:isConfirming,handleConfirm:handleConfirm}),stage===SellingStage.REMOVE_FROM_MARKET&&/*#__PURE__*/_jsx(RemoveStage,{continueToNextStage:continueToNextStage}),stage===SellingStage.CONFIRM_REMOVE_FROM_MARKET&&/*#__PURE__*/_jsx(ConfirmStage,{isConfirming:isConfirming,handleConfirm:handleConfirm}),stage===SellingStage.TRANSFER&&/*#__PURE__*/_jsx(TransferStage,{nftToSell:nftToSell,lowestPrice:lowestPrice,continueToNextStage:continueToNextStage,transferAddress:transferAddress,setTransferAddress:setTransferAddress,isInvalidTransferAddress:isInvalidTransferAddress}),stage===SellingStage.CONFIRM_TRANSFER&&/*#__PURE__*/_jsx(ConfirmStage,{isConfirming:isConfirming,handleConfirm:handleConfirm})]});};export default SellModal;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/components/BuySellModals/SellModal/index.tsx"],"names":["React","useState","useWeb3React","parseUnits","useTheme","useApproveConfirmTransaction","useCallWithGasPrice","useToast","ToastDescriptionWithTx","useTranslation","isAddress","useNftMarketContract","usePancakeRabbits","useAppDispatch","removeUserNft","updateUserNft","NftLocation","useGetLowestPriceFromNft","SellStage","SetPriceStage","EditStage","ApproveAndConfirmStage","TransactionConfirmed","StyledModal","stagesWithBackButton","SellingStage","ConfirmStage","RemoveStage","TransferStage","modalTitles","stage","t","SELL","SET_PRICE","APPROVE_AND_CONFIRM_SELL","EDIT","ADJUST_PRICE","CONFIRM_ADJUST_PRICE","REMOVE_FROM_MARKET","CONFIRM_REMOVE_FROM_MARKET","TRANSFER","CONFIRM_TRANSFER","TX_CONFIRMED","getToastText","variant","SellModal","nftToSell","onDismiss","setStage","marketData","currentAskPrice","price","setPrice","transferAddress","setTransferAddress","confirmedTxHash","setConfirmedTxHash","theme","account","callWithGasPrice","toastSuccess","pancakeBunniesContract","nftMarketContract","dispatch","isInvalidTransferAddress","length","lowestPrice","goBack","continueToNextStage","continueToRemoveFromMarketStage","continueToTransferStage","dispatchSuccessAction","tokenId","collectionAddress","location","WALLET","FORSALE","onRequiresApproval","getApproved","approvedForContract","toLowerCase","address","onApprove","onApproveSuccess","receipt","transactionHash","onConfirm","methodName","askPrice","onSuccess","isApproving","isApproved","isConfirming","handleApprove","handleConfirm","showBackButton","includes","colors","gradients","cardHeader"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { parseUnits } from 'ethers/lib/utils'\nimport useTheme from 'hooks/useTheme'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport useToast from 'hooks/useToast'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport { useTranslation } from 'contexts/Localization'\nimport { ContextApi } from 'contexts/Localization/types'\nimport { isAddress } from 'utils'\nimport { useNftMarketContract, usePancakeRabbits } from 'hooks/useContract'\nimport { useAppDispatch } from 'state'\nimport { removeUserNft, updateUserNft } from 'state/nftMarket/reducer'\nimport { NftLocation, NftToken } from 'state/nftMarket/types'\nimport { useGetLowestPriceFromNft } from 'views/Nft/market/hooks/useGetLowestPrice'\nimport SellStage from './SellStage'\nimport SetPriceStage from './SetPriceStage'\nimport EditStage from './EditStage'\nimport ApproveAndConfirmStage from '../shared/ApproveAndConfirmStage'\nimport TransactionConfirmed from '../shared/TransactionConfirmed'\nimport { StyledModal, stagesWithBackButton } from './styles'\nimport { SellingStage } from './types'\nimport ConfirmStage from '../shared/ConfirmStage'\nimport RemoveStage from './RemoveStage'\nimport TransferStage from './TransferStage'\n\nexport const modalTitles = (stage: SellingStage, t: ContextApi['t']) => {\n  switch (stage) {\n    // Sell flow\n    case SellingStage.SELL:\n      return t('Details')\n    case SellingStage.SET_PRICE:\n    case SellingStage.APPROVE_AND_CONFIRM_SELL:\n      return t('Back')\n    // Adjust price flow\n    case SellingStage.EDIT:\n      return t('Details')\n    case SellingStage.ADJUST_PRICE:\n      return t('Back')\n    case SellingStage.CONFIRM_ADJUST_PRICE:\n      return t('Confirm transaction')\n    // Remove from market flow\n    case SellingStage.REMOVE_FROM_MARKET:\n      return t('Back')\n    case SellingStage.CONFIRM_REMOVE_FROM_MARKET:\n      return t('Confirm transaction')\n    // Transfer flow\n    case SellingStage.TRANSFER:\n      return t('Back')\n    case SellingStage.CONFIRM_TRANSFER:\n      return t('Confirm transaction')\n    // Common\n    case SellingStage.TX_CONFIRMED:\n      return t('Transaction Confirmed')\n    default:\n      return ''\n  }\n}\n\nconst getToastText = (variant: string, stage: SellingStage, t: ContextApi['t']) => {\n  if (stage === SellingStage.CONFIRM_REMOVE_FROM_MARKET) {\n    return t('Your NFT has been returned to your wallet')\n  }\n  if (stage === SellingStage.CONFIRM_TRANSFER) {\n    return t('Your NFT has been transferred to another wallet')\n  }\n  if (variant === 'sell') {\n    return t('Your NFT has been listed for sale!')\n  }\n  return t('Your NFT listing has been changed.')\n}\n\ninterface SellModalProps extends InjectedModalProps {\n  variant: 'sell' | 'edit'\n  nftToSell: NftToken\n}\n\nconst SellModal: React.FC<SellModalProps> = ({ variant, nftToSell, onDismiss }) => {\n  const [stage, setStage] = useState(variant === 'sell' ? SellingStage.SELL : SellingStage.EDIT)\n  const [price, setPrice] = useState(variant === 'sell' ? '' : nftToSell.marketData.currentAskPrice)\n  const [transferAddress, setTransferAddress] = useState('')\n  const [confirmedTxHash, setConfirmedTxHash] = useState('')\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { account } = useWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const { toastSuccess } = useToast()\n  const pancakeBunniesContract = usePancakeRabbits()\n  const nftMarketContract = useNftMarketContract()\n  const dispatch = useAppDispatch()\n\n  const isInvalidTransferAddress = transferAddress.length > 0 && !isAddress(transferAddress)\n\n  const { lowestPrice } = useGetLowestPriceFromNft(nftToSell)\n\n  const goBack = () => {\n    switch (stage) {\n      case SellingStage.SET_PRICE:\n        setStage(SellingStage.SELL)\n        break\n      case SellingStage.APPROVE_AND_CONFIRM_SELL:\n        setStage(SellingStage.SET_PRICE)\n        break\n      case SellingStage.ADJUST_PRICE:\n        setPrice(nftToSell.marketData.currentAskPrice)\n        setStage(SellingStage.EDIT)\n        break\n      case SellingStage.CONFIRM_ADJUST_PRICE:\n        setStage(SellingStage.ADJUST_PRICE)\n        break\n      case SellingStage.REMOVE_FROM_MARKET:\n        setStage(SellingStage.EDIT)\n        break\n      case SellingStage.CONFIRM_REMOVE_FROM_MARKET:\n        setStage(SellingStage.REMOVE_FROM_MARKET)\n        break\n      case SellingStage.TRANSFER:\n        setStage(SellingStage.SELL)\n        break\n      case SellingStage.CONFIRM_TRANSFER:\n        setStage(SellingStage.TRANSFER)\n        break\n      default:\n        break\n    }\n  }\n\n  const continueToNextStage = () => {\n    switch (stage) {\n      case SellingStage.SELL:\n        setStage(SellingStage.SET_PRICE)\n        break\n      case SellingStage.SET_PRICE:\n        setStage(SellingStage.APPROVE_AND_CONFIRM_SELL)\n        break\n      case SellingStage.EDIT:\n        setStage(SellingStage.ADJUST_PRICE)\n        break\n      case SellingStage.ADJUST_PRICE:\n        setStage(SellingStage.CONFIRM_ADJUST_PRICE)\n        break\n      case SellingStage.REMOVE_FROM_MARKET:\n        setStage(SellingStage.CONFIRM_REMOVE_FROM_MARKET)\n        break\n      case SellingStage.TRANSFER:\n        setStage(SellingStage.CONFIRM_TRANSFER)\n        break\n      default:\n        break\n    }\n  }\n\n  const continueToRemoveFromMarketStage = () => {\n    setStage(SellingStage.REMOVE_FROM_MARKET)\n  }\n\n  const continueToTransferStage = () => {\n    setStage(SellingStage.TRANSFER)\n  }\n\n  const dispatchSuccessAction = () => {\n    switch (stage) {\n      // Remove from sale\n      case SellingStage.CONFIRM_REMOVE_FROM_MARKET:\n        dispatch(\n          updateUserNft({\n            tokenId: nftToSell.tokenId,\n            collectionAddress: nftToSell.collectionAddress,\n            location: NftLocation.WALLET,\n          }),\n        )\n        break\n      // Transfer NFT\n      case SellingStage.CONFIRM_TRANSFER:\n        dispatch(\n          removeUserNft({\n            tokenId: nftToSell.tokenId,\n          }),\n        )\n        break\n      default:\n        // Modify listing OR list for sale\n        dispatch(\n          updateUserNft({\n            tokenId: nftToSell.tokenId,\n            collectionAddress: nftToSell.collectionAddress,\n            location: NftLocation.FORSALE,\n          }),\n        )\n        break\n    }\n  }\n\n  const { isApproving, isApproved, isConfirming, handleApprove, handleConfirm } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const approvedForContract = await pancakeBunniesContract.getApproved(nftToSell.tokenId)\n        return approvedForContract.toLowerCase() === nftMarketContract.address.toLowerCase()\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return callWithGasPrice(pancakeBunniesContract, 'approve', [nftMarketContract.address, nftToSell.tokenId])\n    },\n    onApproveSuccess: async ({ receipt }) => {\n      toastSuccess(\n        t('Contract approved - you can now put your NFT for sale!'),\n        <ToastDescriptionWithTx txHash={receipt.transactionHash} />,\n      )\n    },\n    onConfirm: () => {\n      if (stage === SellingStage.CONFIRM_REMOVE_FROM_MARKET) {\n        return callWithGasPrice(nftMarketContract, 'cancelAskOrder', [nftToSell.collectionAddress, nftToSell.tokenId])\n      }\n      if (stage === SellingStage.CONFIRM_TRANSFER) {\n        return callWithGasPrice(pancakeBunniesContract, 'safeTransferFrom(address,address,uint256)', [\n          account,\n          transferAddress,\n          nftToSell.tokenId,\n        ])\n      }\n      const methodName = variant === 'sell' ? 'createAskOrder' : 'modifyAskOrder'\n      const askPrice = parseUnits(price)\n      return callWithGasPrice(nftMarketContract, methodName, [nftToSell.collectionAddress, nftToSell.tokenId, askPrice])\n    },\n    onSuccess: async ({ receipt }) => {\n      toastSuccess(getToastText(variant, stage, t), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n      dispatchSuccessAction()\n      setConfirmedTxHash(receipt.transactionHash)\n      setStage(SellingStage.TX_CONFIRMED)\n    },\n  })\n\n  const showBackButton = stagesWithBackButton.includes(stage) && !isConfirming && !isApproving\n\n  return (\n    <StyledModal\n      title={modalTitles[stage]}\n      stage={stage}\n      onDismiss={onDismiss}\n      onBack={showBackButton ? goBack : null}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stage === SellingStage.SELL && (\n        <SellStage\n          nftToSell={nftToSell}\n          lowestPrice={lowestPrice}\n          continueToNextStage={continueToNextStage}\n          continueToTransferStage={continueToTransferStage}\n        />\n      )}\n      {stage === SellingStage.SET_PRICE && (\n        <SetPriceStage\n          nftToSell={nftToSell}\n          variant=\"set\"\n          continueToNextStage={continueToNextStage}\n          lowestPrice={lowestPrice}\n          price={price}\n          setPrice={setPrice}\n        />\n      )}\n      {stage === SellingStage.APPROVE_AND_CONFIRM_SELL && (\n        <ApproveAndConfirmStage\n          variant=\"sell\"\n          isApproved={isApproved}\n          isApproving={isApproving}\n          isConfirming={isConfirming}\n          handleApprove={handleApprove}\n          handleConfirm={handleConfirm}\n        />\n      )}\n      {stage === SellingStage.TX_CONFIRMED && <TransactionConfirmed txHash={confirmedTxHash} onDismiss={onDismiss} />}\n      {stage === SellingStage.EDIT && (\n        <EditStage\n          nftToSell={nftToSell}\n          lowestPrice={lowestPrice}\n          continueToAdjustPriceStage={continueToNextStage}\n          continueToRemoveFromMarketStage={continueToRemoveFromMarketStage}\n        />\n      )}\n      {stage === SellingStage.ADJUST_PRICE && (\n        <SetPriceStage\n          nftToSell={nftToSell}\n          variant=\"adjust\"\n          continueToNextStage={continueToNextStage}\n          currentPrice={nftToSell.marketData.currentAskPrice}\n          lowestPrice={lowestPrice}\n          price={price}\n          setPrice={setPrice}\n        />\n      )}\n      {stage === SellingStage.CONFIRM_ADJUST_PRICE && (\n        <ConfirmStage isConfirming={isConfirming} handleConfirm={handleConfirm} />\n      )}\n      {stage === SellingStage.REMOVE_FROM_MARKET && <RemoveStage continueToNextStage={continueToNextStage} />}\n      {stage === SellingStage.CONFIRM_REMOVE_FROM_MARKET && (\n        <ConfirmStage isConfirming={isConfirming} handleConfirm={handleConfirm} />\n      )}\n      {stage === SellingStage.TRANSFER && (\n        <TransferStage\n          nftToSell={nftToSell}\n          lowestPrice={lowestPrice}\n          continueToNextStage={continueToNextStage}\n          transferAddress={transferAddress}\n          setTransferAddress={setTransferAddress}\n          isInvalidTransferAddress={isInvalidTransferAddress}\n        />\n      )}\n      {stage === SellingStage.CONFIRM_TRANSFER && (\n        <ConfirmStage isConfirming={isConfirming} handleConfirm={handleConfirm} />\n      )}\n    </StyledModal>\n  )\n}\n\nexport default SellModal\n"]},"metadata":{},"sourceType":"module"}