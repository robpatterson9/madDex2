{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import{useTranslation}from'contexts/Localization';import styled from'styled-components';import{Modal,Text,Button,OpenNewIcon,Link}from'@pancakeswap/uikit';import useTheme from'hooks/useTheme';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledLink=styled(Link)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n\"])));var NotEnoughTokensModal=function NotEnoughTokensModal(_ref){var tokenSymbol=_ref.tokenSymbol,onDismiss=_ref.onDismiss;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useTheme=useTheme(),theme=_useTheme.theme;return/*#__PURE__*/_jsxs(Modal,{title:t('%symbol% required',{symbol:tokenSymbol}),onDismiss:onDismiss,headerBackground:theme.colors.gradients.cardHeader,children:[/*#__PURE__*/_jsx(Text,{color:\"failure\",bold:true,children:t('Insufficient %symbol% balance',{symbol:tokenSymbol})}),/*#__PURE__*/_jsx(Text,{mt:\"24px\",children:t('You’ll need %symbol% to stake in this pool!',{symbol:tokenSymbol})}),/*#__PURE__*/_jsx(Text,{children:t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.',{symbol:tokenSymbol})}),/*#__PURE__*/_jsxs(Button,{mt:\"24px\",as:\"a\",external:true,href:\"/swap\",children:[t('Buy'),\" \",tokenSymbol]}),/*#__PURE__*/_jsx(StyledLink,{href:\"https://yieldwatch.net\",external:true,children:/*#__PURE__*/_jsxs(Button,{variant:\"secondary\",mt:\"8px\",width:\"100%\",children:[t('Locate Assets'),/*#__PURE__*/_jsx(OpenNewIcon,{color:\"primary\",ml:\"4px\"})]})}),/*#__PURE__*/_jsx(Button,{variant:\"text\",onClick:onDismiss,children:t('Close Window')})]});};export default NotEnoughTokensModal;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx"],"names":["React","useTranslation","styled","Modal","Text","Button","OpenNewIcon","Link","useTheme","StyledLink","NotEnoughTokensModal","tokenSymbol","onDismiss","t","theme","symbol","colors","gradients","cardHeader"],"mappings":"4LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,KAAT,CAAgBC,IAAhB,CAAsBC,MAAtB,CAA8BC,WAA9B,CAA2CC,IAA3C,KAAuD,oBAAvD,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,C,wFAOA,GAAMC,CAAAA,UAAU,CAAGP,MAAM,CAACK,IAAD,CAAT,mFAAhB,CAIA,GAAMG,CAAAA,oBAAyD,CAAG,QAA5DA,CAAAA,oBAA4D,MAAgC,IAA7BC,CAAAA,WAA6B,MAA7BA,WAA6B,CAAhBC,SAAgB,MAAhBA,SAAgB,CAChG,oBAAcX,cAAc,EAA5B,CAAQY,CAAR,iBAAQA,CAAR,CACA,cAAkBL,QAAQ,EAA1B,CAAQM,KAAR,WAAQA,KAAR,CAEA,mBACE,MAAC,KAAD,EACE,KAAK,CAAED,CAAC,CAAC,mBAAD,CAAsB,CAAEE,MAAM,CAAEJ,WAAV,CAAtB,CADV,CAEE,SAAS,CAAEC,SAFb,CAGE,gBAAgB,CAAEE,KAAK,CAACE,MAAN,CAAaC,SAAb,CAAuBC,UAH3C,wBAKE,KAAC,IAAD,EAAM,KAAK,CAAC,SAAZ,CAAsB,IAAI,KAA1B,UACGL,CAAC,CAAC,+BAAD,CAAkC,CAAEE,MAAM,CAAEJ,WAAV,CAAlC,CADJ,EALF,cAQE,KAAC,IAAD,EAAM,EAAE,CAAC,MAAT,UAAiBE,CAAC,CAAC,6CAAD,CAAgD,CAAEE,MAAM,CAAEJ,WAAV,CAAhD,CAAlB,EARF,cASE,KAAC,IAAD,WACGE,CAAC,CAAC,4EAAD,CAA+E,CAC/EE,MAAM,CAAEJ,WADuE,CAA/E,CADJ,EATF,cAcE,MAAC,MAAD,EAAQ,EAAE,CAAC,MAAX,CAAkB,EAAE,CAAC,GAArB,CAAyB,QAAQ,KAAjC,CAAkC,IAAI,CAAC,OAAvC,WACGE,CAAC,CAAC,KAAD,CADJ,KACcF,WADd,GAdF,cAiBE,KAAC,UAAD,EAAY,IAAI,CAAC,wBAAjB,CAA0C,QAAQ,KAAlD,uBACE,MAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,EAAE,CAAC,KAA/B,CAAqC,KAAK,CAAC,MAA3C,WACGE,CAAC,CAAC,eAAD,CADJ,cAEE,KAAC,WAAD,EAAa,KAAK,CAAC,SAAnB,CAA6B,EAAE,CAAC,KAAhC,EAFF,GADF,EAjBF,cAuBE,KAAC,MAAD,EAAQ,OAAO,CAAC,MAAhB,CAAuB,OAAO,CAAED,SAAhC,UACGC,CAAC,CAAC,cAAD,CADJ,EAvBF,GADF,CA6BD,CAjCD,CAmCA,cAAeH,CAAAA,oBAAf","sourcesContent":["import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n"]},"metadata":{},"sourceType":"module"}