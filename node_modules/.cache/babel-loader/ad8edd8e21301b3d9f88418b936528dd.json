{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Farms/components/FarmTable/Multiplier.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Text, HelpIcon, Skeleton, useTooltip } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`;\n_c = ReferenceElement;\nconst MultiplierWrapper = styled.div`\n  color: ${({\n  theme\n}) => theme.colors.text};\n  width: 36px;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`;\n_c2 = MultiplierWrapper;\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`;\n_c3 = Container;\n\nconst Multiplier = ({\n  multiplier\n}) => {\n  _s();\n\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : /*#__PURE__*/_jsxDEV(Skeleton, {\n    width: 30\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 69\n  }, this);\n  const {\n    t\n  } = useTranslation();\n\n  const tooltipContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      children: t('The Multiplier represents the proportion of CAKE rewards each farm receives, as a proportion of the CAKE produced each block.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      my: \"24px\",\n      children: t('For example, if a 1x farm received 1 CAKE per block, a 40x farm would receive 40 CAKE per block.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: t('This amount is already included in all APR calculations for the farm.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip(tooltipContent, {\n    placement: 'top-end',\n    tooltipOffset: [20, 10]\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(MultiplierWrapper, {\n      children: displayMultiplier\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReferenceElement, {\n      ref: targetRef,\n      children: /*#__PURE__*/_jsxDEV(HelpIcon, {\n        color: \"textSubtle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), tooltipVisible && tooltip]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Multiplier, \"GSMeUTDR148KmhQO/xuGuRK/xHM=\", false, function () {\n  return [useTranslation, useTooltip];\n});\n\n_c4 = Multiplier;\nexport default Multiplier;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReferenceElement\");\n$RefreshReg$(_c2, \"MultiplierWrapper\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"Multiplier\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Farms/components/FarmTable/Multiplier.tsx"],"names":["React","styled","Text","HelpIcon","Skeleton","useTooltip","useTranslation","ReferenceElement","div","MultiplierWrapper","theme","colors","text","mediaQueries","lg","Container","Multiplier","multiplier","displayMultiplier","toLowerCase","t","tooltipContent","targetRef","tooltip","tooltipVisible","placement","tooltipOffset"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,QAAzB,EAAmCC,UAAnC,QAAqD,oBAArD;AACA,SAASC,cAAT,QAA+B,uBAA/B;;;AAEA,MAAMC,gBAAgB,GAAGN,MAAM,CAACO,GAAI;AACpC;AACA,CAFA;KAAMD,gB;AAQN,MAAME,iBAAiB,GAAGR,MAAM,CAACO,GAAI;AACrC,WAAW,CAAC;AAAEE,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,IAAK;AAC5C;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA;AACA,CAVA;MAAML,iB;AAYN,MAAMM,SAAS,GAAGd,MAAM,CAACO,GAAI;AAC7B;AACA;AACA,CAHA;MAAMO,S;;AAKN,MAAMC,UAAoD,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAAA;;AAC/E,QAAMC,iBAAiB,GAAGD,UAAU,GAAGA,UAAU,CAACE,WAAX,EAAH,gBAA8B,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAjB;AAAA;AAAA;AAAA;AAAA,UAAlE;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAQd,cAAc,EAA5B;;AACA,QAAMe,cAAc,gBAClB;AAAA,4BACE,QAAC,IAAD;AAAA,gBACGD,CAAC,CACA,+HADA;AADJ;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,MAAT;AAAA,gBACGA,CAAC,CAAC,kGAAD;AADJ;AAAA;AAAA;AAAA;AAAA,YANF,eASE,QAAC,IAAD;AAAA,gBAAOA,CAAC,CAAC,uEAAD;AAAR;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;;AAaA,QAAM;AAAEE,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,MAAyCnB,UAAU,CAACgB,cAAD,EAAiB;AACxEI,IAAAA,SAAS,EAAE,SAD6D;AAExEC,IAAAA,aAAa,EAAE,CAAC,EAAD,EAAK,EAAL;AAFyD,GAAjB,CAAzD;AAKA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,iBAAD;AAAA,gBAAoBR;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,gBAAD;AAAkB,MAAA,GAAG,EAAEI,SAAvB;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,EAKGE,cAAc,IAAID,OALrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA9BD;;GAAMP,U;UAEUV,c,EAciCD,U;;;MAhB3CW,U;AAgCN,eAAeA,UAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Text, HelpIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface MultiplierProps {\n  multiplier: string\n}\n\nconst MultiplierWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  width: 36px;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />\n  const { t } = useTranslation()\n  const tooltipContent = (\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of CAKE rewards each farm receives, as a proportion of the CAKE produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 CAKE per block, a 40x farm would receive 40 CAKE per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>\n  )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\n    placement: 'top-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <Container>\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Multiplier\n"]},"metadata":{},"sourceType":"module"}