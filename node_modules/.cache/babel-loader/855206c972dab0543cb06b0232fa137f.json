{"ast":null,"code":"import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"epoch\",\"onSuccess\",\"children\"];import React,{useState}from'react';import{AutoRenewIcon,Button}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{usePredictionsContract}from'hooks/useContract';import useToast from'hooks/useToast';import{useCallWithGasPrice}from'hooks/useCallWithGasPrice';import{ToastDescriptionWithTx}from'components/Toast';import{jsx as _jsx}from\"react/jsx-runtime\";var ReclaimPositionButton=function ReclaimPositionButton(_ref){var epoch=_ref.epoch,onSuccess=_ref.onSuccess,children=_ref.children,props=_objectWithoutProperties(_ref,_excluded);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isPendingTx=_useState2[0],setIsPendingTx=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var predictionsContract=usePredictionsContract();var _useCallWithGasPrice=useCallWithGasPrice(),callWithGasPrice=_useCallWithGasPrice.callWithGasPrice;var _useToast=useToast(),toastSuccess=_useToast.toastSuccess,toastError=_useToast.toastError;var handleReclaim=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var tx,receipt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return callWithGasPrice(predictionsContract,'claim',[[epoch]]);case 2:tx=_context.sent;setIsPendingTx(true);_context.next=6;return tx.wait();case 6:receipt=_context.sent;if(!receipt.status){_context.next=15;break;}if(!onSuccess){_context.next=11;break;}_context.next=11;return onSuccess();case 11:setIsPendingTx(false);toastSuccess(t('Position reclaimed!'),/*#__PURE__*/_jsx(ToastDescriptionWithTx,{txHash:receipt.transactionHash}));_context.next=17;break;case 15:setIsPendingTx(false);toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));case 17:case\"end\":return _context.stop();}}},_callee);}));return function handleReclaim(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(Button,_objectSpread(_objectSpread({onClick:handleReclaim,isLoading:isPendingTx,endIcon:isPendingTx?/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,color:\"white\"}):null},props),{},{children:children||t('Reclaim Position')}));};export default ReclaimPositionButton;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/ReclaimPositionButton.tsx"],"names":["React","useState","AutoRenewIcon","Button","useTranslation","usePredictionsContract","useToast","useCallWithGasPrice","ToastDescriptionWithTx","ReclaimPositionButton","epoch","onSuccess","children","props","isPendingTx","setIsPendingTx","t","predictionsContract","callWithGasPrice","toastSuccess","toastError","handleReclaim","tx","wait","receipt","status","transactionHash"],"mappings":"uzBAAA,MAAOA,CAAAA,KAAP,EAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,aAAT,CAAwBC,MAAxB,KAAmD,oBAAnD,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,sBAAT,KAAuC,mBAAvC,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,OAASC,mBAAT,KAAoC,2BAApC,CACA,OAASC,sBAAT,KAAuC,kBAAvC,C,2CAQA,GAAMC,CAAAA,qBAA2D,CAAG,QAA9DA,CAAAA,qBAA8D,MAA8C,IAA3CC,CAAAA,KAA2C,MAA3CA,KAA2C,CAApCC,SAAoC,MAApCA,SAAoC,CAAzBC,QAAyB,MAAzBA,QAAyB,CAAZC,KAAY,0CAChH,cAAsCZ,QAAQ,CAAC,KAAD,CAA9C,wCAAOa,WAAP,eAAoBC,cAApB,eACA,oBAAcX,cAAc,EAA5B,CAAQY,CAAR,iBAAQA,CAAR,CACA,GAAMC,CAAAA,mBAAmB,CAAGZ,sBAAsB,EAAlD,CACA,yBAA6BE,mBAAmB,EAAhD,CAAQW,gBAAR,sBAAQA,gBAAR,CACA,cAAqCZ,QAAQ,EAA7C,CAAQa,YAAR,WAAQA,YAAR,CAAsBC,UAAtB,WAAsBA,UAAtB,CAEA,GAAMC,CAAAA,aAAa,2FAAG,wKACHH,CAAAA,gBAAgB,CAACD,mBAAD,CAAsB,OAAtB,CAA+B,CAAC,CAACP,KAAD,CAAD,CAA/B,CADb,QACdY,EADc,eAEpBP,cAAc,CAAC,IAAD,CAAd,CAFoB,sBAIEO,CAAAA,EAAE,CAACC,IAAH,EAJF,QAIdC,OAJc,mBAKhBA,OAAO,CAACC,MALQ,8BAMdd,SANc,iDAOVA,CAAAA,SAAS,EAPC,SASlBI,cAAc,CAAC,KAAD,CAAd,CACAI,YAAY,CAACH,CAAC,CAAC,qBAAD,CAAF,cAA2B,KAAC,sBAAD,EAAwB,MAAM,CAAEQ,OAAO,CAACE,eAAxC,EAA3B,CAAZ,CAVkB,+BAYlBX,cAAc,CAAC,KAAD,CAAd,CACAK,UAAU,CAACJ,CAAC,CAAC,OAAD,CAAF,CAAaA,CAAC,CAAC,oFAAD,CAAd,CAAV,CAbkB,uDAAH,kBAAbK,CAAAA,aAAa,2CAAnB,CAiBA,mBACE,KAAC,MAAD,8BACE,OAAO,CAAEA,aADX,CAEE,SAAS,CAAEP,WAFb,CAGE,OAAO,CAAEA,WAAW,cAAG,KAAC,aAAD,EAAe,IAAI,KAAnB,CAAoB,KAAK,CAAC,OAA1B,EAAH,CAA0C,IAHhE,EAIMD,KAJN,eAMGD,QAAQ,EAAII,CAAC,CAAC,kBAAD,CANhB,GADF,CAUD,CAlCD,CAoCA,cAAeP,CAAAA,qBAAf","sourcesContent":["import React, { ReactNode, useState } from 'react'\nimport { AutoRenewIcon, Button, ButtonProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePredictionsContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { ToastDescriptionWithTx } from 'components/Toast'\n\ninterface ReclaimPositionButtonProps extends ButtonProps {\n  epoch: number\n  onSuccess?: () => Promise<void>\n  children?: ReactNode\n}\n\nconst ReclaimPositionButton: React.FC<ReclaimPositionButtonProps> = ({ epoch, onSuccess, children, ...props }) => {\n  const [isPendingTx, setIsPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const predictionsContract = usePredictionsContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const { toastSuccess, toastError } = useToast()\n\n  const handleReclaim = async () => {\n    const tx = await callWithGasPrice(predictionsContract, 'claim', [[epoch]])\n    setIsPendingTx(true)\n\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      if (onSuccess) {\n        await onSuccess()\n      }\n      setIsPendingTx(false)\n      toastSuccess(t('Position reclaimed!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n    } else {\n      setIsPendingTx(false)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }\n\n  return (\n    <Button\n      onClick={handleReclaim}\n      isLoading={isPendingTx}\n      endIcon={isPendingTx ? <AutoRenewIcon spin color=\"white\" /> : null}\n      {...props}\n    >\n      {children || t('Reclaim Position')}\n    </Button>\n  )\n}\n\nexport default ReclaimPositionButton\n"]},"metadata":{},"sourceType":"module"}