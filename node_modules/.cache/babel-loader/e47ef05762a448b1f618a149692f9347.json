{"ast":null,"code":"import _toConsumableArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import{ETHER,Token}from'@pancakeswap/sdk';import{BinanceIcon}from'@pancakeswap/uikit';import React,{useMemo}from'react';import styled from'styled-components';import useHttpLocations from'../../hooks/useHttpLocations';import{WrappedTokenInfo}from'../../state/lists/hooks';import getTokenLogoURL from'../../utils/getTokenLogoURL';import Logo from'./Logo';import{jsx as _jsx}from\"react/jsx-runtime\";var StyledLogo=styled(Logo)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: \",\";\\n  height: \",\";\\n\"])),function(_ref){var size=_ref.size;return size;},function(_ref2){var size=_ref2.size;return size;});export default function CurrencyLogo(_ref3){var _currency$symbol;var currency=_ref3.currency,_ref3$size=_ref3.size,size=_ref3$size===void 0?'24px':_ref3$size,style=_ref3.style;var uriLocations=useHttpLocations(currency instanceof WrappedTokenInfo?currency.logoURI:undefined);var srcs=useMemo(function(){if(currency===ETHER)return[];if(currency instanceof Token){if(currency instanceof WrappedTokenInfo){return[].concat(_toConsumableArray(uriLocations),[getTokenLogoURL(currency.address)]);}return[getTokenLogoURL(currency.address)];}return[];},[currency,uriLocations]);if(currency===ETHER){return/*#__PURE__*/_jsx(BinanceIcon,{width:size,style:style});}return/*#__PURE__*/_jsx(StyledLogo,{size:size,srcs:srcs,alt:\"\".concat((_currency$symbol=currency===null||currency===void 0?void 0:currency.symbol)!==null&&_currency$symbol!==void 0?_currency$symbol:'token',\" logo\"),style:style});}","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/components/Logo/CurrencyLogo.tsx"],"names":["ETHER","Token","BinanceIcon","React","useMemo","styled","useHttpLocations","WrappedTokenInfo","getTokenLogoURL","Logo","StyledLogo","size","CurrencyLogo","currency","style","uriLocations","logoURI","undefined","srcs","address","symbol"],"mappings":"4VAAA,OAAmBA,KAAnB,CAA0BC,KAA1B,KAAuC,kBAAvC,CACA,OAASC,WAAT,KAA4B,oBAA5B,CACA,MAAOC,CAAAA,KAAP,EAAgBC,OAAhB,KAA+B,OAA/B,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,8BAA7B,CACA,OAASC,gBAAT,KAAiC,yBAAjC,CACA,MAAOC,CAAAA,eAAP,KAA4B,6BAA5B,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,C,2CAEA,GAAMC,CAAAA,UAAU,CAAGL,MAAM,CAACI,IAAD,CAAT,kGACL,kBAAGE,CAAAA,IAAH,MAAGA,IAAH,OAAcA,CAAAA,IAAd,EADK,CAEJ,mBAAGA,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAd,EAFI,CAAhB,CAKA,cAAe,SAASC,CAAAA,YAAT,OAQZ,yBAPDC,CAAAA,QAOC,OAPDA,QAOC,kBANDF,IAMC,CANDA,IAMC,qBANM,MAMN,YALDG,KAKC,OALDA,KAKC,CACD,GAAMC,CAAAA,YAAY,CAAGT,gBAAgB,CAACO,QAAQ,WAAYN,CAAAA,gBAApB,CAAuCM,QAAQ,CAACG,OAAhD,CAA0DC,SAA3D,CAArC,CAEA,GAAMC,CAAAA,IAAc,CAAGd,OAAO,CAAC,UAAM,CACnC,GAAIS,QAAQ,GAAKb,KAAjB,CAAwB,MAAO,EAAP,CAExB,GAAIa,QAAQ,WAAYZ,CAAAA,KAAxB,CAA+B,CAC7B,GAAIY,QAAQ,WAAYN,CAAAA,gBAAxB,CAA0C,CACxC,mCAAWQ,YAAX,GAAyBP,eAAe,CAACK,QAAQ,CAACM,OAAV,CAAxC,GACD,CACD,MAAO,CAACX,eAAe,CAACK,QAAQ,CAACM,OAAV,CAAhB,CAAP,CACD,CACD,MAAO,EAAP,CACD,CAV6B,CAU3B,CAACN,QAAD,CAAWE,YAAX,CAV2B,CAA9B,CAYA,GAAIF,QAAQ,GAAKb,KAAjB,CAAwB,CACtB,mBAAO,KAAC,WAAD,EAAa,KAAK,CAAEW,IAApB,CAA0B,KAAK,CAAEG,KAAjC,EAAP,CACD,CAED,mBAAO,KAAC,UAAD,EAAY,IAAI,CAAEH,IAAlB,CAAwB,IAAI,CAAEO,IAA9B,CAAoC,GAAG,6BAAKL,QAAL,SAAKA,QAAL,iBAAKA,QAAQ,CAAEO,MAAf,qDAAyB,OAAzB,SAAvC,CAAgF,KAAK,CAAEN,KAAvF,EAAP,CACD","sourcesContent":["import { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n"]},"metadata":{},"sourceType":"module"}