{"ast":null,"code":"import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import{Image,Flex,Text,Td,IconButton,Link,OpenNewIcon,useMatchBreakpoints,useModal}from'@pancakeswap/uikit';import styled from'styled-components';import{getBscScanLink}from'utils';import useActiveWeb3React from'hooks/useActiveWeb3React';import ProfileCell from'views/Nft/market/components/ProfileCell';import ActivityEventText from'./ActivityEventText';import ActivityPrice from'./ActivityPrice';import MobileModal from'./MobileModal';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var RoundedImage=styled(Image)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  & > img {\\n    border-radius: \",\";\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.radii.default;});var ActivityRow=function ActivityRow(_ref2){var activity=_ref2.activity,bnbBusdPrice=_ref2.bnbBusdPrice,nft=_ref2.nft;var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var _useMatchBreakpoints=useMatchBreakpoints(),isXs=_useMatchBreakpoints.isXs,isSm=_useMatchBreakpoints.isSm;var priceAsFloat=parseFloat(activity.price);var timestampAsMs=parseFloat(activity.timestamp)*1000;var localeTimestamp=new Date(timestampAsMs).toLocaleString(undefined,{year:'numeric',month:'numeric',day:'numeric',hour:'numeric',minute:'numeric'});var _useModal=useModal(/*#__PURE__*/_jsx(MobileModal,{nft:nft,activity:activity,localeTimestamp:localeTimestamp,bnbBusdPrice:bnbBusdPrice})),_useModal2=_slicedToArray(_useModal,1),onPresentMobileModal=_useModal2[0];return/*#__PURE__*/_jsxs(\"tr\",_objectSpread(_objectSpread({},(isXs||isSm)&&{onClick:onPresentMobileModal}),{},{children:[/*#__PURE__*/_jsx(Td,{children:/*#__PURE__*/_jsxs(Flex,{justifyContent:\"flex-start\",alignItems:\"center\",flexDirection:['column',null,'row'],children:[/*#__PURE__*/_jsx(RoundedImage,{src:nft===null||nft===void 0?void 0:nft.image.thumbnail,alt:nft===null||nft===void 0?void 0:nft.name,width:64,height:64,mr:[0,null,'16px'],mb:['8px',null,0]}),/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",children:[/*#__PURE__*/_jsx(Text,{textAlign:['center',null,'left'],color:\"textSubtle\",fontSize:\"14px\",children:nft===null||nft===void 0?void 0:nft.collectionName}),/*#__PURE__*/_jsx(Text,{textAlign:['center',null,'left'],bold:true,children:nft===null||nft===void 0?void 0:nft.name})]})]})}),/*#__PURE__*/_jsxs(Td,{children:[/*#__PURE__*/_jsx(Flex,{alignItems:\"center\",justifyContent:\"flex-end\",children:/*#__PURE__*/_jsx(ActivityEventText,{marketEvent:activity.marketEvent})}),isXs||isSm?/*#__PURE__*/_jsx(ActivityPrice,{price:priceAsFloat,bnbBusdPrice:bnbBusdPrice}):null]}),isXs||isSm?null:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Td,{children:/*#__PURE__*/_jsx(ActivityPrice,{price:priceAsFloat,bnbBusdPrice:bnbBusdPrice})}),/*#__PURE__*/_jsx(Td,{children:/*#__PURE__*/_jsx(Flex,{justifyContent:\"flex-end\",alignItems:\"center\",children:activity.otherParty?/*#__PURE__*/_jsx(ProfileCell,{accountAddress:activity.otherParty}):'-'})})]}),/*#__PURE__*/_jsx(Td,{children:/*#__PURE__*/_jsx(Flex,{justifyContent:\"center\",children:/*#__PURE__*/_jsx(Text,{textAlign:\"center\",fontSize:isXs||isSm?'12px':'16px',children:localeTimestamp})})}),isXs||isSm?null:/*#__PURE__*/_jsx(Td,{children:/*#__PURE__*/_jsx(IconButton,{as:Link,external:true,href:getBscScanLink(activity.tx,'transaction',chainId),children:/*#__PURE__*/_jsx(OpenNewIcon,{color:\"textSubtle\",width:\"18px\"})})})]}));};export default ActivityRow;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Profile/components/ActivityHistory/ActivityRow.tsx"],"names":["React","Image","Flex","Text","Td","IconButton","Link","OpenNewIcon","useMatchBreakpoints","useModal","styled","getBscScanLink","useActiveWeb3React","ProfileCell","ActivityEventText","ActivityPrice","MobileModal","RoundedImage","theme","radii","default","ActivityRow","activity","bnbBusdPrice","nft","chainId","isXs","isSm","priceAsFloat","parseFloat","price","timestampAsMs","timestamp","localeTimestamp","Date","toLocaleString","undefined","year","month","day","hour","minute","onPresentMobileModal","onClick","image","thumbnail","name","collectionName","marketEvent","otherParty","tx"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Image, Flex, Text, Td, IconButton, Link, OpenNewIcon, useMatchBreakpoints, useModal } from '@pancakeswap/uikit'\nimport { NftToken } from 'state/nftMarket/types'\nimport { Price } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport ProfileCell from 'views/Nft/market/components/ProfileCell'\nimport { Activity } from '../../hooks/useUserActivity'\nimport ActivityEventText from './ActivityEventText'\nimport ActivityPrice from './ActivityPrice'\nimport MobileModal from './MobileModal'\n\nconst RoundedImage = styled(Image)`\n  & > img {\n    border-radius: ${({ theme }) => theme.radii.default};\n  }\n`\n\ninterface ActivityRowProps {\n  activity: Activity\n  nft: NftToken\n  bnbBusdPrice: Price\n}\n\nconst ActivityRow: React.FC<ActivityRowProps> = ({ activity, bnbBusdPrice, nft }) => {\n  const { chainId } = useActiveWeb3React()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const priceAsFloat = parseFloat(activity.price)\n  const timestampAsMs = parseFloat(activity.timestamp) * 1000\n  const localeTimestamp = new Date(timestampAsMs).toLocaleString(undefined, {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n  })\n  const [onPresentMobileModal] = useModal(\n    <MobileModal nft={nft} activity={activity} localeTimestamp={localeTimestamp} bnbBusdPrice={bnbBusdPrice} />,\n  )\n\n  return (\n    <tr {...((isXs || isSm) && { onClick: onPresentMobileModal })}>\n      <Td>\n        <Flex justifyContent=\"flex-start\" alignItems=\"center\" flexDirection={['column', null, 'row']}>\n          <RoundedImage\n            src={nft?.image.thumbnail}\n            alt={nft?.name}\n            width={64}\n            height={64}\n            mr={[0, null, '16px']}\n            mb={['8px', null, 0]}\n          />\n          <Flex flexDirection=\"column\">\n            <Text textAlign={['center', null, 'left']} color=\"textSubtle\" fontSize=\"14px\">\n              {nft?.collectionName}\n            </Text>\n            <Text textAlign={['center', null, 'left']} bold>\n              {nft?.name}\n            </Text>\n          </Flex>\n        </Flex>\n      </Td>\n      <Td>\n        <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n          <ActivityEventText marketEvent={activity.marketEvent} />\n        </Flex>\n        {isXs || isSm ? <ActivityPrice price={priceAsFloat} bnbBusdPrice={bnbBusdPrice} /> : null}\n      </Td>\n      {isXs || isSm ? null : (\n        <>\n          <Td>\n            <ActivityPrice price={priceAsFloat} bnbBusdPrice={bnbBusdPrice} />\n          </Td>\n          <Td>\n            <Flex justifyContent=\"flex-end\" alignItems=\"center\">\n              {activity.otherParty ? <ProfileCell accountAddress={activity.otherParty} /> : '-'}\n            </Flex>\n          </Td>\n        </>\n      )}\n      <Td>\n        <Flex justifyContent=\"center\">\n          <Text textAlign=\"center\" fontSize={isXs || isSm ? '12px' : '16px'}>\n            {localeTimestamp}\n          </Text>\n        </Flex>\n      </Td>\n      {isXs || isSm ? null : (\n        <Td>\n          <IconButton as={Link} external href={getBscScanLink(activity.tx, 'transaction', chainId)}>\n            <OpenNewIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </Td>\n      )}\n    </tr>\n  )\n}\n\nexport default ActivityRow\n"]},"metadata":{},"sourceType":"module"}