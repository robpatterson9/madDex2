{"ast":null,"code":"export const getActiveMenuItem = ({\n  pathname,\n  menuConfig\n}) => menuConfig.find(menuItem => pathname.startsWith(menuItem.href) || getActiveSubMenuItem({\n  menuItem,\n  pathname\n}));\nexport const getActiveSubMenuItem = ({\n  pathname,\n  menuItem\n}) => {\n  var _menuItem$items$filte;\n\n  const activeSubMenuItems = (_menuItem$items$filte = menuItem === null || menuItem === void 0 ? void 0 : menuItem.items.filter(subMenuItem => pathname.startsWith(subMenuItem.href))) !== null && _menuItem$items$filte !== void 0 ? _menuItem$items$filte : []; // Pathname doesn't include any submenu item href - return undefined\n\n  if (!activeSubMenuItems || activeSubMenuItems.length === 0) {\n    return undefined;\n  } // Pathname includes one sub menu item href - return it\n\n\n  if (activeSubMenuItems.length === 1) {\n    return activeSubMenuItems[0];\n  } // Pathname includes multiple sub menu item hrefs - find the most specific match\n\n\n  const mostSpecificMatch = activeSubMenuItems.sort((subMenuItem1, subMenuItem2) => subMenuItem2.href.length - subMenuItem1.href.length)[0];\n  return mostSpecificMatch;\n};","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/components/Menu/utils.ts"],"names":["getActiveMenuItem","pathname","menuConfig","find","menuItem","startsWith","href","getActiveSubMenuItem","activeSubMenuItems","items","filter","subMenuItem","length","undefined","mostSpecificMatch","sort","subMenuItem1","subMenuItem2"],"mappings":"AAEA,OAAO,MAAMA,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAC/BA,UAAU,CAACC,IAAX,CAAiBC,QAAD,IAAcH,QAAQ,CAACI,UAAT,CAAoBD,QAAQ,CAACE,IAA7B,KAAsCC,oBAAoB,CAAC;AAAEH,EAAAA,QAAF;AAAYH,EAAAA;AAAZ,CAAD,CAAxF,CADK;AAGP,OAAO,MAAMM,oBAAoB,GAAG,CAAC;AAAEN,EAAAA,QAAF;AAAYG,EAAAA;AAAZ,CAAD,KAAkF;AAAA;;AACpH,QAAMI,kBAAkB,4BAAGJ,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEK,KAAV,CAAgBC,MAAhB,CAAwBC,WAAD,IAAiBV,QAAQ,CAACI,UAAT,CAAoBM,WAAW,CAACL,IAAhC,CAAxC,CAAH,yEAAqF,EAA7G,CADoH,CAGpH;;AACA,MAAI,CAACE,kBAAD,IAAuBA,kBAAkB,CAACI,MAAnB,KAA8B,CAAzD,EAA4D;AAC1D,WAAOC,SAAP;AACD,GANmH,CAQpH;;;AACA,MAAIL,kBAAkB,CAACI,MAAnB,KAA8B,CAAlC,EAAqC;AACnC,WAAOJ,kBAAkB,CAAC,CAAD,CAAzB;AACD,GAXmH,CAapH;;;AACA,QAAMM,iBAAiB,GAAGN,kBAAkB,CAACO,IAAnB,CACxB,CAACC,YAAD,EAAeC,YAAf,KAAgCA,YAAY,CAACX,IAAb,CAAkBM,MAAlB,GAA2BI,YAAY,CAACV,IAAb,CAAkBM,MADrD,EAExB,CAFwB,CAA1B;AAIA,SAAOE,iBAAP;AACD,CAnBM","sourcesContent":["import { ConfigMenuItemsType } from './config/config'\n\nexport const getActiveMenuItem = ({ pathname, menuConfig }: { pathname: string; menuConfig: ConfigMenuItemsType[] }) =>\n  menuConfig.find((menuItem) => pathname.startsWith(menuItem.href) || getActiveSubMenuItem({ menuItem, pathname }))\n\nexport const getActiveSubMenuItem = ({ pathname, menuItem }: { pathname: string; menuItem?: ConfigMenuItemsType }) => {\n  const activeSubMenuItems = menuItem?.items.filter((subMenuItem) => pathname.startsWith(subMenuItem.href)) ?? []\n\n  // Pathname doesn't include any submenu item href - return undefined\n  if (!activeSubMenuItems || activeSubMenuItems.length === 0) {\n    return undefined\n  }\n\n  // Pathname includes one sub menu item href - return it\n  if (activeSubMenuItems.length === 1) {\n    return activeSubMenuItems[0]\n  }\n\n  // Pathname includes multiple sub menu item hrefs - find the most specific match\n  const mostSpecificMatch = activeSubMenuItems.sort(\n    (subMenuItem1, subMenuItem2) => subMenuItem2.href.length - subMenuItem1.href.length,\n  )[0]\n\n  return mostSpecificMatch\n}\n"]},"metadata":{},"sourceType":"module"}