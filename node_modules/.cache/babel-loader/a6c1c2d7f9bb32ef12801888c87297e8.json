{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React from'react';import styled from'styled-components';import{CardBody,Heading,Flex,Skeleton,Text,Box,Button,useModal,CardRibbon,useMatchBreakpoints}from'@pancakeswap/uikit';import{useGetUserLotteriesGraphData,useLottery}from'state/lottery/hooks';import{LotteryStatus}from'config/constants/types';import{useTranslation}from'contexts/Localization';import WinningNumbers from'../WinningNumbers';import ViewTicketsModal from'../ViewTicketsModal';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var StyledCardBody=styled(CardBody)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: relative;\\n  overflow: hidden;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n\"])));var Grid=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: auto;\\n\\n  \",\" {\\n    grid-column-gap: 72px;\\n    grid-row-gap: 36px;\\n    grid-template-columns: auto 1fr;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.mediaQueries.md;});var StyledCardRibbon=styled(CardRibbon)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  right: -20px;\\n  top: -20px;\\n\\n  \",\" {\\n    right: -10px;\\n    top: -10px;\\n  }\\n\"])),function(_ref2){var theme=_ref2.theme;return theme.mediaQueries.xs;});var PreviousRoundCardBody=function PreviousRoundCardBody(_ref3){var lotteryNodeData=_ref3.lotteryNodeData,lotteryId=_ref3.lotteryId;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useLottery=useLottery(),currentLotteryId=_useLottery.currentLotteryId,status=_useLottery.currentRound.status;var userLotteryData=useGetUserLotteriesGraphData();var userDataForRound=userLotteryData.rounds.find(function(userLotteryRound){return userLotteryRound.lotteryId===lotteryId;});var _useMatchBreakpoints=useMatchBreakpoints(),isLg=_useMatchBreakpoints.isLg,isXl=_useMatchBreakpoints.isXl,isXxl=_useMatchBreakpoints.isXxl;var isLargerScreen=isLg||isXl||isXxl;var currentLotteryIdAsInt=parseInt(currentLotteryId);var mostRecentFinishedRoundId=status===LotteryStatus.CLAIMABLE?currentLotteryIdAsInt:currentLotteryIdAsInt-1;var isLatestRound=mostRecentFinishedRoundId.toString()===lotteryId;var _useModal=useModal(/*#__PURE__*/_jsx(ViewTicketsModal,{roundId:lotteryId,roundStatus:lotteryNodeData===null||lotteryNodeData===void 0?void 0:lotteryNodeData.status})),_useModal2=_slicedToArray(_useModal,1),onPresentViewTicketsModal=_useModal2[0];var totalTicketNumber=userDataForRound?userDataForRound.totalTickets:0;var ticketRoundText=totalTicketNumber>1?t('You had %amount% tickets this round',{amount:totalTicketNumber}):t('You had %amount% ticket this round',{amount:totalTicketNumber});var _ticketRoundText$spli=ticketRoundText.split(totalTicketNumber.toString()),_ticketRoundText$spli2=_slicedToArray(_ticketRoundText$spli,2),youHadText=_ticketRoundText$spli2[0],ticketsThisRoundText=_ticketRoundText$spli2[1];return/*#__PURE__*/_jsxs(StyledCardBody,{children:[isLatestRound&&/*#__PURE__*/_jsx(StyledCardRibbon,{text:t('Latest')}),/*#__PURE__*/_jsxs(Grid,{children:[/*#__PURE__*/_jsx(Flex,{justifyContent:['center',null,null,'flex-start'],children:/*#__PURE__*/_jsx(Heading,{mb:\"24px\",children:t('Winning Number')})}),/*#__PURE__*/_jsx(Flex,{maxWidth:['240px',null,null,'100%'],justifyContent:['center',null,null,'flex-start'],children:lotteryNodeData?/*#__PURE__*/_jsx(WinningNumbers,{rotateText:isLargerScreen||false,number:lotteryNodeData===null||lotteryNodeData===void 0?void 0:lotteryNodeData.finalNumber.toString(),mr:[null,null,null,'32px'],size:\"100%\",fontSize:isLargerScreen?'42px':'16px'}):/*#__PURE__*/_jsx(Skeleton,{width:['240px',null,null,'450px'],height:['34px',null,null,'71px'],mr:[null,null,null,'32px']})}),userDataForRound&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Box,{display:['none',null,null,'flex'],children:/*#__PURE__*/_jsx(Heading,{children:t('Your tickets')})}),/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",mr:[null,null,null,'24px'],alignItems:['center',null,null,'flex-start'],children:[/*#__PURE__*/_jsxs(Box,{mt:['32px',null,null,0],children:[/*#__PURE__*/_jsxs(Text,{display:\"inline\",children:[youHadText,\" \"]}),/*#__PURE__*/_jsx(Text,{display:\"inline\",bold:true,children:userDataForRound.totalTickets}),/*#__PURE__*/_jsx(Text,{display:\"inline\",children:ticketsThisRoundText})]}),/*#__PURE__*/_jsx(Button,{onClick:onPresentViewTicketsModal,height:\"auto\",width:\"fit-content\",p:\"0\",variant:\"text\",scale:\"sm\",children:t('View your tickets')})]})]})]})]});};export default PreviousRoundCardBody;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Lottery/components/PreviousRoundCard/Body.tsx"],"names":["React","styled","CardBody","Heading","Flex","Skeleton","Text","Box","Button","useModal","CardRibbon","useMatchBreakpoints","useGetUserLotteriesGraphData","useLottery","LotteryStatus","useTranslation","WinningNumbers","ViewTicketsModal","StyledCardBody","Grid","div","theme","mediaQueries","md","StyledCardRibbon","xs","PreviousRoundCardBody","lotteryNodeData","lotteryId","t","currentLotteryId","status","currentRound","userLotteryData","userDataForRound","rounds","find","userLotteryRound","isLg","isXl","isXxl","isLargerScreen","currentLotteryIdAsInt","parseInt","mostRecentFinishedRoundId","CLAIMABLE","isLatestRound","toString","onPresentViewTicketsModal","totalTicketNumber","totalTickets","ticketRoundText","amount","split","youHadText","ticketsThisRoundText","finalNumber"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport {\n  CardBody,\n  Heading,\n  Flex,\n  Skeleton,\n  Text,\n  Box,\n  Button,\n  useModal,\n  CardRibbon,\n  useMatchBreakpoints,\n} from '@pancakeswap/uikit'\nimport { LotteryRound } from 'state/types'\nimport { useGetUserLotteriesGraphData, useLottery } from 'state/lottery/hooks'\nimport { LotteryStatus } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport WinningNumbers from '../WinningNumbers'\nimport ViewTicketsModal from '../ViewTicketsModal'\n\nconst StyledCardBody = styled(CardBody)`\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: auto;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-column-gap: 72px;\n    grid-row-gap: 36px;\n    grid-template-columns: auto 1fr;\n  }\n`\n\nconst StyledCardRibbon = styled(CardRibbon)`\n  right: -20px;\n  top: -20px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    right: -10px;\n    top: -10px;\n  }\n`\n\nconst PreviousRoundCardBody: React.FC<{ lotteryNodeData: LotteryRound; lotteryId: string }> = ({\n  lotteryNodeData,\n  lotteryId,\n}) => {\n  const { t } = useTranslation()\n  const {\n    currentLotteryId,\n    currentRound: { status },\n  } = useLottery()\n  const userLotteryData = useGetUserLotteriesGraphData()\n  const userDataForRound = userLotteryData.rounds.find((userLotteryRound) => userLotteryRound.lotteryId === lotteryId)\n  const { isLg, isXl, isXxl } = useMatchBreakpoints()\n  const isLargerScreen = isLg || isXl || isXxl\n\n  const currentLotteryIdAsInt = parseInt(currentLotteryId)\n  const mostRecentFinishedRoundId =\n    status === LotteryStatus.CLAIMABLE ? currentLotteryIdAsInt : currentLotteryIdAsInt - 1\n  const isLatestRound = mostRecentFinishedRoundId.toString() === lotteryId\n\n  const [onPresentViewTicketsModal] = useModal(\n    <ViewTicketsModal roundId={lotteryId} roundStatus={lotteryNodeData?.status} />,\n  )\n\n  const totalTicketNumber = userDataForRound ? userDataForRound.totalTickets : 0\n  const ticketRoundText =\n    totalTicketNumber > 1\n      ? t('You had %amount% tickets this round', { amount: totalTicketNumber })\n      : t('You had %amount% ticket this round', { amount: totalTicketNumber })\n  const [youHadText, ticketsThisRoundText] = ticketRoundText.split(totalTicketNumber.toString())\n\n  return (\n    <StyledCardBody>\n      {isLatestRound && <StyledCardRibbon text={t('Latest')} />}\n      <Grid>\n        <Flex justifyContent={['center', null, null, 'flex-start']}>\n          <Heading mb=\"24px\">{t('Winning Number')}</Heading>\n        </Flex>\n        <Flex maxWidth={['240px', null, null, '100%']} justifyContent={['center', null, null, 'flex-start']}>\n          {lotteryNodeData ? (\n            <WinningNumbers\n              rotateText={isLargerScreen || false}\n              number={lotteryNodeData?.finalNumber.toString()}\n              mr={[null, null, null, '32px']}\n              size=\"100%\"\n              fontSize={isLargerScreen ? '42px' : '16px'}\n            />\n          ) : (\n            <Skeleton\n              width={['240px', null, null, '450px']}\n              height={['34px', null, null, '71px']}\n              mr={[null, null, null, '32px']}\n            />\n          )}\n        </Flex>\n        {userDataForRound && (\n          <>\n            <Box display={['none', null, null, 'flex']}>\n              <Heading>{t('Your tickets')}</Heading>\n            </Box>\n            <Flex\n              flexDirection=\"column\"\n              mr={[null, null, null, '24px']}\n              alignItems={['center', null, null, 'flex-start']}\n            >\n              <Box mt={['32px', null, null, 0]}>\n                <Text display=\"inline\">{youHadText} </Text>\n                <Text display=\"inline\" bold>\n                  {userDataForRound.totalTickets}\n                </Text>\n                <Text display=\"inline\">{ticketsThisRoundText}</Text>\n              </Box>\n              <Button\n                onClick={onPresentViewTicketsModal}\n                height=\"auto\"\n                width=\"fit-content\"\n                p=\"0\"\n                variant=\"text\"\n                scale=\"sm\"\n              >\n                {t('View your tickets')}\n              </Button>\n            </Flex>\n          </>\n        )}\n      </Grid>\n    </StyledCardBody>\n  )\n}\n\nexport default PreviousRoundCardBody\n"]},"metadata":{},"sourceType":"module"}