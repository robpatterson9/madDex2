{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{createSlice}from'@reduxjs/toolkit';import{getAchievements}from'./helpers';var initialState={data:[]};export var achievementSlice=createSlice({name:'achievements',initialState:initialState,reducers:{addAchievement:function addAchievement(state,action){state.data.push(action.payload);},addAchievements:function addAchievements(state,action){state.data=[].concat(_toConsumableArray(state.data),_toConsumableArray(action.payload));},setAchievements:function setAchievements(state,action){state.data=action.payload;},clearAchievements:function clearAchievements(state){state.data=[];}}});// Actions\nvar _achievementSlice$act=achievementSlice.actions,addAchievement=_achievementSlice$act.addAchievement,addAchievements=_achievementSlice$act.addAchievements,setAchievements=_achievementSlice$act.setAchievements,clearAchievements=_achievementSlice$act.clearAchievements;// Thunks\nexport{addAchievement,addAchievements,setAchievements,clearAchievements};export var fetchAchievements=function fetchAchievements(account){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var achievements;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return getAchievements(account);case 3:achievements=_context.sent;dispatch(setAchievements(achievements));_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export default achievementSlice.reducer;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/state/achievements/index.ts"],"names":["createSlice","getAchievements","initialState","data","achievementSlice","name","reducers","addAchievement","state","action","push","payload","addAchievements","setAchievements","clearAchievements","actions","fetchAchievements","account","dispatch","achievements","console","error","reducer"],"mappings":"6cAAA,OAASA,WAAT,KAAqD,kBAArD,CAEA,OAASC,eAAT,KAAgC,WAAhC,CAEA,GAAMC,CAAAA,YAA8B,CAAG,CACrCC,IAAI,CAAE,EAD+B,CAAvC,CAIA,MAAO,IAAMC,CAAAA,gBAAgB,CAAGJ,WAAW,CAAC,CAC1CK,IAAI,CAAE,cADoC,CAE1CH,YAAY,CAAZA,YAF0C,CAG1CI,QAAQ,CAAE,CACRC,cAAc,CAAE,wBAACC,KAAD,CAAQC,MAAR,CAA+C,CAC7DD,KAAK,CAACL,IAAN,CAAWO,IAAX,CAAgBD,MAAM,CAACE,OAAvB,EACD,CAHO,CAIRC,eAAe,CAAE,yBAACJ,KAAD,CAAQC,MAAR,CAAiD,CAChED,KAAK,CAACL,IAAN,8BAAiBK,KAAK,CAACL,IAAvB,qBAAgCM,MAAM,CAACE,OAAvC,GACD,CANO,CAORE,eAAe,CAAE,yBAACL,KAAD,CAAQC,MAAR,CAAiD,CAChED,KAAK,CAACL,IAAN,CAAaM,MAAM,CAACE,OAApB,CACD,CATO,CAURG,iBAAiB,CAAE,2BAACN,KAAD,CAAW,CAC5BA,KAAK,CAACL,IAAN,CAAa,EAAb,CACD,CAZO,CAHgC,CAAD,CAApC,CAmBP;AACO,0BAAgFC,gBAAgB,CAACW,OAAjG,CAAQR,cAAR,uBAAQA,cAAR,CAAwBK,eAAxB,uBAAwBA,eAAxB,CAAyCC,eAAzC,uBAAyCA,eAAzC,CAA0DC,iBAA1D,uBAA0DA,iBAA1D,CAEP;yEACA,MAAO,IAAME,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,OAAD,iGAAqB,iBAAOC,QAAP,yKAEvBjB,CAAAA,eAAe,CAACgB,OAAD,CAFQ,QAE5CE,YAF4C,eAGlDD,QAAQ,CAACL,eAAe,CAACM,YAAD,CAAhB,CAAR,CAHkD,+EAKlDC,OAAO,CAACC,KAAR,cALkD,oEAArB,gEAA1B,CASP,cAAejB,CAAAA,gBAAgB,CAACkB,OAAhC","sourcesContent":["import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n"]},"metadata":{},"sourceType":"module"}