{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useWeb3React}from'@web3-react/core';import{Flex,LogoutIcon,useModal,UserMenu as UIKitUserMenu,UserMenuDivider,UserMenuItem}from'@pancakeswap/uikit';import useAuth from'hooks/useAuth';import{useProfile}from'state/profile/hooks';import ConnectWalletButton from'components/ConnectWalletButton';import{FetchStatus,useGetBnbBalance}from'hooks/useTokenBalance';import{useTranslation}from'contexts/Localization';import WalletModal,{WalletView,LOW_BNB_BALANCE}from'./WalletModal';import WalletUserMenuItem from'./WalletUserMenuItem';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UserMenu=function UserMenu(){var _profile$nft,_profile$nft$image;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useAuth=useAuth(),logout=_useAuth.logout;var _useGetBnbBalance=useGetBnbBalance(),balance=_useGetBnbBalance.balance,fetchStatus=_useGetBnbBalance.fetchStatus;var _useProfile=useProfile(),isInitialized=_useProfile.isInitialized,isLoading=_useProfile.isLoading,profile=_useProfile.profile;var _useModal=useModal(/*#__PURE__*/_jsx(WalletModal,{initialView:WalletView.WALLET_INFO})),_useModal2=_slicedToArray(_useModal,1),onPresentWalletModal=_useModal2[0];var _useModal3=useModal(/*#__PURE__*/_jsx(WalletModal,{initialView:WalletView.TRANSACTIONS})),_useModal4=_slicedToArray(_useModal3,1),onPresentTransactionModal=_useModal4[0];var hasProfile=isInitialized&&!!profile;var avatarSrc=profile===null||profile===void 0?void 0:(_profile$nft=profile.nft)===null||_profile$nft===void 0?void 0:(_profile$nft$image=_profile$nft.image)===null||_profile$nft$image===void 0?void 0:_profile$nft$image.thumbnail;var hasLowBnbBalance=fetchStatus===FetchStatus.SUCCESS&&balance.lte(LOW_BNB_BALANCE);if(!account){return/*#__PURE__*/_jsx(ConnectWalletButton,{scale:\"sm\"});}return/*#__PURE__*/_jsxs(UIKitUserMenu,{account:account,avatarSrc:avatarSrc,children:[/*#__PURE__*/_jsx(WalletUserMenuItem,{hasLowBnbBalance:hasLowBnbBalance,onPresentWalletModal:onPresentWalletModal}),/*#__PURE__*/_jsx(UserMenuItem,{as:\"button\",onClick:onPresentTransactionModal,children:t('Transactions')}),/*#__PURE__*/_jsx(UserMenuDivider,{}),/*#__PURE__*/_jsx(UserMenuDivider,{}),/*#__PURE__*/_jsx(UserMenuItem,{as:\"button\",onClick:logout,children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",width:\"100%\",children:[t('Disconnect'),/*#__PURE__*/_jsx(LogoutIcon,{})]})})]});};export default UserMenu;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/components/Menu/UserMenu/index.tsx"],"names":["React","useWeb3React","Flex","LogoutIcon","useModal","UserMenu","UIKitUserMenu","UserMenuDivider","UserMenuItem","useAuth","useProfile","ConnectWalletButton","FetchStatus","useGetBnbBalance","useTranslation","WalletModal","WalletView","LOW_BNB_BALANCE","WalletUserMenuItem","t","account","logout","balance","fetchStatus","isInitialized","isLoading","profile","WALLET_INFO","onPresentWalletModal","TRANSACTIONS","onPresentTransactionModal","hasProfile","avatarSrc","nft","image","thumbnail","hasLowBnbBalance","SUCCESS","lte"],"mappings":"wJAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OACEC,IADF,CAEEC,UAFF,CAGEC,QAHF,CAIEC,QAAQ,GAAIC,CAAAA,aAJd,CAKEC,eALF,CAMEC,YANF,KAOO,oBAPP,CASA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,OAASC,UAAT,KAA2B,qBAA3B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,gCAAhC,CACA,OAASC,WAAT,CAAsBC,gBAAtB,KAA8C,uBAA9C,CACA,OAASC,cAAT,KAA+B,uBAA/B,CAEA,MAAOC,CAAAA,WAAP,EAAsBC,UAAtB,CAAkCC,eAAlC,KAAyD,eAAzD,CAEA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,C,wFAEA,GAAMb,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,qCACrB,oBAAcS,cAAc,EAA5B,CAAQK,CAAR,iBAAQA,CAAR,CACA,kBAAoBlB,YAAY,EAAhC,CAAQmB,OAAR,eAAQA,OAAR,CACA,aAAmBX,OAAO,EAA1B,CAAQY,MAAR,UAAQA,MAAR,CACA,sBAAiCR,gBAAgB,EAAjD,CAAQS,OAAR,mBAAQA,OAAR,CAAiBC,WAAjB,mBAAiBA,WAAjB,CACA,gBAA8Cb,UAAU,EAAxD,CAAQc,aAAR,aAAQA,aAAR,CAAuBC,SAAvB,aAAuBA,SAAvB,CAAkCC,OAAlC,aAAkCA,OAAlC,CACA,cAA+BtB,QAAQ,cAAC,KAAC,WAAD,EAAa,WAAW,CAAEY,UAAU,CAACW,WAArC,EAAD,CAAvC,wCAAOC,oBAAP,eACA,eAAoCxB,QAAQ,cAAC,KAAC,WAAD,EAAa,WAAW,CAAEY,UAAU,CAACa,YAArC,EAAD,CAA5C,yCAAOC,yBAAP,eACA,GAAMC,CAAAA,UAAU,CAAGP,aAAa,EAAI,CAAC,CAACE,OAAtC,CACA,GAAMM,CAAAA,SAAS,CAAGN,OAAH,SAAGA,OAAH,+BAAGA,OAAO,CAAEO,GAAZ,2DAAG,aAAcC,KAAjB,6CAAG,mBAAqBC,SAAvC,CACA,GAAMC,CAAAA,gBAAgB,CAAGb,WAAW,GAAKX,WAAW,CAACyB,OAA5B,EAAuCf,OAAO,CAACgB,GAAR,CAAYrB,eAAZ,CAAhE,CAEA,GAAI,CAACG,OAAL,CAAc,CACZ,mBAAO,KAAC,mBAAD,EAAqB,KAAK,CAAC,IAA3B,EAAP,CACD,CAED,mBACE,MAAC,aAAD,EAAe,OAAO,CAAEA,OAAxB,CAAiC,SAAS,CAAEY,SAA5C,wBACE,KAAC,kBAAD,EAAoB,gBAAgB,CAAEI,gBAAtC,CAAwD,oBAAoB,CAAER,oBAA9E,EADF,cAEE,KAAC,YAAD,EAAc,EAAE,CAAC,QAAjB,CAA0B,OAAO,CAAEE,yBAAnC,UACGX,CAAC,CAAC,cAAD,CADJ,EAFF,cAKE,KAAC,eAAD,IALF,cAOE,KAAC,eAAD,IAPF,cAQE,KAAC,YAAD,EAAc,EAAE,CAAC,QAAjB,CAA0B,OAAO,CAAEE,MAAnC,uBACE,MAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,CAA0B,cAAc,CAAC,eAAzC,CAAyD,KAAK,CAAC,MAA/D,WACGF,CAAC,CAAC,YAAD,CADJ,cAEE,KAAC,UAAD,IAFF,GADF,EARF,GADF,CAiBD,CAjCD,CAmCA,cAAed,CAAAA,QAAf","sourcesContent":["import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Flex,\n  LogoutIcon,\n  useModal,\n  UserMenu as UIKitUserMenu,\n  UserMenuDivider,\n  UserMenuItem,\n} from '@pancakeswap/uikit'\nimport history from 'routerHistory'\nimport useAuth from 'hooks/useAuth'\nimport { useProfile } from 'state/profile/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\nimport WalletUserMenuItem from './WalletUserMenuItem'\n\nconst UserMenu = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { isInitialized, isLoading, profile } = useProfile()\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n  const hasProfile = isInitialized && !!profile\n  const avatarSrc = profile?.nft?.image?.thumbnail\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  if (!account) {\n    return <ConnectWalletButton scale=\"sm\" />\n  }\n\n  return (\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\n        {t('Transactions')}\n      </UserMenuItem>\n      <UserMenuDivider />\n    \n      <UserMenuDivider />\n      <UserMenuItem as=\"button\" onClick={logout}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Disconnect')}\n          <LogoutIcon />\n        </Flex>\n      </UserMenuItem>\n    </UIKitUserMenu>\n  )\n}\n\nexport default UserMenu\n"]},"metadata":{},"sourceType":"module"}