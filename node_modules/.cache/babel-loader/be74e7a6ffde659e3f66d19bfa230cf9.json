{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import BigNumber from'bignumber.js';import{Text,useMatchBreakpoints}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{useCakeVault}from'state/pools/hooks';import{BIG_ZERO}from'utils/bigNumber';import{TokenPairImage}from'components/TokenImage';import CakeVaultTokenPairImage from'../../CakeVaultCard/CakeVaultTokenPairImage';import BaseCell,{CellContent}from'./BaseCell';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledCell=styled(BaseCell)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  flex: 5;\\n  flex-direction: row;\\n  padding-left: 12px;\\n  \",\" {\\n    flex: 1 0 150px;\\n    padding-left: 32px;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.mediaQueries.sm;});var NameCell=function NameCell(_ref2){var pool=_ref2.pool;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useMatchBreakpoints=useMatchBreakpoints(),isMobile=_useMatchBreakpoints.isMobile;var sousId=pool.sousId,stakingToken=pool.stakingToken,earningToken=pool.earningToken,userData=pool.userData,isFinished=pool.isFinished,isAutoVault=pool.isAutoVault;var _useCakeVault=useCakeVault(),userShares=_useCakeVault.userData.userShares;var hasVaultShares=userShares&&userShares.gt(0);var stakingTokenSymbol=stakingToken.symbol;var earningTokenSymbol=earningToken.symbol;var stakedBalance=(userData===null||userData===void 0?void 0:userData.stakedBalance)?new BigNumber(userData.stakedBalance):BIG_ZERO;var isStaked=stakedBalance.gt(0);var isManualCakePool=sousId===0;var showStakedTag=isAutoVault?hasVaultShares:isStaked;var title=\"\".concat(t('Earn'),\" \").concat(earningTokenSymbol);var subtitle=\"\".concat(t('Stake'),\" \").concat(stakingTokenSymbol);var showSubtitle=sousId!==0||sousId===0&&!isMobile;if(isAutoVault){title=t('Auto CAKE');subtitle=t('Automatic restaking');}else if(isManualCakePool){title=t('Manual CAKE');subtitle=\"\".concat(t('Earn'),\" CAKE \").concat(t('Stake').toLocaleLowerCase(),\" CAKE\");}return/*#__PURE__*/_jsxs(StyledCell,{role:\"cell\",children:[isAutoVault?/*#__PURE__*/_jsx(CakeVaultTokenPairImage,{mr:\"8px\",width:40,height:40}):/*#__PURE__*/_jsx(TokenPairImage,{primaryToken:earningToken,secondaryToken:stakingToken,mr:\"8px\",width:40,height:40}),/*#__PURE__*/_jsxs(CellContent,{children:[showStakedTag&&/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",bold:true,color:isFinished?'failure':'secondary',textTransform:\"uppercase\",children:t('Staked')}),/*#__PURE__*/_jsx(Text,{bold:!isMobile,small:isMobile,children:title}),showSubtitle&&/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",children:subtitle})]})]});};export default NameCell;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Pools/components/PoolsTable/Cells/NameCell.tsx"],"names":["React","styled","BigNumber","Text","useMatchBreakpoints","useTranslation","useCakeVault","BIG_ZERO","TokenPairImage","CakeVaultTokenPairImage","BaseCell","CellContent","StyledCell","theme","mediaQueries","sm","NameCell","pool","t","isMobile","sousId","stakingToken","earningToken","userData","isFinished","isAutoVault","userShares","hasVaultShares","gt","stakingTokenSymbol","symbol","earningTokenSymbol","stakedBalance","isStaked","isManualCakePool","showStakedTag","title","subtitle","showSubtitle","toLocaleLowerCase"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isMobile)\n\n  if (isAutoVault) {\n    title = t('Auto CAKE')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual CAKE')\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      {isAutoVault ? (\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\n      ) : (\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\n      )}\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isMobile} small={isMobile}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n"]},"metadata":{},"sourceType":"module"}