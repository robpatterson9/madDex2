{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import BigNumber from'bignumber.js';import{getCakeVaultContract}from'utils/contractHelpers';var cakeVaultContract=getCakeVaultContract();var fetchVaultUser=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(account){var userContractResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return cakeVaultContract.userInfo(account);case 3:userContractResponse=_context.sent;return _context.abrupt(\"return\",{isLoading:false,userShares:new BigNumber(userContractResponse.shares.toString()).toJSON(),lastDepositedTime:userContractResponse.lastDepositedTime.toString(),lastUserActionTime:userContractResponse.lastUserActionTime.toString(),cakeAtLastUserAction:new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON()});case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",{isLoading:true,userShares:null,lastDepositedTime:null,lastUserActionTime:null,cakeAtLastUserAction:null});case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function fetchVaultUser(_x){return _ref.apply(this,arguments);};}();export default fetchVaultUser;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/state/pools/fetchVaultUser.ts"],"names":["BigNumber","getCakeVaultContract","cakeVaultContract","fetchVaultUser","account","userInfo","userContractResponse","isLoading","userShares","shares","toString","toJSON","lastDepositedTime","lastUserActionTime","cakeAtLastUserAction"],"mappings":"6SAAA,MAAOA,CAAAA,SAAP,KAAsB,cAAtB,CACA,OAASC,oBAAT,KAAqC,uBAArC,CAEA,GAAMC,CAAAA,iBAAiB,CAAGD,oBAAoB,EAA9C,CAEA,GAAME,CAAAA,cAAc,0FAAG,iBAAOC,OAAP,iLAEgBF,CAAAA,iBAAiB,CAACG,QAAlB,CAA2BD,OAA3B,CAFhB,QAEbE,oBAFa,+CAGZ,CACLC,SAAS,CAAE,KADN,CAELC,UAAU,CAAE,GAAIR,CAAAA,SAAJ,CAAcM,oBAAoB,CAACG,MAArB,CAA4BC,QAA5B,EAAd,EAAsDC,MAAtD,EAFP,CAGLC,iBAAiB,CAAEN,oBAAoB,CAACM,iBAArB,CAAuCF,QAAvC,EAHd,CAILG,kBAAkB,CAAEP,oBAAoB,CAACO,kBAArB,CAAwCH,QAAxC,EAJf,CAKLI,oBAAoB,CAAE,GAAId,CAAAA,SAAJ,CAAcM,oBAAoB,CAACQ,oBAArB,CAA0CJ,QAA1C,EAAd,EAAoEC,MAApE,EALjB,CAHY,0FAWZ,CACLJ,SAAS,CAAE,IADN,CAELC,UAAU,CAAE,IAFP,CAGLI,iBAAiB,CAAE,IAHd,CAILC,kBAAkB,CAAE,IAJf,CAKLC,oBAAoB,CAAE,IALjB,CAXY,sEAAH,kBAAdX,CAAAA,cAAc,4CAApB,CAqBA,cAAeA,CAAAA,cAAf","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n"]},"metadata":{},"sourceType":"module"}