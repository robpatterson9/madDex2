{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/RoundResult/styles.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Box, Flex, Skeleton, Text } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { BetPosition } from 'state/types';\nimport { formatUsdv2, formatBnbv2, getRoundPosition, getPriceDifference } from '../../helpers';\nimport { formatBnb, formatUsd } from '../History/helpers';\nimport PositionTag from '../PositionTag'; // PrizePoolRow\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getPrizePoolAmount = totalAmount => {\n  if (!totalAmount) {\n    return '0';\n  }\n\n  return formatBnbv2(totalAmount);\n};\n\nconst Row = ({\n  children,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Row;\nexport const PrizePoolRow = ({\n  totalAmount,\n  ...props\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(Row, { ...props,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      bold: true,\n      children: [t('Prize Pool'), \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      bold: true,\n      children: `${getPrizePoolAmount(totalAmount)} BNB`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}; // Payout Row\n\n_s(PrizePoolRow, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c2 = PrizePoolRow;\nexport const PayoutRow = ({\n  positionLabel,\n  multiplier,\n  amount,\n  ...props\n}) => {\n  _s2();\n\n  const {\n    t\n  } = useTranslation();\n  const formattedMultiplier = `${multiplier.toLocaleString(undefined, {\n    maximumFractionDigits: 2\n  })}x`;\n  return /*#__PURE__*/_jsxDEV(Row, {\n    height: \"18px\",\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"12px\",\n      textTransform: \"uppercase\",\n      children: [positionLabel, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"12px\",\n        lineHeight: \"18px\",\n        bold: true,\n        children: t('%multiplier% Payout', {\n          multiplier: formattedMultiplier\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        mx: \"4px\",\n        children: \"|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"12px\",\n        lineHeight: \"18px\",\n        children: `${formatBnb(amount)} BNB`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(PayoutRow, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c3 = PayoutRow;\nexport const LockPriceRow = ({\n  lockPrice,\n  ...props\n}) => {\n  _s3();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(Row, { ...props,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"14px\",\n      children: [t('Locked Price'), \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"14px\",\n      children: formatUsdv2(lockPrice)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}; // RoundResultBox\n\n_s3(LockPriceRow, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c4 = LockPriceRow;\n\nconst getBackgroundColor = ({\n  theme,\n  betPosition,\n  isNext,\n  isLive,\n  hasEntered\n}) => {\n  if (isNext) {\n    return 'linear-gradient(180deg, #53DEE9 0%, #7645D9 100%)';\n  }\n\n  if (hasEntered || isLive) {\n    return theme.colors.secondary;\n  }\n\n  switch (betPosition) {\n    case BetPosition.BULL:\n      return theme.colors.success;\n\n    case BetPosition.BEAR:\n      return theme.colors.failure;\n\n    case BetPosition.HOUSE:\n      return theme.colors.textDisabled;\n\n    default:\n      return theme.colors.cardBorder;\n  }\n};\n\nconst Background = styled(Box)`\n  background: ${getBackgroundColor};\n  border-radius: 16px;\n  padding: 2px;\n`;\n_c5 = Background;\nconst StyledRoundResultBox = styled.div`\n  background: ${({\n  theme\n}) => theme.card.background};\n  border-radius: 14px;\n  padding: 16px;\n`;\n_c6 = StyledRoundResultBox;\nexport const RoundResultBox = ({\n  isNext = false,\n  hasEntered = false,\n  isLive = false,\n  children,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(Background, {\n    isNext: isNext,\n    hasEntered: hasEntered,\n    isLive: isLive,\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(StyledRoundResultBox, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_c7 = RoundResultBox;\nexport const RoundPrice = ({\n  lockPrice,\n  closePrice\n}) => {\n  const betPosition = getRoundPosition(lockPrice, closePrice);\n  const priceDifference = getPriceDifference(closePrice, lockPrice);\n\n  const getTextColor = () => {\n    switch (betPosition) {\n      case BetPosition.BULL:\n        return 'success';\n\n      case BetPosition.BEAR:\n        return 'failure';\n\n      case BetPosition.HOUSE:\n      default:\n        return 'textDisabled';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    mb: \"16px\",\n    children: [closePrice ? /*#__PURE__*/_jsxDEV(Text, {\n      color: getTextColor(),\n      bold: true,\n      fontSize: \"24px\",\n      children: formatUsdv2(closePrice)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n      height: \"34px\",\n      my: \"1px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PositionTag, {\n      betPosition: betPosition,\n      children: formatUsdv2(priceDifference)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n/**\n * TODO: Remove\n *\n * This is a temporary function until we consolidate the data coming from the graph versus the node\n */\n\n_c8 = RoundPrice;\n\nconst getPrizePoolAmountHistory = totalAmount => {\n  if (!totalAmount) {\n    return '0';\n  }\n\n  return formatBnb(totalAmount);\n};\n\nexport const PrizePoolHistoryRow = ({\n  totalAmount,\n  ...props\n}) => {\n  _s4();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(Row, { ...props,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      bold: true,\n      children: [t('Prize Pool'), \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      bold: true,\n      children: `${getPrizePoolAmountHistory(totalAmount)} BNB`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(PrizePoolHistoryRow, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c9 = PrizePoolHistoryRow;\nexport const LockPriceHistoryRow = ({\n  lockPrice,\n  ...props\n}) => {\n  _s5();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(Row, { ...props,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"14px\",\n      children: [t('Locked Price'), \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"14px\",\n      children: formatUsd(lockPrice)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n/**\n * END TEMPORARY COMPONENTS\n */\n\n_s5(LockPriceHistoryRow, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c10 = LockPriceHistoryRow;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"PrizePoolRow\");\n$RefreshReg$(_c3, \"PayoutRow\");\n$RefreshReg$(_c4, \"LockPriceRow\");\n$RefreshReg$(_c5, \"Background\");\n$RefreshReg$(_c6, \"StyledRoundResultBox\");\n$RefreshReg$(_c7, \"RoundResultBox\");\n$RefreshReg$(_c8, \"RoundPrice\");\n$RefreshReg$(_c9, \"PrizePoolHistoryRow\");\n$RefreshReg$(_c10, \"LockPriceHistoryRow\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/RoundResult/styles.tsx"],"names":["React","styled","Box","Flex","Skeleton","Text","useTranslation","BetPosition","formatUsdv2","formatBnbv2","getRoundPosition","getPriceDifference","formatBnb","formatUsd","PositionTag","getPrizePoolAmount","totalAmount","Row","children","props","PrizePoolRow","t","PayoutRow","positionLabel","multiplier","amount","formattedMultiplier","toLocaleString","undefined","maximumFractionDigits","LockPriceRow","lockPrice","getBackgroundColor","theme","betPosition","isNext","isLive","hasEntered","colors","secondary","BULL","success","BEAR","failure","HOUSE","textDisabled","cardBorder","Background","StyledRoundResultBox","div","card","background","RoundResultBox","RoundPrice","closePrice","priceDifference","getTextColor","getPrizePoolAmountHistory","PrizePoolHistoryRow","LockPriceHistoryRow"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled, { DefaultTheme } from 'styled-components'\nimport { ethers } from 'ethers'\nimport { Box, Flex, FlexProps, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BetPosition, NodeRound, Round } from 'state/types'\nimport { formatUsdv2, formatBnbv2, getRoundPosition, getPriceDifference } from '../../helpers'\nimport { formatBnb, formatUsd } from '../History/helpers'\nimport PositionTag from '../PositionTag'\n\n// PrizePoolRow\ninterface PrizePoolRowProps extends FlexProps {\n  totalAmount: NodeRound['totalAmount']\n}\n\nconst getPrizePoolAmount = (totalAmount: PrizePoolRowProps['totalAmount']) => {\n  if (!totalAmount) {\n    return '0'\n  }\n\n  return formatBnbv2(totalAmount)\n}\n\nconst Row = ({ children, ...props }) => {\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {children}\n    </Flex>\n  )\n}\n\nexport const PrizePoolRow: React.FC<PrizePoolRowProps> = ({ totalAmount, ...props }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Row {...props}>\n      <Text bold>{t('Prize Pool')}:</Text>\n      <Text bold>{`${getPrizePoolAmount(totalAmount)} BNB`}</Text>\n    </Row>\n  )\n}\n\n// Payout Row\ninterface PayoutRowProps extends FlexProps {\n  positionLabel: string\n  multiplier: number\n  amount: number\n}\n\nexport const PayoutRow: React.FC<PayoutRowProps> = ({ positionLabel, multiplier, amount, ...props }) => {\n  const { t } = useTranslation()\n  const formattedMultiplier = `${multiplier.toLocaleString(undefined, { maximumFractionDigits: 2 })}x`\n\n  return (\n    <Row height=\"18px\" {...props}>\n      <Text fontSize=\"12px\" textTransform=\"uppercase\">\n        {positionLabel}:\n      </Text>\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"12px\" lineHeight=\"18px\" bold>\n          {t('%multiplier% Payout', { multiplier: formattedMultiplier })}\n        </Text>\n        <Text mx=\"4px\">|</Text>\n        <Text fontSize=\"12px\" lineHeight=\"18px\">{`${formatBnb(amount)} BNB`}</Text>\n      </Flex>\n    </Row>\n  )\n}\n\ninterface LockPriceRowProps extends FlexProps {\n  lockPrice: NodeRound['lockPrice']\n}\n\nexport const LockPriceRow: React.FC<LockPriceRowProps> = ({ lockPrice, ...props }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Row {...props}>\n      <Text fontSize=\"14px\">{t('Locked Price')}:</Text>\n      <Text fontSize=\"14px\">{formatUsdv2(lockPrice)}</Text>\n    </Row>\n  )\n}\n\n// RoundResultBox\ninterface RoundResultBoxProps {\n  betPosition?: BetPosition\n  isNext?: boolean\n  isLive?: boolean\n  hasEntered?: boolean\n}\n\nconst getBackgroundColor = ({\n  theme,\n  betPosition,\n  isNext,\n  isLive,\n  hasEntered,\n}: RoundResultBoxProps & { theme: DefaultTheme }) => {\n  if (isNext) {\n    return 'linear-gradient(180deg, #53DEE9 0%, #7645D9 100%)'\n  }\n\n  if (hasEntered || isLive) {\n    return theme.colors.secondary\n  }\n\n  switch (betPosition) {\n    case BetPosition.BULL:\n      return theme.colors.success\n    case BetPosition.BEAR:\n      return theme.colors.failure\n    case BetPosition.HOUSE:\n      return theme.colors.textDisabled\n    default:\n      return theme.colors.cardBorder\n  }\n}\n\nconst Background = styled(Box)<RoundResultBoxProps>`\n  background: ${getBackgroundColor};\n  border-radius: 16px;\n  padding: 2px;\n`\n\nconst StyledRoundResultBox = styled.div`\n  background: ${({ theme }) => theme.card.background};\n  border-radius: 14px;\n  padding: 16px;\n`\n\nexport const RoundResultBox: React.FC<RoundResultBoxProps> = ({\n  isNext = false,\n  hasEntered = false,\n  isLive = false,\n  children,\n  ...props\n}) => {\n  return (\n    <Background isNext={isNext} hasEntered={hasEntered} isLive={isLive} {...props}>\n      <StyledRoundResultBox>{children}</StyledRoundResultBox>\n    </Background>\n  )\n}\n\ninterface RoundPriceProps {\n  lockPrice: ethers.BigNumber\n  closePrice: ethers.BigNumber\n}\n\nexport const RoundPrice: React.FC<RoundPriceProps> = ({ lockPrice, closePrice }) => {\n  const betPosition = getRoundPosition(lockPrice, closePrice)\n  const priceDifference = getPriceDifference(closePrice, lockPrice)\n\n  const getTextColor = () => {\n    switch (betPosition) {\n      case BetPosition.BULL:\n        return 'success'\n      case BetPosition.BEAR:\n        return 'failure'\n      case BetPosition.HOUSE:\n      default:\n        return 'textDisabled'\n    }\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"16px\">\n      {closePrice ? (\n        <Text color={getTextColor()} bold fontSize=\"24px\">\n          {formatUsdv2(closePrice)}\n        </Text>\n      ) : (\n        <Skeleton height=\"34px\" my=\"1px\" />\n      )}\n      <PositionTag betPosition={betPosition}>{formatUsdv2(priceDifference)}</PositionTag>\n    </Flex>\n  )\n}\n\n/**\n * TODO: Remove\n *\n * This is a temporary function until we consolidate the data coming from the graph versus the node\n */\ninterface PrizePoolHistoryRowProps extends FlexProps {\n  totalAmount: number\n}\n\nconst getPrizePoolAmountHistory = (totalAmount: PrizePoolHistoryRowProps['totalAmount']) => {\n  if (!totalAmount) {\n    return '0'\n  }\n\n  return formatBnb(totalAmount)\n}\n\nexport const PrizePoolHistoryRow: React.FC<PrizePoolHistoryRowProps> = ({ totalAmount, ...props }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Row {...props}>\n      <Text bold>{t('Prize Pool')}:</Text>\n      <Text bold>{`${getPrizePoolAmountHistory(totalAmount)} BNB`}</Text>\n    </Row>\n  )\n}\n\ninterface LockPriceHistoryRowProps extends FlexProps {\n  lockPrice: Round['lockPrice']\n}\n\nexport const LockPriceHistoryRow: React.FC<LockPriceHistoryRowProps> = ({ lockPrice, ...props }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Row {...props}>\n      <Text fontSize=\"14px\">{t('Locked Price')}:</Text>\n      <Text fontSize=\"14px\">{formatUsd(lockPrice)}</Text>\n    </Row>\n  )\n}\n/**\n * END TEMPORARY COMPONENTS\n */\n"]},"metadata":{},"sourceType":"module"}