{"ast":null,"code":"import React from'react';import{IconButton,Text,Skeleton,Button,AutoRenewIcon,ChevronRightIcon}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{formatNumber}from'utils/formatBalance';import TextEllipsis from'../TextEllipsis';import{VotingBox,ModalInner}from'./styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var MainView=function MainView(_ref){var vote=_ref.vote,total=_ref.total,isPending=_ref.isPending,isLoading=_ref.isLoading,onConfirm=_ref.onConfirm,onViewDetails=_ref.onViewDetails,onDismiss=_ref.onDismiss;var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(ModalInner,{children:[/*#__PURE__*/_jsx(Text,{color:\"secondary\",mb:\"8px\",textTransform:\"uppercase\",fontSize:\"12px\",bold:true,children:t('Voting For')}),/*#__PURE__*/_jsx(TextEllipsis,{bold:true,fontSize:\"20px\",mb:\"8px\",title:vote.label,children:vote.label}),/*#__PURE__*/_jsx(Text,{color:\"secondary\",mb:\"8px\",textTransform:\"uppercase\",fontSize:\"12px\",bold:true,children:t('Your Voting Power')}),isLoading?/*#__PURE__*/_jsx(Skeleton,{height:\"64px\",mb:\"24px\"}):/*#__PURE__*/_jsxs(VotingBox,{onClick:onViewDetails,style:{cursor:'pointer'},children:[/*#__PURE__*/_jsx(Text,{bold:true,fontSize:\"20px\",children:formatNumber(total,0,3)}),/*#__PURE__*/_jsx(IconButton,{scale:\"sm\",variant:\"text\",children:/*#__PURE__*/_jsx(ChevronRightIcon,{width:\"24px\"})})]}),/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"textSubtle\",fontSize:\"14px\",children:t('Are you sure you want to vote for the above choice? This action cannot be undone.')})]}),/*#__PURE__*/_jsx(Button,{isLoading:isPending,endIcon:isPending?/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,color:\"currentColor\"}):null,disabled:isLoading||total===0,width:\"100%\",mb:\"8px\",onClick:onConfirm,children:t('Confirm Vote')}),/*#__PURE__*/_jsx(Button,{variant:\"secondary\",width:\"100%\",onClick:onDismiss,children:t('Cancel')})]});};export default MainView;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Voting/components/CastVoteModal/MainView.tsx"],"names":["React","IconButton","Text","Skeleton","Button","AutoRenewIcon","ChevronRightIcon","useTranslation","formatNumber","TextEllipsis","VotingBox","ModalInner","MainView","vote","total","isPending","isLoading","onConfirm","onViewDetails","onDismiss","t","label","cursor"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,IAArB,CAA2BC,QAA3B,CAAqCC,MAArC,CAA6CC,aAA7C,CAA4DC,gBAA5D,KAAoF,oBAApF,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,YAAT,KAA6B,qBAA7B,CACA,MAAOC,CAAAA,YAAP,KAAyB,iBAAzB,CACA,OAASC,SAAT,CAAoBC,UAApB,KAAsC,UAAtC,C,6IAgBA,GAAMC,CAAAA,QAAiC,CAAG,QAApCA,CAAAA,QAAoC,MAQpC,IAPJC,CAAAA,IAOI,MAPJA,IAOI,CANJC,KAMI,MANJA,KAMI,CALJC,SAKI,MALJA,SAKI,CAJJC,SAII,MAJJA,SAII,CAHJC,SAGI,MAHJA,SAGI,CAFJC,aAEI,MAFJA,aAEI,CADJC,SACI,MADJA,SACI,CACJ,oBAAcZ,cAAc,EAA5B,CAAQa,CAAR,iBAAQA,CAAR,CAEA,mBACE,wCACE,MAAC,UAAD,yBACE,KAAC,IAAD,EAAM,KAAK,CAAC,WAAZ,CAAwB,EAAE,CAAC,KAA3B,CAAiC,aAAa,CAAC,WAA/C,CAA2D,QAAQ,CAAC,MAApE,CAA2E,IAAI,KAA/E,UACGA,CAAC,CAAC,YAAD,CADJ,EADF,cAIE,KAAC,YAAD,EAAc,IAAI,KAAlB,CAAmB,QAAQ,CAAC,MAA5B,CAAmC,EAAE,CAAC,KAAtC,CAA4C,KAAK,CAAEP,IAAI,CAACQ,KAAxD,UACGR,IAAI,CAACQ,KADR,EAJF,cAOE,KAAC,IAAD,EAAM,KAAK,CAAC,WAAZ,CAAwB,EAAE,CAAC,KAA3B,CAAiC,aAAa,CAAC,WAA/C,CAA2D,QAAQ,CAAC,MAApE,CAA2E,IAAI,KAA/E,UACGD,CAAC,CAAC,mBAAD,CADJ,EAPF,CAUGJ,SAAS,cACR,KAAC,QAAD,EAAU,MAAM,CAAC,MAAjB,CAAwB,EAAE,CAAC,MAA3B,EADQ,cAGR,MAAC,SAAD,EAAW,OAAO,CAAEE,aAApB,CAAmC,KAAK,CAAE,CAAEI,MAAM,CAAE,SAAV,CAA1C,wBACE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,QAAQ,CAAC,MAApB,UACGd,YAAY,CAACM,KAAD,CAAQ,CAAR,CAAW,CAAX,CADf,EADF,cAIE,KAAC,UAAD,EAAY,KAAK,CAAC,IAAlB,CAAuB,OAAO,CAAC,MAA/B,uBACE,KAAC,gBAAD,EAAkB,KAAK,CAAC,MAAxB,EADF,EAJF,GAbJ,cAsBE,KAAC,IAAD,EAAM,EAAE,CAAC,GAAT,CAAa,KAAK,CAAC,YAAnB,CAAgC,QAAQ,CAAC,MAAzC,UACGM,CAAC,CAAC,mFAAD,CADJ,EAtBF,GADF,cA2BE,KAAC,MAAD,EACE,SAAS,CAAEL,SADb,CAEE,OAAO,CAAEA,SAAS,cAAG,KAAC,aAAD,EAAe,IAAI,KAAnB,CAAoB,KAAK,CAAC,cAA1B,EAAH,CAAiD,IAFrE,CAGE,QAAQ,CAAEC,SAAS,EAAIF,KAAK,GAAK,CAHnC,CAIE,KAAK,CAAC,MAJR,CAKE,EAAE,CAAC,KALL,CAME,OAAO,CAAEG,SANX,UAQGG,CAAC,CAAC,cAAD,CARJ,EA3BF,cAqCE,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,KAAK,CAAC,MAAlC,CAAyC,OAAO,CAAED,SAAlD,UACGC,CAAC,CAAC,QAAD,CADJ,EArCF,GADF,CA2CD,CAtDD,CAwDA,cAAeR,CAAAA,QAAf","sourcesContent":["import React from 'react'\nimport { IconButton, Text, Skeleton, Button, AutoRenewIcon, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { formatNumber } from 'utils/formatBalance'\nimport TextEllipsis from '../TextEllipsis'\nimport { VotingBox, ModalInner } from './styles'\nimport { CastVoteModalProps } from './types'\n\ninterface MainViewProps {\n  vote: {\n    label: string\n    value: number\n  }\n  isLoading: boolean\n  isPending: boolean\n  total: number\n  onConfirm: () => void\n  onViewDetails: () => void\n  onDismiss: CastVoteModalProps['onDismiss']\n}\n\nconst MainView: React.FC<MainViewProps> = ({\n  vote,\n  total,\n  isPending,\n  isLoading,\n  onConfirm,\n  onViewDetails,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <ModalInner>\n        <Text color=\"secondary\" mb=\"8px\" textTransform=\"uppercase\" fontSize=\"12px\" bold>\n          {t('Voting For')}\n        </Text>\n        <TextEllipsis bold fontSize=\"20px\" mb=\"8px\" title={vote.label}>\n          {vote.label}\n        </TextEllipsis>\n        <Text color=\"secondary\" mb=\"8px\" textTransform=\"uppercase\" fontSize=\"12px\" bold>\n          {t('Your Voting Power')}\n        </Text>\n        {isLoading ? (\n          <Skeleton height=\"64px\" mb=\"24px\" />\n        ) : (\n          <VotingBox onClick={onViewDetails} style={{ cursor: 'pointer' }}>\n            <Text bold fontSize=\"20px\">\n              {formatNumber(total, 0, 3)}\n            </Text>\n            <IconButton scale=\"sm\" variant=\"text\">\n              <ChevronRightIcon width=\"24px\" />\n            </IconButton>\n          </VotingBox>\n        )}\n        <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\">\n          {t('Are you sure you want to vote for the above choice? This action cannot be undone.')}\n        </Text>\n      </ModalInner>\n      <Button\n        isLoading={isPending}\n        endIcon={isPending ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={isLoading || total === 0}\n        width=\"100%\"\n        mb=\"8px\"\n        onClick={onConfirm}\n      >\n        {t('Confirm Vote')}\n      </Button>\n      <Button variant=\"secondary\" width=\"100%\" onClick={onDismiss}>\n        {t('Cancel')}\n      </Button>\n    </>\n  )\n}\n\nexport default MainView\n"]},"metadata":{},"sourceType":"module"}