{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var FAST_INTERVAL=10000;var SLOW_INTERVAL=60000;var RefreshContext=/*#__PURE__*/React.createContext({slow:0,fast:0});// Check if the tab is active in the user browser\nvar useIsBrowserTabActive=function useIsBrowserTabActive(){var isBrowserTabActiveRef=useRef(true);useEffect(function(){var onVisibilityChange=function onVisibilityChange(){isBrowserTabActiveRef.current=!document.hidden;};window.addEventListener('visibilitychange',onVisibilityChange);return function(){window.removeEventListener('visibilitychange',onVisibilityChange);};},[]);return isBrowserTabActiveRef;};// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nvar RefreshContextProvider=function RefreshContextProvider(_ref){var children=_ref.children;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),slow=_useState2[0],setSlow=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),fast=_useState4[0],setFast=_useState4[1];var isBrowserTabActiveRef=useIsBrowserTabActive();useEffect(function(){var interval=setInterval(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(isBrowserTabActiveRef.current){setFast(function(prev){return prev+1;});}case 1:case\"end\":return _context.stop();}}},_callee);})),FAST_INTERVAL);return function(){return clearInterval(interval);};},[isBrowserTabActiveRef]);useEffect(function(){var interval=setInterval(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(isBrowserTabActiveRef.current){setSlow(function(prev){return prev+1;});}case 1:case\"end\":return _context2.stop();}}},_callee2);})),SLOW_INTERVAL);return function(){return clearInterval(interval);};},[isBrowserTabActiveRef]);return/*#__PURE__*/_jsx(RefreshContext.Provider,{value:{slow:slow,fast:fast},children:children});};export{RefreshContext,RefreshContextProvider};","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/contexts/RefreshContext.tsx"],"names":["React","useState","useEffect","useRef","FAST_INTERVAL","SLOW_INTERVAL","RefreshContext","createContext","slow","fast","useIsBrowserTabActive","isBrowserTabActiveRef","onVisibilityChange","current","document","hidden","window","addEventListener","removeEventListener","RefreshContextProvider","children","setSlow","setFast","interval","setInterval","prev","clearInterval"],"mappings":"qcAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,MAArC,KAAmD,OAAnD,C,2CAEA,GAAMC,CAAAA,aAAa,CAAG,KAAtB,CACA,GAAMC,CAAAA,aAAa,CAAG,KAAtB,CAEA,GAAMC,CAAAA,cAAc,cAAGN,KAAK,CAACO,aAAN,CAAoB,CAAEC,IAAI,CAAE,CAAR,CAAWC,IAAI,CAAE,CAAjB,CAApB,CAAvB,CAEA;AACA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,EAAM,CAClC,GAAMC,CAAAA,qBAAqB,CAAGR,MAAM,CAAC,IAAD,CAApC,CAEAD,SAAS,CAAC,UAAM,CACd,GAAMU,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/BD,qBAAqB,CAACE,OAAtB,CAAgC,CAACC,QAAQ,CAACC,MAA1C,CACD,CAFD,CAIAC,MAAM,CAACC,gBAAP,CAAwB,kBAAxB,CAA4CL,kBAA5C,EAEA,MAAO,WAAM,CACXI,MAAM,CAACE,mBAAP,CAA2B,kBAA3B,CAA+CN,kBAA/C,EACD,CAFD,CAGD,CAVQ,CAUN,EAVM,CAAT,CAYA,MAAOD,CAAAA,qBAAP,CACD,CAhBD,CAkBA;AACA,GAAMQ,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CAC/C,cAAwBnB,QAAQ,CAAC,CAAD,CAAhC,wCAAOO,IAAP,eAAaa,OAAb,eACA,eAAwBpB,QAAQ,CAAC,CAAD,CAAhC,yCAAOQ,IAAP,eAAaa,OAAb,eACA,GAAMX,CAAAA,qBAAqB,CAAGD,qBAAqB,EAAnD,CAEAR,SAAS,CAAC,UAAM,CACd,GAAMqB,CAAAA,QAAQ,CAAGC,WAAW,sEAAC,mIAC3B,GAAIb,qBAAqB,CAACE,OAA1B,CAAmC,CACjCS,OAAO,CAAC,SAACG,IAAD,QAAUA,CAAAA,IAAI,CAAG,CAAjB,EAAD,CAAP,CACD,CAH0B,sDAAD,GAIzBrB,aAJyB,CAA5B,CAKA,MAAO,kBAAMsB,CAAAA,aAAa,CAACH,QAAD,CAAnB,EAAP,CACD,CAPQ,CAON,CAACZ,qBAAD,CAPM,CAAT,CASAT,SAAS,CAAC,UAAM,CACd,GAAMqB,CAAAA,QAAQ,CAAGC,WAAW,sEAAC,wIAC3B,GAAIb,qBAAqB,CAACE,OAA1B,CAAmC,CACjCQ,OAAO,CAAC,SAACI,IAAD,QAAUA,CAAAA,IAAI,CAAG,CAAjB,EAAD,CAAP,CACD,CAH0B,wDAAD,GAIzBpB,aAJyB,CAA5B,CAKA,MAAO,kBAAMqB,CAAAA,aAAa,CAACH,QAAD,CAAnB,EAAP,CACD,CAPQ,CAON,CAACZ,qBAAD,CAPM,CAAT,CASA,mBAAO,KAAC,cAAD,CAAgB,QAAhB,EAAyB,KAAK,CAAE,CAAEH,IAAI,CAAJA,IAAF,CAAQC,IAAI,CAAJA,IAAR,CAAhC,UAAiDW,QAAjD,EAAP,CACD,CAxBD,CA0BA,OAASd,cAAT,CAAyBa,sBAAzB","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n"]},"metadata":{},"sourceType":"module"}