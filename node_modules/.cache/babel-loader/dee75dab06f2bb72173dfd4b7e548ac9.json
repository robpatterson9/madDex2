{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6;import React,{useEffect,useRef,useState}from'react';import{useWeb3React}from'@web3-react/core';import styled,{css,keyframes}from'styled-components';import{Button,CloseIcon,IconButton,TrophyGoldIcon}from'@pancakeswap/uikit';import{CSSTransition}from'react-transition-group';import{useTranslation}from'contexts/Localization';import{getBetHistory}from'state/predictions/helpers';import{useGetPredictionsStatus,useIsHistoryPaneOpen}from'state/predictions/hooks';import{useAppDispatch}from'state';import{setHistoryPaneState}from'state/predictions';/**\n * @see https://github.com/animate-css/animate.css/tree/main/source\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var bounceInKeyframe=keyframes(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  from,\\n  60%,\\n  75%,\\n  90%,\\n  to {\\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\\n  }\\n\\n  from {\\n    opacity: 0;\\n    transform: translate3d(0, 3000px, 0) scaleY(5);\\n  }\\n\\n  60% {\\n    opacity: 1;\\n    transform: translate3d(0, -20px, 0) scaleY(0.9);\\n  }\\n\\n  75% {\\n    transform: translate3d(0, 10px, 0) scaleY(0.95);\\n  }\\n\\n  90% {\\n    transform: translate3d(0, -5px, 0) scaleY(0.985);\\n  }\\n\\n  to {\\n    transform: translate3d(0, 0, 0);\\n  }\\n\"])));var bounceOutKeyframe=keyframes(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  20% {\\n    transform: translate3d(0, 10px, 0) scaleY(0.985);\\n  }\\n\\n  40%,\\n  45% {\\n    opacity: 1;\\n    transform: translate3d(0, -20px, 0) scaleY(0.9);\\n  }\\n\\n  to {\\n    opacity: 0;\\n    transform: translate3d(0, 2000px, 0) scaleY(3);\\n  }\\n\"])));var bounceInAnimation=css(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  animation: \",\" 1s;\\n\"])),bounceInKeyframe);var bounceOutAnimation=css(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  animation: \",\" 1s;\\n\"])),bounceOutKeyframe);var Wrapper=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  bottom: 72px;\\n  color: #ffffff;\\n  display: flex;\\n  justify-content: center;\\n  left: 0;\\n  padding-left: 16px;\\n  padding-right: 16px;\\n  position: absolute;\\n  width: 100%;\\n  z-index: 50;\\n\\n  &.popup-enter-active {\\n    \",\"\\n  }\\n\\n  &.popup-enter-done {\\n    bottom: 72px;\\n  }\\n\\n  &.popup-exit-done {\\n    bottom: -2000px;\\n  }\\n\\n  &.popup-exit-active {\\n    \",\"\\n  }\\n\\n  \",\" {\\n    bottom: 16px;\\n    justify-content: flex-end;\\n\\n    &.popup-enter-done {\\n      bottom: 16px;\\n    }\\n  }\\n\"])),bounceInAnimation,bounceOutAnimation,function(_ref){var theme=_ref.theme;return theme.mediaQueries.md;});var Popup=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  background-color: \",\";\\n  border-radius: 32px;\\n  color: #ffffff;\\n  display: flex;\\n  max-width: 320px;\\n  padding: 16px 8px;\\n\"])),function(_ref2){var theme=_ref2.theme;return theme.colors.secondary;});var CollectWinningsPopup=function CollectWinningsPopup(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var ref=useRef(null);var timer=useRef(null);var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var predictionStatus=useGetPredictionsStatus();var isHistoryPaneOpen=useIsHistoryPaneOpen();var dispatch=useAppDispatch();var handleOpenHistory=function handleOpenHistory(){dispatch(setHistoryPaneState(true));};var handleClick=function handleClick(){setIsOpen(false);clearInterval(timer.current);};// Check user's history for unclaimed winners\nuseEffect(function(){var isCancelled=false;if(account){timer.current=setInterval(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var bets,winnerBets;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getBetHistory({user:account.toLowerCase(),claimed:false});case 2:bets=_context.sent;if(!isCancelled){// Filter out bets that were not winners\nwinnerBets=bets.filter(function(bet){return bet.position===bet.round.position;});if(!isHistoryPaneOpen){setIsOpen(winnerBets.length>0);}}case 4:case\"end\":return _context.stop();}}},_callee);})),30000);}return function(){clearInterval(timer.current);isCancelled=true;};},[account,timer,predictionStatus,setIsOpen,isHistoryPaneOpen]);// Any time the history pane is open make sure the popup closes\nuseEffect(function(){if(isHistoryPaneOpen){setIsOpen(false);}},[isHistoryPaneOpen,setIsOpen]);return/*#__PURE__*/_jsx(CSSTransition,{in:isOpen,unmountOnExit:true,nodeRef:ref,timeout:1000,classNames:\"popup\",children:/*#__PURE__*/_jsx(Wrapper,{ref:ref,children:/*#__PURE__*/_jsxs(Popup,{children:[/*#__PURE__*/_jsx(TrophyGoldIcon,{width:\"64px\",style:{flex:'none'},mr:\"8px\"}),/*#__PURE__*/_jsx(Button,{style:{flex:1},onClick:handleOpenHistory,children:t('Collect Winnings')}),/*#__PURE__*/_jsx(IconButton,{variant:\"text\",onClick:handleClick,children:/*#__PURE__*/_jsx(CloseIcon,{color:\"primary\",width:\"24px\"})})]})})});};export default CollectWinningsPopup;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/CollectWinningsPopup.tsx"],"names":["React","useEffect","useRef","useState","useWeb3React","styled","css","keyframes","Button","CloseIcon","IconButton","TrophyGoldIcon","CSSTransition","useTranslation","getBetHistory","useGetPredictionsStatus","useIsHistoryPaneOpen","useAppDispatch","setHistoryPaneState","bounceInKeyframe","bounceOutKeyframe","bounceInAnimation","bounceOutAnimation","Wrapper","div","theme","mediaQueries","md","Popup","colors","secondary","CollectWinningsPopup","isOpen","setIsOpen","t","ref","timer","account","predictionStatus","isHistoryPaneOpen","dispatch","handleOpenHistory","handleClick","clearInterval","current","isCancelled","setInterval","user","toLowerCase","claimed","bets","winnerBets","filter","bet","position","round","length","flex"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled, { css, keyframes } from 'styled-components'\nimport { Button, CloseIcon, IconButton, TrophyGoldIcon } from '@pancakeswap/uikit'\nimport { CSSTransition } from 'react-transition-group'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBetHistory } from 'state/predictions/helpers'\nimport { useGetPredictionsStatus, useIsHistoryPaneOpen } from 'state/predictions/hooks'\nimport { useAppDispatch } from 'state'\nimport { setHistoryPaneState } from 'state/predictions'\n\n/**\n * @see https://github.com/animate-css/animate.css/tree/main/source\n */\nconst bounceInKeyframe = keyframes`\n  from,\n  60%,\n  75%,\n  90%,\n  to {\n    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n  }\n\n  from {\n    opacity: 0;\n    transform: translate3d(0, 3000px, 0) scaleY(5);\n  }\n\n  60% {\n    opacity: 1;\n    transform: translate3d(0, -20px, 0) scaleY(0.9);\n  }\n\n  75% {\n    transform: translate3d(0, 10px, 0) scaleY(0.95);\n  }\n\n  90% {\n    transform: translate3d(0, -5px, 0) scaleY(0.985);\n  }\n\n  to {\n    transform: translate3d(0, 0, 0);\n  }\n`\n\nconst bounceOutKeyframe = keyframes`\n  20% {\n    transform: translate3d(0, 10px, 0) scaleY(0.985);\n  }\n\n  40%,\n  45% {\n    opacity: 1;\n    transform: translate3d(0, -20px, 0) scaleY(0.9);\n  }\n\n  to {\n    opacity: 0;\n    transform: translate3d(0, 2000px, 0) scaleY(3);\n  }\n`\n\nconst bounceInAnimation = css`\n  animation: ${bounceInKeyframe} 1s;\n`\n\nconst bounceOutAnimation = css`\n  animation: ${bounceOutKeyframe} 1s;\n`\n\nconst Wrapper = styled.div`\n  align-items: center;\n  bottom: 72px;\n  color: #ffffff;\n  display: flex;\n  justify-content: center;\n  left: 0;\n  padding-left: 16px;\n  padding-right: 16px;\n  position: absolute;\n  width: 100%;\n  z-index: 50;\n\n  &.popup-enter-active {\n    ${bounceInAnimation}\n  }\n\n  &.popup-enter-done {\n    bottom: 72px;\n  }\n\n  &.popup-exit-done {\n    bottom: -2000px;\n  }\n\n  &.popup-exit-active {\n    ${bounceOutAnimation}\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    bottom: 16px;\n    justify-content: flex-end;\n\n    &.popup-enter-done {\n      bottom: 16px;\n    }\n  }\n`\n\nconst Popup = styled.div`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.secondary};\n  border-radius: 32px;\n  color: #ffffff;\n  display: flex;\n  max-width: 320px;\n  padding: 16px 8px;\n`\n\nconst CollectWinningsPopup = () => {\n  const [isOpen, setIsOpen] = useState(false)\n  const { t } = useTranslation()\n  const ref = useRef(null)\n  const timer = useRef(null)\n  const { account } = useWeb3React()\n  const predictionStatus = useGetPredictionsStatus()\n  const isHistoryPaneOpen = useIsHistoryPaneOpen()\n  const dispatch = useAppDispatch()\n\n  const handleOpenHistory = () => {\n    dispatch(setHistoryPaneState(true))\n  }\n\n  const handleClick = () => {\n    setIsOpen(false)\n    clearInterval(timer.current)\n  }\n\n  // Check user's history for unclaimed winners\n  useEffect(() => {\n    let isCancelled = false\n    if (account) {\n      timer.current = setInterval(async () => {\n        const bets = await getBetHistory({ user: account.toLowerCase(), claimed: false })\n\n        if (!isCancelled) {\n          // Filter out bets that were not winners\n          const winnerBets = bets.filter((bet) => {\n            return bet.position === bet.round.position\n          })\n\n          if (!isHistoryPaneOpen) {\n            setIsOpen(winnerBets.length > 0)\n          }\n        }\n      }, 30000)\n    }\n\n    return () => {\n      clearInterval(timer.current)\n      isCancelled = true\n    }\n  }, [account, timer, predictionStatus, setIsOpen, isHistoryPaneOpen])\n\n  // Any time the history pane is open make sure the popup closes\n  useEffect(() => {\n    if (isHistoryPaneOpen) {\n      setIsOpen(false)\n    }\n  }, [isHistoryPaneOpen, setIsOpen])\n\n  return (\n    <CSSTransition in={isOpen} unmountOnExit nodeRef={ref} timeout={1000} classNames=\"popup\">\n      <Wrapper ref={ref}>\n        <Popup>\n          <TrophyGoldIcon width=\"64px\" style={{ flex: 'none' }} mr=\"8px\" />\n          <Button style={{ flex: 1 }} onClick={handleOpenHistory}>\n            {t('Collect Winnings')}\n          </Button>\n          <IconButton variant=\"text\" onClick={handleClick}>\n            <CloseIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n        </Popup>\n      </Wrapper>\n    </CSSTransition>\n  )\n}\n\nexport default CollectWinningsPopup\n"]},"metadata":{},"sourceType":"module"}