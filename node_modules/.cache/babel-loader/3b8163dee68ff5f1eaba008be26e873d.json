{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Nft/market/components/BuySellModals/SellModal/SellStage.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Flex, Grid, Text, Button, Link, BinanceIcon, LinkExternal, useModal } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { BASE_URL } from 'config';\nimport { nftsBaseUrl, pancakeBunniesAddress } from 'views/Nft/market/constants';\nimport { getBscScanLinkForNft } from 'utils';\nimport EditProfileModal from 'views/Nft/market/Profile/components/EditProfileModal';\nimport { useProfile } from 'state/profile/hooks';\nimport { Divider, HorizontalDivider, RoundedImage } from '../shared/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n// Initial stage when user wants to put their NFT for sale or transfer to another wallet\nconst SellStage = ({\n  nftToSell,\n  lowestPrice,\n  continueToNextStage,\n  continueToTransferStage\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    hasProfile\n  } = useProfile();\n  const itemPageUrlId = nftToSell.collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase() ? nftToSell.attributes[0].value : nftToSell.tokenId;\n  const [onEditProfileModal] = useModal( /*#__PURE__*/_jsxDEV(EditProfileModal, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 41\n  }, this), false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      p: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(RoundedImage, {\n        src: nftToSell.image.thumbnail,\n        height: 68,\n        width: 68,\n        mr: \"8px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        flex: \"1\",\n        gridTemplateColumns: \"1fr 1fr\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          children: nftToSell.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          color: \"textSubtle\",\n          textAlign: \"right\",\n          children: nftToSell.collectionName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          color: \"textSubtle\",\n          children: t('Lowest price')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          justifyContent: \"flex-end\",\n          children: [/*#__PURE__*/_jsxDEV(BinanceIcon, {\n            width: 16,\n            height: 16,\n            mr: \"4px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            small: true,\n            children: lowestPrice ? lowestPrice.toLocaleString(undefined, {\n              minimumFractionDigits: 3,\n              maximumFractionDigits: 3\n            }) : '-'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      px: \"16px\",\n      mt: \"8px\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        flex: \"2\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          color: \"textSubtle\",\n          children: t('Token ID: %id%', {\n            id: nftToSell.tokenId\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        flex: \"3\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          as: Link,\n          p: \"0px\",\n          height: \"16px\",\n          external: true,\n          variant: \"text\",\n          href: `${BASE_URL}${nftsBaseUrl}/collections/${nftToSell.collectionAddress}/${itemPageUrlId}`,\n          children: t('View Item')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalDivider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LinkExternal, {\n          p: \"0px\",\n          height: \"16px\",\n          href: getBscScanLinkForNft(nftToSell.collectionAddress, nftToSell.tokenId),\n          children: \"BscScan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      px: \"16px\",\n      pb: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        mb: \"8px\",\n        onClick: continueToNextStage,\n        children: t('Sell')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        mb: \"8px\",\n        variant: \"secondary\",\n        onClick: continueToTransferStage,\n        children: t('Transfer')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), hasProfile && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: onEditProfileModal,\n        children: t('Set as Profile Pic')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SellStage, \"HzXziweyX7OcEJXxSmej7esyHaw=\", false, function () {\n  return [useTranslation, useProfile, useModal];\n});\n\n_c = SellStage;\nexport default SellStage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SellStage\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/components/BuySellModals/SellModal/SellStage.tsx"],"names":["React","Flex","Grid","Text","Button","Link","BinanceIcon","LinkExternal","useModal","useTranslation","BASE_URL","nftsBaseUrl","pancakeBunniesAddress","getBscScanLinkForNft","EditProfileModal","useProfile","Divider","HorizontalDivider","RoundedImage","SellStage","nftToSell","lowestPrice","continueToNextStage","continueToTransferStage","t","hasProfile","itemPageUrlId","collectionAddress","toLowerCase","attributes","value","tokenId","onEditProfileModal","image","thumbnail","name","collectionName","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","id"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Flex, Grid, Text, Button, Link, BinanceIcon, LinkExternal, useModal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BASE_URL } from 'config'\nimport { nftsBaseUrl, pancakeBunniesAddress } from 'views/Nft/market/constants'\nimport { NftToken } from 'state/nftMarket/types'\nimport { getBscScanLinkForNft } from 'utils'\nimport EditProfileModal from 'views/Nft/market/Profile/components/EditProfileModal'\nimport { useProfile } from 'state/profile/hooks'\nimport { Divider, HorizontalDivider, RoundedImage } from '../shared/styles'\n\ninterface SellStageProps {\n  nftToSell: NftToken\n  lowestPrice: number\n  continueToNextStage: () => void\n  continueToTransferStage: () => void\n}\n\n// Initial stage when user wants to put their NFT for sale or transfer to another wallet\nconst SellStage: React.FC<SellStageProps> = ({\n  nftToSell,\n  lowestPrice,\n  continueToNextStage,\n  continueToTransferStage,\n}) => {\n  const { t } = useTranslation()\n  const { hasProfile } = useProfile()\n  const itemPageUrlId =\n    nftToSell.collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase()\n      ? nftToSell.attributes[0].value\n      : nftToSell.tokenId\n\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n\n  return (\n    <>\n      <Flex p=\"16px\">\n        <RoundedImage src={nftToSell.image.thumbnail} height={68} width={68} mr=\"8px\" />\n        <Grid flex=\"1\" gridTemplateColumns=\"1fr 1fr\" alignItems=\"center\">\n          <Text bold>{nftToSell.name}</Text>\n          <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"right\">\n            {nftToSell.collectionName}\n          </Text>\n          <Text small color=\"textSubtle\">\n            {t('Lowest price')}\n          </Text>\n          <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n            <BinanceIcon width={16} height={16} mr=\"4px\" />\n            <Text small>\n              {lowestPrice\n                ? lowestPrice.toLocaleString(undefined, {\n                    minimumFractionDigits: 3,\n                    maximumFractionDigits: 3,\n                  })\n                : '-'}\n            </Text>\n          </Flex>\n        </Grid>\n      </Flex>\n      <Flex justifyContent=\"space-between\" px=\"16px\" mt=\"8px\">\n        <Flex flex=\"2\">\n          <Text small color=\"textSubtle\">\n            {t('Token ID: %id%', { id: nftToSell.tokenId })}\n          </Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\" flex=\"3\">\n          <Button\n            as={Link}\n            p=\"0px\"\n            height=\"16px\"\n            external\n            variant=\"text\"\n            href={`${BASE_URL}${nftsBaseUrl}/collections/${nftToSell.collectionAddress}/${itemPageUrlId}`}\n          >\n            {t('View Item')}\n          </Button>\n          <HorizontalDivider />\n          <LinkExternal\n            p=\"0px\"\n            height=\"16px\"\n            href={getBscScanLinkForNft(nftToSell.collectionAddress, nftToSell.tokenId)}\n          >\n            BscScan\n          </LinkExternal>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex flexDirection=\"column\" px=\"16px\" pb=\"16px\">\n        <Button mb=\"8px\" onClick={continueToNextStage}>\n          {t('Sell')}\n        </Button>\n        <Button mb=\"8px\" variant=\"secondary\" onClick={continueToTransferStage}>\n          {t('Transfer')}\n        </Button>\n        {hasProfile && (\n          <Button variant=\"secondary\" onClick={onEditProfileModal}>\n            {t('Set as Profile Pic')}\n          </Button>\n        )}\n      </Flex>\n    </>\n  )\n}\n\nexport default SellStage\n"]},"metadata":{},"sourceType":"module"}