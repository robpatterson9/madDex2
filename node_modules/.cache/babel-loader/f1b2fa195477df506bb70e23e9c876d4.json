{"ast":null,"code":"import { Token } from '@pancakeswap/sdk';\nimport { parseUnits } from 'ethers/lib/utils';\nexport function serializeToken(token) {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n    projectLink: token.projectLink\n  };\n}\nexport function deserializeToken(serializedToken) {\n  return new Token(serializedToken.chainId, serializedToken.address, serializedToken.decimals, serializedToken.symbol, serializedToken.name, serializedToken.projectLink);\n}\nexport let GAS_PRICE;\n\n(function (GAS_PRICE) {\n  GAS_PRICE[\"default\"] = \"5\";\n  GAS_PRICE[\"fast\"] = \"6\";\n  GAS_PRICE[\"instant\"] = \"7\";\n  GAS_PRICE[\"testnet\"] = \"10\";\n})(GAS_PRICE || (GAS_PRICE = {}));\n\nexport const GAS_PRICE_GWEI = {\n  default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\n  fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\n  instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\n  testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString()\n};","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/state/user/hooks/helpers.ts"],"names":["Token","parseUnits","serializeToken","token","chainId","address","decimals","symbol","name","projectLink","deserializeToken","serializedToken","GAS_PRICE","GAS_PRICE_GWEI","default","toString","fast","instant","testnet"],"mappings":"AAAA,SAASA,KAAT,QAAsB,kBAAtB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAO,SAASC,cAAT,CAAwBC,KAAxB,EAAuD;AAC5D,SAAO;AACLC,IAAAA,OAAO,EAAED,KAAK,CAACC,OADV;AAELC,IAAAA,OAAO,EAAEF,KAAK,CAACE,OAFV;AAGLC,IAAAA,QAAQ,EAAEH,KAAK,CAACG,QAHX;AAILC,IAAAA,MAAM,EAAEJ,KAAK,CAACI,MAJT;AAKLC,IAAAA,IAAI,EAAEL,KAAK,CAACK,IALP;AAMLC,IAAAA,WAAW,EAAEN,KAAK,CAACM;AANd,GAAP;AAQD;AAED,OAAO,SAASC,gBAAT,CAA0BC,eAA1B,EAAmE;AACxE,SAAO,IAAIX,KAAJ,CACLW,eAAe,CAACP,OADX,EAELO,eAAe,CAACN,OAFX,EAGLM,eAAe,CAACL,QAHX,EAILK,eAAe,CAACJ,MAJX,EAKLI,eAAe,CAACH,IALX,EAMLG,eAAe,CAACF,WANX,CAAP;AAQD;AAED,WAAYG,SAAZ;;WAAYA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;GAAAA,S,KAAAA,S;;AAOZ,OAAO,MAAMC,cAAc,GAAG;AAC5BC,EAAAA,OAAO,EAAEb,UAAU,CAACW,SAAS,CAACE,OAAX,EAAoB,MAApB,CAAV,CAAsCC,QAAtC,EADmB;AAE5BC,EAAAA,IAAI,EAAEf,UAAU,CAACW,SAAS,CAACI,IAAX,EAAiB,MAAjB,CAAV,CAAmCD,QAAnC,EAFsB;AAG5BE,EAAAA,OAAO,EAAEhB,UAAU,CAACW,SAAS,CAACK,OAAX,EAAoB,MAApB,CAAV,CAAsCF,QAAtC,EAHmB;AAI5BG,EAAAA,OAAO,EAAEjB,UAAU,CAACW,SAAS,CAACM,OAAX,EAAoB,MAApB,CAAV,CAAsCH,QAAtC;AAJmB,CAAvB","sourcesContent":["import { Token } from '@pancakeswap/sdk'\nimport { SerializedToken } from 'config/constants/types'\nimport { parseUnits } from 'ethers/lib/utils'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n    projectLink: token.projectLink,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n    serializedToken.projectLink,\n  )\n}\n\nexport enum GAS_PRICE {\n  default = '5',\n  fast = '6',\n  instant = '7',\n  testnet = '10',\n}\n\nexport const GAS_PRICE_GWEI = {\n  default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\n  fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\n  instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\n  testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString(),\n}\n"]},"metadata":{},"sourceType":"module"}