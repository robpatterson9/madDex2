{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from'react';import styled from'styled-components';import{IconButton,ArrowForwardIcon,ArrowBackIcon,ArrowLastIcon,Flex,Heading,Input}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledInput=styled(Input)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 60px;\\n  height: 100%;\\n  padding: 4px 16px;\\n\"])));var StyledIconButton=styled(IconButton)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  width: 32px;\\n\\n  :disabled {\\n    background: none;\\n\\n    svg {\\n      fill: \",\";\\n\\n      path {\\n        fill: \",\";\\n      }\\n    }\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.textDisabled;},function(_ref2){var theme=_ref2.theme;return theme.colors.textDisabled;});var RoundSwitcher=function RoundSwitcher(_ref3){var isLoading=_ref3.isLoading,selectedRoundId=_ref3.selectedRoundId,mostRecentRound=_ref3.mostRecentRound,handleInputChange=_ref3.handleInputChange,handleArrowButtonPress=_ref3.handleArrowButtonPress;var _useTranslation=useTranslation(),t=_useTranslation.t;var selectedRoundIdAsInt=parseInt(selectedRoundId,10);var handleOnChange=function handleOnChange(e){if(e.currentTarget.validity.valid){handleInputChange(e);}};return/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(Heading,{mr:\"8px\",children:t('Round')}),/*#__PURE__*/_jsx(StyledInput,{pattern:\"^[0-9]+$\",inputMode:\"numeric\",disabled:isLoading,id:\"round-id\",name:\"round-id\",value:selectedRoundId,scale:\"lg\",onChange:handleOnChange})]}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(StyledIconButton,{disabled:!selectedRoundIdAsInt||selectedRoundIdAsInt<=1,onClick:function onClick(){return handleArrowButtonPress(selectedRoundIdAsInt-1);},variant:\"text\",scale:\"sm\",mr:\"4px\",children:/*#__PURE__*/_jsx(ArrowBackIcon,{})}),/*#__PURE__*/_jsx(StyledIconButton,{disabled:selectedRoundIdAsInt>=mostRecentRound,onClick:function onClick(){return handleArrowButtonPress(selectedRoundIdAsInt+1);},variant:\"text\",scale:\"sm\",mr:\"4px\",children:/*#__PURE__*/_jsx(ArrowForwardIcon,{})}),/*#__PURE__*/_jsx(StyledIconButton,{disabled:selectedRoundIdAsInt>=mostRecentRound,onClick:function onClick(){return handleArrowButtonPress(mostRecentRound);},variant:\"text\",scale:\"sm\",children:/*#__PURE__*/_jsx(ArrowLastIcon,{})})]})]});};export default RoundSwitcher;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Lottery/components/AllHistoryCard/RoundSwitcher.tsx"],"names":["React","styled","IconButton","ArrowForwardIcon","ArrowBackIcon","ArrowLastIcon","Flex","Heading","Input","useTranslation","StyledInput","StyledIconButton","theme","colors","textDisabled","RoundSwitcher","isLoading","selectedRoundId","mostRecentRound","handleInputChange","handleArrowButtonPress","t","selectedRoundIdAsInt","parseInt","handleOnChange","e","currentTarget","validity","valid"],"mappings":"6MAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,UAAT,CAAqBC,gBAArB,CAAuCC,aAAvC,CAAsDC,aAAtD,CAAqEC,IAArE,CAA2EC,OAA3E,CAAoFC,KAApF,KAAiG,oBAAjG,CACA,OAASC,cAAT,KAA+B,uBAA/B,C,wFAEA,GAAMC,CAAAA,WAAW,CAAGT,MAAM,CAACO,KAAD,CAAT,0HAAjB,CAMA,GAAMG,CAAAA,gBAAgB,CAAGV,MAAM,CAACC,UAAD,CAAT,qNAOR,kBAAGU,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,MAAN,CAAaC,YAA5B,EAPQ,CAUN,mBAAGF,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,MAAN,CAAaC,YAA5B,EAVM,CAAtB,CAwBA,GAAMC,CAAAA,aAA2C,CAAG,QAA9CA,CAAAA,aAA8C,OAM9C,IALJC,CAAAA,SAKI,OALJA,SAKI,CAJJC,eAII,OAJJA,eAII,CAHJC,eAGI,OAHJA,eAGI,CAFJC,iBAEI,OAFJA,iBAEI,CADJC,sBACI,OADJA,sBACI,CACJ,oBAAcX,cAAc,EAA5B,CAAQY,CAAR,iBAAQA,CAAR,CACA,GAAMC,CAAAA,oBAAoB,CAAGC,QAAQ,CAACN,eAAD,CAAkB,EAAlB,CAArC,CAEA,GAAMO,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,CAAD,CAA4C,CACjE,GAAIA,CAAC,CAACC,aAAF,CAAgBC,QAAhB,CAAyBC,KAA7B,CAAoC,CAClCT,iBAAiB,CAACM,CAAD,CAAjB,CACD,CACF,CAJD,CAMA,mBACE,MAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,CAA0B,cAAc,CAAC,eAAzC,wBACE,MAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,wBACE,KAAC,OAAD,EAAS,EAAE,CAAC,KAAZ,UAAmBJ,CAAC,CAAC,OAAD,CAApB,EADF,cAEE,KAAC,WAAD,EACE,OAAO,CAAC,UADV,CAEE,SAAS,CAAC,SAFZ,CAGE,QAAQ,CAAEL,SAHZ,CAIE,EAAE,CAAC,UAJL,CAKE,IAAI,CAAC,UALP,CAME,KAAK,CAAEC,eANT,CAOE,KAAK,CAAC,IAPR,CAQE,QAAQ,CAAEO,cARZ,EAFF,GADF,cAcE,MAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,wBACE,KAAC,gBAAD,EACE,QAAQ,CAAE,CAACF,oBAAD,EAAyBA,oBAAoB,EAAI,CAD7D,CAEE,OAAO,CAAE,yBAAMF,CAAAA,sBAAsB,CAACE,oBAAoB,CAAG,CAAxB,CAA5B,EAFX,CAGE,OAAO,CAAC,MAHV,CAIE,KAAK,CAAC,IAJR,CAKE,EAAE,CAAC,KALL,uBAOE,KAAC,aAAD,IAPF,EADF,cAUE,KAAC,gBAAD,EACE,QAAQ,CAAEA,oBAAoB,EAAIJ,eADpC,CAEE,OAAO,CAAE,yBAAME,CAAAA,sBAAsB,CAACE,oBAAoB,CAAG,CAAxB,CAA5B,EAFX,CAGE,OAAO,CAAC,MAHV,CAIE,KAAK,CAAC,IAJR,CAKE,EAAE,CAAC,KALL,uBAOE,KAAC,gBAAD,IAPF,EAVF,cAmBE,KAAC,gBAAD,EACE,QAAQ,CAAEA,oBAAoB,EAAIJ,eADpC,CAEE,OAAO,CAAE,yBAAME,CAAAA,sBAAsB,CAACF,eAAD,CAA5B,EAFX,CAGE,OAAO,CAAC,MAHV,CAIE,KAAK,CAAC,IAJR,uBAME,KAAC,aAAD,IANF,EAnBF,GAdF,GADF,CA6CD,CA7DD,CA+DA,cAAeH,CAAAA,aAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { IconButton, ArrowForwardIcon, ArrowBackIcon, ArrowLastIcon, Flex, Heading, Input } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  width: 60px;\n  height: 100%;\n  padding: 4px 16px;\n`\n\nconst StyledIconButton = styled(IconButton)`\n  width: 32px;\n\n  :disabled {\n    background: none;\n\n    svg {\n      fill: ${({ theme }) => theme.colors.textDisabled};\n\n      path {\n        fill: ${({ theme }) => theme.colors.textDisabled};\n      }\n    }\n  }\n`\n\ninterface RoundSwitcherProps {\n  isLoading: boolean\n  selectedRoundId: string\n  mostRecentRound: number\n  handleInputChange: (event: any) => void\n  handleArrowButtonPress: (targetRound: number) => void\n}\n\nconst RoundSwitcher: React.FC<RoundSwitcherProps> = ({\n  isLoading,\n  selectedRoundId,\n  mostRecentRound,\n  handleInputChange,\n  handleArrowButtonPress,\n}) => {\n  const { t } = useTranslation()\n  const selectedRoundIdAsInt = parseInt(selectedRoundId, 10)\n\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.currentTarget.validity.valid) {\n      handleInputChange(e)\n    }\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex alignItems=\"center\">\n        <Heading mr=\"8px\">{t('Round')}</Heading>\n        <StyledInput\n          pattern=\"^[0-9]+$\"\n          inputMode=\"numeric\"\n          disabled={isLoading}\n          id=\"round-id\"\n          name=\"round-id\"\n          value={selectedRoundId}\n          scale=\"lg\"\n          onChange={handleOnChange}\n        />\n      </Flex>\n      <Flex alignItems=\"center\">\n        <StyledIconButton\n          disabled={!selectedRoundIdAsInt || selectedRoundIdAsInt <= 1}\n          onClick={() => handleArrowButtonPress(selectedRoundIdAsInt - 1)}\n          variant=\"text\"\n          scale=\"sm\"\n          mr=\"4px\"\n        >\n          <ArrowBackIcon />\n        </StyledIconButton>\n        <StyledIconButton\n          disabled={selectedRoundIdAsInt >= mostRecentRound}\n          onClick={() => handleArrowButtonPress(selectedRoundIdAsInt + 1)}\n          variant=\"text\"\n          scale=\"sm\"\n          mr=\"4px\"\n        >\n          <ArrowForwardIcon />\n        </StyledIconButton>\n        <StyledIconButton\n          disabled={selectedRoundIdAsInt >= mostRecentRound}\n          onClick={() => handleArrowButtonPress(mostRecentRound)}\n          variant=\"text\"\n          scale=\"sm\"\n        >\n          <ArrowLastIcon />\n        </StyledIconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default RoundSwitcher\n"]},"metadata":{},"sourceType":"module"}