{"ast":null,"code":"import { ChainId } from '@pancakeswap/sdk';\nimport addresses from 'config/constants/contracts';\nexport const getAddress = address => {\n  const chainId = process.env.REACT_APP_CHAIN_ID;\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET];\n};\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef);\n};\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall);\n};\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2);\n};\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile);\n};\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits);\n};\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory);\n};\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund);\n};\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo);\n};\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial);\n};\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition);\n};\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft);\n};\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault);\n};\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions);\n};\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle);\n};\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault);\n};\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction);\n};\nexport const getBunnySpecialLotteryAddress = () => {\n  return getAddress(addresses.bunnySpecialLottery);\n};\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction);\n};\nexport const getAnniversaryAchievement = () => {\n  return getAddress(addresses.AnniversaryAchievement);\n};\nexport const getNftMarketAddress = () => {\n  return getAddress(addresses.nftMarket);\n};","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/utils/addressHelpers.ts"],"names":["ChainId","addresses","getAddress","address","chainId","process","env","REACT_APP_CHAIN_ID","MAINNET","getMasterChefAddress","masterChef","getMulticallAddress","multiCall","getLotteryV2Address","lotteryV2","getPancakeProfileAddress","pancakeProfile","getPancakeRabbitsAddress","pancakeRabbits","getBunnyFactoryAddress","bunnyFactory","getClaimRefundAddress","claimRefund","getPointCenterIfoAddress","pointCenterIfo","getBunnySpecialAddress","bunnySpecial","getTradingCompetitionAddress","tradingCompetition","getEasterNftAddress","easterNft","getCakeVaultAddress","cakeVault","getPredictionsAddress","predictions","getChainlinkOracleAddress","chainlinkOracle","getBunnySpecialCakeVaultAddress","bunnySpecialCakeVault","getBunnySpecialPredictionAddress","bunnySpecialPrediction","getBunnySpecialLotteryAddress","bunnySpecialLottery","getFarmAuctionAddress","farmAuction","getAnniversaryAchievement","AnniversaryAchievement","getNftMarketAddress","nftMarket"],"mappings":"AAAA,SAASA,OAAT,QAAwB,kBAAxB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AAGA,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAA8B;AACtD,QAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAA5B;AACA,SAAOJ,OAAO,CAACC,OAAD,CAAP,GAAmBD,OAAO,CAACC,OAAD,CAA1B,GAAsCD,OAAO,CAACH,OAAO,CAACQ,OAAT,CAApD;AACD,CAHM;AAKP,OAAO,MAAMC,oBAAoB,GAAG,MAAM;AACxC,SAAOP,UAAU,CAACD,SAAS,CAACS,UAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACvC,SAAOT,UAAU,CAACD,SAAS,CAACW,SAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACvC,SAAOX,UAAU,CAACD,SAAS,CAACa,SAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,wBAAwB,GAAG,MAAM;AAC5C,SAAOb,UAAU,CAACD,SAAS,CAACe,cAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,wBAAwB,GAAG,MAAM;AAC5C,SAAOf,UAAU,CAACD,SAAS,CAACiB,cAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,sBAAsB,GAAG,MAAM;AAC1C,SAAOjB,UAAU,CAACD,SAAS,CAACmB,YAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,qBAAqB,GAAG,MAAM;AACzC,SAAOnB,UAAU,CAACD,SAAS,CAACqB,WAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,wBAAwB,GAAG,MAAM;AAC5C,SAAOrB,UAAU,CAACD,SAAS,CAACuB,cAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,sBAAsB,GAAG,MAAM;AAC1C,SAAOvB,UAAU,CAACD,SAAS,CAACyB,YAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,4BAA4B,GAAG,MAAM;AAChD,SAAOzB,UAAU,CAACD,SAAS,CAAC2B,kBAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACvC,SAAO3B,UAAU,CAACD,SAAS,CAAC6B,SAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACvC,SAAO7B,UAAU,CAACD,SAAS,CAAC+B,SAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,qBAAqB,GAAG,MAAM;AACzC,SAAO/B,UAAU,CAACD,SAAS,CAACiC,WAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,yBAAyB,GAAG,MAAM;AAC7C,SAAOjC,UAAU,CAACD,SAAS,CAACmC,eAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,+BAA+B,GAAG,MAAM;AACnD,SAAOnC,UAAU,CAACD,SAAS,CAACqC,qBAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,gCAAgC,GAAG,MAAM;AACpD,SAAOrC,UAAU,CAACD,SAAS,CAACuC,sBAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,6BAA6B,GAAG,MAAM;AACjD,SAAOvC,UAAU,CAACD,SAAS,CAACyC,mBAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,qBAAqB,GAAG,MAAM;AACzC,SAAOzC,UAAU,CAACD,SAAS,CAAC2C,WAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,yBAAyB,GAAG,MAAM;AAC7C,SAAO3C,UAAU,CAACD,SAAS,CAAC6C,sBAAX,CAAjB;AACD,CAFM;AAGP,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACvC,SAAO7C,UAAU,CAACD,SAAS,CAAC+C,SAAX,CAAjB;AACD,CAFM","sourcesContent":["import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getBunnySpecialLotteryAddress = () => {\n  return getAddress(addresses.bunnySpecialLottery)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\nexport const getAnniversaryAchievement = () => {\n  return getAddress(addresses.AnniversaryAchievement)\n}\nexport const getNftMarketAddress = () => {\n  return getAddress(addresses.nftMarket)\n}\n"]},"metadata":{},"sourceType":"module"}