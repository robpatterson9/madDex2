{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useReducer}from'react';export var Views;(function(Views){Views[\"START\"]=\"start\";Views[\"CHANGE\"]=\"change\";Views[\"REMOVE\"]=\"remove\";Views[\"APPROVE\"]=\"approve\";})(Views||(Views={}));var reducer=function reducer(state,action){switch(action.type){case'set_view':return _objectSpread(_objectSpread({},state),{},{currentView:action.view,previousView:state.currentView});case'go_previous':return _objectSpread(_objectSpread({},state),{},{currentView:state.previousView,previousView:state.currentView});default:return state;}};var useEditProfile=function useEditProfile(){var _useReducer=useReducer(reducer,{currentView:Views.START,previousView:null}),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var goToStart=function goToStart(){return dispatch({type:'set_view',view:Views.START});};var goToChange=function goToChange(){return dispatch({type:'set_view',view:Views.CHANGE});};var goToRemove=function goToRemove(){return dispatch({type:'set_view',view:Views.REMOVE});};var goToApprove=function goToApprove(){return dispatch({type:'set_view',view:Views.APPROVE});};var goPrevious=function goPrevious(){return dispatch({type:'go_previous'});};return _objectSpread(_objectSpread({},state),{},{goToStart:goToStart,goToChange:goToChange,goToRemove:goToRemove,goToApprove:goToApprove,goPrevious:goPrevious});};export default useEditProfile;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Profile/components/EditProfileModal/reducer.ts"],"names":["useReducer","Views","reducer","state","action","type","currentView","view","previousView","useEditProfile","START","dispatch","goToStart","goToChange","CHANGE","goToRemove","REMOVE","goToApprove","APPROVE","goPrevious"],"mappings":"+SAAA,OAASA,UAAT,KAA2B,OAA3B,CAEA,UAAYC,CAAAA,KAAZ,C,UAAYA,K,EAAAA,K,kBAAAA,K,oBAAAA,K,oBAAAA,K,yBAAAA,K,GAAAA,K,MAqBZ,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAeC,MAAf,CAA0C,CACxD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,UAAL,CACE,sCACKF,KADL,MAEEG,WAAW,CAAEF,MAAM,CAACG,IAFtB,CAGEC,YAAY,CAAEL,KAAK,CAACG,WAHtB,GAKF,IAAK,aAAL,CACE,sCACKH,KADL,MAEEG,WAAW,CAAEH,KAAK,CAACK,YAFrB,CAGEA,YAAY,CAAEL,KAAK,CAACG,WAHtB,GAKF,QACE,MAAOH,CAAAA,KAAP,CAdJ,CAgBD,CAjBD,CA2BA,GAAMM,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAA8B,CACnD,gBAA0BT,UAAU,CAACE,OAAD,CAAU,CAC5CI,WAAW,CAAEL,KAAK,CAACS,KADyB,CAE5CF,YAAY,CAAE,IAF8B,CAAV,CAApC,4CAAOL,KAAP,iBAAcQ,QAAd,iBAKA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,SAAMD,CAAAA,QAAQ,CAAC,CAAEN,IAAI,CAAE,UAAR,CAAoBE,IAAI,CAAEN,KAAK,CAACS,KAAhC,CAAD,CAAd,EAAlB,CACA,GAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAMF,CAAAA,QAAQ,CAAC,CAAEN,IAAI,CAAE,UAAR,CAAoBE,IAAI,CAAEN,KAAK,CAACa,MAAhC,CAAD,CAAd,EAAnB,CACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAMJ,CAAAA,QAAQ,CAAC,CAAEN,IAAI,CAAE,UAAR,CAAoBE,IAAI,CAAEN,KAAK,CAACe,MAAhC,CAAD,CAAd,EAAnB,CACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMN,CAAAA,QAAQ,CAAC,CAAEN,IAAI,CAAE,UAAR,CAAoBE,IAAI,CAAEN,KAAK,CAACiB,OAAhC,CAAD,CAAd,EAApB,CACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAMR,CAAAA,QAAQ,CAAC,CAAEN,IAAI,CAAE,aAAR,CAAD,CAAd,EAAnB,CAEA,sCAAYF,KAAZ,MAAmBS,SAAS,CAATA,SAAnB,CAA8BC,UAAU,CAAVA,UAA9B,CAA0CE,UAAU,CAAVA,UAA1C,CAAsDE,WAAW,CAAXA,WAAtD,CAAmEE,UAAU,CAAVA,UAAnE,GACD,CAbD,CAeA,cAAeV,CAAAA,cAAf","sourcesContent":["import { useReducer } from 'react'\n\nexport enum Views {\n  START = 'start',\n  CHANGE = 'change',\n  REMOVE = 'remove',\n  APPROVE = 'approve',\n}\n\nexport type Actions =\n  | {\n      type: 'set_view'\n      view: Views\n    }\n  | {\n      type: 'go_previous'\n    }\n\nexport interface State {\n  currentView: Views\n  previousView: Views | null\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'set_view':\n      return {\n        ...state,\n        currentView: action.view,\n        previousView: state.currentView,\n      }\n    case 'go_previous':\n      return {\n        ...state,\n        currentView: state.previousView,\n        previousView: state.currentView,\n      }\n    default:\n      return state\n  }\n}\n\nexport interface UseEditProfileResponse extends State {\n  goToStart: () => void\n  goToChange: () => void\n  goToApprove: () => void\n  goToRemove: () => void\n  goPrevious: () => void\n}\n\nconst useEditProfile = (): UseEditProfileResponse => {\n  const [state, dispatch] = useReducer(reducer, {\n    currentView: Views.START,\n    previousView: null,\n  })\n\n  const goToStart = () => dispatch({ type: 'set_view', view: Views.START })\n  const goToChange = () => dispatch({ type: 'set_view', view: Views.CHANGE })\n  const goToRemove = () => dispatch({ type: 'set_view', view: Views.REMOVE })\n  const goToApprove = () => dispatch({ type: 'set_view', view: Views.APPROVE })\n  const goPrevious = () => dispatch({ type: 'go_previous' })\n\n  return { ...state, goToStart, goToChange, goToRemove, goToApprove, goPrevious }\n}\n\nexport default useEditProfile\n"]},"metadata":{},"sourceType":"module"}