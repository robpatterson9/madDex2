{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Info/components/InfoCharts/LineChart/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { ResponsiveContainer, XAxis, YAxis, Tooltip, AreaChart, Area } from 'recharts';\nimport useTheme from 'hooks/useTheme';\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers';\nimport { LineChartLoader } from 'views/Info/components/ChartLoaders';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// Calls setHoverValue and setHoverDate when part of chart is hovered\n// Note: this NEEDs to be wrapped inside component and useEffect, if you plug it as is it will create big render problems (try and see console)\nconst HoverUpdater = ({\n  payload,\n  setHoverValue,\n  setHoverDate\n}) => {\n  _s();\n\n  useEffect(() => {\n    setHoverValue(payload.value);\n    setHoverDate(format(payload.time, 'MMM d, yyyy'));\n  }, [payload.value, payload.time, setHoverValue, setHoverDate]);\n  return null;\n};\n/**\n * Note: remember that it needs to be mounted inside the container with fixed height\n */\n\n\n_s(HoverUpdater, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = HoverUpdater;\n\nconst LineChart = ({\n  data,\n  setHoverValue,\n  setHoverDate\n}) => {\n  _s2();\n\n  const {\n    theme\n  } = useTheme();\n\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(LineChartLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    children: /*#__PURE__*/_jsxDEV(AreaChart, {\n      data: data,\n      width: 300,\n      height: 308,\n      margin: {\n        top: 5,\n        right: 15,\n        left: 0,\n        bottom: 5\n      },\n      onMouseLeave: () => {\n        if (setHoverDate) setHoverDate(undefined);\n        if (setHoverValue) setHoverValue(undefined);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n        children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n          id: \"gradient\",\n          x1: \"0\",\n          y1: \"0\",\n          x2: \"0\",\n          y2: \"1\",\n          children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"5%\",\n            stopColor: theme.colors.inputSecondary,\n            stopOpacity: 0.5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n            offset: \"100%\",\n            stopColor: theme.colors.secondary,\n            stopOpacity: 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"time\",\n        axisLine: false,\n        tickLine: false,\n        tickFormatter: time => format(time, 'dd'),\n        minTickGap: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        dataKey: \"value\",\n        tickCount: 6,\n        scale: \"linear\",\n        axisLine: false,\n        tickLine: false,\n        fontSize: \"12px\",\n        tickFormatter: val => `$${formatAmount(val)}`,\n        orientation: \"right\",\n        tick: {\n          dx: 10,\n          fill: theme.colors.textSubtle\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        cursor: {\n          stroke: theme.colors.secondary\n        },\n        contentStyle: {\n          display: 'none'\n        },\n        formatter: (tooltipValue, name, props) => /*#__PURE__*/_jsxDEV(HoverUpdater, {\n          payload: props.payload,\n          setHoverValue: setHoverValue,\n          setHoverDate: setHoverDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Area, {\n        dataKey: \"value\",\n        type: \"monotone\",\n        stroke: theme.colors.secondary,\n        fill: \"url(#gradient)\",\n        strokeWidth: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(LineChart, \"JkSxfi8+JQlqgIgDOc3wQN+nVIw=\", false, function () {\n  return [useTheme];\n});\n\n_c2 = LineChart;\nexport default LineChart;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HoverUpdater\");\n$RefreshReg$(_c2, \"LineChart\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Info/components/InfoCharts/LineChart/index.tsx"],"names":["React","useEffect","format","ResponsiveContainer","XAxis","YAxis","Tooltip","AreaChart","Area","useTheme","formatAmount","LineChartLoader","HoverUpdater","payload","setHoverValue","setHoverDate","value","time","LineChart","data","theme","length","top","right","left","bottom","undefined","colors","inputSecondary","secondary","val","dx","fill","textSubtle","stroke","display","tooltipValue","name","props"],"mappings":"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","sourcesContent":["import React, { useEffect, Dispatch, SetStateAction } from 'react'\nimport { format } from 'date-fns'\nimport { ResponsiveContainer, XAxis, YAxis, Tooltip, AreaChart, Area } from 'recharts'\nimport useTheme from 'hooks/useTheme'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport { LineChartLoader } from 'views/Info/components/ChartLoaders'\n\nexport type LineChartProps = {\n  data: any[]\n  setHoverValue: Dispatch<SetStateAction<number | undefined>> // used for value on hover\n  setHoverDate: Dispatch<SetStateAction<string | undefined>> // used for label of valye\n} & React.HTMLAttributes<HTMLDivElement>\n\n// Calls setHoverValue and setHoverDate when part of chart is hovered\n// Note: this NEEDs to be wrapped inside component and useEffect, if you plug it as is it will create big render problems (try and see console)\nconst HoverUpdater = ({ payload, setHoverValue, setHoverDate }) => {\n  useEffect(() => {\n    setHoverValue(payload.value)\n    setHoverDate(format(payload.time, 'MMM d, yyyy'))\n  }, [payload.value, payload.time, setHoverValue, setHoverDate])\n\n  return null\n}\n\n/**\n * Note: remember that it needs to be mounted inside the container with fixed height\n */\nconst LineChart = ({ data, setHoverValue, setHoverDate }: LineChartProps) => {\n  const { theme } = useTheme()\n  if (!data || data.length === 0) {\n    return <LineChartLoader />\n  }\n  return (\n    <ResponsiveContainer>\n      <AreaChart\n        data={data}\n        width={300}\n        height={308}\n        margin={{\n          top: 5,\n          right: 15,\n          left: 0,\n          bottom: 5,\n        }}\n        onMouseLeave={() => {\n          if (setHoverDate) setHoverDate(undefined)\n          if (setHoverValue) setHoverValue(undefined)\n        }}\n      >\n        <defs>\n          <linearGradient id=\"gradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"5%\" stopColor={theme.colors.inputSecondary} stopOpacity={0.5} />\n            <stop offset=\"100%\" stopColor={theme.colors.secondary} stopOpacity={0} />\n          </linearGradient>\n        </defs>\n        <XAxis\n          dataKey=\"time\"\n          axisLine={false}\n          tickLine={false}\n          tickFormatter={(time) => format(time, 'dd')}\n          minTickGap={10}\n        />\n        <YAxis\n          dataKey=\"value\"\n          tickCount={6}\n          scale=\"linear\"\n          axisLine={false}\n          tickLine={false}\n          fontSize=\"12px\"\n          tickFormatter={(val) => `$${formatAmount(val)}`}\n          orientation=\"right\"\n          tick={{ dx: 10, fill: theme.colors.textSubtle }}\n        />\n        <Tooltip\n          cursor={{ stroke: theme.colors.secondary }}\n          contentStyle={{ display: 'none' }}\n          formatter={(tooltipValue, name, props) => (\n            <HoverUpdater payload={props.payload} setHoverValue={setHoverValue} setHoverDate={setHoverDate} />\n          )}\n        />\n        <Area dataKey=\"value\" type=\"monotone\" stroke={theme.colors.secondary} fill=\"url(#gradient)\" strokeWidth={2} />\n      </AreaChart>\n    </ResponsiveContainer>\n  )\n}\n\nexport default LineChart\n"]},"metadata":{},"sourceType":"module"}