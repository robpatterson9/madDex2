{"ast":null,"code":"import React,{useEffect,useMemo}from'react';import{useDispatch,useSelector}from'react-redux';import{Text,Flex,Link}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import useActiveWeb3React from'hooks/useActiveWeb3React';import{getBscScanLink}from'utils';import{useBlock}from'state/block/hooks';import useToast from'hooks/useToast';import{checkedTransaction,finalizeTransaction}from'./actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function shouldCheck(currentBlock,tx){if(tx.receipt)return false;if(!tx.lastCheckedBlockNumber)return true;var blocksSinceCheck=currentBlock-tx.lastCheckedBlockNumber;if(blocksSinceCheck<1)return false;var minutesPending=(new Date().getTime()-tx.addedTime)/1000/60;if(minutesPending>60){// every 10 blocks if pending for longer than an hour\nreturn blocksSinceCheck>9;}if(minutesPending>5){// every 3 blocks if pending more than 5 minutes\nreturn blocksSinceCheck>2;}// otherwise every block\nreturn true;}export default function Updater(){var _useActiveWeb3React=useActiveWeb3React(),library=_useActiveWeb3React.library,chainId=_useActiveWeb3React.chainId;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useBlock=useBlock(),currentBlock=_useBlock.currentBlock;var dispatch=useDispatch();var state=useSelector(function(s){return s.transactions;});var transactions=useMemo(function(){var _state$chainId;return chainId?(_state$chainId=state[chainId])!==null&&_state$chainId!==void 0?_state$chainId:{}:{};},[chainId,state]);var _useToast=useToast(),toastError=_useToast.toastError,toastSuccess=_useToast.toastSuccess;useEffect(function(){if(!chainId||!library||!currentBlock)return;Object.keys(transactions).filter(function(hash){return shouldCheck(currentBlock,transactions[hash]);}).forEach(function(hash){library.getTransactionReceipt(hash).then(function(receipt){if(receipt){var _transactions$hash$su,_transactions$hash;dispatch(finalizeTransaction({chainId:chainId,hash:hash,receipt:{blockHash:receipt.blockHash,blockNumber:receipt.blockNumber,contractAddress:receipt.contractAddress,from:receipt.from,status:receipt.status,to:receipt.to,transactionHash:receipt.transactionHash,transactionIndex:receipt.transactionIndex}}));var toast=receipt.status===1?toastSuccess:toastError;toast(t('Transaction receipt'),/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",children:[/*#__PURE__*/_jsx(Text,{children:(_transactions$hash$su=(_transactions$hash=transactions[hash])===null||_transactions$hash===void 0?void 0:_transactions$hash.summary)!==null&&_transactions$hash$su!==void 0?_transactions$hash$su:\"Hash: \".concat(hash.slice(0,8),\"...\").concat(hash.slice(58,65))}),chainId&&/*#__PURE__*/_jsx(Link,{external:true,href:getBscScanLink(hash,'transaction',chainId),children:t('View on BscScan')})]}));}else{dispatch(checkedTransaction({chainId:chainId,hash:hash,blockNumber:currentBlock}));}}).catch(function(error){console.error(\"failed to check transaction hash: \".concat(hash),error);});});},[chainId,library,transactions,currentBlock,dispatch,toastSuccess,toastError,t]);return null;}","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/state/transactions/updater.tsx"],"names":["React","useEffect","useMemo","useDispatch","useSelector","Text","Flex","Link","useTranslation","useActiveWeb3React","getBscScanLink","useBlock","useToast","checkedTransaction","finalizeTransaction","shouldCheck","currentBlock","tx","receipt","lastCheckedBlockNumber","blocksSinceCheck","minutesPending","Date","getTime","addedTime","Updater","library","chainId","t","dispatch","state","s","transactions","toastError","toastSuccess","Object","keys","filter","hash","forEach","getTransactionReceipt","then","blockHash","blockNumber","contractAddress","from","status","to","transactionHash","transactionIndex","toast","summary","slice","catch","error","console"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport useToast from 'hooks/useToast'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  currentBlock: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = currentBlock - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const { currentBlock } = useBlock()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !currentBlock) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(currentBlock, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                t('Transaction receipt'),\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      {t('View on BscScan')}\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: currentBlock }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, currentBlock, dispatch, toastSuccess, toastError, t])\n\n  return null\n}\n"]},"metadata":{},"sourceType":"module"}