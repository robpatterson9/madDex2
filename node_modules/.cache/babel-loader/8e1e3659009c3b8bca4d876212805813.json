{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var _templateObject;import{useState,useEffect}from'react';import{request,gql}from'graphql-request';import{INFO_CLIENT}from'config/constants/endpoints';import{getChangeForPeriod,getPercentChange}from'views/Info/utils/infoDataHelpers';import{getDeltaTimestamps}from'views/Info/utils/infoQueryHelpers';import{useBlocksFromTimestamps}from'views/Info/hooks/useBlocksFromTimestamps';/**\n * Latest Liquidity, Volume and Transaction count\n */var getOverviewData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(block){var query,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;query=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"query overview {\\n      pancakeFactories(\\n        \",\" \\n        first: 1) {\\n        totalTransactions\\n        totalVolumeUSD\\n        totalLiquidityUSD\\n      }\\n    }\"])),block?\"block: { number: \".concat(block,\"}\"):\"\");_context.next=4;return request(INFO_CLIENT,query);case 4:data=_context.sent;return _context.abrupt(\"return\",{data:data,error:false});case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.error('Failed to fetch info overview',_context.t0);return _context.abrupt(\"return\",{data:null,error:true});case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function getOverviewData(_x){return _ref.apply(this,arguments);};}();var formatPancakeFactoryResponse=function formatPancakeFactoryResponse(rawPancakeFactory){if(rawPancakeFactory){return{totalTransactions:parseFloat(rawPancakeFactory.totalTransactions),totalVolumeUSD:parseFloat(rawPancakeFactory.totalVolumeUSD),totalLiquidityUSD:parseFloat(rawPancakeFactory.totalLiquidityUSD)};}return null;};var useFetchProtocolData=function useFetchProtocolData(){var _useState=useState({error:false}),_useState2=_slicedToArray(_useState,2),fetchState=_useState2[0],setFetchState=_useState2[1];var _getDeltaTimestamps=getDeltaTimestamps(),_getDeltaTimestamps2=_slicedToArray(_getDeltaTimestamps,2),t24=_getDeltaTimestamps2[0],t48=_getDeltaTimestamps2[1];var _useBlocksFromTimesta=useBlocksFromTimestamps([t24,t48]),blocks=_useBlocksFromTimesta.blocks,blockError=_useBlocksFromTimesta.error;var _ref2=blocks!==null&&blocks!==void 0?blocks:[],_ref3=_slicedToArray(_ref2,2),block24=_ref3[0],block48=_ref3[1];useEffect(function(){var fetch=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _block24$number,_block48$number,_data$pancakeFactorie,_data24$pancakeFactor,_data48$pancakeFactor;var _yield$getOverviewDat,error,data,_yield$getOverviewDat2,error24,data24,_yield$getOverviewDat3,error48,data48,anyError,overviewData,overviewData24,overviewData48,allDataAvailable,_getChangeForPeriod,_getChangeForPeriod2,volumeUSD,volumeUSDChange,liquidityUSDChange,_getChangeForPeriod3,_getChangeForPeriod4,txCount,txCountChange,protocolData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return getOverviewData();case 2:_yield$getOverviewDat=_context2.sent;error=_yield$getOverviewDat.error;data=_yield$getOverviewDat.data;_context2.next=7;return getOverviewData((_block24$number=block24===null||block24===void 0?void 0:block24.number)!==null&&_block24$number!==void 0?_block24$number:undefined);case 7:_yield$getOverviewDat2=_context2.sent;error24=_yield$getOverviewDat2.error;data24=_yield$getOverviewDat2.data;_context2.next=12;return getOverviewData((_block48$number=block48===null||block48===void 0?void 0:block48.number)!==null&&_block48$number!==void 0?_block48$number:undefined);case 12:_yield$getOverviewDat3=_context2.sent;error48=_yield$getOverviewDat3.error;data48=_yield$getOverviewDat3.data;anyError=error||error24||error48;overviewData=formatPancakeFactoryResponse(data===null||data===void 0?void 0:(_data$pancakeFactorie=data.pancakeFactories)===null||_data$pancakeFactorie===void 0?void 0:_data$pancakeFactorie[0]);overviewData24=formatPancakeFactoryResponse(data24===null||data24===void 0?void 0:(_data24$pancakeFactor=data24.pancakeFactories)===null||_data24$pancakeFactor===void 0?void 0:_data24$pancakeFactor[0]);overviewData48=formatPancakeFactoryResponse(data48===null||data48===void 0?void 0:(_data48$pancakeFactor=data48.pancakeFactories)===null||_data48$pancakeFactor===void 0?void 0:_data48$pancakeFactor[0]);allDataAvailable=overviewData&&overviewData24&&overviewData48;if(anyError||!allDataAvailable){setFetchState({error:true});}else{_getChangeForPeriod=getChangeForPeriod(overviewData.totalVolumeUSD,overviewData24.totalVolumeUSD,overviewData48.totalVolumeUSD),_getChangeForPeriod2=_slicedToArray(_getChangeForPeriod,2),volumeUSD=_getChangeForPeriod2[0],volumeUSDChange=_getChangeForPeriod2[1];liquidityUSDChange=getPercentChange(overviewData.totalLiquidityUSD,overviewData24.totalLiquidityUSD);// 24H transactions\n_getChangeForPeriod3=getChangeForPeriod(overviewData.totalTransactions,overviewData24.totalTransactions,overviewData48.totalTransactions),_getChangeForPeriod4=_slicedToArray(_getChangeForPeriod3,2),txCount=_getChangeForPeriod4[0],txCountChange=_getChangeForPeriod4[1];protocolData={volumeUSD:volumeUSD,volumeUSDChange:typeof volumeUSDChange==='number'?volumeUSDChange:0,liquidityUSD:overviewData.totalLiquidityUSD,liquidityUSDChange:liquidityUSDChange,txCount:txCount,txCountChange:txCountChange};setFetchState({error:false,data:protocolData});}case 21:case\"end\":return _context2.stop();}}},_callee2);}));return function fetch(){return _ref4.apply(this,arguments);};}();var allBlocksAvailable=(block24===null||block24===void 0?void 0:block24.number)&&(block48===null||block48===void 0?void 0:block48.number);if(allBlocksAvailable&&!blockError&&!fetchState.data){fetch();}},[block24,block48,blockError,fetchState]);return fetchState;};export default useFetchProtocolData;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/state/info/queries/protocol/overview.ts"],"names":["useState","useEffect","request","gql","INFO_CLIENT","getChangeForPeriod","getPercentChange","getDeltaTimestamps","useBlocksFromTimestamps","getOverviewData","block","query","data","error","console","formatPancakeFactoryResponse","rawPancakeFactory","totalTransactions","parseFloat","totalVolumeUSD","totalLiquidityUSD","useFetchProtocolData","fetchState","setFetchState","t24","t48","blocks","blockError","block24","block48","fetch","number","undefined","error24","data24","error48","data48","anyError","overviewData","pancakeFactories","overviewData24","overviewData48","allDataAvailable","volumeUSD","volumeUSDChange","liquidityUSDChange","txCount","txCountChange","protocolData","liquidityUSD","allBlocksAvailable"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { request, gql } from 'graphql-request'\nimport { INFO_CLIENT } from 'config/constants/endpoints'\nimport { getChangeForPeriod, getPercentChange } from 'views/Info/utils/infoDataHelpers'\nimport { ProtocolData } from 'state/info/types'\nimport { getDeltaTimestamps } from 'views/Info/utils/infoQueryHelpers'\nimport { useBlocksFromTimestamps } from 'views/Info/hooks/useBlocksFromTimestamps'\n\ninterface PancakeFactory {\n  totalTransactions: string\n  totalVolumeUSD: string\n  totalLiquidityUSD: string\n}\n\ninterface OverviewResponse {\n  pancakeFactories: PancakeFactory[]\n}\n\n/**\n * Latest Liquidity, Volume and Transaction count\n */\nconst getOverviewData = async (block?: number): Promise<{ data?: OverviewResponse; error: boolean }> => {\n  try {\n    const query = gql`query overview {\n      pancakeFactories(\n        ${block ? `block: { number: ${block}}` : ``} \n        first: 1) {\n        totalTransactions\n        totalVolumeUSD\n        totalLiquidityUSD\n      }\n    }`\n    const data = await request<OverviewResponse>(INFO_CLIENT, query)\n    return { data, error: false }\n  } catch (error) {\n    console.error('Failed to fetch info overview', error)\n    return { data: null, error: true }\n  }\n}\n\nconst formatPancakeFactoryResponse = (rawPancakeFactory?: PancakeFactory) => {\n  if (rawPancakeFactory) {\n    return {\n      totalTransactions: parseFloat(rawPancakeFactory.totalTransactions),\n      totalVolumeUSD: parseFloat(rawPancakeFactory.totalVolumeUSD),\n      totalLiquidityUSD: parseFloat(rawPancakeFactory.totalLiquidityUSD),\n    }\n  }\n  return null\n}\n\ninterface ProtocolFetchState {\n  error: boolean\n  data?: ProtocolData\n}\n\nconst useFetchProtocolData = (): ProtocolFetchState => {\n  const [fetchState, setFetchState] = useState<ProtocolFetchState>({\n    error: false,\n  })\n  const [t24, t48] = getDeltaTimestamps()\n  const { blocks, error: blockError } = useBlocksFromTimestamps([t24, t48])\n  const [block24, block48] = blocks ?? []\n\n  useEffect(() => {\n    const fetch = async () => {\n      const { error, data } = await getOverviewData()\n      const { error: error24, data: data24 } = await getOverviewData(block24?.number ?? undefined)\n      const { error: error48, data: data48 } = await getOverviewData(block48?.number ?? undefined)\n      const anyError = error || error24 || error48\n      const overviewData = formatPancakeFactoryResponse(data?.pancakeFactories?.[0])\n      const overviewData24 = formatPancakeFactoryResponse(data24?.pancakeFactories?.[0])\n      const overviewData48 = formatPancakeFactoryResponse(data48?.pancakeFactories?.[0])\n      const allDataAvailable = overviewData && overviewData24 && overviewData48\n      if (anyError || !allDataAvailable) {\n        setFetchState({\n          error: true,\n        })\n      } else {\n        const [volumeUSD, volumeUSDChange] = getChangeForPeriod(\n          overviewData.totalVolumeUSD,\n          overviewData24.totalVolumeUSD,\n          overviewData48.totalVolumeUSD,\n        )\n        const liquidityUSDChange = getPercentChange(overviewData.totalLiquidityUSD, overviewData24.totalLiquidityUSD)\n        // 24H transactions\n        const [txCount, txCountChange] = getChangeForPeriod(\n          overviewData.totalTransactions,\n          overviewData24.totalTransactions,\n          overviewData48.totalTransactions,\n        )\n        const protocolData: ProtocolData = {\n          volumeUSD,\n          volumeUSDChange: typeof volumeUSDChange === 'number' ? volumeUSDChange : 0,\n          liquidityUSD: overviewData.totalLiquidityUSD,\n          liquidityUSDChange,\n          txCount,\n          txCountChange,\n        }\n        setFetchState({\n          error: false,\n          data: protocolData,\n        })\n      }\n    }\n    const allBlocksAvailable = block24?.number && block48?.number\n    if (allBlocksAvailable && !blockError && !fetchState.data) {\n      fetch()\n    }\n  }, [block24, block48, blockError, fetchState])\n\n  return fetchState\n}\n\nexport default useFetchProtocolData\n"]},"metadata":{},"sourceType":"module"}