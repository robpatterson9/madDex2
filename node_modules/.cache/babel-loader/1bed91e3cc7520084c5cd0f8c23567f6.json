{"ast":null,"code":"import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/* eslint-disable no-param-reassign */import{parseBytes32String}from'@ethersproject/strings';import{ETHER,Token,currencyEquals}from'@pancakeswap/sdk';import{useMemo}from'react';import{arrayify}from'ethers/lib/utils';import useActiveWeb3React from'hooks/useActiveWeb3React';import{useDefaultTokenList,useUnsupportedTokenList,useCombinedActiveList,useCombinedInactiveList}from'../state/lists/hooks';import{NEVER_RELOAD,useSingleCallResult}from'../state/multicall/hooks';import useUserAddedTokens from'../state/user/hooks/useUserAddedTokens';import{isAddress}from'../utils';import{useBytes32TokenContract,useTokenContract}from'./useContract';import{filterTokens}from'../components/SearchModal/filtering';// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap,includeUserAdded){var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var userAddedTokens=useUserAddedTokens();return useMemo(function(){if(!chainId)return{};// reduce to just tokens\nvar mapWithoutUrls=Object.keys(tokenMap[chainId]).reduce(function(newMap,address){newMap[address]=tokenMap[chainId][address].token;return newMap;},{});if(includeUserAdded){return userAddedTokens// reduce into all ALL_TOKENS filtered by the current chain\n.reduce(function(tokenMap_,token){tokenMap_[token.address]=token;return tokenMap_;},// must make a copy because reduce modifies the map, and we do not\n// want to make a copy in every iteration\n_objectSpread({},mapWithoutUrls));}return mapWithoutUrls;},[chainId,userAddedTokens,tokenMap,includeUserAdded]);}export function useDefaultTokens(){var defaultList=useDefaultTokenList();return useTokensFromMap(defaultList,false);}export function useAllTokens(){var allTokens=useCombinedActiveList();return useTokensFromMap(allTokens,true);}export function useAllInactiveTokens(){// get inactive tokens\nvar inactiveTokensMap=useCombinedInactiveList();var inactiveTokens=useTokensFromMap(inactiveTokensMap,false);// filter out any token that are on active list\nvar activeTokensAddresses=Object.keys(useAllTokens());var filteredInactive=activeTokensAddresses?Object.keys(inactiveTokens).reduce(function(newMap,address){if(!activeTokensAddresses.includes(address)){newMap[address]=inactiveTokens[address];}return newMap;},{}):inactiveTokens;return filteredInactive;}export function useUnsupportedTokens(){var unsupportedTokensMap=useUnsupportedTokenList();return useTokensFromMap(unsupportedTokensMap,false);}export function useIsTokenActive(token){var activeTokens=useAllTokens();if(!activeTokens||!token){return false;}return!!activeTokens[token.address];}// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery){var _useActiveWeb3React2=useActiveWeb3React(),chainId=_useActiveWeb3React2.chainId;var inactiveTokens=useAllInactiveTokens();return useMemo(function(){if(!chainId||searchQuery===''){return undefined;}var tokens=filterTokens(Object.values(inactiveTokens),searchQuery);return tokens;},[chainId,inactiveTokens,searchQuery]);}// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency){var userAddedTokens=useUserAddedTokens();if(!currency){return false;}return!!userAddedTokens.find(function(token){return currencyEquals(currency,token);});}// parse a name or symbol from a token response\nvar BYTES32_REGEX=/^0x[a-fA-F0-9]{64}$/;function parseStringOrBytes32(str,bytes32,defaultValue){return str&&str.length>0?str:// need to check for proper bytes string and valid terminator\nbytes32&&BYTES32_REGEX.test(bytes32)&&arrayify(bytes32)[31]===0?parseBytes32String(bytes32):defaultValue;}// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress){var _useActiveWeb3React3=useActiveWeb3React(),chainId=_useActiveWeb3React3.chainId;var tokens=useAllTokens();var address=isAddress(tokenAddress);var tokenContract=useTokenContract(address||undefined,false);var tokenContractBytes32=useBytes32TokenContract(address||undefined,false);var token=address?tokens[address]:undefined;var tokenName=useSingleCallResult(token?undefined:tokenContract,'name',undefined,NEVER_RELOAD);var tokenNameBytes32=useSingleCallResult(token?undefined:tokenContractBytes32,'name',undefined,NEVER_RELOAD);var symbol=useSingleCallResult(token?undefined:tokenContract,'symbol',undefined,NEVER_RELOAD);var symbolBytes32=useSingleCallResult(token?undefined:tokenContractBytes32,'symbol',undefined,NEVER_RELOAD);var decimals=useSingleCallResult(token?undefined:tokenContract,'decimals',undefined,NEVER_RELOAD);return useMemo(function(){if(token)return token;if(!chainId||!address)return undefined;if(decimals.loading||symbol.loading||tokenName.loading)return null;if(decimals.result){var _symbol$result,_symbolBytes32$result,_tokenName$result,_tokenNameBytes32$res;return new Token(chainId,address,decimals.result[0],parseStringOrBytes32((_symbol$result=symbol.result)===null||_symbol$result===void 0?void 0:_symbol$result[0],(_symbolBytes32$result=symbolBytes32.result)===null||_symbolBytes32$result===void 0?void 0:_symbolBytes32$result[0],'UNKNOWN'),parseStringOrBytes32((_tokenName$result=tokenName.result)===null||_tokenName$result===void 0?void 0:_tokenName$result[0],(_tokenNameBytes32$res=tokenNameBytes32.result)===null||_tokenNameBytes32$res===void 0?void 0:_tokenNameBytes32$res[0],'Unknown Token'));}return undefined;},[address,chainId,decimals.loading,decimals.result,symbol.loading,symbol.result,symbolBytes32.result,token,tokenName.loading,tokenName.result,tokenNameBytes32.result]);}export function useCurrency(currencyId){var isBNB=(currencyId===null||currencyId===void 0?void 0:currencyId.toUpperCase())==='BNB';var token=useToken(isBNB?undefined:currencyId);return isBNB?ETHER:token;}","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/hooks/Tokens.ts"],"names":["parseBytes32String","ETHER","Token","currencyEquals","useMemo","arrayify","useActiveWeb3React","useDefaultTokenList","useUnsupportedTokenList","useCombinedActiveList","useCombinedInactiveList","NEVER_RELOAD","useSingleCallResult","useUserAddedTokens","isAddress","useBytes32TokenContract","useTokenContract","filterTokens","useTokensFromMap","tokenMap","includeUserAdded","chainId","userAddedTokens","mapWithoutUrls","Object","keys","reduce","newMap","address","token","tokenMap_","useDefaultTokens","defaultList","useAllTokens","allTokens","useAllInactiveTokens","inactiveTokensMap","inactiveTokens","activeTokensAddresses","filteredInactive","includes","useUnsupportedTokens","unsupportedTokensMap","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","undefined","tokens","values","useIsUserAddedToken","currency","find","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","useToken","tokenAddress","tokenContract","tokenContractBytes32","tokenName","tokenNameBytes32","symbol","symbolBytes32","decimals","loading","result","useCurrency","currencyId","isBNB","toUpperCase"],"mappings":"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","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n"]},"metadata":{},"sourceType":"module"}