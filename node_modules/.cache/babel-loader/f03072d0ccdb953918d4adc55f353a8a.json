{"ast":null,"code":"import React,{useEffect}from'react';import{Card,Heading,Table,Th,useMatchBreakpoints}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{useWeb3React}from'@web3-react/core';import Container from'components/Layout/Container';import{useAppDispatch}from'state';import{fetchProfileAvatar}from'state/profile';import{fetchAddressResult}from'state/predictions';import{useGetOrFetchLeaderboardAddressResult}from'state/predictions/hooks';import DesktopRow from'./DesktopRow';import MobileRow from'./MobileRow';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ConnectedWalletResult=function ConnectedWalletResult(){var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useTranslation=useTranslation(),t=_useTranslation.t;var dispatch=useAppDispatch();var accountResult=useGetOrFetchLeaderboardAddressResult(account);var _useMatchBreakpoints=useMatchBreakpoints(),isDesktop=_useMatchBreakpoints.isDesktop;useEffect(function(){if(account){dispatch(fetchProfileAvatar(account));dispatch(fetchAddressResult(account));}},[account,dispatch]);if(!account||!accountResult){return null;}return/*#__PURE__*/_jsxs(Container,{mb:\"48px\",children:[/*#__PURE__*/_jsx(Heading,{as:\"h2\",scale:\"md\",color:\"secondary\",mb:\"16px\",children:t('My Rankings')}),isDesktop?/*#__PURE__*/_jsx(Card,{isActive:true,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(Th,{width:\"60px\",children:\"\\xA0\"}),/*#__PURE__*/_jsx(Th,{textAlign:\"left\",children:\"\\xA0\"}),/*#__PURE__*/_jsx(Th,{textAlign:\"right\",children:t('Net Winnings (BNB)')}),/*#__PURE__*/_jsx(Th,{textAlign:\"center\",children:t('Win Rate')}),/*#__PURE__*/_jsx(Th,{children:t('Rounds Won')}),/*#__PURE__*/_jsx(Th,{children:t('Rounds Played')})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsx(DesktopRow,{user:accountResult})})]})}):/*#__PURE__*/_jsx(Card,{isActive:true,children:/*#__PURE__*/_jsx(MobileRow,{user:accountResult})})]});};export default ConnectedWalletResult;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/Leaderboard/components/Results/ConnectedWalletResult.tsx"],"names":["React","useEffect","Card","Heading","Table","Th","useMatchBreakpoints","useTranslation","useWeb3React","Container","useAppDispatch","fetchProfileAvatar","fetchAddressResult","useGetOrFetchLeaderboardAddressResult","DesktopRow","MobileRow","ConnectedWalletResult","account","t","dispatch","accountResult","isDesktop"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,IAAT,CAAeC,OAAf,CAAwBC,KAAxB,CAA+BC,EAA/B,CAAmCC,mBAAnC,KAA8D,oBAA9D,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,OAASC,cAAT,KAA+B,OAA/B,CACA,OAASC,kBAAT,KAAmC,eAAnC,CACA,OAASC,kBAAT,KAAmC,mBAAnC,CACA,OAASC,qCAAT,KAAsD,yBAAtD,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,C,wFAEA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,EAAM,CAClC,kBAAoBR,YAAY,EAAhC,CAAQS,OAAR,eAAQA,OAAR,CACA,oBAAcV,cAAc,EAA5B,CAAQW,CAAR,iBAAQA,CAAR,CACA,GAAMC,CAAAA,QAAQ,CAAGT,cAAc,EAA/B,CACA,GAAMU,CAAAA,aAAa,CAAGP,qCAAqC,CAACI,OAAD,CAA3D,CACA,yBAAsBX,mBAAmB,EAAzC,CAAQe,SAAR,sBAAQA,SAAR,CAEApB,SAAS,CAAC,UAAM,CACd,GAAIgB,OAAJ,CAAa,CACXE,QAAQ,CAACR,kBAAkB,CAACM,OAAD,CAAnB,CAAR,CACAE,QAAQ,CAACP,kBAAkB,CAACK,OAAD,CAAnB,CAAR,CACD,CACF,CALQ,CAKN,CAACA,OAAD,CAAUE,QAAV,CALM,CAAT,CAOA,GAAI,CAACF,OAAD,EAAY,CAACG,aAAjB,CAAgC,CAC9B,MAAO,KAAP,CACD,CAED,mBACE,MAAC,SAAD,EAAW,EAAE,CAAC,MAAd,wBACE,KAAC,OAAD,EAAS,EAAE,CAAC,IAAZ,CAAiB,KAAK,CAAC,IAAvB,CAA4B,KAAK,CAAC,WAAlC,CAA8C,EAAE,CAAC,MAAjD,UACGF,CAAC,CAAC,aAAD,CADJ,EADF,CAIGG,SAAS,cACR,KAAC,IAAD,EAAM,QAAQ,KAAd,uBACE,MAAC,KAAD,yBACE,oCACE,mCACE,KAAC,EAAD,EAAI,KAAK,CAAC,MAAV,kBADF,cAEE,KAAC,EAAD,EAAI,SAAS,CAAC,MAAd,kBAFF,cAGE,KAAC,EAAD,EAAI,SAAS,CAAC,OAAd,UAAuBH,CAAC,CAAC,oBAAD,CAAxB,EAHF,cAIE,KAAC,EAAD,EAAI,SAAS,CAAC,QAAd,UAAwBA,CAAC,CAAC,UAAD,CAAzB,EAJF,cAKE,KAAC,EAAD,WAAKA,CAAC,CAAC,YAAD,CAAN,EALF,cAME,KAAC,EAAD,WAAKA,CAAC,CAAC,eAAD,CAAN,EANF,GADF,EADF,cAWE,oCACE,KAAC,UAAD,EAAY,IAAI,CAAEE,aAAlB,EADF,EAXF,GADF,EADQ,cAmBR,KAAC,IAAD,EAAM,QAAQ,KAAd,uBACE,KAAC,SAAD,EAAW,IAAI,CAAEA,aAAjB,EADF,EAvBJ,GADF,CA8BD,CAhDD,CAkDA,cAAeJ,CAAAA,qBAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { Card, Heading, Table, Th, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport Container from 'components/Layout/Container'\nimport { useAppDispatch } from 'state'\nimport { fetchProfileAvatar } from 'state/profile'\nimport { fetchAddressResult } from 'state/predictions'\nimport { useGetOrFetchLeaderboardAddressResult } from 'state/predictions/hooks'\nimport DesktopRow from './DesktopRow'\nimport MobileRow from './MobileRow'\n\nconst ConnectedWalletResult = () => {\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const accountResult = useGetOrFetchLeaderboardAddressResult(account)\n  const { isDesktop } = useMatchBreakpoints()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchProfileAvatar(account))\n      dispatch(fetchAddressResult(account))\n    }\n  }, [account, dispatch])\n\n  if (!account || !accountResult) {\n    return null\n  }\n\n  return (\n    <Container mb=\"48px\">\n      <Heading as=\"h2\" scale=\"md\" color=\"secondary\" mb=\"16px\">\n        {t('My Rankings')}\n      </Heading>\n      {isDesktop ? (\n        <Card isActive>\n          <Table>\n            <thead>\n              <tr>\n                <Th width=\"60px\">&nbsp;</Th>\n                <Th textAlign=\"left\">&nbsp;</Th>\n                <Th textAlign=\"right\">{t('Net Winnings (BNB)')}</Th>\n                <Th textAlign=\"center\">{t('Win Rate')}</Th>\n                <Th>{t('Rounds Won')}</Th>\n                <Th>{t('Rounds Played')}</Th>\n              </tr>\n            </thead>\n            <tbody>\n              <DesktopRow user={accountResult} />\n            </tbody>\n          </Table>\n        </Card>\n      ) : (\n        <Card isActive>\n          <MobileRow user={accountResult} />\n        </Card>\n      )}\n    </Container>\n  )\n}\n\nexport default ConnectedWalletResult\n"]},"metadata":{},"sourceType":"module"}