{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{MaxUint256}from'@ethersproject/constants';import{TokenAmount,ETHER}from'@pancakeswap/sdk';import{useCallback,useMemo}from'react';import useActiveWeb3React from'hooks/useActiveWeb3React';import{ROUTER_ADDRESS}from'../config/constants';import useTokenAllowance from'./useTokenAllowance';import{Field}from'../state/swap/actions';import{useTransactionAdder,useHasPendingApproval}from'../state/transactions/hooks';import{computeSlippageAdjustedAmounts}from'../utils/prices';import{calculateGasMargin}from'../utils';import{useTokenContract}from'./useContract';import{useCallWithGasPrice}from'./useCallWithGasPrice';export var ApprovalState;// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\n(function(ApprovalState){ApprovalState[ApprovalState[\"UNKNOWN\"]=0]=\"UNKNOWN\";ApprovalState[ApprovalState[\"NOT_APPROVED\"]=1]=\"NOT_APPROVED\";ApprovalState[ApprovalState[\"PENDING\"]=2]=\"PENDING\";ApprovalState[ApprovalState[\"APPROVED\"]=3]=\"APPROVED\";})(ApprovalState||(ApprovalState={}));export function useApproveCallback(amountToApprove,spender){var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account;var _useCallWithGasPrice=useCallWithGasPrice(),callWithGasPrice=_useCallWithGasPrice.callWithGasPrice;var token=amountToApprove instanceof TokenAmount?amountToApprove.token:undefined;var currentAllowance=useTokenAllowance(token,account!==null&&account!==void 0?account:undefined,spender);var pendingApproval=useHasPendingApproval(token===null||token===void 0?void 0:token.address,spender);// check the current approval status\nvar approvalState=useMemo(function(){if(!amountToApprove||!spender)return ApprovalState.UNKNOWN;if(amountToApprove.currency===ETHER)return ApprovalState.APPROVED;// we might not have enough data to know whether or not we need to approve\nif(!currentAllowance)return ApprovalState.UNKNOWN;// amountToApprove will be defined if currentAllowance is\nreturn currentAllowance.lessThan(amountToApprove)?pendingApproval?ApprovalState.PENDING:ApprovalState.NOT_APPROVED:ApprovalState.APPROVED;},[amountToApprove,currentAllowance,pendingApproval,spender]);var tokenContract=useTokenContract(token===null||token===void 0?void 0:token.address);var addTransaction=useTransactionAdder();var approve=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var useExact,estimatedGas;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(approvalState!==ApprovalState.NOT_APPROVED)){_context.next=3;break;}console.error('approve was called unnecessarily');return _context.abrupt(\"return\");case 3:if(token){_context.next=6;break;}console.error('no token');return _context.abrupt(\"return\");case 6:if(tokenContract){_context.next=9;break;}console.error('tokenContract is null');return _context.abrupt(\"return\");case 9:if(amountToApprove){_context.next=12;break;}console.error('missing amount to approve');return _context.abrupt(\"return\");case 12:if(spender){_context.next=15;break;}console.error('no spender');return _context.abrupt(\"return\");case 15:useExact=false;_context.next=18;return tokenContract.estimateGas.approve(spender,MaxUint256).catch(function(){// general fallback for tokens who restrict approval amounts\nuseExact=true;return tokenContract.estimateGas.approve(spender,amountToApprove.raw.toString());});case 18:estimatedGas=_context.sent;return _context.abrupt(\"return\",callWithGasPrice(tokenContract,'approve',[spender,useExact?amountToApprove.raw.toString():MaxUint256],{gasLimit:calculateGasMargin(estimatedGas)}).then(function(response){addTransaction(response,{summary:\"Approve \".concat(amountToApprove.currency.symbol),approval:{tokenAddress:token.address,spender:spender}});}).catch(function(error){console.error('Failed to approve token',error);throw error;}));case 20:case\"end\":return _context.stop();}}},_callee);})),[approvalState,token,tokenContract,amountToApprove,spender,addTransaction,callWithGasPrice]);return[approvalState,approve];}// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade){var allowedSlippage=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var amountToApprove=useMemo(function(){return trade?computeSlippageAdjustedAmounts(trade,allowedSlippage)[Field.INPUT]:undefined;},[trade,allowedSlippage]);return useApproveCallback(amountToApprove,ROUTER_ADDRESS);}","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/hooks/useApproveCallback.ts"],"names":["MaxUint256","TokenAmount","ETHER","useCallback","useMemo","useActiveWeb3React","ROUTER_ADDRESS","useTokenAllowance","Field","useTransactionAdder","useHasPendingApproval","computeSlippageAdjustedAmounts","calculateGasMargin","useTokenContract","useCallWithGasPrice","ApprovalState","useApproveCallback","amountToApprove","spender","account","callWithGasPrice","token","undefined","currentAllowance","pendingApproval","address","approvalState","UNKNOWN","currency","APPROVED","lessThan","PENDING","NOT_APPROVED","tokenContract","addTransaction","approve","console","error","useExact","estimateGas","catch","raw","toString","estimatedGas","gasLimit","then","response","summary","symbol","approval","tokenAddress","useApproveCallbackFromTrade","trade","allowedSlippage","INPUT"],"mappings":"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","sourcesContent":["import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return callWithGasPrice(\n      tokenContract,\n      'approve',\n      [spender, useExact ? amountToApprove.raw.toString() : MaxUint256],\n      {\n        gasLimit: calculateGasMargin(estimatedGas),\n      },\n    )\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction, callWithGasPrice])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n"]},"metadata":{},"sourceType":"module"}