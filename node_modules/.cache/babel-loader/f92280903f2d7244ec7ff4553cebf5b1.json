{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{useAchievementsForAddress,useProfileForAddress}from'state/profile/hooks';import{Box}from'@pancakeswap/uikit';import Page from'components/Layout/Page';import{Route,useParams}from'react-router';import{nftsBaseUrl}from'views/Nft/market/constants';import MarketPageHeader from'../components/MarketPageHeader';import ProfileHeader from'./components/ProfileHeader';import TabMenu from'./components/TabMenu';import Achievements from'./components/Achievements';import ActivityHistory from'./components/ActivityHistory';import SubMenu from'./components/SubMenu';import useGetNftsForAddress from'./hooks/useGetNftsForAddress';import UnconnectedProfileNfts from'./components/UnconnectedProfileNfts';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var TabMenuWrapper=styled(Box)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  bottom: 0;\\n  left: 50%;\\n  transform: translate(-50%, 0%);\\n\\n  \",\" {\\n    left: auto;\\n    transform: none;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.mediaQueries.sm;});var UnconnectedProfile=function UnconnectedProfile(){var _useParams=useParams(),accountAddress=_useParams.accountAddress;var _useProfileForAddress=useProfileForAddress(accountAddress),profileHookState=_useProfileForAddress.profile,isProfileFetching=_useProfileForAddress.isFetching;var _ref2=profileHookState||{},profile=_ref2.profile;var _useAchievementsForAd=useAchievementsForAddress(accountAddress),achievements=_useAchievementsForAd.achievements;var _useGetNftsForAddress=useGetNftsForAddress(accountAddress,profile,isProfileFetching),nfts=_useGetNftsForAddress.nfts,isLoading=_useGetNftsForAddress.isLoading;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(MarketPageHeader,{position:\"relative\",children:[/*#__PURE__*/_jsx(ProfileHeader,{accountPath:accountAddress,profile:profile,achievements:achievements,nftCollected:nfts.length}),/*#__PURE__*/_jsx(TabMenuWrapper,{children:/*#__PURE__*/_jsx(TabMenu,{})})]}),/*#__PURE__*/_jsxs(Page,{style:{minHeight:'auto'},children:[/*#__PURE__*/_jsx(Route,{path:\"\".concat(nftsBaseUrl,\"/profile/:accountAddress/achievements\"),children:/*#__PURE__*/_jsx(Achievements,{achievements:achievements,points:profile===null||profile===void 0?void 0:profile.points})}),/*#__PURE__*/_jsxs(Route,{path:\"\".concat(nftsBaseUrl,\"/profile/:accountAddress/activity\"),children:[/*#__PURE__*/_jsx(SubMenu,{}),/*#__PURE__*/_jsx(ActivityHistory,{})]}),/*#__PURE__*/_jsxs(Route,{exact:true,path:\"\".concat(nftsBaseUrl,\"/profile/:accountAddress\"),children:[/*#__PURE__*/_jsx(SubMenu,{}),/*#__PURE__*/_jsx(UnconnectedProfileNfts,{nfts:nfts,isLoading:isLoading})]})]})]});};export default UnconnectedProfile;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Profile/UnconnectedProfile.tsx"],"names":["React","styled","useAchievementsForAddress","useProfileForAddress","Box","Page","Route","useParams","nftsBaseUrl","MarketPageHeader","ProfileHeader","TabMenu","Achievements","ActivityHistory","SubMenu","useGetNftsForAddress","UnconnectedProfileNfts","TabMenuWrapper","theme","mediaQueries","sm","UnconnectedProfile","accountAddress","profileHookState","profile","isProfileFetching","isFetching","achievements","nfts","isLoading","length","minHeight","points"],"mappings":"4LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,yBAAT,CAAoCC,oBAApC,KAAgE,qBAAhE,CACA,OAASC,GAAT,KAAoB,oBAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,OAASC,KAAT,CAAgBC,SAAhB,KAAiC,cAAjC,CACA,OAASC,WAAT,KAA4B,4BAA5B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,gCAA7B,CACA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,2BAAzB,CACA,MAAOC,CAAAA,eAAP,KAA4B,8BAA5B,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,8BAAjC,CACA,MAAOC,CAAAA,sBAAP,KAAmC,qCAAnC,C,6IAEA,GAAMC,CAAAA,cAAc,CAAGhB,MAAM,CAACG,GAAD,CAAT,gNAMhB,kBAAGc,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,YAAN,CAAmBC,EAAlC,EANgB,CAApB,CAYA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/B,eAA2Bd,SAAS,EAApC,CAAQe,cAAR,YAAQA,cAAR,CACA,0BAAqEnB,oBAAoB,CAACmB,cAAD,CAAzF,CAAiBC,gBAAjB,uBAAQC,OAAR,CAA+CC,iBAA/C,uBAAmCC,UAAnC,CACA,UAAoBH,gBAAgB,EAAI,EAAxC,CAAQC,OAAR,OAAQA,OAAR,CACA,0BAAyBtB,yBAAyB,CAACoB,cAAD,CAAlD,CAAQK,YAAR,uBAAQA,YAAR,CACA,0BAA4BZ,oBAAoB,CAACO,cAAD,CAAiBE,OAAjB,CAA0BC,iBAA1B,CAAhD,CAAQG,IAAR,uBAAQA,IAAR,CAAcC,SAAd,uBAAcA,SAAd,CAEA,mBACE,wCACE,MAAC,gBAAD,EAAkB,QAAQ,CAAC,UAA3B,wBACE,KAAC,aAAD,EACE,WAAW,CAAEP,cADf,CAEE,OAAO,CAAEE,OAFX,CAGE,YAAY,CAAEG,YAHhB,CAIE,YAAY,CAAEC,IAAI,CAACE,MAJrB,EADF,cAOE,KAAC,cAAD,wBACE,KAAC,OAAD,IADF,EAPF,GADF,cAYE,MAAC,IAAD,EAAM,KAAK,CAAE,CAAEC,SAAS,CAAE,MAAb,CAAb,wBACE,KAAC,KAAD,EAAO,IAAI,WAAKvB,WAAL,yCAAX,uBACE,KAAC,YAAD,EAAc,YAAY,CAAEmB,YAA5B,CAA0C,MAAM,CAAEH,OAAF,SAAEA,OAAF,iBAAEA,OAAO,CAAEQ,MAA3D,EADF,EADF,cAIE,MAAC,KAAD,EAAO,IAAI,WAAKxB,WAAL,qCAAX,wBACE,KAAC,OAAD,IADF,cAEE,KAAC,eAAD,IAFF,GAJF,cAQE,MAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,WAAKA,WAAL,4BAAjB,wBACE,KAAC,OAAD,IADF,cAEE,KAAC,sBAAD,EAAwB,IAAI,CAAEoB,IAA9B,CAAoC,SAAS,CAAEC,SAA/C,EAFF,GARF,GAZF,GADF,CA4BD,CAnCD,CAqCA,cAAeR,CAAAA,kBAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useAchievementsForAddress, useProfileForAddress } from 'state/profile/hooks'\nimport { Box } from '@pancakeswap/uikit'\nimport Page from 'components/Layout/Page'\nimport { Route, useParams } from 'react-router'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport MarketPageHeader from '../components/MarketPageHeader'\nimport ProfileHeader from './components/ProfileHeader'\nimport TabMenu from './components/TabMenu'\nimport Achievements from './components/Achievements'\nimport ActivityHistory from './components/ActivityHistory'\nimport SubMenu from './components/SubMenu'\nimport useGetNftsForAddress from './hooks/useGetNftsForAddress'\nimport UnconnectedProfileNfts from './components/UnconnectedProfileNfts'\n\nconst TabMenuWrapper = styled(Box)`\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  transform: translate(-50%, 0%);\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    left: auto;\n    transform: none;\n  }\n`\n\nconst UnconnectedProfile = () => {\n  const { accountAddress } = useParams<{ accountAddress: string }>()\n  const { profile: profileHookState, isFetching: isProfileFetching } = useProfileForAddress(accountAddress)\n  const { profile } = profileHookState || {}\n  const { achievements } = useAchievementsForAddress(accountAddress)\n  const { nfts, isLoading } = useGetNftsForAddress(accountAddress, profile, isProfileFetching)\n\n  return (\n    <>\n      <MarketPageHeader position=\"relative\">\n        <ProfileHeader\n          accountPath={accountAddress}\n          profile={profile}\n          achievements={achievements}\n          nftCollected={nfts.length}\n        />\n        <TabMenuWrapper>\n          <TabMenu />\n        </TabMenuWrapper>\n      </MarketPageHeader>\n      <Page style={{ minHeight: 'auto' }}>\n        <Route path={`${nftsBaseUrl}/profile/:accountAddress/achievements`}>\n          <Achievements achievements={achievements} points={profile?.points} />\n        </Route>\n        <Route path={`${nftsBaseUrl}/profile/:accountAddress/activity`}>\n          <SubMenu />\n          <ActivityHistory />\n        </Route>\n        <Route exact path={`${nftsBaseUrl}/profile/:accountAddress`}>\n          <SubMenu />\n          <UnconnectedProfileNfts nfts={nfts} isLoading={isLoading} />\n        </Route>\n      </Page>\n    </>\n  )\n}\n\nexport default UnconnectedProfile\n"]},"metadata":{},"sourceType":"module"}