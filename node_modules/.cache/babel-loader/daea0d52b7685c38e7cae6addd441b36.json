{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Profile/components/UnconnectedProfileNfts.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, Text, Flex } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { CollectibleLinkCard } from '../../components/CollectibleCard';\nimport GridPlaceholder from '../../components/GridPlaceholder';\nimport NoNftsImage from './NoNftsImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserNfts = ({\n  nfts,\n  isLoading\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: nfts.length === 0 && !isLoading ? /*#__PURE__*/_jsxDEV(Flex, {\n      p: \"24px\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(NoNftsImage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        pt: \"8px\",\n        bold: true,\n        children: t('No NFTs found')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this) : // User has NFTs and data has been fetched\n    nfts.length > 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n      gridGap: \"16px\",\n      gridTemplateColumns: ['1fr', 'repeat(2, 1fr)', 'repeat(3, 1fr)', null, 'repeat(4, 1fr)'],\n      alignItems: \"start\",\n      children: nfts.map(nft => {\n        const {\n          marketData\n        } = nft;\n        return /*#__PURE__*/_jsxDEV(CollectibleLinkCard, {\n          nft: nft,\n          currentAskPrice: (marketData === null || marketData === void 0 ? void 0 : marketData.currentAskPrice) && (marketData === null || marketData === void 0 ? void 0 : marketData.isTradable) && parseFloat(marketData.currentAskPrice)\n        }, `${nft.tokenId}-${nft.collectionName}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // User NFT data hasn't been fetched\n    _jsxDEV(GridPlaceholder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(UserNfts, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = UserNfts;\nexport default UserNfts;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserNfts\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Profile/components/UnconnectedProfileNfts.tsx"],"names":["React","Grid","Text","Flex","useTranslation","CollectibleLinkCard","GridPlaceholder","NoNftsImage","UserNfts","nfts","isLoading","t","length","map","nft","marketData","currentAskPrice","isTradable","parseFloat","tokenId","collectionName"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,QAAiC,oBAAjC;AAEA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,mBAAT,QAAoC,kCAApC;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;;AAEA,MAAMC,QAA4D,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAyB;AAAA;;AAC5F,QAAM;AAAEC,IAAAA;AAAF,MAAQP,cAAc,EAA5B;AAEA,sBACE;AAAA,cAEGK,IAAI,CAACG,MAAL,KAAgB,CAAhB,IAAqB,CAACF,SAAtB,gBACC,QAAC,IAAD;AAAM,MAAA,CAAC,EAAC,MAAR;AAAe,MAAA,aAAa,EAAC,QAA7B;AAAsC,MAAA,UAAU,EAAC,QAAjD;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,KAAT;AAAe,QAAA,IAAI,MAAnB;AAAA,kBACGC,CAAC,CAAC,eAAD;AADJ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GAOG;AACJF,IAAAA,IAAI,CAACG,MAAL,GAAc,CAAd,gBACE,QAAC,IAAD;AACE,MAAA,OAAO,EAAC,MADV;AAEE,MAAA,mBAAmB,EAAE,CAAC,KAAD,EAAQ,gBAAR,EAA0B,gBAA1B,EAA4C,IAA5C,EAAkD,gBAAlD,CAFvB;AAGE,MAAA,UAAU,EAAC,OAHb;AAAA,gBAKGH,IAAI,CAACI,GAAL,CAAUC,GAAD,IAAS;AACjB,cAAM;AAAEC,UAAAA;AAAF,YAAiBD,GAAvB;AAEA,4BACE,QAAC,mBAAD;AAEE,UAAA,GAAG,EAAEA,GAFP;AAGE,UAAA,eAAe,EACb,CAAAC,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEC,eAAZ,MAA+BD,UAA/B,aAA+BA,UAA/B,uBAA+BA,UAAU,CAAEE,UAA3C,KAAyDC,UAAU,CAACH,UAAU,CAACC,eAAZ;AAJvE,WACQ,GAAEF,GAAG,CAACK,OAAQ,IAAGL,GAAG,CAACM,cAAe,EAD5C;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAZA;AALH;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAqBE;AACA,YAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAhCJ,mBADF;AAqCD,CAxCD;;GAAMZ,Q;UACUJ,c;;;KADVI,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport { Grid, Text, Flex } from '@pancakeswap/uikit'\nimport { NftToken } from 'state/nftMarket/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { CollectibleLinkCard } from '../../components/CollectibleCard'\nimport GridPlaceholder from '../../components/GridPlaceholder'\nimport NoNftsImage from './NoNftsImage'\n\nconst UserNfts: React.FC<{ nfts: NftToken[]; isLoading: boolean }> = ({ nfts, isLoading }) => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      {/* User has no NFTs */}\n      {nfts.length === 0 && !isLoading ? (\n        <Flex p=\"24px\" flexDirection=\"column\" alignItems=\"center\">\n          <NoNftsImage />\n          <Text pt=\"8px\" bold>\n            {t('No NFTs found')}\n          </Text>\n        </Flex>\n      ) : // User has NFTs and data has been fetched\n      nfts.length > 0 ? (\n        <Grid\n          gridGap=\"16px\"\n          gridTemplateColumns={['1fr', 'repeat(2, 1fr)', 'repeat(3, 1fr)', null, 'repeat(4, 1fr)']}\n          alignItems=\"start\"\n        >\n          {nfts.map((nft) => {\n            const { marketData } = nft\n\n            return (\n              <CollectibleLinkCard\n                key={`${nft.tokenId}-${nft.collectionName}`}\n                nft={nft}\n                currentAskPrice={\n                  marketData?.currentAskPrice && marketData?.isTradable && parseFloat(marketData.currentAskPrice)\n                }\n              />\n            )\n          })}\n        </Grid>\n      ) : (\n        // User NFT data hasn't been fetched\n        <GridPlaceholder />\n      )}\n    </>\n  )\n}\n\nexport default UserNfts\n"]},"metadata":{},"sourceType":"module"}