{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useState,useEffect}from'react';import{useTranslation}from'contexts/Localization';import{Link as RouterLink,useLocation,useParams}from'react-router-dom';import styled from'styled-components';import{Flex}from'@pancakeswap/uikit';import{nftsBaseUrl}from'views/Nft/market/constants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Tab=styled.button(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: inline-flex;\\n  justify-content: center;\\n  cursor: pointer;\\n  color: \",\";\\n  border-width: \",\";\\n  border-style: solid solid none solid;\\n  border-color: \",\";\\n  outline: 0;\\n  padding: 12px 16px;\\n  border-radius: 16px 16px 0 0;\\n  font-size: 16px;\\n  font-weight: \",\";\\n  background-color: \",\";\\n  transition: background-color 0.3s ease-out;\\n\"])),function(_ref){var theme=_ref.theme,$active=_ref.$active;return $active?theme.colors.secondary:theme.colors.textSubtle;},function(_ref2){var $active=_ref2.$active;return $active?'1px 1px 0 1px':'0';},function(_ref3){var theme=_ref3.theme;return\"\".concat(theme.colors.cardBorder,\" \").concat(theme.colors.cardBorder,\" transparent \").concat(theme.colors.cardBorder);},function(_ref4){var $active=_ref4.$active;return $active?'600':'400';},function(_ref5){var theme=_ref5.theme,$active=_ref5.$active;return $active?theme.colors.background:'transparent';});var TabMenu=function TabMenu(){var _useTranslation=useTranslation(),t=_useTranslation.t;var _useParams=useParams(),accountAddress=_useParams.accountAddress;var _useLocation=useLocation(),pathname=_useLocation.pathname;var _useState=useState(pathname.includes('achievements')),_useState2=_slicedToArray(_useState,2),achievementsActive=_useState2[0],setIsAchievementsActive=_useState2[1];useEffect(function(){setIsAchievementsActive(pathname.includes('achievements'));},[pathname]);return/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsx(Tab,{onClick:function onClick(){return setIsAchievementsActive(false);},$active:!achievementsActive,as:RouterLink,to:\"\".concat(nftsBaseUrl,\"/profile/\").concat(accountAddress),children:\"NFTs\"}),/*#__PURE__*/_jsx(Tab,{onClick:function onClick(){return setIsAchievementsActive(true);},$active:achievementsActive,as:RouterLink,to:\"\".concat(nftsBaseUrl,\"/profile/\").concat(accountAddress,\"/achievements\"),children:t('Achievements')})]});};export default TabMenu;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Profile/components/TabMenu.tsx"],"names":["React","useState","useEffect","useTranslation","Link","RouterLink","useLocation","useParams","styled","Flex","nftsBaseUrl","Tab","button","theme","$active","colors","secondary","textSubtle","cardBorder","background","TabMenu","t","accountAddress","pathname","includes","achievementsActive","setIsAchievementsActive"],"mappings":"oVAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,IAAI,GAAIC,CAAAA,UAAjB,CAA6BC,WAA7B,CAA0CC,SAA1C,KAA2D,kBAA3D,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,IAAT,KAAqB,oBAArB,CACA,OAASC,WAAT,KAA4B,4BAA5B,C,wFAEA,GAAMC,CAAAA,GAAG,CAAGH,MAAM,CAACI,MAAV,yaAIE,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,CAAUC,OAAV,MAAUA,OAAV,OAAyBA,CAAAA,OAAO,CAAGD,KAAK,CAACE,MAAN,CAAaC,SAAhB,CAA4BH,KAAK,CAACE,MAAN,CAAaE,UAAzE,EAJF,CAKS,mBAAGH,CAAAA,OAAH,OAAGA,OAAH,OAAkBA,CAAAA,OAAO,CAAG,eAAH,CAAqB,GAA9C,EALT,CAOS,mBAAGD,CAAAA,KAAH,OAAGA,KAAH,iBACXA,KAAK,CAACE,MAAN,CAAaG,UADF,aACgBL,KAAK,CAACE,MAAN,CAAaG,UAD7B,yBACuDL,KAAK,CAACE,MAAN,CAAaG,UADpE,GAPT,CAaQ,mBAAGJ,CAAAA,OAAH,OAAGA,OAAH,OAAkBA,CAAAA,OAAO,CAAG,KAAH,CAAW,KAApC,EAbR,CAca,mBAAGD,CAAAA,KAAH,OAAGA,KAAH,CAAUC,OAAV,OAAUA,OAAV,OAAyBA,CAAAA,OAAO,CAAGD,KAAK,CAACE,MAAN,CAAaI,UAAhB,CAA6B,aAA7D,EAdb,CAAT,CAkBA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,oBAAcjB,cAAc,EAA5B,CAAQkB,CAAR,iBAAQA,CAAR,CACA,eAA2Bd,SAAS,EAApC,CAAQe,cAAR,YAAQA,cAAR,CACA,iBAAqBhB,WAAW,EAAhC,CAAQiB,QAAR,cAAQA,QAAR,CACA,cAAsDtB,QAAQ,CAACsB,QAAQ,CAACC,QAAT,CAAkB,cAAlB,CAAD,CAA9D,wCAAOC,kBAAP,eAA2BC,uBAA3B,eAEAxB,SAAS,CAAC,UAAM,CACdwB,uBAAuB,CAACH,QAAQ,CAACC,QAAT,CAAkB,cAAlB,CAAD,CAAvB,CACD,CAFQ,CAEN,CAACD,QAAD,CAFM,CAAT,CAIA,mBACE,MAAC,IAAD,yBACE,KAAC,GAAD,EACE,OAAO,CAAE,yBAAMG,CAAAA,uBAAuB,CAAC,KAAD,CAA7B,EADX,CAEE,OAAO,CAAE,CAACD,kBAFZ,CAGE,EAAE,CAAEpB,UAHN,CAIE,EAAE,WAAKK,WAAL,qBAA4BY,cAA5B,CAJJ,kBADF,cASE,KAAC,GAAD,EACE,OAAO,CAAE,yBAAMI,CAAAA,uBAAuB,CAAC,IAAD,CAA7B,EADX,CAEE,OAAO,CAAED,kBAFX,CAGE,EAAE,CAAEpB,UAHN,CAIE,EAAE,WAAKK,WAAL,qBAA4BY,cAA5B,iBAJJ,UAMGD,CAAC,CAAC,cAAD,CANJ,EATF,GADF,CAoBD,CA9BD,CAgCA,cAAeD,CAAAA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Link as RouterLink, useLocation, useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\n\nconst Tab = styled.button<{ $active: boolean }>`\n  display: inline-flex;\n  justify-content: center;\n  cursor: pointer;\n  color: ${({ theme, $active }) => ($active ? theme.colors.secondary : theme.colors.textSubtle)};\n  border-width: ${({ $active }) => ($active ? '1px 1px 0 1px' : '0')};\n  border-style: solid solid none solid;\n  border-color: ${({ theme }) =>\n    `${theme.colors.cardBorder} ${theme.colors.cardBorder} transparent ${theme.colors.cardBorder}`};\n  outline: 0;\n  padding: 12px 16px;\n  border-radius: 16px 16px 0 0;\n  font-size: 16px;\n  font-weight: ${({ $active }) => ($active ? '600' : '400')};\n  background-color: ${({ theme, $active }) => ($active ? theme.colors.background : 'transparent')};\n  transition: background-color 0.3s ease-out;\n`\n\nconst TabMenu = () => {\n  const { t } = useTranslation()\n  const { accountAddress } = useParams<{ accountAddress: string }>()\n  const { pathname } = useLocation()\n  const [achievementsActive, setIsAchievementsActive] = useState(pathname.includes('achievements'))\n\n  useEffect(() => {\n    setIsAchievementsActive(pathname.includes('achievements'))\n  }, [pathname])\n\n  return (\n    <Flex>\n      <Tab\n        onClick={() => setIsAchievementsActive(false)}\n        $active={!achievementsActive}\n        as={RouterLink}\n        to={`${nftsBaseUrl}/profile/${accountAddress}`}\n      >\n        NFTs\n      </Tab>\n      <Tab\n        onClick={() => setIsAchievementsActive(true)}\n        $active={achievementsActive}\n        as={RouterLink}\n        to={`${nftsBaseUrl}/profile/${accountAddress}/achievements`}\n      >\n        {t('Achievements')}\n      </Tab>\n    </Flex>\n  )\n}\n\nexport default TabMenu\n"]},"metadata":{},"sourceType":"module"}