{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Farms/components/FarmCard/CardActionsContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Button, Flex, Text } from '@pancakeswap/uikit';\nimport { getAddress } from 'utils/addressHelpers';\nimport { useAppDispatch } from 'state';\nimport { fetchFarmUserDataAsync } from 'state/farms';\nimport { useTranslation } from 'contexts/Localization';\nimport { useERC20 } from 'hooks/useContract';\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport StakeAction from './StakeAction';\nimport HarvestAction from './HarvestAction';\nimport useApproveFarm from '../../hooks/useApproveFarm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Action = styled.div`\n  padding-top: 16px;\n`;\n_c = Action;\n\nconst CardActions = ({\n  farm,\n  account,\n  addLiquidityUrl,\n  cakePrice,\n  lpLabel\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [requestedApproval, setRequestedApproval] = useState(false);\n  const {\n    pid,\n    lpAddresses\n  } = farm;\n  const {\n    allowance,\n    tokenBalance,\n    stakedBalance,\n    earnings\n  } = farm.userData || {};\n  const lpAddress = getAddress(lpAddresses);\n  const isApproved = account && allowance && allowance.isGreaterThan(0);\n  const dispatch = useAppDispatch();\n  const lpContract = useERC20(lpAddress);\n  const {\n    onApprove\n  } = useApproveFarm(lpContract);\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true);\n      await onApprove();\n      dispatch(fetchFarmUserDataAsync({\n        account,\n        pids: [pid]\n      }));\n      setRequestedApproval(false);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [onApprove, dispatch, account, pid]);\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? /*#__PURE__*/_jsxDEV(StakeAction, {\n      stakedBalance: stakedBalance,\n      tokenBalance: tokenBalance,\n      tokenName: farm.lpSymbol,\n      pid: pid,\n      apr: farm.apr,\n      lpLabel: lpLabel,\n      cakePrice: cakePrice,\n      addLiquidityUrl: addLiquidityUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      mt: \"8px\",\n      width: \"100%\",\n      disabled: requestedApproval,\n      onClick: handleApprove,\n      children: t('Enable Contract')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Action, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        textTransform: \"uppercase\",\n        color: \"secondary\",\n        fontSize: \"12px\",\n        pr: \"4px\",\n        children: \"HEART\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        textTransform: \"uppercase\",\n        color: \"textSubtle\",\n        fontSize: \"12px\",\n        children: t('Earned')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HarvestAction, {\n      earnings: earnings,\n      pid: pid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        textTransform: \"uppercase\",\n        color: \"secondary\",\n        fontSize: \"12px\",\n        pr: \"4px\",\n        children: farm.lpSymbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        textTransform: \"uppercase\",\n        color: \"textSubtle\",\n        fontSize: \"12px\",\n        children: t('Staked')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), !account ? /*#__PURE__*/_jsxDEV(ConnectWalletButton, {\n      mt: \"8px\",\n      width: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }, this) : renderApprovalOrStakeButton()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardActions, \"IqZAhQLNMiP2soOvZtMeLXA+3jE=\", false, function () {\n  return [useTranslation, useAppDispatch, useERC20, useApproveFarm];\n});\n\n_c2 = CardActions;\nexport default CardActions;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Action\");\n$RefreshReg$(_c2, \"CardActions\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Farms/components/FarmCard/CardActionsContainer.tsx"],"names":["React","useState","useCallback","styled","Button","Flex","Text","getAddress","useAppDispatch","fetchFarmUserDataAsync","useTranslation","useERC20","ConnectWalletButton","StakeAction","HarvestAction","useApproveFarm","Action","div","CardActions","farm","account","addLiquidityUrl","cakePrice","lpLabel","t","requestedApproval","setRequestedApproval","pid","lpAddresses","allowance","tokenBalance","stakedBalance","earnings","userData","lpAddress","isApproved","isGreaterThan","dispatch","lpContract","onApprove","handleApprove","pids","e","console","error","renderApprovalOrStakeButton","lpSymbol","apr"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Text } from '@pancakeswap/uikit'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { DeserializedFarm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\nimport useApproveFarm from '../../hooks/useApproveFarm'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\nexport interface FarmWithStakedValue extends DeserializedFarm {\n  apr?: number\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  account?: string\n  addLiquidityUrl?: string\n  cakePrice?: BigNumber\n  lpLabel?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl, cakePrice, lpLabel }) => {\n  const { t } = useTranslation()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses } = farm\n  const { allowance, tokenBalance, stakedBalance, earnings } = farm.userData || {}\n  const lpAddress = getAddress(lpAddresses)\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n  const dispatch = useAppDispatch()\n\n  const lpContract = useERC20(lpAddress)\n\n  const { onApprove } = useApproveFarm(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, dispatch, account, pid])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        tokenName={farm.lpSymbol}\n        pid={pid}\n        apr={farm.apr}\n        lpLabel={lpLabel}\n        cakePrice={cakePrice}\n        addLiquidityUrl={addLiquidityUrl}\n      />\n    ) : (\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n        {t('Enable Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          HEART\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          {farm.lpSymbol}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Staked')}\n        </Text>\n      </Flex>\n      {!account ? <ConnectWalletButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n    </Action>\n  )\n}\n\nexport default CardActions\n"]},"metadata":{},"sourceType":"module"}