{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Profile/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { useParams } from 'react-router';\nimport { isAddress } from 'utils';\nimport { Flex, Text } from '@pancakeswap/uikit';\nimport Page from 'components/Layout/Page';\nimport { useTranslation } from 'contexts/Localization';\nimport ConnectedProfile from './ConnectedProfile';\nimport UnconnectedProfile from './UnconnectedProfile';\nimport MarketPageHeader from '../components/MarketPageHeader';\nimport ProfileHeader from './components/ProfileHeader';\nimport NoNftsImage from './components/NoNftsImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NftProfile = () => {\n  _s();\n\n  const {\n    account\n  } = useWeb3React();\n  const {\n    accountAddress\n  } = useParams();\n  const {\n    t\n  } = useTranslation();\n  const isConnectedProfile = (account === null || account === void 0 ? void 0 : account.toLowerCase()) === (accountAddress === null || accountAddress === void 0 ? void 0 : accountAddress.toLowerCase());\n  const invalidAddress = !accountAddress || isAddress(accountAddress) === false;\n\n  if (invalidAddress) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MarketPageHeader, {\n        position: \"relative\",\n        children: /*#__PURE__*/_jsxDEV(ProfileHeader, {\n          accountPath: accountAddress,\n          profile: null,\n          achievements: null,\n          nftCollected: null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Page, {\n        style: {\n          minHeight: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          p: \"24px\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(NoNftsImage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            textAlign: \"center\",\n            maxWidth: \"420px\",\n            pt: \"8px\",\n            bold: true,\n            children: t('Please enter a valid address, or connect your wallet to view your profile')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isConnectedProfile ? /*#__PURE__*/_jsxDEV(ConnectedProfile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 34\n    }, this) : /*#__PURE__*/_jsxDEV(UnconnectedProfile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 57\n    }, this)\n  }, void 0, false);\n};\n\n_s(NftProfile, \"7/ewQ4qnnPQnENErhY1Pbe0i+Uw=\", false, function () {\n  return [useWeb3React, useParams, useTranslation];\n});\n\n_c = NftProfile;\nexport default NftProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"NftProfile\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Profile/index.tsx"],"names":["React","useWeb3React","useParams","isAddress","Flex","Text","Page","useTranslation","ConnectedProfile","UnconnectedProfile","MarketPageHeader","ProfileHeader","NoNftsImage","NftProfile","account","accountAddress","t","isConnectedProfile","toLowerCase","invalidAddress","minHeight"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,oBAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAcb,YAAY,EAAhC;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAqBb,SAAS,EAApC;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAQT,cAAc,EAA5B;AAEA,QAAMU,kBAAkB,GAAG,CAAAH,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEI,WAAT,SAA2BH,cAA3B,aAA2BA,cAA3B,uBAA2BA,cAAc,CAAEG,WAAhB,EAA3B,CAA3B;AACA,QAAMC,cAAc,GAAG,CAACJ,cAAD,IAAmBZ,SAAS,CAACY,cAAD,CAAT,KAA8B,KAAxE;;AAEA,MAAII,cAAJ,EAAoB;AAClB,wBACE;AAAA,8BACE,QAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAC,UAA3B;AAAA,+BACE,QAAC,aAAD;AAAe,UAAA,WAAW,EAAEJ,cAA5B;AAA4C,UAAA,OAAO,EAAE,IAArD;AAA2D,UAAA,YAAY,EAAE,IAAzE;AAA+E,UAAA,YAAY,EAAE;AAA7F;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEK,UAAAA,SAAS,EAAE;AAAb,SAAb;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,CAAC,EAAC,MAAR;AAAe,UAAA,aAAa,EAAC,QAA7B;AAAsC,UAAA,UAAU,EAAC,QAAjD;AAAA,kCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAyB,YAAA,QAAQ,EAAC,OAAlC;AAA0C,YAAA,EAAE,EAAC,KAA7C;AAAmD,YAAA,IAAI,MAAvD;AAAA,sBACGJ,CAAC,CAAC,2EAAD;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,oBADF;AAeD;;AAED,sBAAO;AAAA,cAAGC,kBAAkB,gBAAG,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA0B,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAA/C,mBAAP;AACD,CA3BD;;GAAMJ,U;UACgBZ,Y,EACOC,S,EACbK,c;;;KAHVM,U;AA6BN,eAAeA,UAAf","sourcesContent":["import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useParams } from 'react-router'\nimport { isAddress } from 'utils'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport Page from 'components/Layout/Page'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectedProfile from './ConnectedProfile'\nimport UnconnectedProfile from './UnconnectedProfile'\nimport MarketPageHeader from '../components/MarketPageHeader'\nimport ProfileHeader from './components/ProfileHeader'\nimport NoNftsImage from './components/NoNftsImage'\n\nconst NftProfile = () => {\n  const { account } = useWeb3React()\n  const { accountAddress } = useParams<{ accountAddress: string }>()\n  const { t } = useTranslation()\n\n  const isConnectedProfile = account?.toLowerCase() === accountAddress?.toLowerCase()\n  const invalidAddress = !accountAddress || isAddress(accountAddress) === false\n\n  if (invalidAddress) {\n    return (\n      <>\n        <MarketPageHeader position=\"relative\">\n          <ProfileHeader accountPath={accountAddress} profile={null} achievements={null} nftCollected={null} />\n        </MarketPageHeader>\n        <Page style={{ minHeight: 'auto' }}>\n          <Flex p=\"24px\" flexDirection=\"column\" alignItems=\"center\">\n            <NoNftsImage />\n            <Text textAlign=\"center\" maxWidth=\"420px\" pt=\"8px\" bold>\n              {t('Please enter a valid address, or connect your wallet to view your profile')}\n            </Text>\n          </Flex>\n        </Page>\n      </>\n    )\n  }\n\n  return <>{isConnectedProfile ? <ConnectedProfile /> : <UnconnectedProfile />}</>\n}\n\nexport default NftProfile\n"]},"metadata":{},"sourceType":"module"}