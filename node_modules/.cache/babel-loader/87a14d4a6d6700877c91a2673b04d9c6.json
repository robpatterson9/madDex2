{"ast":null,"code":"import{useEffect}from'react';import{useWeb3React}from'@web3-react/core';import usePreviousValue from'hooks/usePreviousValue';import{useAppDispatch}from'state';import{useGetCurrentEpoch,useGetSortedRounds}from'state/predictions/hooks';import useSwiper from'./useSwiper';/**\n * Hooks for actions to be performed when the round changes\n */var useOnNextRound=function useOnNextRound(){var currentEpoch=useGetCurrentEpoch();var rounds=useGetSortedRounds();var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var previousEpoch=usePreviousValue(currentEpoch);var _useSwiper=useSwiper(),swiper=_useSwiper.swiper;var dispatch=useAppDispatch();useEffect(function(){if(swiper&&currentEpoch!==undefined&&previousEpoch!==undefined&&currentEpoch!==previousEpoch){var currentEpochIndex=rounds.findIndex(function(round){return round.epoch===currentEpoch;});// Slide to the current LIVE round which is always the one before the current round\nswiper.slideTo(currentEpochIndex-1);swiper.update();}},[previousEpoch,currentEpoch,rounds,swiper,account,dispatch]);};export default useOnNextRound;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/hooks/useOnNextRound.ts"],"names":["useEffect","useWeb3React","usePreviousValue","useAppDispatch","useGetCurrentEpoch","useGetSortedRounds","useSwiper","useOnNextRound","currentEpoch","rounds","account","previousEpoch","swiper","dispatch","undefined","currentEpochIndex","findIndex","round","epoch","slideTo","update"],"mappings":"AAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,wBAA7B,CACA,OAASC,cAAT,KAA+B,OAA/B,CACA,OAASC,kBAAT,CAA6BC,kBAA7B,KAAuD,yBAAvD,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CAEA;AACA;AACA,GACA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3B,GAAMC,CAAAA,YAAY,CAAGJ,kBAAkB,EAAvC,CACA,GAAMK,CAAAA,MAAM,CAAGJ,kBAAkB,EAAjC,CACA,kBAAoBJ,YAAY,EAAhC,CAAQS,OAAR,eAAQA,OAAR,CACA,GAAMC,CAAAA,aAAa,CAAGT,gBAAgB,CAACM,YAAD,CAAtC,CACA,eAAmBF,SAAS,EAA5B,CAAQM,MAAR,YAAQA,MAAR,CACA,GAAMC,CAAAA,QAAQ,CAAGV,cAAc,EAA/B,CAEAH,SAAS,CAAC,UAAM,CACd,GAAIY,MAAM,EAAIJ,YAAY,GAAKM,SAA3B,EAAwCH,aAAa,GAAKG,SAA1D,EAAuEN,YAAY,GAAKG,aAA5F,CAA2G,CACzG,GAAMI,CAAAA,iBAAiB,CAAGN,MAAM,CAACO,SAAP,CAAiB,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,KAAN,GAAgBV,YAA3B,EAAjB,CAA1B,CAEA;AACAI,MAAM,CAACO,OAAP,CAAeJ,iBAAiB,CAAG,CAAnC,EACAH,MAAM,CAACQ,MAAP,GACD,CACF,CARQ,CAQN,CAACT,aAAD,CAAgBH,YAAhB,CAA8BC,MAA9B,CAAsCG,MAAtC,CAA8CF,OAA9C,CAAuDG,QAAvD,CARM,CAAT,CASD,CAjBD,CAmBA,cAAeN,CAAAA,cAAf","sourcesContent":["import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport usePreviousValue from 'hooks/usePreviousValue'\nimport { useAppDispatch } from 'state'\nimport { useGetCurrentEpoch, useGetSortedRounds } from 'state/predictions/hooks'\nimport useSwiper from './useSwiper'\n\n/**\n * Hooks for actions to be performed when the round changes\n */\nconst useOnNextRound = () => {\n  const currentEpoch = useGetCurrentEpoch()\n  const rounds = useGetSortedRounds()\n  const { account } = useWeb3React()\n  const previousEpoch = usePreviousValue(currentEpoch)\n  const { swiper } = useSwiper()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (swiper && currentEpoch !== undefined && previousEpoch !== undefined && currentEpoch !== previousEpoch) {\n      const currentEpochIndex = rounds.findIndex((round) => round.epoch === currentEpoch)\n\n      // Slide to the current LIVE round which is always the one before the current round\n      swiper.slideTo(currentEpochIndex - 1)\n      swiper.update()\n    }\n  }, [previousEpoch, currentEpoch, rounds, swiper, account, dispatch])\n}\n\nexport default useOnNextRound\n"]},"metadata":{},"sourceType":"module"}