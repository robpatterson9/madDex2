{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/RoundCard/SoonRoundCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Card, CardBody, Text, WaitIcon } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { BetPosition } from 'state/types';\nimport useTheme from 'hooks/useTheme';\nimport { useGetIntervalSeconds } from 'state/predictions/hooks';\nimport { ROUND_BUFFER } from 'state/predictions/config';\nimport { formatRoundTime } from '../../helpers';\nimport useCountdown from '../../hooks/useCountdown';\nimport { RoundResultBox } from '../RoundResult';\nimport MultiplierArrow from './MultiplierArrow';\nimport CardHeader, { getBorderBackground } from './CardHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SoonRoundCard = ({\n  round\n}) => {\n  _s();\n\n  const intervalSeconds = useGetIntervalSeconds();\n  const {\n    secondsRemaining\n  } = useCountdown(round.startTimestamp + intervalSeconds + ROUND_BUFFER);\n  const countdown = formatRoundTime(secondsRemaining);\n  const {\n    t\n  } = useTranslation();\n  const {\n    theme\n  } = useTheme();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    borderBackground: getBorderBackground(theme, 'soon'),\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      status: \"soon\",\n      icon: /*#__PURE__*/_jsxDEV(WaitIcon, {\n        mr: \"4px\",\n        width: \"21px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 39\n      }, this),\n      title: t('Later'),\n      epoch: round.epoch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      p: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(MultiplierArrow, {\n        isDisabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoundResultBox, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          textAlign: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            children: t('Entry starts')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"24px\",\n            bold: true,\n            children: `~${countdown}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MultiplierArrow, {\n        betPosition: BetPosition.BEAR,\n        isDisabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SoonRoundCard, \"xmwOtwgOErtspMzs4diS7zrOrgs=\", false, function () {\n  return [useGetIntervalSeconds, useCountdown, useTranslation, useTheme];\n});\n\n_c = SoonRoundCard;\nexport default SoonRoundCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SoonRoundCard\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/RoundCard/SoonRoundCard.tsx"],"names":["React","Card","CardBody","Text","WaitIcon","useTranslation","BetPosition","useTheme","useGetIntervalSeconds","ROUND_BUFFER","formatRoundTime","useCountdown","RoundResultBox","MultiplierArrow","CardHeader","getBorderBackground","SoonRoundCard","round","intervalSeconds","secondsRemaining","startTimestamp","countdown","t","theme","epoch","BEAR"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,IAAzB,EAA+BC,QAA/B,QAA+C,oBAA/C;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAAoBC,WAApB,QAAuC,aAAvC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,IAAqBC,mBAArB,QAAgD,cAAhD;;;AAMA,MAAMC,aAA2C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AACjE,QAAMC,eAAe,GAAGV,qBAAqB,EAA7C;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAuBR,YAAY,CAACM,KAAK,CAACG,cAAN,GAAuBF,eAAvB,GAAyCT,YAA1C,CAAzC;AACA,QAAMY,SAAS,GAAGX,eAAe,CAACS,gBAAD,CAAjC;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAQjB,cAAc,EAA5B;AACA,QAAM;AAAEkB,IAAAA;AAAF,MAAYhB,QAAQ,EAA1B;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,gBAAgB,EAAEQ,mBAAmB,CAACQ,KAAD,EAAQ,MAAR,CAA3C;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,MAAM,EAAC,MAAnB;AAA0B,MAAA,IAAI,eAAE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC,KAAb;AAAmB,QAAA,KAAK,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,cAAhC;AAAoE,MAAA,KAAK,EAAED,CAAC,CAAC,OAAD,CAA5E;AAAuF,MAAA,KAAK,EAAEL,KAAK,CAACO;AAApG;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,CAAC,EAAC,MAAZ;AAAA,8BACE,QAAC,eAAD;AAAiB,QAAA,UAAU;AAA3B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,QAAhB;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,sBAAYF,CAAC,CAAC,cAAD;AAAb;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAM,YAAA,QAAQ,EAAC,MAAf;AAAsB,YAAA,IAAI,MAA1B;AAAA,sBACI,IAAGD,SAAU;AADjB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE,QAAC,eAAD;AAAiB,QAAA,WAAW,EAAEf,WAAW,CAACmB,IAA1C;AAAgD,QAAA,UAAU;AAA1D;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAxBD;;GAAMT,a;UACoBR,qB,EACKG,Y,EAEfN,c,EACIE,Q;;;KALdS,a;AA0BN,eAAeA,aAAf","sourcesContent":["import React from 'react'\nimport { Card, CardBody, Text, WaitIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { NodeRound, BetPosition } from 'state/types'\nimport useTheme from 'hooks/useTheme'\nimport { useGetIntervalSeconds } from 'state/predictions/hooks'\nimport { ROUND_BUFFER } from 'state/predictions/config'\nimport { formatRoundTime } from '../../helpers'\nimport useCountdown from '../../hooks/useCountdown'\nimport { RoundResultBox } from '../RoundResult'\nimport MultiplierArrow from './MultiplierArrow'\nimport CardHeader, { getBorderBackground } from './CardHeader'\n\ninterface SoonRoundCardProps {\n  round: NodeRound\n}\n\nconst SoonRoundCard: React.FC<SoonRoundCardProps> = ({ round }) => {\n  const intervalSeconds = useGetIntervalSeconds()\n  const { secondsRemaining } = useCountdown(round.startTimestamp + intervalSeconds + ROUND_BUFFER)\n  const countdown = formatRoundTime(secondsRemaining)\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Card borderBackground={getBorderBackground(theme, 'soon')}>\n      <CardHeader status=\"soon\" icon={<WaitIcon mr=\"4px\" width=\"21px\" />} title={t('Later')} epoch={round.epoch} />\n      <CardBody p=\"16px\">\n        <MultiplierArrow isDisabled />\n        <RoundResultBox>\n          <Text textAlign=\"center\">\n            <Text bold>{t('Entry starts')}</Text>\n            <Text fontSize=\"24px\" bold>\n              {`~${countdown}`}\n            </Text>\n          </Text>\n        </RoundResultBox>\n        <MultiplierArrow betPosition={BetPosition.BEAR} isDisabled />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default SoonRoundCard\n"]},"metadata":{},"sourceType":"module"}