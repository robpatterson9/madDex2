{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{Skeleton,Text,Flex,Box,useModal,useMatchBreakpoints}from'@pancakeswap/uikit';import BigNumber from'bignumber.js';import{PoolCategory}from'config/constants/types';import{BIG_ZERO}from'utils/bigNumber';import{formatNumber,getBalanceNumber,getFullDisplayBalance}from'utils/formatBalance';import Balance from'components/Balance';import{useTranslation}from'contexts/Localization';import BaseCell,{CellContent}from'./BaseCell';import CollectModal from'../../PoolCard/Modals/CollectModal';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledCell=styled(BaseCell)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  flex: 4.5;\\n  \",\" {\\n    flex: 1 0 120px;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.mediaQueries.sm;});var EarningsCell=function EarningsCell(_ref2){var pool=_ref2.pool,account=_ref2.account,userDataLoaded=_ref2.userDataLoaded;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useMatchBreakpoints=useMatchBreakpoints(),isMobile=_useMatchBreakpoints.isMobile;var sousId=pool.sousId,earningToken=pool.earningToken,poolCategory=pool.poolCategory,userData=pool.userData,earningTokenPrice=pool.earningTokenPrice;var isManualCakePool=sousId===0;var earnings=(userData===null||userData===void 0?void 0:userData.pendingReward)?new BigNumber(userData.pendingReward):BIG_ZERO;var earningTokenBalance=getBalanceNumber(earnings,earningToken.decimals);var earningTokenDollarBalance=getBalanceNumber(earnings.multipliedBy(earningTokenPrice),earningToken.decimals);var hasEarnings=account&&earnings.gt(0);var fullBalance=getFullDisplayBalance(earnings,earningToken.decimals);var formattedBalance=formatNumber(earningTokenBalance,3,3);var isBnbPool=poolCategory===PoolCategory.BINANCE;var labelText=t('%asset% Earned',{asset:earningToken.symbol});var _useModal=useModal(/*#__PURE__*/_jsx(CollectModal,{formattedBalance:formattedBalance,fullBalance:fullBalance,earningToken:earningToken,earningsDollarValue:earningTokenDollarBalance,sousId:sousId,isBnbPool:isBnbPool,isCompoundPool:isManualCakePool})),_useModal2=_slicedToArray(_useModal,1),onPresentCollect=_useModal2[0];var handleEarningsClick=function handleEarningsClick(event){event.stopPropagation();onPresentCollect();};return/*#__PURE__*/_jsx(StyledCell,{role:\"cell\",children:/*#__PURE__*/_jsxs(CellContent,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",textAlign:\"left\",children:labelText}),!userDataLoaded&&account?/*#__PURE__*/_jsx(Skeleton,{width:\"80px\",height:\"16px\"}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Flex,{children:/*#__PURE__*/_jsxs(Box,{mr:\"8px\",height:\"32px\",onClick:hasEarnings?handleEarningsClick:undefined,children:[/*#__PURE__*/_jsx(Balance,{mt:\"4px\",bold:!isMobile,fontSize:isMobile?'14px':'16px',color:hasEarnings?'primary':'textDisabled',decimals:hasEarnings?5:1,value:hasEarnings?earningTokenBalance:0}),hasEarnings?/*#__PURE__*/_jsx(_Fragment,{children:earningTokenPrice>0&&/*#__PURE__*/_jsx(Balance,{display:\"inline\",fontSize:\"12px\",color:\"textSubtle\",decimals:2,prefix:\"~\",value:earningTokenDollarBalance,unit:\" USD\"})}):/*#__PURE__*/_jsx(Text,{mt:\"4px\",fontSize:\"12px\",color:\"textDisabled\",children:\"0 USD\"})]})})})]})});};export default EarningsCell;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Pools/components/PoolsTable/Cells/EarningsCell.tsx"],"names":["React","styled","Skeleton","Text","Flex","Box","useModal","useMatchBreakpoints","BigNumber","PoolCategory","BIG_ZERO","formatNumber","getBalanceNumber","getFullDisplayBalance","Balance","useTranslation","BaseCell","CellContent","CollectModal","StyledCell","theme","mediaQueries","sm","EarningsCell","pool","account","userDataLoaded","t","isMobile","sousId","earningToken","poolCategory","userData","earningTokenPrice","isManualCakePool","earnings","pendingReward","earningTokenBalance","decimals","earningTokenDollarBalance","multipliedBy","hasEarnings","gt","fullBalance","formattedBalance","isBnbPool","BINANCE","labelText","asset","symbol","onPresentCollect","handleEarningsClick","event","stopPropagation","undefined"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: DeserializedPool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const labelText = t('%asset% Earned', { asset: earningToken.symbol })\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n"]},"metadata":{},"sourceType":"module"}