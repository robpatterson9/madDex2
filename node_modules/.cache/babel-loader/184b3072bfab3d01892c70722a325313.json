{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Flex,Button,useModal,Skeleton}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import NotEnoughTokensModal from'../../PoolCard/Modals/NotEnoughTokensModal';import VaultStakeModal from'../VaultStakeModal';import HasSharesActions from'./HasSharesActions';import{jsx as _jsx}from\"react/jsx-runtime\";var VaultStakeActions=function VaultStakeActions(_ref){var pool=_ref.pool,stakingTokenBalance=_ref.stakingTokenBalance,accountHasSharesStaked=_ref.accountHasSharesStaked,performanceFee=_ref.performanceFee,_ref$isLoading=_ref.isLoading,isLoading=_ref$isLoading===void 0?false:_ref$isLoading;var stakingToken=pool.stakingToken;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useModal=useModal(/*#__PURE__*/_jsx(NotEnoughTokensModal,{tokenSymbol:stakingToken.symbol})),_useModal2=_slicedToArray(_useModal,1),onPresentTokenRequired=_useModal2[0];var _useModal3=useModal(/*#__PURE__*/_jsx(VaultStakeModal,{stakingMax:stakingTokenBalance,pool:pool,performanceFee:performanceFee})),_useModal4=_slicedToArray(_useModal3,1),onPresentStake=_useModal4[0];var renderStakeAction=function renderStakeAction(){return accountHasSharesStaked?/*#__PURE__*/_jsx(HasSharesActions,{pool:pool,stakingTokenBalance:stakingTokenBalance,performanceFee:performanceFee}):/*#__PURE__*/_jsx(Button,{onClick:stakingTokenBalance.gt(0)?onPresentStake:onPresentTokenRequired,children:t('Stake')});};return/*#__PURE__*/_jsx(Flex,{flexDirection:\"column\",children:isLoading?/*#__PURE__*/_jsx(Skeleton,{width:\"100%\",height:\"52px\"}):renderStakeAction()});};export default VaultStakeActions;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx"],"names":["React","Flex","Button","useModal","Skeleton","useTranslation","NotEnoughTokensModal","VaultStakeModal","HasSharesActions","VaultStakeActions","pool","stakingTokenBalance","accountHasSharesStaked","performanceFee","isLoading","stakingToken","t","symbol","onPresentTokenRequired","onPresentStake","renderStakeAction","gt"],"mappings":"wJAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,QAAvB,CAAiCC,QAAjC,KAAiD,oBAAjD,CAEA,OAASC,cAAT,KAA+B,uBAA/B,CAEA,MAAOC,CAAAA,oBAAP,KAAiC,4CAAjC,CACA,MAAOC,CAAAA,eAAP,KAA4B,oBAA5B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,C,2CAUA,GAAMC,CAAAA,iBAAmD,CAAG,QAAtDA,CAAAA,iBAAsD,MAMtD,IALJC,CAAAA,IAKI,MALJA,IAKI,CAJJC,mBAII,MAJJA,mBAII,CAHJC,sBAGI,MAHJA,sBAGI,CAFJC,cAEI,MAFJA,cAEI,qBADJC,SACI,CADJA,SACI,yBADQ,KACR,gBACJ,GAAQC,CAAAA,YAAR,CAAyBL,IAAzB,CAAQK,YAAR,CACA,oBAAcV,cAAc,EAA5B,CAAQW,CAAR,iBAAQA,CAAR,CACA,cAAiCb,QAAQ,cAAC,KAAC,oBAAD,EAAsB,WAAW,CAAEY,YAAY,CAACE,MAAhD,EAAD,CAAzC,wCAAOC,sBAAP,eACA,eAAyBf,QAAQ,cAC/B,KAAC,eAAD,EAAiB,UAAU,CAAEQ,mBAA7B,CAAkD,IAAI,CAAED,IAAxD,CAA8D,cAAc,CAAEG,cAA9E,EAD+B,CAAjC,yCAAOM,cAAP,eAIA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B,MAAOR,CAAAA,sBAAsB,cAC3B,KAAC,gBAAD,EAAkB,IAAI,CAAEF,IAAxB,CAA8B,mBAAmB,CAAEC,mBAAnD,CAAwE,cAAc,CAAEE,cAAxF,EAD2B,cAG3B,KAAC,MAAD,EAAQ,OAAO,CAAEF,mBAAmB,CAACU,EAApB,CAAuB,CAAvB,EAA4BF,cAA5B,CAA6CD,sBAA9D,UAAuFF,CAAC,CAAC,OAAD,CAAxF,EAHF,CAKD,CAND,CAQA,mBAAO,KAAC,IAAD,EAAM,aAAa,CAAC,QAApB,UAA8BF,SAAS,cAAG,KAAC,QAAD,EAAU,KAAK,CAAC,MAAhB,CAAuB,MAAM,CAAC,MAA9B,EAAH,CAA6CM,iBAAiB,EAArG,EAAP,CACD,CAvBD,CAyBA,cAAeX,CAAAA,iBAAf","sourcesContent":["import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  performanceFee: number\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  performanceFee,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} performanceFee={performanceFee} />,\n  )\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} performanceFee={performanceFee} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n"]},"metadata":{},"sourceType":"module"}