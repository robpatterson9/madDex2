{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Info/components/InfoCharts/CandleChart/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect, useCallback } from 'react';\nimport { createChart } from 'lightweight-charts';\nimport { format } from 'date-fns';\nimport useTheme from 'hooks/useTheme';\nimport { CandleChartLoader } from 'views/Info/components/ChartLoaders';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CANDLE_CHART_HEIGHT = 250;\n\nconst CandleChart = ({\n  data,\n  setValue,\n  setLabel,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    theme\n  } = useTheme();\n  const chartRef = useRef(null);\n  const [chartCreated, setChart] = useState();\n  const handleResize = useCallback(() => {\n    var _chartRef$current;\n\n    if (chartCreated && (chartRef === null || chartRef === void 0 ? void 0 : (_chartRef$current = chartRef.current) === null || _chartRef$current === void 0 ? void 0 : _chartRef$current.parentElement)) {\n      chartCreated.resize(chartRef.current.parentElement.clientWidth - 32, CANDLE_CHART_HEIGHT);\n      chartCreated.timeScale().fitContent();\n      chartCreated.timeScale().scrollToPosition(0, false);\n    }\n  }, [chartCreated, chartRef]); // add event listener for resize\n\n  const isClient = typeof window === 'object';\n  useEffect(() => {\n    if (!isClient) {\n      return null;\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [isClient, chartRef, handleResize]); // Empty array ensures that effect is only run on mount and unmount\n  // if chart not instantiated in canvas, create it\n\n  useEffect(() => {\n    var _chartRef$current2;\n\n    if (!chartCreated && data && !!(chartRef === null || chartRef === void 0 ? void 0 : (_chartRef$current2 = chartRef.current) === null || _chartRef$current2 === void 0 ? void 0 : _chartRef$current2.parentElement)) {\n      const chart = createChart(chartRef.current, {\n        height: CANDLE_CHART_HEIGHT,\n        width: chartRef.current.parentElement.clientWidth - 32,\n        layout: {\n          backgroundColor: 'transparent',\n          textColor: theme.colors.textSubtle,\n          fontFamily: 'Kanit, sans-serif',\n          fontSize: 12\n        },\n        rightPriceScale: {\n          scaleMargins: {\n            top: 0.1,\n            bottom: 0.1\n          },\n          borderVisible: false\n        },\n        timeScale: {\n          borderVisible: false,\n          secondsVisible: true,\n          tickMarkFormatter: unixTime => {\n            return format(unixTime * 1000, 'MM/dd h:mm a');\n          }\n        },\n        watermark: {\n          visible: false\n        },\n        grid: {\n          horzLines: {\n            visible: false\n          },\n          vertLines: {\n            visible: false\n          }\n        },\n        crosshair: {\n          horzLine: {\n            visible: false,\n            labelVisible: false\n          },\n          mode: 1,\n          vertLine: {\n            visible: true,\n            labelVisible: false,\n            style: 3,\n            width: 1,\n            color: theme.colors.textSubtle,\n            labelBackgroundColor: theme.colors.primary\n          }\n        }\n      });\n      chart.timeScale().fitContent();\n      setChart(chart);\n    }\n  }, [chartCreated, data, setValue, theme]);\n  useEffect(() => {\n    if (chartCreated && data) {\n      const series = chartCreated.addCandlestickSeries({\n        upColor: theme.colors.success,\n        downColor: theme.colors.failure,\n        borderDownColor: theme.colors.failure,\n        borderUpColor: theme.colors.success,\n        wickDownColor: theme.colors.failure,\n        wickUpColor: theme.colors.success\n      });\n      series.setData(data); // update the title when hovering on the chart\n\n      chartCreated.subscribeCrosshairMove(param => {\n        if ((chartRef === null || chartRef === void 0 ? void 0 : chartRef.current) && (param === undefined || param.time === undefined || param && param.point && param.point.x < 0 || param && param.point && param.point.x > chartRef.current.clientWidth || param && param.point && param.point.y < 0 || param && param.point && param.point.y > CANDLE_CHART_HEIGHT)) {\n          // reset values\n          if (setValue) setValue(undefined);\n          if (setLabel) setLabel(undefined);\n        } else if (series && param) {\n          const timestamp = param.time;\n          const now = new Date(timestamp * 1000);\n          const utc = new Date(now.getTime() + now.getTimezoneOffset() * 60000);\n          const time = `${format(utc, 'MMM d, yyyy h:mm a')} (UTC)`;\n          const parsed = param.seriesPrices.get(series);\n          if (setValue) setValue(parsed === null || parsed === void 0 ? void 0 : parsed.open);\n          if (setLabel) setLabel(time);\n        }\n      });\n    }\n  }, [chartCreated, data, setValue, setLabel, theme]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!chartCreated && /*#__PURE__*/_jsxDEV(CandleChartLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chartRef,\n      id: \"candle-chart\",\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CandleChart, \"693T7KslIEllnlcz7uA4XDScHKU=\", false, function () {\n  return [useTheme];\n});\n\n_c = CandleChart;\nexport default CandleChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CandleChart\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Info/components/InfoCharts/CandleChart/index.tsx"],"names":["React","useRef","useState","useEffect","useCallback","createChart","format","useTheme","CandleChartLoader","CANDLE_CHART_HEIGHT","CandleChart","data","setValue","setLabel","rest","theme","chartRef","chartCreated","setChart","handleResize","current","parentElement","resize","clientWidth","timeScale","fitContent","scrollToPosition","isClient","window","addEventListener","removeEventListener","chart","height","width","layout","backgroundColor","textColor","colors","textSubtle","fontFamily","fontSize","rightPriceScale","scaleMargins","top","bottom","borderVisible","secondsVisible","tickMarkFormatter","unixTime","watermark","visible","grid","horzLines","vertLines","crosshair","horzLine","labelVisible","mode","vertLine","style","color","labelBackgroundColor","primary","series","addCandlestickSeries","upColor","success","downColor","failure","borderDownColor","borderUpColor","wickDownColor","wickUpColor","setData","subscribeCrosshairMove","param","undefined","time","point","x","y","timestamp","now","Date","utc","getTime","getTimezoneOffset","parsed","seriesPrices","get","open"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, useCallback, Dispatch, SetStateAction } from 'react'\nimport { createChart, IChartApi } from 'lightweight-charts'\nimport { format } from 'date-fns'\nimport useTheme from 'hooks/useTheme'\nimport { CandleChartLoader } from 'views/Info/components/ChartLoaders'\n\nconst CANDLE_CHART_HEIGHT = 250\n\nexport type LineChartProps = {\n  data: any[]\n  setValue?: Dispatch<SetStateAction<number | undefined>> // used for value on hover\n  setLabel?: Dispatch<SetStateAction<string | undefined>> // used for value label on hover\n} & React.HTMLAttributes<HTMLDivElement>\n\nconst CandleChart = ({ data, setValue, setLabel, ...rest }: LineChartProps) => {\n  const { theme } = useTheme()\n  const chartRef = useRef<HTMLDivElement>(null)\n  const [chartCreated, setChart] = useState<IChartApi | undefined>()\n\n  const handleResize = useCallback(() => {\n    if (chartCreated && chartRef?.current?.parentElement) {\n      chartCreated.resize(chartRef.current.parentElement.clientWidth - 32, CANDLE_CHART_HEIGHT)\n      chartCreated.timeScale().fitContent()\n      chartCreated.timeScale().scrollToPosition(0, false)\n    }\n  }, [chartCreated, chartRef])\n\n  // add event listener for resize\n  const isClient = typeof window === 'object'\n  useEffect(() => {\n    if (!isClient) {\n      return null\n    }\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [isClient, chartRef, handleResize]) // Empty array ensures that effect is only run on mount and unmount\n\n  // if chart not instantiated in canvas, create it\n  useEffect(() => {\n    if (!chartCreated && data && !!chartRef?.current?.parentElement) {\n      const chart = createChart(chartRef.current, {\n        height: CANDLE_CHART_HEIGHT,\n        width: chartRef.current.parentElement.clientWidth - 32,\n        layout: {\n          backgroundColor: 'transparent',\n          textColor: theme.colors.textSubtle,\n          fontFamily: 'Kanit, sans-serif',\n          fontSize: 12,\n        },\n        rightPriceScale: {\n          scaleMargins: {\n            top: 0.1,\n            bottom: 0.1,\n          },\n          borderVisible: false,\n        },\n        timeScale: {\n          borderVisible: false,\n          secondsVisible: true,\n          tickMarkFormatter: (unixTime: number) => {\n            return format(unixTime * 1000, 'MM/dd h:mm a')\n          },\n        },\n        watermark: {\n          visible: false,\n        },\n        grid: {\n          horzLines: {\n            visible: false,\n          },\n          vertLines: {\n            visible: false,\n          },\n        },\n        crosshair: {\n          horzLine: {\n            visible: false,\n            labelVisible: false,\n          },\n          mode: 1,\n          vertLine: {\n            visible: true,\n            labelVisible: false,\n            style: 3,\n            width: 1,\n            color: theme.colors.textSubtle,\n            labelBackgroundColor: theme.colors.primary,\n          },\n        },\n      })\n\n      chart.timeScale().fitContent()\n      setChart(chart)\n    }\n  }, [chartCreated, data, setValue, theme])\n\n  useEffect(() => {\n    if (chartCreated && data) {\n      const series = chartCreated.addCandlestickSeries({\n        upColor: theme.colors.success,\n        downColor: theme.colors.failure,\n        borderDownColor: theme.colors.failure,\n        borderUpColor: theme.colors.success,\n        wickDownColor: theme.colors.failure,\n        wickUpColor: theme.colors.success,\n      })\n\n      series.setData(data)\n\n      // update the title when hovering on the chart\n      chartCreated.subscribeCrosshairMove((param) => {\n        if (\n          chartRef?.current &&\n          (param === undefined ||\n            param.time === undefined ||\n            (param && param.point && param.point.x < 0) ||\n            (param && param.point && param.point.x > chartRef.current.clientWidth) ||\n            (param && param.point && param.point.y < 0) ||\n            (param && param.point && param.point.y > CANDLE_CHART_HEIGHT))\n        ) {\n          // reset values\n          if (setValue) setValue(undefined)\n          if (setLabel) setLabel(undefined)\n        } else if (series && param) {\n          const timestamp = param.time as number\n          const now = new Date(timestamp * 1000)\n          const utc = new Date(now.getTime() + now.getTimezoneOffset() * 60000)\n          const time = `${format(utc, 'MMM d, yyyy h:mm a')} (UTC)`\n          const parsed = param.seriesPrices.get(series) as { open: number } | undefined\n          if (setValue) setValue(parsed?.open)\n          if (setLabel) setLabel(time)\n        }\n      })\n    }\n  }, [chartCreated, data, setValue, setLabel, theme])\n\n  return (\n    <>\n      {!chartCreated && <CandleChartLoader />}\n      <div ref={chartRef} id=\"candle-chart\" {...rest} />\n    </>\n  )\n}\n\nexport default CandleChart\n"]},"metadata":{},"sourceType":"module"}