{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import times from'lodash/times';import orderBy from'lodash/orderBy';import{Skeleton,Table,Td,Th}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{getBetHistory,transformBetResponse}from'state/predictions/helpers';import PositionLabel from'./PositionLabel';import{NetWinnings}from'./Results/styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PreviousBetsTable=function PreviousBetsTable(_ref){var _ref$numberOfBets=_ref.numberOfBets,numberOfBets=_ref$numberOfBets===void 0?5:_ref$numberOfBets,account=_ref.account;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isFetching=_useState2[0],setIsFetching=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),bets=_useState4[0],setBets=_useState4[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var orderedBets=orderBy(bets,['round.epoch'],['desc']);useEffect(function(){var fetchBetHistory=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsFetching(true);_context.prev=1;_context.next=4;return getBetHistory({user:account.toLowerCase()},numberOfBets);case 4:response=_context.sent;setBets(response.map(transformBetResponse));case 6:_context.prev=6;setIsFetching(false);return _context.finish(6);case 9:case\"end\":return _context.stop();}}},_callee,null,[[1,,6,9]]);}));return function fetchBetHistory(){return _ref2.apply(this,arguments);};}();fetchBetHistory();},[account,numberOfBets,setIsFetching,setBets]);return/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(Th,{children:t('Round')}),/*#__PURE__*/_jsx(Th,{children:t('Direction')}),/*#__PURE__*/_jsx(Th,{textAlign:\"right\",children:t('Winnings (BNB)')})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:isFetching?times(numberOfBets).map(function(num){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(Td,{children:/*#__PURE__*/_jsx(Skeleton,{width:\"80px\"})}),/*#__PURE__*/_jsx(Td,{children:/*#__PURE__*/_jsx(Skeleton,{width:\"60px\",height:\"32px\"})}),/*#__PURE__*/_jsx(Td,{children:/*#__PURE__*/_jsx(Skeleton,{width:\"80px\"})})]},num);}):orderedBets.map(function(bet){var isWinner=bet.position===bet.round.position;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(Td,{textAlign:\"center\",fontWeight:\"bold\",children:bet.round.epoch.toLocaleString()}),/*#__PURE__*/_jsx(Td,{textAlign:\"center\",children:/*#__PURE__*/_jsx(PositionLabel,{position:bet.position})}),/*#__PURE__*/_jsx(Td,{textAlign:\"right\",children:/*#__PURE__*/_jsx(NetWinnings,{amount:isWinner?bet.claimedNetBNB:bet.amount,textPrefix:isWinner?'+':'-',textColor:isWinner?'success':'failure'})})]},bet.id);})})]});};export default PreviousBetsTable;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/Leaderboard/components/PreviousBetsTable.tsx"],"names":["React","useEffect","useState","times","orderBy","Skeleton","Table","Td","Th","useTranslation","getBetHistory","transformBetResponse","PositionLabel","NetWinnings","PreviousBetsTable","numberOfBets","account","isFetching","setIsFetching","bets","setBets","t","orderedBets","fetchBetHistory","user","toLowerCase","response","map","num","bet","isWinner","position","round","epoch","toLocaleString","claimedNetBNB","amount","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport times from 'lodash/times'\nimport orderBy from 'lodash/orderBy'\nimport { Skeleton, Table, Td, Th } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBetHistory, transformBetResponse } from 'state/predictions/helpers'\nimport { Bet } from 'state/types'\nimport PositionLabel from './PositionLabel'\nimport { NetWinnings } from './Results/styles'\n\ninterface PreviousBetsTableProps {\n  numberOfBets?: number\n  account: string\n}\n\nconst PreviousBetsTable: React.FC<PreviousBetsTableProps> = ({ numberOfBets = 5, account }) => {\n  const [isFetching, setIsFetching] = useState(false)\n  const [bets, setBets] = useState<Bet[]>([])\n  const { t } = useTranslation()\n  const orderedBets = orderBy(bets, ['round.epoch'], ['desc'])\n\n  useEffect(() => {\n    const fetchBetHistory = async () => {\n      setIsFetching(true)\n      try {\n        const response = await getBetHistory(\n          {\n            user: account.toLowerCase(),\n          },\n          numberOfBets,\n        )\n\n        setBets(response.map(transformBetResponse))\n      } finally {\n        setIsFetching(false)\n      }\n    }\n\n    fetchBetHistory()\n  }, [account, numberOfBets, setIsFetching, setBets])\n\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <Th>{t('Round')}</Th>\n          <Th>{t('Direction')}</Th>\n          <Th textAlign=\"right\">{t('Winnings (BNB)')}</Th>\n        </tr>\n      </thead>\n      <tbody>\n        {isFetching\n          ? times(numberOfBets).map((num) => (\n              <tr key={num}>\n                <Td>\n                  <Skeleton width=\"80px\" />\n                </Td>\n                <Td>\n                  <Skeleton width=\"60px\" height=\"32px\" />\n                </Td>\n                <Td>\n                  <Skeleton width=\"80px\" />\n                </Td>\n              </tr>\n            ))\n          : orderedBets.map((bet) => {\n              const isWinner = bet.position === bet.round.position\n\n              return (\n                <tr key={bet.id}>\n                  <Td textAlign=\"center\" fontWeight=\"bold\">\n                    {bet.round.epoch.toLocaleString()}\n                  </Td>\n                  <Td textAlign=\"center\">\n                    <PositionLabel position={bet.position} />\n                  </Td>\n                  <Td textAlign=\"right\">\n                    <NetWinnings\n                      amount={isWinner ? bet.claimedNetBNB : bet.amount}\n                      textPrefix={isWinner ? '+' : '-'}\n                      textColor={isWinner ? 'success' : 'failure'}\n                    />\n                  </Td>\n                </tr>\n              )\n            })}\n      </tbody>\n    </Table>\n  )\n}\n\nexport default PreviousBetsTable\n"]},"metadata":{},"sourceType":"module"}