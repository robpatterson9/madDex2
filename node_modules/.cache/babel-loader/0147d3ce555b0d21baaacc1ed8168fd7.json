{"ast":null,"code":"import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _excluded=[\"account\"];var _templateObject,_templateObject2,_templateObject3;import React,{useState}from'react';import{Box,CopyIcon,Flex,IconButton}from'@pancakeswap/uikit';import styled from'styled-components';import{useTranslation}from'contexts/Localization';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Wrapper=styled(Flex)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  background-color: \",\";\\n  border-radius: 16px;\\n  position: relative;\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.dropdown;});var Address=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  position: relative;\\n  padding-left: 16px;\\n\\n  & > input {\\n    background: transparent;\\n    border: 0;\\n    color: \",\";\\n    display: block;\\n    font-weight: 600;\\n    font-size: 16px;\\n    padding: 0;\\n    width: 100%;\\n\\n    &:focus {\\n      outline: 0;\\n    }\\n  }\\n\\n  &:after {\\n    background: linear-gradient(\\n      to right,\\n      \",\"00,\\n      \",\"E6\\n    );\\n    content: '';\\n    height: 100%;\\n    pointer-events: none;\\n    position: absolute;\\n    right: 0;\\n    top: 0;\\n    width: 40px;\\n  }\\n\"])),function(_ref2){var theme=_ref2.theme;return theme.colors.text;},function(_ref3){var theme=_ref3.theme;return theme.colors.background;},function(_ref4){var theme=_ref4.theme;return theme.colors.background;});var Tooltip=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: \",\";\\n  position: absolute;\\n  padding: 8px;\\n  top: -38px;\\n  right: 0;\\n  text-align: center;\\n  background-color: \",\";\\n  color: \",\";\\n  border-radius: 16px;\\n  opacity: 0.7;\\n  width: 100px;\\n\"])),function(_ref5){var isTooltipDisplayed=_ref5.isTooltipDisplayed;return isTooltipDisplayed?'inline-block':'none';},function(_ref6){var theme=_ref6.theme;return theme.colors.contrast;},function(_ref7){var theme=_ref7.theme;return theme.colors.invertedContrast;});var CopyAddress=function CopyAddress(_ref8){var account=_ref8.account,props=_objectWithoutProperties(_ref8,_excluded);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isTooltipDisplayed=_useState2[0],setIsTooltipDisplayed=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var copyAddress=function copyAddress(){if(navigator.clipboard&&navigator.permissions){navigator.clipboard.writeText(account).then(function(){return displayTooltip();});}else if(document.queryCommandSupported('copy')){var ele=document.createElement('textarea');ele.value=account;document.body.appendChild(ele);ele.select();document.execCommand('copy');document.body.removeChild(ele);displayTooltip();}};function displayTooltip(){setIsTooltipDisplayed(true);setTimeout(function(){setIsTooltipDisplayed(false);},1000);}return/*#__PURE__*/_jsxs(Box,_objectSpread(_objectSpread({position:\"relative\"},props),{},{children:[/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(Address,{title:account,children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",readOnly:true,value:account})}),/*#__PURE__*/_jsx(IconButton,{variant:\"text\",onClick:copyAddress,children:/*#__PURE__*/_jsx(CopyIcon,{color:\"primary\",width:\"24px\"})})]}),/*#__PURE__*/_jsx(Tooltip,{isTooltipDisplayed:isTooltipDisplayed,children:t('Copied')})]}));};export default CopyAddress;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/components/Menu/UserMenu/CopyAddress.tsx"],"names":["React","useState","Box","CopyIcon","Flex","IconButton","styled","useTranslation","Wrapper","theme","colors","dropdown","Address","div","text","background","Tooltip","isTooltipDisplayed","contrast","invertedContrast","CopyAddress","account","props","setIsTooltipDisplayed","t","copyAddress","navigator","clipboard","permissions","writeText","then","displayTooltip","document","queryCommandSupported","ele","createElement","value","body","appendChild","select","execCommand","removeChild","setTimeout"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyAddressProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    background: linear-gradient(\n      to right,\n      ${({ theme }) => theme.colors.background}00,\n      ${({ theme }) => theme.colors.background}E6\n    );\n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <IconButton variant=\"text\" onClick={copyAddress}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n"]},"metadata":{},"sourceType":"module"}