{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/RoundCard/EnteredTag.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CheckmarkCircleIcon, CheckmarkCircleFillIcon, Tag, useTooltip } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { formatBnbv2 } from '../../helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EnteredTag = ({\n  amount,\n  hasClaimed = false\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    targetRef,\n    tooltipVisible,\n    tooltip\n  } = useTooltip( /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      whiteSpace: 'nowrap'\n    },\n    children: `${formatBnbv2(amount)} BNB`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), {\n    placement: 'bottom'\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      ref: targetRef,\n      children: [/*#__PURE__*/_jsxDEV(Tag, {\n        variant: \"secondary\",\n        fontWeight: \"bold\",\n        textTransform: \"uppercase\",\n        outline: !hasClaimed,\n        startIcon: hasClaimed ? /*#__PURE__*/_jsxDEV(CheckmarkCircleFillIcon, {\n          width: \"18px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 35\n        }, this) : /*#__PURE__*/_jsxDEV(CheckmarkCircleIcon, {\n          width: \"18px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 78\n        }, this),\n        children: hasClaimed ? t('Claimed') : t('Entered')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), ' ', tooltipVisible && tooltip]\n  }, void 0, true);\n};\n\n_s(EnteredTag, \"dT7/5xuQD+c5fIpoRLpehDsm8gY=\", false, function () {\n  return [useTranslation, useTooltip];\n});\n\n_c = EnteredTag;\nexport default EnteredTag;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnteredTag\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/RoundCard/EnteredTag.tsx"],"names":["React","CheckmarkCircleIcon","CheckmarkCircleFillIcon","Tag","useTooltip","useTranslation","formatBnbv2","EnteredTag","amount","hasClaimed","t","targetRef","tooltipVisible","tooltip","whiteSpace","placement"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,mBAAT,EAA8BC,uBAA9B,EAAuDC,GAAvD,EAA4DC,UAA5D,QAA8E,oBAA9E;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,WAAT,QAA4B,eAA5B;;;;AAOA,MAAMC,UAAqC,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,UAAU,GAAG;AAAvB,CAAD,KAAoC;AAAA;;AAChF,QAAM;AAAEC,IAAAA;AAAF,MAAQL,cAAc,EAA5B;AACA,QAAM;AAAEM,IAAAA,SAAF;AAAaC,IAAAA,cAAb;AAA6BC,IAAAA;AAA7B,MAAyCT,UAAU,eACvD;AAAK,IAAA,KAAK,EAAE;AAAEU,MAAAA,UAAU,EAAE;AAAd,KAAZ;AAAA,cAAwC,GAAER,WAAW,CAACE,MAAD,CAAS;AAA9D;AAAA;AAAA;AAAA;AAAA,UADuD,EAEvD;AAAEO,IAAAA,SAAS,EAAE;AAAb,GAFuD,CAAzD;AAKA,sBACE;AAAA,4BACE;AAAM,MAAA,GAAG,EAAEJ,SAAX;AAAA,8BACE,QAAC,GAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,UAAU,EAAC,MAFb;AAGE,QAAA,aAAa,EAAC,WAHhB;AAIE,QAAA,OAAO,EAAE,CAACF,UAJZ;AAKE,QAAA,SAAS,EAAEA,UAAU,gBAAG,QAAC,uBAAD;AAAyB,UAAA,KAAK,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAA8C,QAAC,mBAAD;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBALrE;AAAA,kBAOGA,UAAU,GAAGC,CAAC,CAAC,SAAD,CAAJ,GAAkBA,CAAC,CAAC,SAAD;AAPhC;AAAA;AAAA;AAAA;AAAA,cADF,EASS,GATT;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAWU,GAXV,EAYGE,cAAc,IAAIC,OAZrB;AAAA,kBADF;AAgBD,CAvBD;;GAAMN,U;UACUF,c,EACiCD,U;;;KAF3CG,U;AAyBN,eAAeA,UAAf","sourcesContent":["import React from 'react'\nimport { ethers } from 'ethers'\nimport { CheckmarkCircleIcon, CheckmarkCircleFillIcon, Tag, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { formatBnbv2 } from '../../helpers'\n\ninterface EnteredTagProps {\n  amount?: ethers.BigNumber\n  hasClaimed?: boolean\n}\n\nconst EnteredTag: React.FC<EnteredTagProps> = ({ amount, hasClaimed = false }) => {\n  const { t } = useTranslation()\n  const { targetRef, tooltipVisible, tooltip } = useTooltip(\n    <div style={{ whiteSpace: 'nowrap' }}>{`${formatBnbv2(amount)} BNB`}</div>,\n    { placement: 'bottom' },\n  )\n\n  return (\n    <>\n      <span ref={targetRef}>\n        <Tag\n          variant=\"secondary\"\n          fontWeight=\"bold\"\n          textTransform=\"uppercase\"\n          outline={!hasClaimed}\n          startIcon={hasClaimed ? <CheckmarkCircleFillIcon width=\"18px\" /> : <CheckmarkCircleIcon width=\"18px\" />}\n        >\n          {hasClaimed ? t('Claimed') : t('Entered')}\n        </Tag>{' '}\n      </span>{' '}\n      {tooltipVisible && tooltip}\n    </>\n  )\n}\n\nexport default EnteredTag\n"]},"metadata":{},"sourceType":"module"}