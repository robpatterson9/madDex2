{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React,{useEffect,useState}from'react';import styled from'styled-components';import{Modal,Text,Flex,Image,Button,Slider,BalanceInput,AutoRenewIcon,Link,CalculateIcon,IconButton}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import useTheme from'hooks/useTheme';import useToast from'hooks/useToast';import BigNumber from'bignumber.js';import RoiCalculatorModal from'components/RoiCalculatorModal';import{getFullDisplayBalance,formatNumber,getDecimalAmount}from'utils/formatBalance';import{getInterestBreakdown}from'utils/compoundApyHelpers';import PercentageButton from'./PercentageButton';import useStakePool from'../../../hooks/useStakePool';import useUnstakePool from'../../../hooks/useUnstakePool';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledLink=styled(Link)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n\"])));var AnnualRoiContainer=styled(Flex)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  cursor: pointer;\\n\"])));var AnnualRoiDisplay=styled(Text)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  width: 72px;\\n  max-width: 72px;\\n  overflow: hidden;\\n  text-align: right;\\n  text-overflow: ellipsis;\\n\"])));var StakeModal=function StakeModal(_ref){var isBnbPool=_ref.isBnbPool,pool=_ref.pool,stakingTokenBalance=_ref.stakingTokenBalance,stakingTokenPrice=_ref.stakingTokenPrice,_ref$isRemovingStake=_ref.isRemovingStake,isRemovingStake=_ref$isRemovingStake===void 0?false:_ref$isRemovingStake,onDismiss=_ref.onDismiss;var sousId=pool.sousId,stakingToken=pool.stakingToken,earningTokenPrice=pool.earningTokenPrice,apr=pool.apr,userData=pool.userData,stakingLimit=pool.stakingLimit,earningToken=pool.earningToken;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useTheme=useTheme(),theme=_useTheme.theme;var _useStakePool=useStakePool(sousId,isBnbPool),onStake=_useStakePool.onStake;var _useUnstakePool=useUnstakePool(sousId,pool.enableEmergencyWithdraw),onUnstake=_useUnstakePool.onUnstake;var _useToast=useToast(),toastSuccess=_useToast.toastSuccess,toastError=_useToast.toastError;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pendingTx=_useState2[0],setPendingTx=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),stakeAmount=_useState4[0],setStakeAmount=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),hasReachedStakeLimit=_useState6[0],setHasReachedStakedLimit=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),percent=_useState8[0],setPercent=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),showRoiCalculator=_useState10[0],setShowRoiCalculator=_useState10[1];var getCalculatedStakingLimit=function getCalculatedStakingLimit(){if(isRemovingStake){return userData.stakedBalance;}return stakingLimit.gt(0)&&stakingTokenBalance.gt(stakingLimit)?stakingLimit:stakingTokenBalance;};var fullDecimalStakeAmount=getDecimalAmount(new BigNumber(stakeAmount),stakingToken.decimals);var userNotEnoughToken=isRemovingStake?userData.stakedBalance.lt(fullDecimalStakeAmount):userData.stakingTokenBalance.lt(fullDecimalStakeAmount);var usdValueStaked=new BigNumber(stakeAmount).times(stakingTokenPrice);var formattedUsdValueStaked=!usdValueStaked.isNaN()&&formatNumber(usdValueStaked.toNumber());var interestBreakdown=getInterestBreakdown({principalInUSD:!usdValueStaked.isNaN()?usdValueStaked.toNumber():0,apr:apr,earningTokenPrice:earningTokenPrice});var annualRoi=interestBreakdown[3]*pool.earningTokenPrice;var formattedAnnualRoi=formatNumber(annualRoi,annualRoi>10000?0:2,annualRoi>10000?0:2);var getTokenLink=stakingToken.address?\"/swap?outputCurrency=\".concat(stakingToken.address):'/swap';useEffect(function(){if(stakingLimit.gt(0)&&!isRemovingStake){setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit));}},[stakeAmount,stakingLimit,userData,stakingToken,isRemovingStake,setHasReachedStakedLimit,fullDecimalStakeAmount]);var handleStakeInputChange=function handleStakeInputChange(input){if(input){var convertedInput=getDecimalAmount(new BigNumber(input),stakingToken.decimals);var percentage=Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber());setPercent(Math.min(percentage,100));}else{setPercent(0);}setStakeAmount(input);};var handleChangePercent=function handleChangePercent(sliderPercent){if(sliderPercent>0){var percentageOfStakingMax=getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent);var amountToStake=getFullDisplayBalance(percentageOfStakingMax,stakingToken.decimals,stakingToken.decimals);setStakeAmount(amountToStake);}else{setStakeAmount('');}setPercent(sliderPercent);};var handleConfirmClick=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setPendingTx(true);_context.prev=1;if(!isRemovingStake){_context.next=8;break;}_context.next=5;return onUnstake(stakeAmount,stakingToken.decimals);case 5:toastSuccess(\"\".concat(t('Unstaked'),\"!\"),t('Your %symbol% earnings have also been harvested to your wallet!',{symbol:earningToken.symbol}));_context.next=11;break;case 8:_context.next=10;return onStake(stakeAmount,stakingToken.decimals);case 10:toastSuccess(\"\".concat(t('Staked'),\"!\"),t('Your %symbol% funds have been staked in the pool!',{symbol:stakingToken.symbol}));case 11:setPendingTx(false);onDismiss();_context.next=19;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](1);toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));setPendingTx(false);case 19:case\"end\":return _context.stop();}}},_callee,null,[[1,15]]);}));return function handleConfirmClick(){return _ref2.apply(this,arguments);};}();if(showRoiCalculator){return/*#__PURE__*/_jsx(RoiCalculatorModal,{earningTokenPrice:earningTokenPrice,stakingTokenPrice:stakingTokenPrice,apr:apr,linkLabel:t('Get %symbol%',{symbol:stakingToken.symbol}),linkHref:getTokenLink,stakingTokenBalance:userData.stakedBalance.plus(stakingTokenBalance),stakingTokenSymbol:stakingToken.symbol,earningTokenSymbol:earningToken.symbol,onBack:function onBack(){return setShowRoiCalculator(false);},initialValue:stakeAmount});}return/*#__PURE__*/_jsxs(Modal,{minWidth:\"346px\",title:isRemovingStake?t('Unstake'):t('Stake in Pool'),onDismiss:onDismiss,headerBackground:theme.colors.gradients.cardHeader,children:[stakingLimit.gt(0)&&!isRemovingStake&&/*#__PURE__*/_jsx(Text,{color:\"secondary\",bold:true,mb:\"24px\",style:{textAlign:'center'},fontSize:\"16px\",children:t('Max stake for this pool: %amount% %token%',{amount:getFullDisplayBalance(stakingLimit,stakingToken.decimals,0),token:stakingToken.symbol})}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",mb:\"8px\",children:[/*#__PURE__*/_jsxs(Text,{bold:true,children:[isRemovingStake?t('Unstake'):t('Stake'),\":\"]}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",minWidth:\"70px\",children:[/*#__PURE__*/_jsx(Image,{src:\"/images/tokens/\".concat(stakingToken.address,\".png\"),width:24,height:24,alt:stakingToken.symbol}),/*#__PURE__*/_jsx(Text,{ml:\"4px\",bold:true,children:stakingToken.symbol})]})]}),/*#__PURE__*/_jsx(BalanceInput,{value:stakeAmount,onUserInput:handleStakeInputChange,currencyValue:stakingTokenPrice!==0&&\"~\".concat(formattedUsdValueStaked||0,\" USD\"),isWarning:hasReachedStakeLimit||userNotEnoughToken,decimals:stakingToken.decimals}),hasReachedStakeLimit&&/*#__PURE__*/_jsx(Text,{color:\"failure\",fontSize:\"12px\",style:{textAlign:'right'},mt:\"4px\",children:t('Maximum total stake: %amount% %token%',{amount:getFullDisplayBalance(new BigNumber(stakingLimit),stakingToken.decimals,0),token:stakingToken.symbol})}),userNotEnoughToken&&/*#__PURE__*/_jsx(Text,{color:\"failure\",fontSize:\"12px\",style:{textAlign:'right'},mt:\"4px\",children:t('Insufficient %symbol% balance',{symbol:stakingToken.symbol})}),/*#__PURE__*/_jsx(Text,{ml:\"auto\",color:\"textSubtle\",fontSize:\"12px\",mb:\"8px\",children:t('Balance: %balance%',{balance:getFullDisplayBalance(getCalculatedStakingLimit(),stakingToken.decimals)})}),/*#__PURE__*/_jsx(Slider,{min:0,max:100,value:percent,onValueChanged:handleChangePercent,name:\"stake\",valueLabel:\"\".concat(percent,\"%\"),step:1}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",mt:\"8px\",children:[/*#__PURE__*/_jsx(PercentageButton,{onClick:function onClick(){return handleChangePercent(25);},children:\"25%\"}),/*#__PURE__*/_jsx(PercentageButton,{onClick:function onClick(){return handleChangePercent(50);},children:\"50%\"}),/*#__PURE__*/_jsx(PercentageButton,{onClick:function onClick(){return handleChangePercent(75);},children:\"75%\"}),/*#__PURE__*/_jsx(PercentageButton,{onClick:function onClick(){return handleChangePercent(100);},children:t('Max')})]}),!isRemovingStake&&/*#__PURE__*/_jsxs(Flex,{mt:\"24px\",alignItems:\"center\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Text,{mr:\"8px\",color:\"textSubtle\",children:[t('Annual ROI at current rates'),\":\"]}),/*#__PURE__*/_jsxs(AnnualRoiContainer,{alignItems:\"center\",onClick:function onClick(){return setShowRoiCalculator(true);},children:[/*#__PURE__*/_jsxs(AnnualRoiDisplay,{children:[\"$\",formattedAnnualRoi]}),/*#__PURE__*/_jsx(IconButton,{variant:\"text\",scale:\"sm\",children:/*#__PURE__*/_jsx(CalculateIcon,{color:\"textSubtle\",width:\"18px\"})})]})]}),/*#__PURE__*/_jsx(Button,{isLoading:pendingTx,endIcon:pendingTx?/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,color:\"currentColor\"}):null,onClick:handleConfirmClick,disabled:!stakeAmount||parseFloat(stakeAmount)===0||hasReachedStakeLimit||userNotEnoughToken,mt:\"24px\",children:pendingTx?t('Confirming'):t('Confirm')}),!isRemovingStake&&/*#__PURE__*/_jsx(StyledLink,{external:true,href:getTokenLink,children:/*#__PURE__*/_jsx(Button,{width:\"100%\",mt:\"8px\",variant:\"secondary\",children:t('Get %symbol%',{symbol:stakingToken.symbol})})})]});};export default StakeModal;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Pools/components/PoolCard/Modals/StakeModal.tsx"],"names":["React","useEffect","useState","styled","Modal","Text","Flex","Image","Button","Slider","BalanceInput","AutoRenewIcon","Link","CalculateIcon","IconButton","useTranslation","useTheme","useToast","BigNumber","RoiCalculatorModal","getFullDisplayBalance","formatNumber","getDecimalAmount","getInterestBreakdown","PercentageButton","useStakePool","useUnstakePool","StyledLink","AnnualRoiContainer","AnnualRoiDisplay","StakeModal","isBnbPool","pool","stakingTokenBalance","stakingTokenPrice","isRemovingStake","onDismiss","sousId","stakingToken","earningTokenPrice","apr","userData","stakingLimit","earningToken","t","theme","onStake","enableEmergencyWithdraw","onUnstake","toastSuccess","toastError","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","showRoiCalculator","setShowRoiCalculator","getCalculatedStakingLimit","stakedBalance","gt","fullDecimalStakeAmount","decimals","userNotEnoughToken","lt","usdValueStaked","times","formattedUsdValueStaked","isNaN","toNumber","interestBreakdown","principalInUSD","annualRoi","formattedAnnualRoi","getTokenLink","address","plus","handleStakeInputChange","input","convertedInput","percentage","Math","floor","dividedBy","multipliedBy","min","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","symbol","colors","gradients","cardHeader","textAlign","amount","token","balance","parseFloat"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  Link,\n  CalculateIcon,\n  IconButton,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, earningTokenPrice, apr, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n  const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n  const userNotEnoughToken = isRemovingStake\n    ? userData.stakedBalance.lt(fullDecimalStakeAmount)\n    : userData.stakingTokenBalance.lt(fullDecimalStakeAmount)\n\n  const usdValueStaked = new BigNumber(stakeAmount).times(stakingTokenPrice)\n  const formattedUsdValueStaked = !usdValueStaked.isNaN() && formatNumber(usdValueStaked.toNumber())\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [\n    stakeAmount,\n    stakingLimit,\n    userData,\n    stakingToken,\n    isRemovingStake,\n    setHasReachedStakedLimit,\n    fullDecimalStakeAmount,\n  ])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      if (isRemovingStake) {\n        // unstaking\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n      } else {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n      }\n      setPendingTx(false)\n      onDismiss()\n    } catch (e) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={userData.stakedBalance.plus(stakingTokenBalance)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      minWidth=\"346px\"\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.address}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${formattedUsdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit || userNotEnoughToken}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      {userNotEnoughToken && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Insufficient %symbol% balance', {\n            symbol: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit || userNotEnoughToken}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={getTokenLink}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n"]},"metadata":{},"sourceType":"module"}