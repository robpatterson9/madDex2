{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import{useBlocksFromTimestamps}from'views/Info/hooks/useBlocksFromTimestamps';import{getDeltaTimestamps}from'views/Info/utils/infoQueryHelpers';import{useState,useEffect}from'react';import{request,gql}from'graphql-request';import{INFO_CLIENT}from'config/constants/endpoints';var BNB_PRICES=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  query prices($block24: Int!, $block48: Int!, $blockWeek: Int!) {\\n    current: bundle(id: \\\"1\\\") {\\n      bnbPrice\\n    }\\n    oneDay: bundle(id: \\\"1\\\", block: { number: $block24 }) {\\n      bnbPrice\\n    }\\n    twoDay: bundle(id: \\\"1\\\", block: { number: $block48 }) {\\n      bnbPrice\\n    }\\n    oneWeek: bundle(id: \\\"1\\\", block: { number: $blockWeek }) {\\n      bnbPrice\\n    }\\n  }\\n\"])));var fetchBnbPrices=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(block24,block48,blockWeek){var _data$current$bnbPric,_data$current,_data$oneDay$bnbPrice,_data$oneDay,_data$twoDay$bnbPrice,_data$twoDay,_data$oneWeek$bnbPric,_data$oneWeek,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return request(INFO_CLIENT,BNB_PRICES,{block24:block24,block48:block48,blockWeek:blockWeek});case 3:data=_context.sent;return _context.abrupt(\"return\",{error:false,bnbPrices:{current:parseFloat((_data$current$bnbPric=(_data$current=data.current)===null||_data$current===void 0?void 0:_data$current.bnbPrice)!==null&&_data$current$bnbPric!==void 0?_data$current$bnbPric:'0'),oneDay:parseFloat((_data$oneDay$bnbPrice=(_data$oneDay=data.oneDay)===null||_data$oneDay===void 0?void 0:_data$oneDay.bnbPrice)!==null&&_data$oneDay$bnbPrice!==void 0?_data$oneDay$bnbPrice:'0'),twoDay:parseFloat((_data$twoDay$bnbPrice=(_data$twoDay=data.twoDay)===null||_data$twoDay===void 0?void 0:_data$twoDay.bnbPrice)!==null&&_data$twoDay$bnbPrice!==void 0?_data$twoDay$bnbPrice:'0'),week:parseFloat((_data$oneWeek$bnbPric=(_data$oneWeek=data.oneWeek)===null||_data$oneWeek===void 0?void 0:_data$oneWeek.bnbPrice)!==null&&_data$oneWeek$bnbPric!==void 0?_data$oneWeek$bnbPric:'0')}});case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.error('Failed to fetch BNB prices',_context.t0);return _context.abrupt(\"return\",{error:true,bnbPrices:undefined});case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function fetchBnbPrices(_x,_x2,_x3){return _ref.apply(this,arguments);};}();/**\n * Returns BNB prices at current, 24h, 48h, and 7d intervals\n */export var useBnbPrices=function useBnbPrices(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),prices=_useState2[0],setPrices=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _getDeltaTimestamps=getDeltaTimestamps(),_getDeltaTimestamps2=_slicedToArray(_getDeltaTimestamps,3),t24=_getDeltaTimestamps2[0],t48=_getDeltaTimestamps2[1],tWeek=_getDeltaTimestamps2[2];var _useBlocksFromTimesta=useBlocksFromTimestamps([t24,t48,tWeek]),blocks=_useBlocksFromTimesta.blocks,blockError=_useBlocksFromTimesta.error;useEffect(function(){var fetch=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _blocks,block24,block48,blockWeek,_yield$fetchBnbPrices,bnbPrices,fetchError;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_blocks=_slicedToArray(blocks,3),block24=_blocks[0],block48=_blocks[1],blockWeek=_blocks[2];_context2.next=3;return fetchBnbPrices(block24.number,block48.number,blockWeek.number);case 3:_yield$fetchBnbPrices=_context2.sent;bnbPrices=_yield$fetchBnbPrices.bnbPrices;fetchError=_yield$fetchBnbPrices.error;if(fetchError){setError(true);}else{setPrices(bnbPrices);}case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function fetch(){return _ref2.apply(this,arguments);};}();if(!prices&&!error&&blocks&&!blockError){fetch();}},[error,prices,blocks,blockError]);return prices;};","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Info/hooks/useBnbPrices.ts"],"names":["useBlocksFromTimestamps","getDeltaTimestamps","useState","useEffect","request","gql","INFO_CLIENT","BNB_PRICES","fetchBnbPrices","block24","block48","blockWeek","data","error","bnbPrices","current","parseFloat","bnbPrice","oneDay","twoDay","week","oneWeek","console","undefined","useBnbPrices","prices","setPrices","setError","t24","t48","tWeek","blocks","blockError","fetch","number","fetchError"],"mappings":"ioBAAA,OAASA,uBAAT,KAAwC,0CAAxC,CACA,OAASC,kBAAT,KAAmC,mCAAnC,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,OAAT,CAAkBC,GAAlB,KAA6B,iBAA7B,CACA,OAASC,WAAT,KAA4B,4BAA5B,CASA,GAAMC,CAAAA,UAAU,CAAGF,GAAH,ucAAhB,CAgCA,GAAMG,CAAAA,cAAc,0FAAG,iBACrBC,OADqB,CAErBC,OAFqB,CAGrBC,SAHqB,+SAMAP,CAAAA,OAAO,CAAiBE,WAAjB,CAA8BC,UAA9B,CAA0C,CAClEE,OAAO,CAAPA,OADkE,CAElEC,OAAO,CAAPA,OAFkE,CAGlEC,SAAS,CAATA,SAHkE,CAA1C,CANP,QAMbC,IANa,+CAWZ,CACLC,KAAK,CAAE,KADF,CAELC,SAAS,CAAE,CACTC,OAAO,CAAEC,UAAU,uCAACJ,IAAI,CAACG,OAAN,wCAAC,cAAcE,QAAf,+DAA2B,GAA3B,CADV,CAETC,MAAM,CAAEF,UAAU,sCAACJ,IAAI,CAACM,MAAN,uCAAC,aAAaD,QAAd,+DAA0B,GAA1B,CAFT,CAGTE,MAAM,CAAEH,UAAU,sCAACJ,IAAI,CAACO,MAAN,uCAAC,aAAaF,QAAd,+DAA0B,GAA1B,CAHT,CAITG,IAAI,CAAEJ,UAAU,uCAACJ,IAAI,CAACS,OAAN,wCAAC,cAAcJ,QAAf,+DAA2B,GAA3B,CAJP,CAFN,CAXY,0DAqBnBK,OAAO,CAACT,KAAR,CAAc,4BAAd,cArBmB,gCAsBZ,CACLA,KAAK,CAAE,IADF,CAELC,SAAS,CAAES,SAFN,CAtBY,sEAAH,kBAAdf,CAAAA,cAAc,oDAApB,CA6BA;AACA;AACA,GACA,MAAO,IAAMgB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAA6B,CACvD,cAA4BtB,QAAQ,EAApC,wCAAOuB,MAAP,eAAeC,SAAf,eACA,eAA0BxB,QAAQ,CAAC,KAAD,CAAlC,yCAAOW,KAAP,eAAcc,QAAd,eAEA,wBAA0B1B,kBAAkB,EAA5C,4DAAO2B,GAAP,yBAAYC,GAAZ,yBAAiBC,KAAjB,yBACA,0BAAsC9B,uBAAuB,CAAC,CAAC4B,GAAD,CAAMC,GAAN,CAAWC,KAAX,CAAD,CAA7D,CAAQC,MAAR,uBAAQA,MAAR,CAAuBC,UAAvB,uBAAgBnB,KAAhB,CAEAV,SAAS,CAAC,UAAM,CACd,GAAM8B,CAAAA,KAAK,2FAAG,gPAC0BF,MAD1B,IACLtB,OADK,YACIC,OADJ,YACaC,SADb,mCAEmCH,CAAAA,cAAc,CAACC,OAAO,CAACyB,MAAT,CAAiBxB,OAAO,CAACwB,MAAzB,CAAiCvB,SAAS,CAACuB,MAA3C,CAFjD,6CAEJpB,SAFI,uBAEJA,SAFI,CAEcqB,UAFd,uBAEOtB,KAFP,CAGZ,GAAIsB,UAAJ,CAAgB,CACdR,QAAQ,CAAC,IAAD,CAAR,CACD,CAFD,IAEO,CACLD,SAAS,CAACZ,SAAD,CAAT,CACD,CAPW,wDAAH,kBAALmB,CAAAA,KAAK,2CAAX,CASA,GAAI,CAACR,MAAD,EAAW,CAACZ,KAAZ,EAAqBkB,MAArB,EAA+B,CAACC,UAApC,CAAgD,CAC9CC,KAAK,GACN,CACF,CAbQ,CAaN,CAACpB,KAAD,CAAQY,MAAR,CAAgBM,MAAhB,CAAwBC,UAAxB,CAbM,CAAT,CAeA,MAAOP,CAAAA,MAAP,CACD,CAvBM","sourcesContent":["import { useBlocksFromTimestamps } from 'views/Info/hooks/useBlocksFromTimestamps'\nimport { getDeltaTimestamps } from 'views/Info/utils/infoQueryHelpers'\nimport { useState, useEffect } from 'react'\nimport { request, gql } from 'graphql-request'\nimport { INFO_CLIENT } from 'config/constants/endpoints'\n\nexport interface BnbPrices {\n  current: number\n  oneDay: number\n  twoDay: number\n  week: number\n}\n\nconst BNB_PRICES = gql`\n  query prices($block24: Int!, $block48: Int!, $blockWeek: Int!) {\n    current: bundle(id: \"1\") {\n      bnbPrice\n    }\n    oneDay: bundle(id: \"1\", block: { number: $block24 }) {\n      bnbPrice\n    }\n    twoDay: bundle(id: \"1\", block: { number: $block48 }) {\n      bnbPrice\n    }\n    oneWeek: bundle(id: \"1\", block: { number: $blockWeek }) {\n      bnbPrice\n    }\n  }\n`\n\ninterface PricesResponse {\n  current: {\n    bnbPrice: string\n  }\n  oneDay: {\n    bnbPrice: string\n  }\n  twoDay: {\n    bnbPrice: string\n  }\n  oneWeek: {\n    bnbPrice: string\n  }\n}\n\nconst fetchBnbPrices = async (\n  block24: number,\n  block48: number,\n  blockWeek: number,\n): Promise<{ bnbPrices: BnbPrices | undefined; error: boolean }> => {\n  try {\n    const data = await request<PricesResponse>(INFO_CLIENT, BNB_PRICES, {\n      block24,\n      block48,\n      blockWeek,\n    })\n    return {\n      error: false,\n      bnbPrices: {\n        current: parseFloat(data.current?.bnbPrice ?? '0'),\n        oneDay: parseFloat(data.oneDay?.bnbPrice ?? '0'),\n        twoDay: parseFloat(data.twoDay?.bnbPrice ?? '0'),\n        week: parseFloat(data.oneWeek?.bnbPrice ?? '0'),\n      },\n    }\n  } catch (error) {\n    console.error('Failed to fetch BNB prices', error)\n    return {\n      error: true,\n      bnbPrices: undefined,\n    }\n  }\n}\n\n/**\n * Returns BNB prices at current, 24h, 48h, and 7d intervals\n */\nexport const useBnbPrices = (): BnbPrices | undefined => {\n  const [prices, setPrices] = useState<BnbPrices | undefined>()\n  const [error, setError] = useState(false)\n\n  const [t24, t48, tWeek] = getDeltaTimestamps()\n  const { blocks, error: blockError } = useBlocksFromTimestamps([t24, t48, tWeek])\n\n  useEffect(() => {\n    const fetch = async () => {\n      const [block24, block48, blockWeek] = blocks\n      const { bnbPrices, error: fetchError } = await fetchBnbPrices(block24.number, block48.number, blockWeek.number)\n      if (fetchError) {\n        setError(true)\n      } else {\n        setPrices(bnbPrices)\n      }\n    }\n    if (!prices && !error && blocks && !blockError) {\n      fetch()\n    }\n  }, [error, prices, blocks, blockError])\n\n  return prices\n}\n"]},"metadata":{},"sourceType":"module"}