{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useMemo,useEffect}from'react';import{Text,Heading,Card}from'@pancakeswap/uikit';import Page from'components/Layout/Page';import TokenTable from'views/Info/components/InfoTables/TokensTable';import{useAllTokenData,useTokenDatas}from'state/info/hooks';import{useWatchlistTokens}from'state/user/hooks';import{useTranslation}from'contexts/Localization';import TopTokenMovers from'views/Info/components/TopTokenMovers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TokensOverview=function TokensOverview(){var _useTranslation=useTranslation(),t=_useTranslation.t;useEffect(function(){window.scrollTo(0,0);},[]);var allTokens=useAllTokenData();var formattedTokens=useMemo(function(){return Object.values(allTokens).map(function(token){return token.data;}).filter(function(token){return token;});},[allTokens]);var _useWatchlistTokens=useWatchlistTokens(),_useWatchlistTokens2=_slicedToArray(_useWatchlistTokens,1),savedTokens=_useWatchlistTokens2[0];var watchListTokens=useTokenDatas(savedTokens);return/*#__PURE__*/_jsxs(Page,{children:[/*#__PURE__*/_jsx(Heading,{scale:\"lg\",mb:\"16px\",children:t('Your Watchlist')}),savedTokens.length>0?/*#__PURE__*/_jsx(TokenTable,{tokenDatas:watchListTokens}):/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Text,{py:\"16px\",px:\"24px\",children:t('Saved tokens will appear here')})}),/*#__PURE__*/_jsx(TopTokenMovers,{}),/*#__PURE__*/_jsx(Heading,{scale:\"lg\",mt:\"40px\",mb:\"16px\",id:\"info-tokens-title\",children:t('All Tokens')}),/*#__PURE__*/_jsx(TokenTable,{tokenDatas:formattedTokens})]});};export default TokensOverview;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Info/Tokens/index.tsx"],"names":["React","useMemo","useEffect","Text","Heading","Card","Page","TokenTable","useAllTokenData","useTokenDatas","useWatchlistTokens","useTranslation","TopTokenMovers","TokensOverview","t","window","scrollTo","allTokens","formattedTokens","Object","values","map","token","data","filter","savedTokens","watchListTokens","length"],"mappings":"wJAAA,MAAOA,CAAAA,KAAP,EAAgBC,OAAhB,CAAyBC,SAAzB,KAA0C,OAA1C,CACA,OAASC,IAAT,CAAeC,OAAf,CAAwBC,IAAxB,KAAoC,oBAApC,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8CAAvB,CACA,OAASC,eAAT,CAA0BC,aAA1B,KAA+C,kBAA/C,CACA,OAASC,kBAAT,KAAmC,kBAAnC,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,C,wFAEA,GAAMC,CAAAA,cAAwB,CAAG,QAA3BA,CAAAA,cAA2B,EAAM,CACrC,oBAAcF,cAAc,EAA5B,CAAQG,CAAR,iBAAQA,CAAR,CACAZ,SAAS,CAAC,UAAM,CACda,MAAM,CAACC,QAAP,CAAgB,CAAhB,CAAmB,CAAnB,EACD,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMC,CAAAA,SAAS,CAAGT,eAAe,EAAjC,CAEA,GAAMU,CAAAA,eAAe,CAAGjB,OAAO,CAAC,UAAM,CACpC,MAAOkB,CAAAA,MAAM,CAACC,MAAP,CAAcH,SAAd,EACJI,GADI,CACA,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAjB,EADA,EAEJC,MAFI,CAEG,SAACF,KAAD,QAAWA,CAAAA,KAAX,EAFH,CAAP,CAGD,CAJ8B,CAI5B,CAACL,SAAD,CAJ4B,CAA/B,CAMA,wBAAsBP,kBAAkB,EAAxC,4DAAOe,WAAP,yBACA,GAAMC,CAAAA,eAAe,CAAGjB,aAAa,CAACgB,WAAD,CAArC,CAEA,mBACE,MAAC,IAAD,yBACE,KAAC,OAAD,EAAS,KAAK,CAAC,IAAf,CAAoB,EAAE,CAAC,MAAvB,UACGX,CAAC,CAAC,gBAAD,CADJ,EADF,CAIGW,WAAW,CAACE,MAAZ,CAAqB,CAArB,cACC,KAAC,UAAD,EAAY,UAAU,CAAED,eAAxB,EADD,cAGC,KAAC,IAAD,wBACE,KAAC,IAAD,EAAM,EAAE,CAAC,MAAT,CAAgB,EAAE,CAAC,MAAnB,UACGZ,CAAC,CAAC,+BAAD,CADJ,EADF,EAPJ,cAaE,KAAC,cAAD,IAbF,cAcE,KAAC,OAAD,EAAS,KAAK,CAAC,IAAf,CAAoB,EAAE,CAAC,MAAvB,CAA8B,EAAE,CAAC,MAAjC,CAAwC,EAAE,CAAC,mBAA3C,UACGA,CAAC,CAAC,YAAD,CADJ,EAdF,cAiBE,KAAC,UAAD,EAAY,UAAU,CAAEI,eAAxB,EAjBF,GADF,CAqBD,CAtCD,CAwCA,cAAeL,CAAAA,cAAf","sourcesContent":["import React, { useMemo, useEffect } from 'react'\nimport { Text, Heading, Card } from '@pancakeswap/uikit'\nimport Page from 'components/Layout/Page'\nimport TokenTable from 'views/Info/components/InfoTables/TokensTable'\nimport { useAllTokenData, useTokenDatas } from 'state/info/hooks'\nimport { useWatchlistTokens } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport TopTokenMovers from 'views/Info/components/TopTokenMovers'\n\nconst TokensOverview: React.FC = () => {\n  const { t } = useTranslation()\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const allTokens = useAllTokenData()\n\n  const formattedTokens = useMemo(() => {\n    return Object.values(allTokens)\n      .map((token) => token.data)\n      .filter((token) => token)\n  }, [allTokens])\n\n  const [savedTokens] = useWatchlistTokens()\n  const watchListTokens = useTokenDatas(savedTokens)\n\n  return (\n    <Page>\n      <Heading scale=\"lg\" mb=\"16px\">\n        {t('Your Watchlist')}\n      </Heading>\n      {savedTokens.length > 0 ? (\n        <TokenTable tokenDatas={watchListTokens} />\n      ) : (\n        <Card>\n          <Text py=\"16px\" px=\"24px\">\n            {t('Saved tokens will appear here')}\n          </Text>\n        </Card>\n      )}\n      <TopTokenMovers />\n      <Heading scale=\"lg\" mt=\"40px\" mb=\"16px\" id=\"info-tokens-title\">\n        {t('All Tokens')}\n      </Heading>\n      <TokenTable tokenDatas={formattedTokens} />\n    </Page>\n  )\n}\n\nexport default TokensOverview\n"]},"metadata":{},"sourceType":"module"}