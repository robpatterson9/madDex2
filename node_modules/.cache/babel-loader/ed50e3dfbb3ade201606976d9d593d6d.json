{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Nft/market/components/BuySellModals/SellModal/SetPriceStage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { Flex, Grid, Box, Text, Button, BinanceIcon, ErrorIcon, useTooltip } from '@pancakeswap/uikit';\nimport { multiplyPriceByAmount } from 'utils/prices';\nimport { useBNBBusdPrice } from 'hooks/useBUSDPrice';\nimport { useTranslation } from 'contexts/Localization';\nimport { useGetCollection } from 'state/nftMarket/hooks';\nimport { Divider } from '../shared/styles';\nimport { GreyedOutContainer, BnbAmountCell, RightAlignedInput, FeeAmountCell } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MIN_PRICE = 0.005;\nconst MAX_PRICE = 10000; // Stage where user puts price for NFT they're about to put on sale\n// Also shown when user wants to adjust the price of already listed NFT\n\nconst SetPriceStage = ({\n  nftToSell,\n  variant,\n  lowestPrice,\n  currentPrice,\n  price,\n  setPrice,\n  continueToNextStage\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const inputRef = useRef();\n  const adjustedPriceIsTheSame = variant === 'adjust' && parseFloat(currentPrice) === parseFloat(price);\n  const priceIsValid = !price || Number.isNaN(parseFloat(price)) || parseFloat(price) <= 0;\n  const {\n    creatorFee,\n    tradingFee\n  } = useGetCollection(nftToSell.collectionAddress);\n  const creatorFeeAsNumber = parseFloat(creatorFee);\n  const tradingFeeAsNumber = parseFloat(tradingFee);\n  const bnbPrice = useBNBBusdPrice();\n  const priceAsFloat = parseFloat(price);\n  const priceInUsd = multiplyPriceByAmount(bnbPrice, priceAsFloat);\n  const priceIsOutOfRange = priceAsFloat > MAX_PRICE || priceAsFloat < MIN_PRICE;\n  const {\n    tooltip,\n    tooltipVisible,\n    targetRef\n  } = useTooltip( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      children: t('When selling NFTs from this collection, a portion of the BNB paid will be diverted before reaching the seller:')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), creatorFeeAsNumber > 0 && /*#__PURE__*/_jsxDEV(Text, {\n      children: t('%percentage%% royalties to the collection owner', {\n        percentage: creatorFee\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: t('%percentage%% trading fee will be used to buy & burn CAKE', {\n        percentage: tradingFee\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true), {\n    placement: 'auto'\n  });\n  useEffect(() => {\n    if (inputRef && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [inputRef]);\n\n  const getButtonText = () => {\n    if (variant === 'adjust') {\n      if (adjustedPriceIsTheSame || priceIsValid) {\n        return t('Input New Sale Price');\n      }\n\n      return t('Confirm');\n    }\n\n    return t('Enable Listing');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"24px\",\n      bold: true,\n      p: \"16px\",\n      children: variant === 'set' ? t('Set Price') : t('Adjust Sale Price')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GreyedOutContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"12px\",\n        color: \"secondary\",\n        textTransform: \"uppercase\",\n        bold: true,\n        children: t('Set Price')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          flex: \"1\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(BinanceIcon, {\n            width: 24,\n            height: 24,\n            mr: \"4px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            children: \"WBNB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          flex: \"2\",\n          children: /*#__PURE__*/_jsxDEV(RightAlignedInput, {\n            scale: \"sm\",\n            type: \"number\",\n            inputMode: \"decimal\",\n            value: price,\n            ref: inputRef,\n            isWarning: priceIsOutOfRange,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        height: \"21px\",\n        justifyContent: \"flex-end\",\n        children: !Number.isNaN(priceInUsd) && /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"12px\",\n          color: \"textSubtle\",\n          children: `$${priceInUsd.toLocaleString(undefined, {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n          })}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), priceIsOutOfRange && /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"12px\",\n        color: \"failure\",\n        children: t('Allowed price range is between %minPrice% and %maxPrice% WBNB', {\n          minPrice: MIN_PRICE,\n          maxPrice: MAX_PRICE\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        mt: \"8px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          color: \"textSubtle\",\n          mr: \"8px\",\n          children: t('Seller pays %percentage%% platform fee on sale', {\n            percentage: creatorFeeAsNumber + tradingFeeAsNumber\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          ref: targetRef,\n          children: /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), tooltipVisible && tooltip]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        mt: \"16px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          color: \"textSubtle\",\n          children: t('Platform fee if sold')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FeeAmountCell, {\n          bnbAmount: priceAsFloat,\n          creatorFee: creatorFeeAsNumber,\n          tradingFee: tradingFeeAsNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        mt: \"16px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          color: \"textSubtle\",\n          children: t('Lowest price on market')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BnbAmountCell, {\n          bnbAmount: lowestPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      gridTemplateColumns: \"32px 1fr\",\n      p: \"16px\",\n      maxWidth: \"360px\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        alignSelf: \"flex-start\",\n        children: /*#__PURE__*/_jsxDEV(ErrorIcon, {\n          width: 24,\n          height: 24,\n          color: \"textSubtle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          color: \"textSubtle\",\n          children: t('The NFT will be removed from your wallet and put on sale at this price.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          small: true,\n          color: \"textSubtle\",\n          children: t('Sales are in WBNB. You can swap WBNB to BNB 1:1 for free with PancakeSwap.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      px: \"16px\",\n      pb: \"16px\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        mb: \"8px\",\n        onClick: continueToNextStage,\n        disabled: priceIsValid || adjustedPriceIsTheSame || priceIsOutOfRange,\n        children: getButtonText()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SetPriceStage, \"a3loZBY0Pk8DhH7YfbNbTNua5nI=\", false, function () {\n  return [useTranslation, useGetCollection, useBNBBusdPrice, useTooltip];\n});\n\n_c = SetPriceStage;\nexport default SetPriceStage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetPriceStage\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/components/BuySellModals/SellModal/SetPriceStage.tsx"],"names":["React","useEffect","useRef","Flex","Grid","Box","Text","Button","BinanceIcon","ErrorIcon","useTooltip","multiplyPriceByAmount","useBNBBusdPrice","useTranslation","useGetCollection","Divider","GreyedOutContainer","BnbAmountCell","RightAlignedInput","FeeAmountCell","MIN_PRICE","MAX_PRICE","SetPriceStage","nftToSell","variant","lowestPrice","currentPrice","price","setPrice","continueToNextStage","t","inputRef","adjustedPriceIsTheSame","parseFloat","priceIsValid","Number","isNaN","creatorFee","tradingFee","collectionAddress","creatorFeeAsNumber","tradingFeeAsNumber","bnbPrice","priceAsFloat","priceInUsd","priceIsOutOfRange","tooltip","tooltipVisible","targetRef","percentage","placement","current","focus","getButtonText","e","target","value","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","minPrice","maxPrice"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { Flex, Grid, Box, Text, Button, BinanceIcon, ErrorIcon, useTooltip } from '@pancakeswap/uikit'\nimport { multiplyPriceByAmount } from 'utils/prices'\nimport { useBNBBusdPrice } from 'hooks/useBUSDPrice'\nimport { useTranslation } from 'contexts/Localization'\nimport { NftToken } from 'state/nftMarket/types'\nimport { useGetCollection } from 'state/nftMarket/hooks'\nimport { Divider } from '../shared/styles'\nimport { GreyedOutContainer, BnbAmountCell, RightAlignedInput, FeeAmountCell } from './styles'\n\ninterface SetPriceStageProps {\n  nftToSell: NftToken\n  variant: 'set' | 'adjust'\n  currentPrice?: string\n  lowestPrice?: number\n  price: string\n  setPrice: React.Dispatch<React.SetStateAction<string>>\n  continueToNextStage: () => void\n}\n\nconst MIN_PRICE = 0.005\nconst MAX_PRICE = 10000\n\n// Stage where user puts price for NFT they're about to put on sale\n// Also shown when user wants to adjust the price of already listed NFT\nconst SetPriceStage: React.FC<SetPriceStageProps> = ({\n  nftToSell,\n  variant,\n  lowestPrice,\n  currentPrice,\n  price,\n  setPrice,\n  continueToNextStage,\n}) => {\n  const { t } = useTranslation()\n  const inputRef = useRef<HTMLInputElement>()\n  const adjustedPriceIsTheSame = variant === 'adjust' && parseFloat(currentPrice) === parseFloat(price)\n  const priceIsValid = !price || Number.isNaN(parseFloat(price)) || parseFloat(price) <= 0\n\n  const { creatorFee, tradingFee } = useGetCollection(nftToSell.collectionAddress)\n  const creatorFeeAsNumber = parseFloat(creatorFee)\n  const tradingFeeAsNumber = parseFloat(tradingFee)\n  const bnbPrice = useBNBBusdPrice()\n  const priceAsFloat = parseFloat(price)\n  const priceInUsd = multiplyPriceByAmount(bnbPrice, priceAsFloat)\n\n  const priceIsOutOfRange = priceAsFloat > MAX_PRICE || priceAsFloat < MIN_PRICE\n\n  const { tooltip, tooltipVisible, targetRef } = useTooltip(\n    <>\n      <Text>\n        {t(\n          'When selling NFTs from this collection, a portion of the BNB paid will be diverted before reaching the seller:',\n        )}\n      </Text>\n      {creatorFeeAsNumber > 0 && (\n        <Text>{t('%percentage%% royalties to the collection owner', { percentage: creatorFee })}</Text>\n      )}\n      <Text>{t('%percentage%% trading fee will be used to buy & burn CAKE', { percentage: tradingFee })}</Text>\n    </>,\n    { placement: 'auto' },\n  )\n\n  useEffect(() => {\n    if (inputRef && inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [inputRef])\n\n  const getButtonText = () => {\n    if (variant === 'adjust') {\n      if (adjustedPriceIsTheSame || priceIsValid) {\n        return t('Input New Sale Price')\n      }\n      return t('Confirm')\n    }\n    return t('Enable Listing')\n  }\n  return (\n    <>\n      <Text fontSize=\"24px\" bold p=\"16px\">\n        {variant === 'set' ? t('Set Price') : t('Adjust Sale Price')}\n      </Text>\n      <GreyedOutContainer>\n        <Text fontSize=\"12px\" color=\"secondary\" textTransform=\"uppercase\" bold>\n          {t('Set Price')}\n        </Text>\n        <Flex>\n          <Flex flex=\"1\" alignItems=\"center\">\n            <BinanceIcon width={24} height={24} mr=\"4px\" />\n            <Text bold>WBNB</Text>\n          </Flex>\n          <Flex flex=\"2\">\n            <RightAlignedInput\n              scale=\"sm\"\n              type=\"number\"\n              inputMode=\"decimal\"\n              value={price}\n              ref={inputRef}\n              isWarning={priceIsOutOfRange}\n              onChange={(e) => setPrice(e.target.value)}\n            />\n          </Flex>\n        </Flex>\n        <Flex alignItems=\"center\" height=\"21px\" justifyContent=\"flex-end\">\n          {!Number.isNaN(priceInUsd) && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">\n              {`$${priceInUsd.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`}\n            </Text>\n          )}\n        </Flex>\n        {priceIsOutOfRange && (\n          <Text fontSize=\"12px\" color=\"failure\">\n            {t('Allowed price range is between %minPrice% and %maxPrice% WBNB', {\n              minPrice: MIN_PRICE,\n              maxPrice: MAX_PRICE,\n            })}\n          </Text>\n        )}\n        <Flex mt=\"8px\">\n          <Text small color=\"textSubtle\" mr=\"8px\">\n            {t('Seller pays %percentage%% platform fee on sale', {\n              percentage: creatorFeeAsNumber + tradingFeeAsNumber,\n            })}\n          </Text>\n          <span ref={targetRef}>\n            <ErrorIcon />\n          </span>\n          {tooltipVisible && tooltip}\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mt=\"16px\">\n          <Text small color=\"textSubtle\">\n            {t('Platform fee if sold')}\n          </Text>\n          <FeeAmountCell bnbAmount={priceAsFloat} creatorFee={creatorFeeAsNumber} tradingFee={tradingFeeAsNumber} />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mt=\"16px\">\n          <Text small color=\"textSubtle\">\n            {t('Lowest price on market')}\n          </Text>\n          <BnbAmountCell bnbAmount={lowestPrice} />\n        </Flex>\n      </GreyedOutContainer>\n      <Grid gridTemplateColumns=\"32px 1fr\" p=\"16px\" maxWidth=\"360px\">\n        <Flex alignSelf=\"flex-start\">\n          <ErrorIcon width={24} height={24} color=\"textSubtle\" />\n        </Flex>\n        <Box>\n          <Text small color=\"textSubtle\">\n            {t('The NFT will be removed from your wallet and put on sale at this price.')}\n          </Text>\n          <Text small color=\"textSubtle\">\n            {t('Sales are in WBNB. You can swap WBNB to BNB 1:1 for free with PancakeSwap.')}\n          </Text>\n        </Box>\n      </Grid>\n      <Divider />\n      <Flex flexDirection=\"column\" px=\"16px\" pb=\"16px\">\n        <Button\n          mb=\"8px\"\n          onClick={continueToNextStage}\n          disabled={priceIsValid || adjustedPriceIsTheSame || priceIsOutOfRange}\n        >\n          {getButtonText()}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default SetPriceStage\n"]},"metadata":{},"sourceType":"module"}