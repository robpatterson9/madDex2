{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Info/components/InfoTables/PoolsTable.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useMemo, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Text, Flex, Box, Skeleton, ArrowBackIcon, ArrowForwardIcon } from '@pancakeswap/uikit';\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers';\nimport { ITEMS_PER_INFO_TABLE_PAGE } from 'config/constants/info';\nimport { DoubleCurrencyLogo } from 'views/Info/components/CurrencyLogo';\nimport { useTranslation } from 'contexts/Localization';\nimport { ClickableColumnHeader, TableWrapper, PageButtons, Arrow, Break } from './shared';\n/**\n *  Columns on different layouts\n *  5 = | # | Pool | TVL | Volume 24H | Volume 7D |\n *  4 = | # | Pool |     | Volume 24H | Volume 7D |\n *  3 = | # | Pool |     | Volume 24H |           |\n *  2 = |   | Pool |     | Volume 24H |           |\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  align-items: center;\n  grid-template-columns: 20px 3.5fr repeat(5, 1fr);\n\n  padding: 0 24px;\n  @media screen and (max-width: 900px) {\n    grid-template-columns: 20px 1.5fr repeat(3, 1fr);\n    & :nth-child(4),\n    & :nth-child(5) {\n      display: none;\n    }\n  }\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 20px 1.5fr repeat(1, 1fr);\n    & :nth-child(4),\n    & :nth-child(5),\n    & :nth-child(6),\n    & :nth-child(7) {\n      display: none;\n    }\n  }\n  @media screen and (max-width: 480px) {\n    grid-template-columns: 2.5fr repeat(1, 1fr);\n    > *:nth-child(1) {\n      display: none;\n    }\n  }\n`;\n_c = ResponsiveGrid;\nconst LinkWrapper = styled(Link)`\n  text-decoration: none;\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`;\n_c2 = LinkWrapper;\nconst SORT_FIELD = {\n  volumeUSD: 'volumeUSD',\n  tvlUSD: 'tvlUSD',\n  volumeUSDWeek: 'volumeUSDWeek',\n  lpFees24h: 'lpFees24h',\n  lpApr7d: 'lpApr7d'\n};\n\nconst LoadingRow = () => /*#__PURE__*/_jsxDEV(ResponsiveGrid, {\n  children: [/*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 67,\n  columnNumber: 3\n}, this);\n\n_c3 = LoadingRow;\n\nconst TableLoader = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(LoadingRow, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(LoadingRow, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(LoadingRow, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n\n_c4 = TableLoader;\n\nconst DataRow = ({\n  poolData,\n  index\n}) => {\n  return /*#__PURE__*/_jsxDEV(LinkWrapper, {\n    to: `/info/pool/${poolData.address}`,\n    children: /*#__PURE__*/_jsxDEV(ResponsiveGrid, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        children: [/*#__PURE__*/_jsxDEV(DoubleCurrencyLogo, {\n          address0: poolData.token0.address,\n          address1: poolData.token1.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          ml: \"8px\",\n          children: [poolData.token0.symbol, \"/\", poolData.token1.symbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"$\", formatAmount(poolData.volumeUSD)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"$\", formatAmount(poolData.volumeUSDWeek)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"$\", formatAmount(poolData.lpFees24h)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [formatAmount(poolData.lpApr7d), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"$\", formatAmount(poolData.liquidityUSD)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = DataRow;\n\nconst PoolTable = ({\n  poolDatas,\n  loading\n}) => {\n  _s();\n\n  // for sorting\n  const [sortField, setSortField] = useState(SORT_FIELD.volumeUSD);\n  const [sortDirection, setSortDirection] = useState(true);\n  const {\n    t\n  } = useTranslation(); // pagination\n\n  const [page, setPage] = useState(1);\n  const [maxPage, setMaxPage] = useState(1);\n  useEffect(() => {\n    let extraPages = 1;\n\n    if (poolDatas.length % ITEMS_PER_INFO_TABLE_PAGE === 0) {\n      extraPages = 0;\n    }\n\n    setMaxPage(Math.floor(poolDatas.length / ITEMS_PER_INFO_TABLE_PAGE) + extraPages);\n  }, [poolDatas]);\n  const sortedPools = useMemo(() => {\n    return poolDatas ? poolDatas.sort((a, b) => {\n      if (a && b) {\n        return a[sortField] > b[sortField] ? (sortDirection ? -1 : 1) * 1 : (sortDirection ? -1 : 1) * -1;\n      }\n\n      return -1;\n    }).slice(ITEMS_PER_INFO_TABLE_PAGE * (page - 1), page * ITEMS_PER_INFO_TABLE_PAGE) : [];\n  }, [page, poolDatas, sortDirection, sortField]);\n  const handleSort = useCallback(newField => {\n    setSortField(newField);\n    setSortDirection(sortField !== newField ? true : !sortDirection);\n  }, [sortDirection, sortField]);\n  const arrow = useCallback(field => {\n    const directionArrow = !sortDirection ? '↑' : '↓';\n    return sortField === field ? directionArrow : '';\n  }, [sortDirection, sortField]);\n  return /*#__PURE__*/_jsxDEV(TableWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(ResponsiveGrid, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        color: \"secondary\",\n        fontSize: \"12px\",\n        bold: true,\n        children: \"#\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"secondary\",\n        fontSize: \"12px\",\n        bold: true,\n        textTransform: \"uppercase\",\n        children: t('Pool')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ClickableColumnHeader, {\n        color: \"secondary\",\n        fontSize: \"12px\",\n        bold: true,\n        onClick: () => handleSort(SORT_FIELD.volumeUSD),\n        textTransform: \"uppercase\",\n        children: [t('Volume 24H'), \" \", arrow(SORT_FIELD.volumeUSD)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ClickableColumnHeader, {\n        color: \"secondary\",\n        fontSize: \"12px\",\n        bold: true,\n        onClick: () => handleSort(SORT_FIELD.volumeUSDWeek),\n        textTransform: \"uppercase\",\n        children: [t('Volume 7D'), \" \", arrow(SORT_FIELD.volumeUSDWeek)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ClickableColumnHeader, {\n        color: \"secondary\",\n        fontSize: \"12px\",\n        bold: true,\n        onClick: () => handleSort(SORT_FIELD.lpFees24h),\n        textTransform: \"uppercase\",\n        children: [t('LP reward fees 24H'), \" \", arrow(SORT_FIELD.lpFees24h)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ClickableColumnHeader, {\n        color: \"secondary\",\n        fontSize: \"12px\",\n        bold: true,\n        onClick: () => handleSort(SORT_FIELD.lpApr7d),\n        textTransform: \"uppercase\",\n        children: [t('LP reward APR'), \" \", arrow(SORT_FIELD.lpApr7d)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ClickableColumnHeader, {\n        color: \"secondary\",\n        fontSize: \"12px\",\n        bold: true,\n        onClick: () => handleSort(SORT_FIELD.tvlUSD),\n        textTransform: \"uppercase\",\n        children: [t('Liquidity'), \" \", arrow(SORT_FIELD.tvlUSD)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Break, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), sortedPools.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [sortedPools.map((poolData, i) => {\n        if (poolData) {\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(DataRow, {\n              index: (page - 1) * ITEMS_PER_INFO_TABLE_PAGE + i,\n              poolData: poolData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Break, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this)]\n          }, poolData.address, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this);\n        }\n\n        return null;\n      }), loading && /*#__PURE__*/_jsxDEV(LoadingRow, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(PageButtons, {\n        children: [/*#__PURE__*/_jsxDEV(Arrow, {\n          onClick: () => {\n            setPage(page === 1 ? page : page - 1);\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n            color: page === 1 ? 'textDisabled' : 'primary'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: t('Page %page% of %maxPage%', {\n            page,\n            maxPage\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Arrow, {\n          onClick: () => {\n            setPage(page === maxPage ? page : page + 1);\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n            color: page === maxPage ? 'textDisabled' : 'primary'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TableLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PoolTable, \"EaYI0dfkew2X21+RllsQx4pVa2Y=\", false, function () {\n  return [useTranslation];\n});\n\n_c6 = PoolTable;\nexport default PoolTable;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"ResponsiveGrid\");\n$RefreshReg$(_c2, \"LinkWrapper\");\n$RefreshReg$(_c3, \"LoadingRow\");\n$RefreshReg$(_c4, \"TableLoader\");\n$RefreshReg$(_c5, \"DataRow\");\n$RefreshReg$(_c6, \"PoolTable\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Info/components/InfoTables/PoolsTable.tsx"],"names":["React","useCallback","useState","useMemo","useEffect","styled","Link","Text","Flex","Box","Skeleton","ArrowBackIcon","ArrowForwardIcon","formatAmount","ITEMS_PER_INFO_TABLE_PAGE","DoubleCurrencyLogo","useTranslation","ClickableColumnHeader","TableWrapper","PageButtons","Arrow","Break","ResponsiveGrid","div","LinkWrapper","SORT_FIELD","volumeUSD","tvlUSD","volumeUSDWeek","lpFees24h","lpApr7d","LoadingRow","TableLoader","DataRow","poolData","index","address","token0","token1","symbol","liquidityUSD","PoolTable","poolDatas","loading","sortField","setSortField","sortDirection","setSortDirection","t","page","setPage","maxPage","setMaxPage","extraPages","length","Math","floor","sortedPools","sort","a","b","slice","handleSort","newField","arrow","field","directionArrow","map","i"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useMemo, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { Text, Flex, Box, Skeleton, ArrowBackIcon, ArrowForwardIcon } from '@pancakeswap/uikit'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport { PoolData } from 'state/info/types'\nimport { ITEMS_PER_INFO_TABLE_PAGE } from 'config/constants/info'\nimport { DoubleCurrencyLogo } from 'views/Info/components/CurrencyLogo'\nimport { useTranslation } from 'contexts/Localization'\nimport { ClickableColumnHeader, TableWrapper, PageButtons, Arrow, Break } from './shared'\n\n/**\n *  Columns on different layouts\n *  5 = | # | Pool | TVL | Volume 24H | Volume 7D |\n *  4 = | # | Pool |     | Volume 24H | Volume 7D |\n *  3 = | # | Pool |     | Volume 24H |           |\n *  2 = |   | Pool |     | Volume 24H |           |\n */\nconst ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  align-items: center;\n  grid-template-columns: 20px 3.5fr repeat(5, 1fr);\n\n  padding: 0 24px;\n  @media screen and (max-width: 900px) {\n    grid-template-columns: 20px 1.5fr repeat(3, 1fr);\n    & :nth-child(4),\n    & :nth-child(5) {\n      display: none;\n    }\n  }\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 20px 1.5fr repeat(1, 1fr);\n    & :nth-child(4),\n    & :nth-child(5),\n    & :nth-child(6),\n    & :nth-child(7) {\n      display: none;\n    }\n  }\n  @media screen and (max-width: 480px) {\n    grid-template-columns: 2.5fr repeat(1, 1fr);\n    > *:nth-child(1) {\n      display: none;\n    }\n  }\n`\n\nconst LinkWrapper = styled(Link)`\n  text-decoration: none;\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nconst SORT_FIELD = {\n  volumeUSD: 'volumeUSD',\n  tvlUSD: 'tvlUSD',\n  volumeUSDWeek: 'volumeUSDWeek',\n  lpFees24h: 'lpFees24h',\n  lpApr7d: 'lpApr7d',\n}\n\nconst LoadingRow: React.FC = () => (\n  <ResponsiveGrid>\n    <Skeleton />\n    <Skeleton />\n    <Skeleton />\n    <Skeleton />\n    <Skeleton />\n    <Skeleton />\n    <Skeleton />\n  </ResponsiveGrid>\n)\n\nconst TableLoader: React.FC = () => (\n  <>\n    <LoadingRow />\n    <LoadingRow />\n    <LoadingRow />\n  </>\n)\n\nconst DataRow = ({ poolData, index }: { poolData: PoolData; index: number }) => {\n  return (\n    <LinkWrapper to={`/info/pool/${poolData.address}`}>\n      <ResponsiveGrid>\n        <Text>{index + 1}</Text>\n        <Flex>\n          <DoubleCurrencyLogo address0={poolData.token0.address} address1={poolData.token1.address} />\n          <Text ml=\"8px\">\n            {poolData.token0.symbol}/{poolData.token1.symbol}\n          </Text>\n        </Flex>\n        <Text>${formatAmount(poolData.volumeUSD)}</Text>\n        <Text>${formatAmount(poolData.volumeUSDWeek)}</Text>\n        <Text>${formatAmount(poolData.lpFees24h)}</Text>\n        <Text>{formatAmount(poolData.lpApr7d)}%</Text>\n        <Text>${formatAmount(poolData.liquidityUSD)}</Text>\n      </ResponsiveGrid>\n    </LinkWrapper>\n  )\n}\n\ninterface PoolTableProps {\n  poolDatas: PoolData[]\n  loading?: boolean // If true shows indication that SOME pools are loading, but the ones already fetched will be shown\n}\n\nconst PoolTable: React.FC<PoolTableProps> = ({ poolDatas, loading }) => {\n  // for sorting\n  const [sortField, setSortField] = useState(SORT_FIELD.volumeUSD)\n  const [sortDirection, setSortDirection] = useState<boolean>(true)\n  const { t } = useTranslation()\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  useEffect(() => {\n    let extraPages = 1\n    if (poolDatas.length % ITEMS_PER_INFO_TABLE_PAGE === 0) {\n      extraPages = 0\n    }\n    setMaxPage(Math.floor(poolDatas.length / ITEMS_PER_INFO_TABLE_PAGE) + extraPages)\n  }, [poolDatas])\n\n  const sortedPools = useMemo(() => {\n    return poolDatas\n      ? poolDatas\n          .sort((a, b) => {\n            if (a && b) {\n              return a[sortField as keyof PoolData] > b[sortField as keyof PoolData]\n                ? (sortDirection ? -1 : 1) * 1\n                : (sortDirection ? -1 : 1) * -1\n            }\n            return -1\n          })\n          .slice(ITEMS_PER_INFO_TABLE_PAGE * (page - 1), page * ITEMS_PER_INFO_TABLE_PAGE)\n      : []\n  }, [page, poolDatas, sortDirection, sortField])\n\n  const handleSort = useCallback(\n    (newField: string) => {\n      setSortField(newField)\n      setSortDirection(sortField !== newField ? true : !sortDirection)\n    },\n    [sortDirection, sortField],\n  )\n\n  const arrow = useCallback(\n    (field: string) => {\n      const directionArrow = !sortDirection ? '↑' : '↓'\n      return sortField === field ? directionArrow : ''\n    },\n    [sortDirection, sortField],\n  )\n\n  return (\n    <TableWrapper>\n      <ResponsiveGrid>\n        <Text color=\"secondary\" fontSize=\"12px\" bold>\n          #\n        </Text>\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n          {t('Pool')}\n        </Text>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.volumeUSD)}\n          textTransform=\"uppercase\"\n        >\n          {t('Volume 24H')} {arrow(SORT_FIELD.volumeUSD)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.volumeUSDWeek)}\n          textTransform=\"uppercase\"\n        >\n          {t('Volume 7D')} {arrow(SORT_FIELD.volumeUSDWeek)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.lpFees24h)}\n          textTransform=\"uppercase\"\n        >\n          {t('LP reward fees 24H')} {arrow(SORT_FIELD.lpFees24h)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.lpApr7d)}\n          textTransform=\"uppercase\"\n        >\n          {t('LP reward APR')} {arrow(SORT_FIELD.lpApr7d)}\n        </ClickableColumnHeader>\n        <ClickableColumnHeader\n          color=\"secondary\"\n          fontSize=\"12px\"\n          bold\n          onClick={() => handleSort(SORT_FIELD.tvlUSD)}\n          textTransform=\"uppercase\"\n        >\n          {t('Liquidity')} {arrow(SORT_FIELD.tvlUSD)}\n        </ClickableColumnHeader>\n      </ResponsiveGrid>\n      <Break />\n      {sortedPools.length > 0 ? (\n        <>\n          {sortedPools.map((poolData, i) => {\n            if (poolData) {\n              return (\n                <React.Fragment key={poolData.address}>\n                  <DataRow index={(page - 1) * ITEMS_PER_INFO_TABLE_PAGE + i} poolData={poolData} />\n                  <Break />\n                </React.Fragment>\n              )\n            }\n            return null\n          })}\n          {loading && <LoadingRow />}\n          <PageButtons>\n            <Arrow\n              onClick={() => {\n                setPage(page === 1 ? page : page - 1)\n              }}\n            >\n              <ArrowBackIcon color={page === 1 ? 'textDisabled' : 'primary'} />\n            </Arrow>\n\n            <Text>{t('Page %page% of %maxPage%', { page, maxPage })}</Text>\n\n            <Arrow\n              onClick={() => {\n                setPage(page === maxPage ? page : page + 1)\n              }}\n            >\n              <ArrowForwardIcon color={page === maxPage ? 'textDisabled' : 'primary'} />\n            </Arrow>\n          </PageButtons>\n        </>\n      ) : (\n        <>\n          <TableLoader />\n          {/* spacer */}\n          <Box />\n        </>\n      )}\n    </TableWrapper>\n  )\n}\n\nexport default PoolTable\n"]},"metadata":{},"sourceType":"module"}