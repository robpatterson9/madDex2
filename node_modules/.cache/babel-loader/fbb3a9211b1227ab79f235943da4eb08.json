{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Info/components/TopTokenMovers/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Text, Flex, Box, Card } from '@pancakeswap/uikit';\nimport { Link } from 'react-router-dom';\nimport { useAllTokenData } from 'state/info/hooks';\nimport { CurrencyLogo } from 'views/Info/components/CurrencyLogo';\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers';\nimport Percent from 'views/Info/components/Percent';\nimport { useTranslation } from 'contexts/Localization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardWrapper = styled(Link)`\n  display: inline-block;\n  min-width: 190px;\n  margin-left: 16px;\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`;\n_c = CardWrapper;\nconst TopMoverCard = styled(Box)`\n  border: 1px solid ${({\n  theme\n}) => theme.colors.cardBorder};\n  border-radius: ${({\n  theme\n}) => theme.radii.card};\n  padding: 16px;\n`;\n_c2 = TopMoverCard;\nexport const ScrollableRow = styled.div`\n  width: 100%;\n  overflow-x: auto;\n  padding: 16px 0;\n  white-space: nowrap;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n_c3 = ScrollableRow;\n\nconst DataCard = ({\n  tokenData\n}) => {\n  return /*#__PURE__*/_jsxDEV(CardWrapper, {\n    to: `/info/token/${tokenData.address}`,\n    children: /*#__PURE__*/_jsxDEV(TopMoverCard, {\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          width: \"32px\",\n          height: \"32px\",\n          children: /*#__PURE__*/_jsxDEV(CurrencyLogo, {\n            address: tokenData.address,\n            size: \"32px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          ml: \"16px\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: tokenData.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"14px\",\n              mr: \"6px\",\n              lineHeight: \"16px\",\n              children: [\"$\", formatAmount(tokenData.priceUSD)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Percent, {\n              fontSize: \"14px\",\n              value: tokenData.priceUSDChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = DataCard;\n\nconst TopTokenMovers = () => {\n  _s();\n\n  const allTokens = useAllTokenData();\n  const {\n    t\n  } = useTranslation();\n  const topPriceIncrease = useMemo(() => {\n    return Object.values(allTokens).sort(({\n      data: a\n    }, {\n      data: b\n    }) => {\n      // eslint-disable-next-line no-nested-ternary\n      return a && b ? Math.abs(a === null || a === void 0 ? void 0 : a.priceUSDChange) > Math.abs(b === null || b === void 0 ? void 0 : b.priceUSDChange) ? -1 : 1 : -1;\n    }).slice(0, Math.min(20, Object.values(allTokens).length));\n  }, [allTokens]);\n  const increaseRef = useRef(null);\n  const moveLeftRef = useRef(true);\n  useEffect(() => {\n    const scrollInterval = setInterval(() => {\n      if (increaseRef.current) {\n        if (increaseRef.current.scrollLeft === increaseRef.current.scrollWidth - increaseRef.current.clientWidth) {\n          moveLeftRef.current = false;\n        } else if (increaseRef.current.scrollLeft === 0) {\n          moveLeftRef.current = true;\n        }\n\n        increaseRef.current.scrollTo(moveLeftRef.current ? increaseRef.current.scrollLeft + 1 : increaseRef.current.scrollLeft - 1, 0);\n      }\n    }, 30);\n    return () => {\n      clearInterval(scrollInterval);\n    };\n  }, []);\n\n  if (topPriceIncrease.length === 0 || !topPriceIncrease.some(entry => entry.data)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    my: \"16px\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      ml: \"16px\",\n      mt: \"8px\",\n      children: t('Top Movers')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ScrollableRow, {\n      ref: increaseRef,\n      children: topPriceIncrease.map(entry => {\n        var _entry$data;\n\n        return entry.data ? /*#__PURE__*/_jsxDEV(DataCard, {\n          tokenData: entry.data\n        }, `top-card-token-${(_entry$data = entry.data) === null || _entry$data === void 0 ? void 0 : _entry$data.address}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 24\n        }, this) : null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TopTokenMovers, \"g3FdIxuAWicPIuAIZaosBcajSS0=\", false, function () {\n  return [useAllTokenData, useTranslation];\n});\n\n_c5 = TopTokenMovers;\nexport default TopTokenMovers;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"CardWrapper\");\n$RefreshReg$(_c2, \"TopMoverCard\");\n$RefreshReg$(_c3, \"ScrollableRow\");\n$RefreshReg$(_c4, \"DataCard\");\n$RefreshReg$(_c5, \"TopTokenMovers\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Info/components/TopTokenMovers/index.tsx"],"names":["React","useMemo","useRef","useEffect","styled","Text","Flex","Box","Card","Link","useAllTokenData","CurrencyLogo","formatAmount","Percent","useTranslation","CardWrapper","TopMoverCard","theme","colors","cardBorder","radii","card","ScrollableRow","div","DataCard","tokenData","address","symbol","priceUSD","priceUSDChange","TopTokenMovers","allTokens","t","topPriceIncrease","Object","values","sort","data","a","b","Math","abs","slice","min","length","increaseRef","moveLeftRef","scrollInterval","setInterval","current","scrollLeft","scrollWidth","clientWidth","scrollTo","clearInterval","some","entry","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAkD,OAAlD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,GAArB,EAA0BC,IAA1B,QAAsC,oBAAtC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AAEA,SAASC,YAAT,QAA6B,oCAA7B;AACA,SAASC,YAAT,QAA6B,oCAA7B;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,MAAMC,WAAW,GAAGX,MAAM,CAACK,IAAD,CAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;KAAMM,W;AAUN,MAAMC,YAAY,GAAGZ,MAAM,CAACG,GAAD,CAAM;AACjC,sBAAsB,CAAC;AAAEU,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,UAAW;AAC7D,mBAAmB,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,KAAN,CAAYC,IAAK;AACnD;AACA,CAJA;MAAML,Y;AAMN,OAAO,MAAMM,aAAa,GAAGlB,MAAM,CAACmB,GAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARO;MAAMD,a;;AAUb,MAAME,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6C;AAC5D,sBACE,QAAC,WAAD;AAAa,IAAA,EAAE,EAAG,eAAcA,SAAS,CAACC,OAAQ,EAAlD;AAAA,2BACE,QAAC,YAAD;AAAA,6BACE,QAAC,IAAD;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,KAAK,EAAC,MAAX;AAAkB,UAAA,MAAM,EAAC,MAAzB;AAAA,iCAEE,QAAC,YAAD;AAAc,YAAA,OAAO,EAAED,SAAS,CAACC,OAAjC;AAA0C,YAAA,IAAI,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAC,MAAR;AAAA,kCACE,QAAC,IAAD;AAAA,sBAAOD,SAAS,CAACE;AAAjB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAM,YAAA,UAAU,EAAC,QAAjB;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,QAAQ,EAAC,MAAf;AAAsB,cAAA,EAAE,EAAC,KAAzB;AAA+B,cAAA,UAAU,EAAC,MAA1C;AAAA,8BACIf,YAAY,CAACa,SAAS,CAACG,QAAX,CADhB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,OAAD;AAAS,cAAA,QAAQ,EAAC,MAAlB;AAAyB,cAAA,KAAK,EAAEH,SAAS,CAACI;AAA1C;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAtBD;;MAAML,Q;;AAwBN,MAAMM,cAAwB,GAAG,MAAM;AAAA;;AACrC,QAAMC,SAAS,GAAGrB,eAAe,EAAjC;AACA,QAAM;AAAEsB,IAAAA;AAAF,MAAQlB,cAAc,EAA5B;AAEA,QAAMmB,gBAAgB,GAAGhC,OAAO,CAAC,MAAM;AACrC,WAAOiC,MAAM,CAACC,MAAP,CAAcJ,SAAd,EACJK,IADI,CACC,CAAC;AAAEC,MAAAA,IAAI,EAAEC;AAAR,KAAD,EAAc;AAAED,MAAAA,IAAI,EAAEE;AAAR,KAAd,KAA8B;AAClC;AACA,aAAOD,CAAC,IAAIC,CAAL,GAAUC,IAAI,CAACC,GAAL,CAASH,CAAT,aAASA,CAAT,uBAASA,CAAC,CAAET,cAAZ,IAA8BW,IAAI,CAACC,GAAL,CAASF,CAAT,aAASA,CAAT,uBAASA,CAAC,CAAEV,cAAZ,CAA9B,GAA4D,CAAC,CAA7D,GAAiE,CAA3E,GAAgF,CAAC,CAAxF;AACD,KAJI,EAKJa,KALI,CAKE,CALF,EAKKF,IAAI,CAACG,GAAL,CAAS,EAAT,EAAaT,MAAM,CAACC,MAAP,CAAcJ,SAAd,EAAyBa,MAAtC,CALL,CAAP;AAMD,GAP+B,EAO7B,CAACb,SAAD,CAP6B,CAAhC;AASA,QAAMc,WAAW,GAAG3C,MAAM,CAAiB,IAAjB,CAA1B;AACA,QAAM4C,WAAW,GAAG5C,MAAM,CAAU,IAAV,CAA1B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM4C,cAAc,GAAGC,WAAW,CAAC,MAAM;AACvC,UAAIH,WAAW,CAACI,OAAhB,EAAyB;AACvB,YAAIJ,WAAW,CAACI,OAAZ,CAAoBC,UAApB,KAAmCL,WAAW,CAACI,OAAZ,CAAoBE,WAApB,GAAkCN,WAAW,CAACI,OAAZ,CAAoBG,WAA7F,EAA0G;AACxGN,UAAAA,WAAW,CAACG,OAAZ,GAAsB,KAAtB;AACD,SAFD,MAEO,IAAIJ,WAAW,CAACI,OAAZ,CAAoBC,UAApB,KAAmC,CAAvC,EAA0C;AAC/CJ,UAAAA,WAAW,CAACG,OAAZ,GAAsB,IAAtB;AACD;;AACDJ,QAAAA,WAAW,CAACI,OAAZ,CAAoBI,QAApB,CACEP,WAAW,CAACG,OAAZ,GAAsBJ,WAAW,CAACI,OAAZ,CAAoBC,UAApB,GAAiC,CAAvD,GAA2DL,WAAW,CAACI,OAAZ,CAAoBC,UAApB,GAAiC,CAD9F,EAEE,CAFF;AAID;AACF,KAZiC,EAY/B,EAZ+B,CAAlC;AAcA,WAAO,MAAM;AACXI,MAAAA,aAAa,CAACP,cAAD,CAAb;AACD,KAFD;AAGD,GAlBQ,EAkBN,EAlBM,CAAT;;AAoBA,MAAId,gBAAgB,CAACW,MAAjB,KAA4B,CAA5B,IAAiC,CAACX,gBAAgB,CAACsB,IAAjB,CAAuBC,KAAD,IAAWA,KAAK,CAACnB,IAAvC,CAAtC,EAAoF;AAClF,WAAO,IAAP;AACD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAC,MAAT;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,MAAT;AAAgB,MAAA,EAAE,EAAC,KAAnB;AAAA,gBACGL,CAAC,CAAC,YAAD;AADJ;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,aAAD;AAAe,MAAA,GAAG,EAAEa,WAApB;AAAA,gBACGZ,gBAAgB,CAACwB,GAAjB,CAAsBD,KAAD;AAAA;;AAAA,eACpBA,KAAK,CAACnB,IAAN,gBAAa,QAAC,QAAD;AAAwD,UAAA,SAAS,EAAEmB,KAAK,CAACnB;AAAzE,WAAgB,kBAAD,eAAkBmB,KAAK,CAACnB,IAAxB,gDAAkB,YAAYX,OAAQ,EAArD;AAAA;AAAA;AAAA;AAAA,gBAAb,GAAiG,IAD7E;AAAA,OAArB;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CApDD;;GAAMI,c;UACcpB,e,EACJI,c;;;MAFVgB,c;AAsDN,eAAeA,cAAf","sourcesContent":["import React, { useMemo, useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Box, Card } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useAllTokenData } from 'state/info/hooks'\nimport { TokenData } from 'state/info/types'\nimport { CurrencyLogo } from 'views/Info/components/CurrencyLogo'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport Percent from 'views/Info/components/Percent'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CardWrapper = styled(Link)`\n  display: inline-block;\n  min-width: 190px;\n  margin-left: 16px;\n  :hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst TopMoverCard = styled(Box)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: ${({ theme }) => theme.radii.card};\n  padding: 16px;\n`\n\nexport const ScrollableRow = styled.div`\n  width: 100%;\n  overflow-x: auto;\n  padding: 16px 0;\n  white-space: nowrap;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst DataCard = ({ tokenData }: { tokenData: TokenData }) => {\n  return (\n    <CardWrapper to={`/info/token/${tokenData.address}`}>\n      <TopMoverCard>\n        <Flex>\n          <Box width=\"32px\" height=\"32px\">\n            {/* wrapped in a box because of alignment issues between img and svg */}\n            <CurrencyLogo address={tokenData.address} size=\"32px\" />\n          </Box>\n          <Box ml=\"16px\">\n            <Text>{tokenData.symbol}</Text>\n            <Flex alignItems=\"center\">\n              <Text fontSize=\"14px\" mr=\"6px\" lineHeight=\"16px\">\n                ${formatAmount(tokenData.priceUSD)}\n              </Text>\n              <Percent fontSize=\"14px\" value={tokenData.priceUSDChange} />\n            </Flex>\n          </Box>\n        </Flex>\n      </TopMoverCard>\n    </CardWrapper>\n  )\n}\n\nconst TopTokenMovers: React.FC = () => {\n  const allTokens = useAllTokenData()\n  const { t } = useTranslation()\n\n  const topPriceIncrease = useMemo(() => {\n    return Object.values(allTokens)\n      .sort(({ data: a }, { data: b }) => {\n        // eslint-disable-next-line no-nested-ternary\n        return a && b ? (Math.abs(a?.priceUSDChange) > Math.abs(b?.priceUSDChange) ? -1 : 1) : -1\n      })\n      .slice(0, Math.min(20, Object.values(allTokens).length))\n  }, [allTokens])\n\n  const increaseRef = useRef<HTMLDivElement>(null)\n  const moveLeftRef = useRef<boolean>(true)\n\n  useEffect(() => {\n    const scrollInterval = setInterval(() => {\n      if (increaseRef.current) {\n        if (increaseRef.current.scrollLeft === increaseRef.current.scrollWidth - increaseRef.current.clientWidth) {\n          moveLeftRef.current = false\n        } else if (increaseRef.current.scrollLeft === 0) {\n          moveLeftRef.current = true\n        }\n        increaseRef.current.scrollTo(\n          moveLeftRef.current ? increaseRef.current.scrollLeft + 1 : increaseRef.current.scrollLeft - 1,\n          0,\n        )\n      }\n    }, 30)\n\n    return () => {\n      clearInterval(scrollInterval)\n    }\n  }, [])\n\n  if (topPriceIncrease.length === 0 || !topPriceIncrease.some((entry) => entry.data)) {\n    return null\n  }\n\n  return (\n    <Card my=\"16px\">\n      <Text ml=\"16px\" mt=\"8px\">\n        {t('Top Movers')}\n      </Text>\n      <ScrollableRow ref={increaseRef}>\n        {topPriceIncrease.map((entry) =>\n          entry.data ? <DataCard key={`top-card-token-${entry.data?.address}`} tokenData={entry.data} /> : null,\n        )}\n      </ScrollableRow>\n    </Card>\n  )\n}\n\nexport default TopTokenMovers\n"]},"metadata":{},"sourceType":"module"}