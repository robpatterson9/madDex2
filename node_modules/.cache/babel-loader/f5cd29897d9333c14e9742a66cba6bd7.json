{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/RoundCard/CalculatingCard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Card, CardBody, Flex, Spinner, WaitIcon, TooltipText, useTooltip, InfoIcon } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { BetPosition } from 'state/types';\nimport useTheme from 'hooks/useTheme';\nimport { RoundResultBox } from '../RoundResult';\nimport MultiplierArrow from './MultiplierArrow';\nimport CardHeader, { getBorderBackground } from './CardHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CalculatingCard = ({\n  round,\n  hasEnteredUp,\n  hasEnteredDown\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    theme\n  } = useTheme();\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip(t('This round’s closing transaction has been submitted to the blockchain, and is awaiting confirmation.'), {\n    placement: 'bottom'\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      borderBackground: getBorderBackground(theme, 'calculating'),\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        status: \"calculating\",\n        icon: /*#__PURE__*/_jsxDEV(WaitIcon, {\n          mr: \"4px\",\n          width: \"21px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this),\n        title: t('Calculating'),\n        epoch: round.epoch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        p: \"16px\",\n        children: [/*#__PURE__*/_jsxDEV(MultiplierArrow, {\n          isDisabled: true,\n          hasEntered: hasEnteredUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RoundResultBox, {\n          children: /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            flexDirection: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(Spinner, {\n              size: 96\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Flex, {\n              mt: \"8px\",\n              ref: targetRef,\n              children: [/*#__PURE__*/_jsxDEV(TooltipText, {\n                children: t('Calculating')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InfoIcon, {\n                ml: \"4px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MultiplierArrow, {\n          betPosition: BetPosition.BEAR,\n          isDisabled: true,\n          hasEntered: hasEnteredDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), tooltipVisible && tooltip]\n  }, void 0, true);\n};\n\n_s(CalculatingCard, \"OTXkMaMwT2x5PF1eFr6sq8gN2Y0=\", false, function () {\n  return [useTranslation, useTheme, useTooltip];\n});\n\n_c = CalculatingCard;\nexport default CalculatingCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalculatingCard\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/RoundCard/CalculatingCard.tsx"],"names":["React","Card","CardBody","Flex","Spinner","WaitIcon","TooltipText","useTooltip","InfoIcon","useTranslation","BetPosition","useTheme","RoundResultBox","MultiplierArrow","CardHeader","getBorderBackground","CalculatingCard","round","hasEnteredUp","hasEnteredDown","t","theme","targetRef","tooltip","tooltipVisible","placement","epoch","BEAR"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,IAAzB,EAA+BC,OAA/B,EAAwCC,QAAxC,EAAkDC,WAAlD,EAA+DC,UAA/D,EAA2EC,QAA3E,QAA2F,oBAA3F;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAAoBC,WAApB,QAAuC,aAAvC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,IAAqBC,mBAArB,QAAgD,cAAhD;;;;AAQA,MAAMC,eAA+C,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,YAAT;AAAuBC,EAAAA;AAAvB,CAAD,KAA6C;AAAA;;AACnG,QAAM;AAAEC,IAAAA;AAAF,MAAQX,cAAc,EAA5B;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAYV,QAAQ,EAA1B;AACA,QAAM;AAAEW,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,MAAyCjB,UAAU,CACvDa,CAAC,CAAC,sGAAD,CADsD,EAEvD;AAAEK,IAAAA,SAAS,EAAE;AAAb,GAFuD,CAAzD;AAKA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,gBAAgB,EAAEV,mBAAmB,CAACM,KAAD,EAAQ,aAAR,CAA3C;AAAA,8BACE,QAAC,UAAD;AACE,QAAA,MAAM,EAAC,aADT;AAEE,QAAA,IAAI,eAAE,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC,KAAb;AAAmB,UAAA,KAAK,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAFR;AAGE,QAAA,KAAK,EAAED,CAAC,CAAC,aAAD,CAHV;AAIE,QAAA,KAAK,EAAEH,KAAK,CAACS;AAJf;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,QAAD;AAAU,QAAA,CAAC,EAAC,MAAZ;AAAA,gCACE,QAAC,eAAD;AAAiB,UAAA,UAAU,MAA3B;AAA4B,UAAA,UAAU,EAAER;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,cAAD;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,UAAU,EAAC,QAAjB;AAA0B,YAAA,cAAc,EAAC,QAAzC;AAAkD,YAAA,aAAa,EAAC,QAAhE;AAAA,oCACE,QAAC,OAAD;AAAS,cAAA,IAAI,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,KAAT;AAAe,cAAA,GAAG,EAAEI,SAApB;AAAA,sCACE,QAAC,WAAD;AAAA,0BAAcF,CAAC,CAAC,aAAD;AAAf;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,QAAD;AAAU,gBAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAWE,QAAC,eAAD;AAAiB,UAAA,WAAW,EAAEV,WAAW,CAACiB,IAA1C;AAAgD,UAAA,UAAU,MAA1D;AAA2D,UAAA,UAAU,EAAER;AAAvE;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAsBGK,cAAc,IAAID,OAtBrB;AAAA,kBADF;AA0BD,CAlCD;;GAAMP,e;UACUP,c,EACIE,Q,EAC6BJ,U;;;KAH3CS,e;AAoCN,eAAeA,eAAf","sourcesContent":["import React from 'react'\nimport { Card, CardBody, Flex, Spinner, WaitIcon, TooltipText, useTooltip, InfoIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { NodeRound, BetPosition } from 'state/types'\nimport useTheme from 'hooks/useTheme'\nimport { RoundResultBox } from '../RoundResult'\nimport MultiplierArrow from './MultiplierArrow'\nimport CardHeader, { getBorderBackground } from './CardHeader'\n\ninterface CalculatingCardProps {\n  round: NodeRound\n  hasEnteredUp: boolean\n  hasEnteredDown: boolean\n}\n\nconst CalculatingCard: React.FC<CalculatingCardProps> = ({ round, hasEnteredUp, hasEnteredDown }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('This round’s closing transaction has been submitted to the blockchain, and is awaiting confirmation.'),\n    { placement: 'bottom' },\n  )\n\n  return (\n    <>\n      <Card borderBackground={getBorderBackground(theme, 'calculating')}>\n        <CardHeader\n          status=\"calculating\"\n          icon={<WaitIcon mr=\"4px\" width=\"21px\" />}\n          title={t('Calculating')}\n          epoch={round.epoch}\n        />\n        <CardBody p=\"16px\">\n          <MultiplierArrow isDisabled hasEntered={hasEnteredUp} />\n          <RoundResultBox>\n            <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n              <Spinner size={96} />\n              <Flex mt=\"8px\" ref={targetRef}>\n                <TooltipText>{t('Calculating')}</TooltipText>\n                <InfoIcon ml=\"4px\" />\n              </Flex>\n            </Flex>\n          </RoundResultBox>\n          <MultiplierArrow betPosition={BetPosition.BEAR} isDisabled hasEntered={hasEnteredDown} />\n        </CardBody>\n      </Card>\n      {tooltipVisible && tooltip}\n    </>\n  )\n}\n\nexport default CalculatingCard\n"]},"metadata":{},"sourceType":"module"}