{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Modal,Text,Button,Heading,Flex,AutoRenewIcon,ButtonMenu,ButtonMenuItem,HelpIcon,useTooltip}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import useTheme from'hooks/useTheme';import useToast from'hooks/useToast';import{formatNumber}from'utils/formatBalance';import useHarvestPool from'../../../hooks/useHarvestPool';import useStakePool from'../../../hooks/useStakePool';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CollectModal=function CollectModal(_ref){var formattedBalance=_ref.formattedBalance,fullBalance=_ref.fullBalance,earningToken=_ref.earningToken,earningsDollarValue=_ref.earningsDollarValue,sousId=_ref.sousId,isBnbPool=_ref.isBnbPool,_ref$isCompoundPool=_ref.isCompoundPool,isCompoundPool=_ref$isCompoundPool===void 0?false:_ref$isCompoundPool,onDismiss=_ref.onDismiss;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useTheme=useTheme(),theme=_useTheme.theme;var _useToast=useToast(),toastSuccess=_useToast.toastSuccess,toastError=_useToast.toastError;var _useHarvestPool=useHarvestPool(sousId,isBnbPool),onReward=_useHarvestPool.onReward;var _useStakePool=useStakePool(sousId,isBnbPool),onStake=_useStakePool.onStake;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pendingTx=_useState2[0],setPendingTx=_useState2[1];var _useState3=useState(isCompoundPool),_useState4=_slicedToArray(_useState3,2),shouldCompound=_useState4[0],setShouldCompound=_useState4[1];var _useTooltip=useTooltip(/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{mb:\"12px\",children:t('Compound: collect and restake CAKE into pool.')}),/*#__PURE__*/_jsx(Text,{children:t('Harvest: collect CAKE and send to wallet')})]}),{placement:'bottom-end',tooltipOffset:[20,10]}),targetRef=_useTooltip.targetRef,tooltip=_useTooltip.tooltip,tooltipVisible=_useTooltip.tooltipVisible;var handleHarvestConfirm=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setPendingTx(true);// compounding\nif(!shouldCompound){_context.next=17;break;}_context.prev=2;_context.next=5;return onStake(fullBalance,earningToken.decimals);case 5:toastSuccess(\"\".concat(t('Compounded'),\"!\"),t('Your %symbol% earnings have been re-invested into the pool!',{symbol:earningToken.symbol}));setPendingTx(false);onDismiss();_context.next=15;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](2);toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));console.error(_context.t0);setPendingTx(false);case 15:_context.next=30;break;case 17:_context.prev=17;_context.next=20;return onReward();case 20:toastSuccess(\"\".concat(t('Harvested'),\"!\"),t('Your %symbol% earnings have been sent to your wallet!',{symbol:earningToken.symbol}));setPendingTx(false);onDismiss();_context.next=30;break;case 25:_context.prev=25;_context.t1=_context[\"catch\"](17);toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));console.error(_context.t1);setPendingTx(false);case 30:case\"end\":return _context.stop();}}},_callee,null,[[2,10],[17,25]]);}));return function handleHarvestConfirm(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(Modal,{title:\"\".concat(earningToken.symbol,\" \").concat(isCompoundPool?t('Collect'):t('Harvest')),onDismiss:onDismiss,headerBackground:theme.colors.gradients.cardHeader,children:[isCompoundPool&&/*#__PURE__*/_jsxs(Flex,{justifyContent:\"center\",alignItems:\"center\",mb:\"24px\",children:[/*#__PURE__*/_jsxs(ButtonMenu,{activeIndex:shouldCompound?0:1,scale:\"sm\",variant:\"subtle\",onItemClick:function onItemClick(index){return setShouldCompound(!index);},children:[/*#__PURE__*/_jsx(ButtonMenuItem,{as:\"button\",children:t('Compound')}),/*#__PURE__*/_jsx(ButtonMenuItem,{as:\"button\",children:t('Harvest')})]}),/*#__PURE__*/_jsx(Flex,{ml:\"10px\",ref:targetRef,children:/*#__PURE__*/_jsx(HelpIcon,{color:\"textSubtle\"})}),tooltipVisible&&tooltip]}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",mb:\"24px\",children:[/*#__PURE__*/_jsxs(Text,{children:[shouldCompound?t('Compounding'):t('Harvesting'),\":\"]}),/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",children:[/*#__PURE__*/_jsxs(Heading,{children:[formattedBalance,\" \",earningToken.symbol]}),earningsDollarValue>0&&/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",children:\"~\".concat(formatNumber(earningsDollarValue),\" USD\")})]})]}),/*#__PURE__*/_jsx(Button,{mt:\"8px\",onClick:handleHarvestConfirm,isLoading:pendingTx,endIcon:pendingTx?/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,color:\"currentColor\"}):null,children:pendingTx?t('Confirming'):t('Confirm')}),/*#__PURE__*/_jsx(Button,{variant:\"text\",onClick:onDismiss,pb:\"0px\",children:t('Close Window')})]});};export default CollectModal;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Pools/components/PoolCard/Modals/CollectModal.tsx"],"names":["React","useState","Modal","Text","Button","Heading","Flex","AutoRenewIcon","ButtonMenu","ButtonMenuItem","HelpIcon","useTooltip","useTranslation","useTheme","useToast","formatNumber","useHarvestPool","useStakePool","CollectModal","formattedBalance","fullBalance","earningToken","earningsDollarValue","sousId","isBnbPool","isCompoundPool","onDismiss","t","theme","toastSuccess","toastError","onReward","onStake","pendingTx","setPendingTx","shouldCompound","setShouldCompound","placement","tooltipOffset","targetRef","tooltip","tooltipVisible","handleHarvestConfirm","decimals","symbol","console","error","colors","gradients","cardHeader","index"],"mappings":"qcAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OACEC,KADF,CAEEC,IAFF,CAGEC,MAHF,CAIEC,OAJF,CAKEC,IALF,CAMEC,aANF,CAOEC,UAPF,CAQEC,cARF,CASEC,QATF,CAUEC,UAVF,KAWO,oBAXP,CAYA,OAASC,cAAT,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CAEA,OAASC,YAAT,KAA6B,qBAA7B,CACA,MAAOC,CAAAA,cAAP,KAA2B,+BAA3B,CACA,MAAOC,CAAAA,YAAP,KAAyB,6BAAzB,C,6IAaA,GAAMC,CAAAA,YAAyC,CAAG,QAA5CA,CAAAA,YAA4C,MAS5C,IARJC,CAAAA,gBAQI,MARJA,gBAQI,CAPJC,WAOI,MAPJA,WAOI,CANJC,YAMI,MANJA,YAMI,CALJC,mBAKI,MALJA,mBAKI,CAJJC,MAII,MAJJA,MAII,CAHJC,SAGI,MAHJA,SAGI,0BAFJC,cAEI,CAFJA,cAEI,8BAFa,KAEb,qBADJC,SACI,MADJA,SACI,CACJ,oBAAcd,cAAc,EAA5B,CAAQe,CAAR,iBAAQA,CAAR,CACA,cAAkBd,QAAQ,EAA1B,CAAQe,KAAR,WAAQA,KAAR,CACA,cAAqCd,QAAQ,EAA7C,CAAQe,YAAR,WAAQA,YAAR,CAAsBC,UAAtB,WAAsBA,UAAtB,CACA,oBAAqBd,cAAc,CAACO,MAAD,CAASC,SAAT,CAAnC,CAAQO,QAAR,iBAAQA,QAAR,CACA,kBAAoBd,YAAY,CAACM,MAAD,CAASC,SAAT,CAAhC,CAAQQ,OAAR,eAAQA,OAAR,CACA,cAAkC/B,QAAQ,CAAC,KAAD,CAA1C,wCAAOgC,SAAP,eAAkBC,YAAlB,eACA,eAA4CjC,QAAQ,CAACwB,cAAD,CAApD,yCAAOU,cAAP,eAAuBC,iBAAvB,eACA,gBAA+CzB,UAAU,cACvD,wCACE,KAAC,IAAD,EAAM,EAAE,CAAC,MAAT,UAAiBgB,CAAC,CAAC,+CAAD,CAAlB,EADF,cAEE,KAAC,IAAD,WAAOA,CAAC,CAAC,0CAAD,CAAR,EAFF,GADuD,CAKvD,CAAEU,SAAS,CAAE,YAAb,CAA2BC,aAAa,CAAE,CAAC,EAAD,CAAK,EAAL,CAA1C,CALuD,CAAzD,CAAQC,SAAR,aAAQA,SAAR,CAAmBC,OAAnB,aAAmBA,OAAnB,CAA4BC,cAA5B,aAA4BA,cAA5B,CAQA,GAAMC,CAAAA,oBAAoB,2FAAG,mIAC3BR,YAAY,CAAC,IAAD,CAAZ,CACA;AAF2B,IAGvBC,cAHuB,gEAKjBH,CAAAA,OAAO,CAACZ,WAAD,CAAcC,YAAY,CAACsB,QAA3B,CALU,QAMvBd,YAAY,WACPF,CAAC,CAAC,YAAD,CADM,MAEVA,CAAC,CAAC,6DAAD,CAAgE,CAAEiB,MAAM,CAAEvB,YAAY,CAACuB,MAAvB,CAAhE,CAFS,CAAZ,CAIAV,YAAY,CAAC,KAAD,CAAZ,CACAR,SAAS,GAXc,iFAavBI,UAAU,CAACH,CAAC,CAAC,OAAD,CAAF,CAAaA,CAAC,CAAC,oFAAD,CAAd,CAAV,CACAkB,OAAO,CAACC,KAAR,cACAZ,YAAY,CAAC,KAAD,CAAZ,CAfuB,+EAoBjBH,CAAAA,QAAQ,EApBS,SAqBvBF,YAAY,WACPF,CAAC,CAAC,WAAD,CADM,MAEVA,CAAC,CAAC,uDAAD,CAA0D,CAAEiB,MAAM,CAAEvB,YAAY,CAACuB,MAAvB,CAA1D,CAFS,CAAZ,CAIAV,YAAY,CAAC,KAAD,CAAZ,CACAR,SAAS,GA1Bc,kFA4BvBI,UAAU,CAACH,CAAC,CAAC,OAAD,CAAF,CAAaA,CAAC,CAAC,oFAAD,CAAd,CAAV,CACAkB,OAAO,CAACC,KAAR,cACAZ,YAAY,CAAC,KAAD,CAAZ,CA9BuB,6EAAH,kBAApBQ,CAAAA,oBAAoB,2CAA1B,CAmCA,mBACE,MAAC,KAAD,EACE,KAAK,WAAKrB,YAAY,CAACuB,MAAlB,aAA4BnB,cAAc,CAAGE,CAAC,CAAC,SAAD,CAAJ,CAAkBA,CAAC,CAAC,SAAD,CAA7D,CADP,CAEE,SAAS,CAAED,SAFb,CAGE,gBAAgB,CAAEE,KAAK,CAACmB,MAAN,CAAaC,SAAb,CAAuBC,UAH3C,WAKGxB,cAAc,eACb,MAAC,IAAD,EAAM,cAAc,CAAC,QAArB,CAA8B,UAAU,CAAC,QAAzC,CAAkD,EAAE,CAAC,MAArD,wBACE,MAAC,UAAD,EACE,WAAW,CAAEU,cAAc,CAAG,CAAH,CAAO,CADpC,CAEE,KAAK,CAAC,IAFR,CAGE,OAAO,CAAC,QAHV,CAIE,WAAW,CAAE,qBAACe,KAAD,QAAWd,CAAAA,iBAAiB,CAAC,CAACc,KAAF,CAA5B,EAJf,wBAME,KAAC,cAAD,EAAgB,EAAE,CAAC,QAAnB,UAA6BvB,CAAC,CAAC,UAAD,CAA9B,EANF,cAOE,KAAC,cAAD,EAAgB,EAAE,CAAC,QAAnB,UAA6BA,CAAC,CAAC,SAAD,CAA9B,EAPF,GADF,cAUE,KAAC,IAAD,EAAM,EAAE,CAAC,MAAT,CAAgB,GAAG,CAAEY,SAArB,uBACE,KAAC,QAAD,EAAU,KAAK,CAAC,YAAhB,EADF,EAVF,CAaGE,cAAc,EAAID,OAbrB,GANJ,cAuBE,MAAC,IAAD,EAAM,cAAc,CAAC,eAArB,CAAqC,UAAU,CAAC,QAAhD,CAAyD,EAAE,CAAC,MAA5D,wBACE,MAAC,IAAD,YAAOL,cAAc,CAAGR,CAAC,CAAC,aAAD,CAAJ,CAAsBA,CAAC,CAAC,YAAD,CAA5C,OADF,cAEE,MAAC,IAAD,EAAM,aAAa,CAAC,QAApB,wBACE,MAAC,OAAD,YACGR,gBADH,KACsBE,YAAY,CAACuB,MADnC,GADF,CAIGtB,mBAAmB,CAAG,CAAtB,eACC,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,CAAsB,KAAK,CAAC,YAA5B,qBAA8CP,YAAY,CAACO,mBAAD,CAA1D,UALJ,GAFF,GAvBF,cAmCE,KAAC,MAAD,EACE,EAAE,CAAC,KADL,CAEE,OAAO,CAAEoB,oBAFX,CAGE,SAAS,CAAET,SAHb,CAIE,OAAO,CAAEA,SAAS,cAAG,KAAC,aAAD,EAAe,IAAI,KAAnB,CAAoB,KAAK,CAAC,cAA1B,EAAH,CAAiD,IAJrE,UAMGA,SAAS,CAAGN,CAAC,CAAC,YAAD,CAAJ,CAAqBA,CAAC,CAAC,SAAD,CANlC,EAnCF,cA2CE,KAAC,MAAD,EAAQ,OAAO,CAAC,MAAhB,CAAuB,OAAO,CAAED,SAAhC,CAA2C,EAAE,CAAC,KAA9C,UACGC,CAAC,CAAC,cAAD,CADJ,EA3CF,GADF,CAiDD,CA7GD,CA+GA,cAAeT,CAAAA,YAAf","sourcesContent":["import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from '@pancakeswap/sdk'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n"]},"metadata":{},"sourceType":"module"}