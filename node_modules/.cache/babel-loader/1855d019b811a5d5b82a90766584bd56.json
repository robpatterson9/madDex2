{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Profile/components/EditProfileModal/ChangeProfilePicView.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Box, Text } from '@pancakeswap/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { useAppDispatch } from 'state';\nimport { useProfile } from 'state/profile/hooks';\nimport { useTranslation } from 'contexts/Localization';\nimport useToast from 'hooks/useToast';\nimport { fetchProfile } from 'state/profile';\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction';\nimport { getErc721Contract } from 'utils/contractHelpers';\nimport { useProfile as useProfileContract } from 'hooks/useContract';\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice';\nimport { getPancakeProfileAddress } from 'utils/addressHelpers';\nimport { ToastDescriptionWithTx } from 'components/Toast';\nimport ApproveConfirmButtons from 'components/ApproveConfirmButtons';\nimport SelectionCard from 'views/ProfileCreation/SelectionCard';\nimport { useUserNfts } from 'state/nftMarket/hooks';\nimport { NftLocation } from 'state/nftMarket/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChangeProfilePicPage = ({\n  onDismiss\n}) => {\n  _s();\n\n  const [selectedNft, setSelectedNft] = useState({\n    tokenId: null,\n    collectionAddress: null\n  });\n  const {\n    t\n  } = useTranslation();\n  const {\n    nfts\n  } = useUserNfts();\n  const dispatch = useAppDispatch();\n  const {\n    profile\n  } = useProfile();\n  const profileContract = useProfileContract();\n  const {\n    account,\n    library\n  } = useWeb3React();\n  const {\n    toastSuccess\n  } = useToast();\n  const {\n    callWithGasPrice\n  } = useCallWithGasPrice();\n  const nftsInWallet = nfts.filter(nft => nft.location === NftLocation.WALLET);\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm\n  } = useApproveConfirmTransaction({\n    onApprove: () => {\n      const contract = getErc721Contract(selectedNft.collectionAddress, library.getSigner());\n      return callWithGasPrice(contract, 'approve', [getPancakeProfileAddress(), selectedNft.tokenId]);\n    },\n    onConfirm: () => {\n      if (!profile.isActive) {\n        return callWithGasPrice(profileContract, 'reactivateProfile', [selectedNft.collectionAddress, selectedNft.tokenId]);\n      }\n\n      return callWithGasPrice(profileContract, 'updateProfile', [selectedNft.collectionAddress, selectedNft.tokenId]);\n    },\n    onSuccess: async ({\n      receipt\n    }) => {\n      // Re-fetch profile\n      await dispatch(fetchProfile(account));\n      toastSuccess(t('Profile Updated!'), /*#__PURE__*/_jsxDEV(ToastDescriptionWithTx, {\n        txHash: receipt.transactionHash\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 45\n      }, this));\n      onDismiss();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      color: \"textSubtle\",\n      mb: \"24px\",\n      children: t('Choose a new Collectible to use as your profile pic.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      maxHeight: \"300px\",\n      overflowY: \"scroll\",\n      children: nftsInWallet.map(walletNft => {\n        const handleChange = tokenId => {\n          setSelectedNft({\n            tokenId,\n            collectionAddress: walletNft.collectionAddress\n          });\n        };\n\n        return /*#__PURE__*/_jsxDEV(SelectionCard, {\n          name: \"profilePicture\",\n          value: selectedNft.tokenId,\n          image: walletNft.image.thumbnail,\n          isChecked: walletNft.tokenId === selectedNft.tokenId,\n          onChange: () => handleChange(walletNft.tokenId),\n          disabled: isApproving || isConfirming || isConfirmed,\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            children: walletNft.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, walletNft.tokenId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), nfts.length === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        as: \"p\",\n        color: \"textSubtle\",\n        mb: \"16px\",\n        children: t('Sorry! You donâ€™t have any eligible Collectibles in your wallet to use!')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        as: \"p\",\n        color: \"textSubtle\",\n        mb: \"24px\",\n        children: t('Make sure you have a Pancake Collectible in your wallet and try again!')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ApproveConfirmButtons, {\n      isApproveDisabled: isConfirmed || isConfirming || isApproved || selectedNft.tokenId === null,\n      isApproving: isApproving,\n      isConfirmDisabled: !isApproved || isConfirmed || selectedNft.tokenId === null,\n      isConfirming: isConfirming,\n      onApprove: handleApprove,\n      onConfirm: handleConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      mt: \"8px\",\n      variant: \"text\",\n      width: \"100%\",\n      onClick: onDismiss,\n      disabled: isApproving || isConfirming,\n      children: t('Close Window')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChangeProfilePicPage, \"hWA9ls3sMySkA2XzFnBpwMxzw6A=\", false, function () {\n  return [useTranslation, useUserNfts, useAppDispatch, useProfile, useProfileContract, useWeb3React, useToast, useCallWithGasPrice, useApproveConfirmTransaction];\n});\n\n_c = ChangeProfilePicPage;\nexport default ChangeProfilePicPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeProfilePicPage\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Profile/components/EditProfileModal/ChangeProfilePicView.tsx"],"names":["React","useState","Button","Box","Text","useWeb3React","useAppDispatch","useProfile","useTranslation","useToast","fetchProfile","useApproveConfirmTransaction","getErc721Contract","useProfileContract","useCallWithGasPrice","getPancakeProfileAddress","ToastDescriptionWithTx","ApproveConfirmButtons","SelectionCard","useUserNfts","NftLocation","ChangeProfilePicPage","onDismiss","selectedNft","setSelectedNft","tokenId","collectionAddress","t","nfts","dispatch","profile","profileContract","account","library","toastSuccess","callWithGasPrice","nftsInWallet","filter","nft","location","WALLET","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","onApprove","contract","getSigner","onConfirm","isActive","onSuccess","receipt","transactionHash","map","walletNft","handleChange","image","thumbnail","name","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Button, Box, InjectedModalProps, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { useProfile } from 'state/profile/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useToast from 'hooks/useToast'\nimport { fetchProfile } from 'state/profile'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport ApproveConfirmButtons from 'components/ApproveConfirmButtons'\nimport SelectionCard from 'views/ProfileCreation/SelectionCard'\nimport { useUserNfts } from 'state/nftMarket/hooks'\nimport { NftLocation } from 'state/nftMarket/types'\n\ntype ChangeProfilePicPageProps = InjectedModalProps\n\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\n  const [selectedNft, setSelectedNft] = useState({\n    tokenId: null,\n    collectionAddress: null,\n  })\n  const { t } = useTranslation()\n  const { nfts } = useUserNfts()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const profileContract = useProfileContract()\n  const { account, library } = useWeb3React()\n  const { toastSuccess } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n\n  const nftsInWallet = nfts.filter((nft) => nft.location === NftLocation.WALLET)\n\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onApprove: () => {\n        const contract = getErc721Contract(selectedNft.collectionAddress, library.getSigner())\n        return callWithGasPrice(contract, 'approve', [getPancakeProfileAddress(), selectedNft.tokenId])\n      },\n      onConfirm: () => {\n        if (!profile.isActive) {\n          return callWithGasPrice(profileContract, 'reactivateProfile', [\n            selectedNft.collectionAddress,\n            selectedNft.tokenId,\n          ])\n        }\n\n        return callWithGasPrice(profileContract, 'updateProfile', [selectedNft.collectionAddress, selectedNft.tokenId])\n      },\n      onSuccess: async ({ receipt }) => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account))\n        toastSuccess(t('Profile Updated!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n\n        onDismiss()\n      },\n    })\n\n  return (\n    <>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t('Choose a new Collectible to use as your profile pic.')}\n      </Text>\n      <Box maxHeight=\"300px\" overflowY=\"scroll\">\n        {nftsInWallet.map((walletNft) => {\n          const handleChange = (tokenId: string) => {\n            setSelectedNft({\n              tokenId,\n              collectionAddress: walletNft.collectionAddress,\n            })\n          }\n          return (\n            <SelectionCard\n              name=\"profilePicture\"\n              key={walletNft.tokenId}\n              value={selectedNft.tokenId}\n              image={walletNft.image.thumbnail}\n              isChecked={walletNft.tokenId === selectedNft.tokenId}\n              onChange={() => handleChange(walletNft.tokenId)}\n              disabled={isApproving || isConfirming || isConfirmed}\n            >\n              <Text bold>{walletNft.name}</Text>\n            </SelectionCard>\n          )\n        })}\n      </Box>\n      {nfts.length === 0 && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {t('Sorry! You donâ€™t have any eligible Collectibles in your wallet to use!')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t('Make sure you have a Pancake Collectible in your wallet and try again!')}\n          </Text>\n        </>\n      )}\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || selectedNft.tokenId === null}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed || selectedNft.tokenId === null}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n      <Button mt=\"8px\" variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\n        {t('Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default ChangeProfilePicPage\n"]},"metadata":{},"sourceType":"module"}