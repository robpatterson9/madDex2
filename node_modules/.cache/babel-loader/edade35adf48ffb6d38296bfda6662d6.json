{"ast":null,"code":"import React from'react';import{useWeb3React}from'@web3-react/core';import{orderBy}from'lodash';import{Box,Button,Flex,Heading,Text}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{useAppDispatch}from'state';import{fetchNodeHistory}from'state/predictions';import{useGetCurrentHistoryPage,useGetHasHistoryLoaded,useGetIsFetchingHistory}from'state/predictions/hooks';import HistoricalBet from'./HistoricalBet';import V1ClaimCheck from'../v1/V1ClaimCheck';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RoundsTab=function RoundsTab(_ref){var hasBetHistory=_ref.hasBetHistory,bets=_ref.bets;var _useTranslation=useTranslation(),t=_useTranslation.t;var dispatch=useAppDispatch();var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var hasHistoryLoaded=useGetHasHistoryLoaded();var currentHistoryPage=useGetCurrentHistoryPage();var isFetchingHistory=useGetIsFetchingHistory();var handleClick=function handleClick(){dispatch(fetchNodeHistory({account:account,page:currentHistoryPage+1}));};return hasBetHistory?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(V1ClaimCheck,{}),orderBy(bets,['round.epoch'],['desc']).map(function(bet){return/*#__PURE__*/_jsx(HistoricalBet,{bet:bet},bet.round.epoch);}),hasBetHistory&&!hasHistoryLoaded&&/*#__PURE__*/_jsx(Flex,{alignItems:\"center\",justifyContent:\"center\",py:\"24px\",children:/*#__PURE__*/_jsx(Button,{variant:\"secondary\",scale:\"sm\",onClick:handleClick,disabled:isFetchingHistory,children:t('View More')})})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(V1ClaimCheck,{}),/*#__PURE__*/_jsxs(Box,{p:\"24px\",children:[/*#__PURE__*/_jsx(Heading,{size:\"lg\",textAlign:\"center\",mb:\"8px\",children:t('No prediction history available')}),/*#__PURE__*/_jsx(Text,{as:\"p\",textAlign:\"center\",children:t('If you are sure you should see history here, make sure you’re connected to the correct wallet and try again.')})]})]});};export default RoundsTab;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/History/RoundsTab.tsx"],"names":["React","useWeb3React","orderBy","Box","Button","Flex","Heading","Text","useTranslation","useAppDispatch","fetchNodeHistory","useGetCurrentHistoryPage","useGetHasHistoryLoaded","useGetIsFetchingHistory","HistoricalBet","V1ClaimCheck","RoundsTab","hasBetHistory","bets","t","dispatch","account","hasHistoryLoaded","currentHistoryPage","isFetchingHistory","handleClick","page","map","bet","round","epoch"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OAASC,OAAT,KAAwB,QAAxB,CACA,OAASC,GAAT,CAAcC,MAAd,CAAsBC,IAAtB,CAA4BC,OAA5B,CAAqCC,IAArC,KAAiD,oBAAjD,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,cAAT,KAA+B,OAA/B,CAEA,OAASC,gBAAT,KAAiC,mBAAjC,CACA,OAASC,wBAAT,CAAmCC,sBAAnC,CAA2DC,uBAA3D,KAA0F,yBAA1F,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,YAAP,KAAyB,oBAAzB,C,6IAOA,GAAMC,CAAAA,SAAmC,CAAG,QAAtCA,CAAAA,SAAsC,MAA6B,IAA1BC,CAAAA,aAA0B,MAA1BA,aAA0B,CAAXC,IAAW,MAAXA,IAAW,CACvE,oBAAcV,cAAc,EAA5B,CAAQW,CAAR,iBAAQA,CAAR,CACA,GAAMC,CAAAA,QAAQ,CAAGX,cAAc,EAA/B,CACA,kBAAoBR,YAAY,EAAhC,CAAQoB,OAAR,eAAQA,OAAR,CACA,GAAMC,CAAAA,gBAAgB,CAAGV,sBAAsB,EAA/C,CACA,GAAMW,CAAAA,kBAAkB,CAAGZ,wBAAwB,EAAnD,CACA,GAAMa,CAAAA,iBAAiB,CAAGX,uBAAuB,EAAjD,CAEA,GAAMY,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBL,QAAQ,CAACV,gBAAgB,CAAC,CAAEW,OAAO,CAAPA,OAAF,CAAWK,IAAI,CAAEH,kBAAkB,CAAG,CAAtC,CAAD,CAAjB,CAAR,CACD,CAFD,CAIA,MAAON,CAAAA,aAAa,cAClB,wCACE,KAAC,YAAD,IADF,CAEGf,OAAO,CAACgB,IAAD,CAAO,CAAC,aAAD,CAAP,CAAwB,CAAC,MAAD,CAAxB,CAAP,CAAyCS,GAAzC,CAA6C,SAACC,GAAD,qBAC5C,KAAC,aAAD,EAAqC,GAAG,CAAEA,GAA1C,EAAoBA,GAAG,CAACC,KAAJ,CAAUC,KAA9B,CAD4C,EAA7C,CAFH,CAKGb,aAAa,EAAI,CAACK,gBAAlB,eACC,KAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,CAA0B,cAAc,CAAC,QAAzC,CAAkD,EAAE,CAAC,MAArD,uBACE,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,KAAK,CAAC,IAAlC,CAAuC,OAAO,CAAEG,WAAhD,CAA6D,QAAQ,CAAED,iBAAvE,UACGL,CAAC,CAAC,WAAD,CADJ,EADF,EANJ,GADkB,cAelB,wCACE,KAAC,YAAD,IADF,cAEE,MAAC,GAAD,EAAK,CAAC,CAAC,MAAP,wBACE,KAAC,OAAD,EAAS,IAAI,CAAC,IAAd,CAAmB,SAAS,CAAC,QAA7B,CAAsC,EAAE,CAAC,KAAzC,UACGA,CAAC,CAAC,iCAAD,CADJ,EADF,cAIE,KAAC,IAAD,EAAM,EAAE,CAAC,GAAT,CAAa,SAAS,CAAC,QAAvB,UACGA,CAAC,CACA,8GADA,CADJ,EAJF,GAFF,GAfF,CA6BD,CAzCD,CA2CA,cAAeH,CAAAA,SAAf","sourcesContent":["import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { orderBy } from 'lodash'\nimport { Box, Button, Flex, Heading, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { Bet } from 'state/types'\nimport { fetchNodeHistory } from 'state/predictions'\nimport { useGetCurrentHistoryPage, useGetHasHistoryLoaded, useGetIsFetchingHistory } from 'state/predictions/hooks'\nimport HistoricalBet from './HistoricalBet'\nimport V1ClaimCheck from '../v1/V1ClaimCheck'\n\ninterface RoundsTabProps {\n  hasBetHistory: boolean\n  bets: Bet[]\n}\n\nconst RoundsTab: React.FC<RoundsTabProps> = ({ hasBetHistory, bets }) => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const hasHistoryLoaded = useGetHasHistoryLoaded()\n  const currentHistoryPage = useGetCurrentHistoryPage()\n  const isFetchingHistory = useGetIsFetchingHistory()\n\n  const handleClick = () => {\n    dispatch(fetchNodeHistory({ account, page: currentHistoryPage + 1 }))\n  }\n\n  return hasBetHistory ? (\n    <>\n      <V1ClaimCheck />\n      {orderBy(bets, ['round.epoch'], ['desc']).map((bet) => (\n        <HistoricalBet key={bet.round.epoch} bet={bet} />\n      ))}\n      {hasBetHistory && !hasHistoryLoaded && (\n        <Flex alignItems=\"center\" justifyContent=\"center\" py=\"24px\">\n          <Button variant=\"secondary\" scale=\"sm\" onClick={handleClick} disabled={isFetchingHistory}>\n            {t('View More')}\n          </Button>\n        </Flex>\n      )}\n    </>\n  ) : (\n    <>\n      <V1ClaimCheck />\n      <Box p=\"24px\">\n        <Heading size=\"lg\" textAlign=\"center\" mb=\"8px\">\n          {t('No prediction history available')}\n        </Heading>\n        <Text as=\"p\" textAlign=\"center\">\n          {t(\n            'If you are sure you should see history here, make sure you’re connected to the correct wallet and try again.',\n          )}\n        </Text>\n      </Box>\n    </>\n  )\n}\n\nexport default RoundsTab\n"]},"metadata":{},"sourceType":"module"}