{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useMemo,useState}from'react';import{Text,Box,Card,Flex,Skeleton}from'@pancakeswap/uikit';import LineChart from'views/Info/components/InfoCharts/LineChart';import BarChart from'views/Info/components/InfoCharts/BarChart';import CandleChart from'views/Info/components/InfoCharts/CandleChart';import{TabToggleGroup,TabToggle}from'components/TabToggle';import{useTranslation}from'contexts/Localization';import{formatAmount}from'views/Info/utils/formatInfoNumbers';import{format,fromUnixTime}from'date-fns';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var ChartView;(function(ChartView){ChartView[ChartView[\"LIQUIDITY\"]=0]=\"LIQUIDITY\";ChartView[ChartView[\"VOLUME\"]=1]=\"VOLUME\";ChartView[ChartView[\"PRICE\"]=2]=\"PRICE\";})(ChartView||(ChartView={}));var ChartCard=function ChartCard(_ref){var variant=_ref.variant,chartData=_ref.chartData,tokenData=_ref.tokenData,tokenPriceData=_ref.tokenPriceData;var _useState=useState(ChartView.VOLUME),_useState2=_slicedToArray(_useState,2),view=_useState2[0],setView=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),hoverValue=_useState4[0],setHoverValue=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),hoverDate=_useState6[0],setHoverDate=_useState6[1];var _useTranslation=useTranslation(),t=_useTranslation.t;var currentDate=format(new Date(),'MMM d, yyyy');var formattedTvlData=useMemo(function(){if(chartData){return chartData.map(function(day){return{time:fromUnixTime(day.date),value:day.liquidityUSD};});}return[];},[chartData]);var formattedVolumeData=useMemo(function(){if(chartData){return chartData.map(function(day){return{time:fromUnixTime(day.date),value:day.volumeUSD};});}return[];},[chartData]);var getLatestValueDisplay=function getLatestValueDisplay(){var valueToDisplay=null;if(hoverValue){valueToDisplay=formatAmount(hoverValue);}else if(view===ChartView.VOLUME&&formattedVolumeData.length>0){var _formattedVolumeData;valueToDisplay=formatAmount((_formattedVolumeData=formattedVolumeData[formattedVolumeData.length-1])===null||_formattedVolumeData===void 0?void 0:_formattedVolumeData.value);}else if(view===ChartView.LIQUIDITY&&formattedTvlData.length>0){var _formattedTvlData;valueToDisplay=formatAmount((_formattedTvlData=formattedTvlData[formattedTvlData.length-1])===null||_formattedTvlData===void 0?void 0:_formattedTvlData.value);}else if(view===ChartView.PRICE&&(tokenData===null||tokenData===void 0?void 0:tokenData.priceUSD)){valueToDisplay=formatAmount(tokenData.priceUSD);}return valueToDisplay?/*#__PURE__*/_jsxs(Text,{fontSize:\"24px\",bold:true,children:[\"$\",valueToDisplay]}):/*#__PURE__*/_jsx(Skeleton,{height:\"36px\",width:\"128px\"});};return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(TabToggleGroup,{children:[/*#__PURE__*/_jsx(TabToggle,{isActive:view===ChartView.VOLUME,onClick:function onClick(){return setView(ChartView.VOLUME);},children:/*#__PURE__*/_jsx(Text,{children:t('Volume')})}),/*#__PURE__*/_jsx(TabToggle,{isActive:view===ChartView.LIQUIDITY,onClick:function onClick(){return setView(ChartView.LIQUIDITY);},children:/*#__PURE__*/_jsx(Text,{children:t('Liquidity')})}),variant==='token'&&/*#__PURE__*/_jsx(TabToggle,{isActive:view===ChartView.PRICE,onClick:function onClick(){return setView(ChartView.PRICE);},children:/*#__PURE__*/_jsx(Text,{children:t('Price')})})]}),/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",px:\"24px\",pt:\"24px\",children:[getLatestValueDisplay(),/*#__PURE__*/_jsx(Text,{small:true,color:\"secondary\",children:hoverDate||currentDate})]}),/*#__PURE__*/_jsx(Box,{px:\"24px\",height:variant==='token'?'250px':'335px',children:view===ChartView.LIQUIDITY?/*#__PURE__*/_jsx(LineChart,{data:formattedTvlData,setHoverValue:setHoverValue,setHoverDate:setHoverDate}):view===ChartView.VOLUME?/*#__PURE__*/_jsx(BarChart,{data:formattedVolumeData,setHoverValue:setHoverValue,setHoverDate:setHoverDate}):view===ChartView.PRICE?/*#__PURE__*/_jsx(CandleChart,{data:tokenPriceData,setValue:setHoverValue,setLabel:setHoverDate}):null})]});};export default ChartCard;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Info/components/InfoCharts/ChartCard/index.tsx"],"names":["React","useMemo","useState","Text","Box","Card","Flex","Skeleton","LineChart","BarChart","CandleChart","TabToggleGroup","TabToggle","useTranslation","formatAmount","format","fromUnixTime","ChartView","ChartCard","variant","chartData","tokenData","tokenPriceData","VOLUME","view","setView","hoverValue","setHoverValue","hoverDate","setHoverDate","t","currentDate","Date","formattedTvlData","map","day","time","date","value","liquidityUSD","formattedVolumeData","volumeUSD","getLatestValueDisplay","valueToDisplay","length","LIQUIDITY","PRICE","priceUSD"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from 'react'\nimport { Text, Box, Card, Flex, Skeleton } from '@pancakeswap/uikit'\nimport LineChart from 'views/Info/components/InfoCharts/LineChart'\nimport BarChart from 'views/Info/components/InfoCharts/BarChart'\nimport CandleChart from 'views/Info/components/InfoCharts/CandleChart'\nimport { TabToggleGroup, TabToggle } from 'components/TabToggle'\nimport { useTranslation } from 'contexts/Localization'\nimport { formatAmount } from 'views/Info/utils/formatInfoNumbers'\nimport { ChartEntry, TokenData, PriceChartEntry } from 'state/info/types'\nimport { format, fromUnixTime } from 'date-fns'\n\nenum ChartView {\n  LIQUIDITY,\n  VOLUME,\n  PRICE,\n}\n\ninterface ChartCardProps {\n  variant: 'pool' | 'token'\n  chartData: ChartEntry[]\n  tokenData?: TokenData\n  tokenPriceData?: PriceChartEntry[]\n}\n\nconst ChartCard: React.FC<ChartCardProps> = ({ variant, chartData, tokenData, tokenPriceData }) => {\n  const [view, setView] = useState(ChartView.VOLUME)\n  const [hoverValue, setHoverValue] = useState<number | undefined>()\n  const [hoverDate, setHoverDate] = useState<string | undefined>()\n  const { t } = useTranslation()\n\n  const currentDate = format(new Date(), 'MMM d, yyyy')\n\n  const formattedTvlData = useMemo(() => {\n    if (chartData) {\n      return chartData.map((day) => {\n        return {\n          time: fromUnixTime(day.date),\n          value: day.liquidityUSD,\n        }\n      })\n    }\n    return []\n  }, [chartData])\n  const formattedVolumeData = useMemo(() => {\n    if (chartData) {\n      return chartData.map((day) => {\n        return {\n          time: fromUnixTime(day.date),\n          value: day.volumeUSD,\n        }\n      })\n    }\n    return []\n  }, [chartData])\n\n  const getLatestValueDisplay = () => {\n    let valueToDisplay = null\n    if (hoverValue) {\n      valueToDisplay = formatAmount(hoverValue)\n    } else if (view === ChartView.VOLUME && formattedVolumeData.length > 0) {\n      valueToDisplay = formatAmount(formattedVolumeData[formattedVolumeData.length - 1]?.value)\n    } else if (view === ChartView.LIQUIDITY && formattedTvlData.length > 0) {\n      valueToDisplay = formatAmount(formattedTvlData[formattedTvlData.length - 1]?.value)\n    } else if (view === ChartView.PRICE && tokenData?.priceUSD) {\n      valueToDisplay = formatAmount(tokenData.priceUSD)\n    }\n\n    return valueToDisplay ? (\n      <Text fontSize=\"24px\" bold>\n        ${valueToDisplay}\n      </Text>\n    ) : (\n      <Skeleton height=\"36px\" width=\"128px\" />\n    )\n  }\n\n  return (\n    <Card>\n      <TabToggleGroup>\n        <TabToggle isActive={view === ChartView.VOLUME} onClick={() => setView(ChartView.VOLUME)}>\n          <Text>{t('Volume')}</Text>\n        </TabToggle>\n        <TabToggle isActive={view === ChartView.LIQUIDITY} onClick={() => setView(ChartView.LIQUIDITY)}>\n          <Text>{t('Liquidity')}</Text>\n        </TabToggle>\n        {variant === 'token' && (\n          <TabToggle isActive={view === ChartView.PRICE} onClick={() => setView(ChartView.PRICE)}>\n            <Text>{t('Price')}</Text>\n          </TabToggle>\n        )}\n      </TabToggleGroup>\n\n      <Flex flexDirection=\"column\" px=\"24px\" pt=\"24px\">\n        {getLatestValueDisplay()}\n        <Text small color=\"secondary\">\n          {hoverDate || currentDate}\n        </Text>\n      </Flex>\n\n      <Box px=\"24px\" height={variant === 'token' ? '250px' : '335px'}>\n        {view === ChartView.LIQUIDITY ? (\n          <LineChart data={formattedTvlData} setHoverValue={setHoverValue} setHoverDate={setHoverDate} />\n        ) : view === ChartView.VOLUME ? (\n          <BarChart data={formattedVolumeData} setHoverValue={setHoverValue} setHoverDate={setHoverDate} />\n        ) : view === ChartView.PRICE ? (\n          <CandleChart data={tokenPriceData} setValue={setHoverValue} setLabel={setHoverDate} />\n        ) : null}\n      </Box>\n    </Card>\n  )\n}\n\nexport default ChartCard\n"]},"metadata":{},"sourceType":"module"}