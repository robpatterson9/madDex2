{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Farms/components/FarmCard/ApyButton.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Flex, IconButton, useModal, CalculateIcon } from '@pancakeswap/uikit';\nimport RoiCalculatorModal from 'components/RoiCalculatorModal';\nimport { useTranslation } from 'contexts/Localization';\nimport { useFarmUser, useLpTokenPrice } from 'state/farms/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n_c = ApyLabelContainer;\n\nconst ApyButton = ({\n  variant,\n  pid,\n  lpLabel,\n  lpSymbol,\n  cakePrice,\n  apr,\n  multiplier,\n  displayApr,\n  addLiquidityUrl\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const lpPrice = useLpTokenPrice(lpSymbol);\n  const {\n    tokenBalance,\n    stakedBalance\n  } = useFarmUser(pid);\n  const [onPresentApyModal] = useModal( /*#__PURE__*/_jsxDEV(RoiCalculatorModal, {\n    linkLabel: t('Get %symbol%', {\n      symbol: lpLabel\n    }),\n    stakingTokenBalance: stakedBalance.plus(tokenBalance),\n    stakingTokenSymbol: lpSymbol,\n    stakingTokenPrice: lpPrice.toNumber(),\n    earningTokenPrice: cakePrice.toNumber(),\n    apr: apr,\n    multiplier: multiplier,\n    displayApr: displayApr,\n    linkHref: addLiquidityUrl,\n    isFarm: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this));\n\n  const handleClickButton = event => {\n    event.stopPropagation();\n    onPresentApyModal();\n  };\n\n  return /*#__PURE__*/_jsxDEV(ApyLabelContainer, {\n    alignItems: \"center\",\n    onClick: handleClickButton,\n    children: [displayApr, \"%\", variant === 'text-and-button' && /*#__PURE__*/_jsxDEV(IconButton, {\n      variant: \"text\",\n      scale: \"sm\",\n      ml: \"4px\",\n      children: /*#__PURE__*/_jsxDEV(CalculateIcon, {\n        width: \"18px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ApyButton, \"ITf7fwKr2lXSnIi+qeLnn1hFTnA=\", false, function () {\n  return [useTranslation, useLpTokenPrice, useFarmUser, useModal];\n});\n\n_c2 = ApyButton;\nexport default ApyButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ApyLabelContainer\");\n$RefreshReg$(_c2, \"ApyButton\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Farms/components/FarmCard/ApyButton.tsx"],"names":["React","styled","Flex","IconButton","useModal","CalculateIcon","RoiCalculatorModal","useTranslation","useFarmUser","useLpTokenPrice","ApyLabelContainer","ApyButton","variant","pid","lpLabel","lpSymbol","cakePrice","apr","multiplier","displayApr","addLiquidityUrl","t","lpPrice","tokenBalance","stakedBalance","onPresentApyModal","symbol","plus","toNumber","handleClickButton","event","stopPropagation"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,QAA3B,EAAqCC,aAArC,QAA0D,oBAA1D;AACA,OAAOC,kBAAP,MAA+B,+BAA/B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,mBAA7C;;AAEA,MAAMC,iBAAiB,GAAGT,MAAM,CAACC,IAAD,CAAO;AACvC;AACA;AACA;AACA;AACA;AACA,CANA;KAAMQ,iB;;AAoBN,MAAMC,SAAmC,GAAG,CAAC;AAC3CC,EAAAA,OAD2C;AAE3CC,EAAAA,GAF2C;AAG3CC,EAAAA,OAH2C;AAI3CC,EAAAA,QAJ2C;AAK3CC,EAAAA,SAL2C;AAM3CC,EAAAA,GAN2C;AAO3CC,EAAAA,UAP2C;AAQ3CC,EAAAA,UAR2C;AAS3CC,EAAAA;AAT2C,CAAD,KAUtC;AAAA;;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAQd,cAAc,EAA5B;AACA,QAAMe,OAAO,GAAGb,eAAe,CAACM,QAAD,CAA/B;AACA,QAAM;AAAEQ,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkChB,WAAW,CAACK,GAAD,CAAnD;AACA,QAAM,CAACY,iBAAD,IAAsBrB,QAAQ,eAClC,QAAC,kBAAD;AACE,IAAA,SAAS,EAAEiB,CAAC,CAAC,cAAD,EAAiB;AAAEK,MAAAA,MAAM,EAAEZ;AAAV,KAAjB,CADd;AAEE,IAAA,mBAAmB,EAAEU,aAAa,CAACG,IAAd,CAAmBJ,YAAnB,CAFvB;AAGE,IAAA,kBAAkB,EAAER,QAHtB;AAIE,IAAA,iBAAiB,EAAEO,OAAO,CAACM,QAAR,EAJrB;AAKE,IAAA,iBAAiB,EAAEZ,SAAS,CAACY,QAAV,EALrB;AAME,IAAA,GAAG,EAAEX,GANP;AAOE,IAAA,UAAU,EAAEC,UAPd;AAQE,IAAA,UAAU,EAAEC,UARd;AASE,IAAA,QAAQ,EAAEC,eATZ;AAUE,IAAA,MAAM;AAVR;AAAA;AAAA;AAAA;AAAA,UADkC,CAApC;;AAeA,QAAMS,iBAAiB,GAAIC,KAAD,IAAiB;AACzCA,IAAAA,KAAK,CAACC,eAAN;AACAN,IAAAA,iBAAiB;AAClB,GAHD;;AAKA,sBACE,QAAC,iBAAD;AAAmB,IAAA,UAAU,EAAC,QAA9B;AAAuC,IAAA,OAAO,EAAEI,iBAAhD;AAAA,eACGV,UADH,OAEGP,OAAO,KAAK,iBAAZ,iBACC,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,MAApB;AAA2B,MAAA,KAAK,EAAC,IAAjC;AAAsC,MAAA,EAAE,EAAC,KAAzC;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,KAAK,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA5CD;;GAAMD,S;UAWUJ,c,EACEE,e,EACwBD,W,EACZJ,Q;;;MAdxBO,S;AA8CN,eAAeA,SAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Flex, IconButton, useModal, CalculateIcon } from '@pancakeswap/uikit'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { useTranslation } from 'contexts/Localization'\nimport { useFarmUser, useLpTokenPrice } from 'state/farms/hooks'\n\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\nexport interface ApyButtonProps {\n  variant: 'text' | 'text-and-button'\n  pid: number\n  lpSymbol: string\n  lpLabel?: string\n  multiplier: string\n  cakePrice?: BigNumber\n  apr?: number\n  displayApr?: string\n  addLiquidityUrl?: string\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({\n  variant,\n  pid,\n  lpLabel,\n  lpSymbol,\n  cakePrice,\n  apr,\n  multiplier,\n  displayApr,\n  addLiquidityUrl,\n}) => {\n  const { t } = useTranslation()\n  const lpPrice = useLpTokenPrice(lpSymbol)\n  const { tokenBalance, stakedBalance } = useFarmUser(pid)\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      linkLabel={t('Get %symbol%', { symbol: lpLabel })}\n      stakingTokenBalance={stakedBalance.plus(tokenBalance)}\n      stakingTokenSymbol={lpSymbol}\n      stakingTokenPrice={lpPrice.toNumber()}\n      earningTokenPrice={cakePrice.toNumber()}\n      apr={apr}\n      multiplier={multiplier}\n      displayApr={displayApr}\n      linkHref={addLiquidityUrl}\n      isFarm\n    />,\n  )\n\n  const handleClickButton = (event): void => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <ApyLabelContainer alignItems=\"center\" onClick={handleClickButton}>\n      {displayApr}%\n      {variant === 'text-and-button' && (\n        <IconButton variant=\"text\" scale=\"sm\" ml=\"4px\">\n          <CalculateIcon width=\"18px\" />\n        </IconButton>\n      )}\n    </ApyLabelContainer>\n  )\n}\n\nexport default ApyButton\n"]},"metadata":{},"sourceType":"module"}