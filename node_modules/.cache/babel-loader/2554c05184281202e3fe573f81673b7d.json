{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Flex,Grid,Text,Button,Link,BinanceIcon,LinkExternal,useModal}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{BASE_URL}from'config';import{nftsBaseUrl,pancakeBunniesAddress}from'views/Nft/market/constants';import{getBscScanLinkForNft}from'utils';import EditProfileModal from'views/Nft/market/Profile/components/EditProfileModal';import{useProfile}from'state/profile/hooks';import{Divider,HorizontalDivider,RoundedImage}from'../shared/styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";// Initial stage when user wants to put their NFT for sale or transfer to another wallet\nvar SellStage=function SellStage(_ref){var nftToSell=_ref.nftToSell,lowestPrice=_ref.lowestPrice,continueToNextStage=_ref.continueToNextStage,continueToTransferStage=_ref.continueToTransferStage;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useProfile=useProfile(),hasProfile=_useProfile.hasProfile;var itemPageUrlId=nftToSell.collectionAddress.toLowerCase()===pancakeBunniesAddress.toLowerCase()?nftToSell.attributes[0].value:nftToSell.tokenId;var _useModal=useModal(/*#__PURE__*/_jsx(EditProfileModal,{}),false),_useModal2=_slicedToArray(_useModal,1),onEditProfileModal=_useModal2[0];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Flex,{p:\"16px\",children:[/*#__PURE__*/_jsx(RoundedImage,{src:nftToSell.image.thumbnail,height:68,width:68,mr:\"8px\"}),/*#__PURE__*/_jsxs(Grid,{flex:\"1\",gridTemplateColumns:\"1fr 1fr\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Text,{bold:true,children:nftToSell.name}),/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",textAlign:\"right\",children:nftToSell.collectionName}),/*#__PURE__*/_jsx(Text,{small:true,color:\"textSubtle\",children:t('Lowest price')}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"flex-end\",children:[/*#__PURE__*/_jsx(BinanceIcon,{width:16,height:16,mr:\"4px\"}),/*#__PURE__*/_jsx(Text,{small:true,children:lowestPrice?lowestPrice.toLocaleString(undefined,{minimumFractionDigits:3,maximumFractionDigits:3}):'-'})]})]})]}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",px:\"16px\",mt:\"8px\",children:[/*#__PURE__*/_jsx(Flex,{flex:\"2\",children:/*#__PURE__*/_jsx(Text,{small:true,color:\"textSubtle\",children:t('Token ID: %id%',{id:nftToSell.tokenId})})}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",flex:\"3\",children:[/*#__PURE__*/_jsx(Button,{as:Link,p:\"0px\",height:\"16px\",external:true,variant:\"text\",href:\"\".concat(BASE_URL).concat(nftsBaseUrl,\"/collections/\").concat(nftToSell.collectionAddress,\"/\").concat(itemPageUrlId),children:t('View Item')}),/*#__PURE__*/_jsx(HorizontalDivider,{}),/*#__PURE__*/_jsx(LinkExternal,{p:\"0px\",height:\"16px\",href:getBscScanLinkForNft(nftToSell.collectionAddress,nftToSell.tokenId),children:\"BscScan\"})]})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",px:\"16px\",pb:\"16px\",children:[/*#__PURE__*/_jsx(Button,{mb:\"8px\",onClick:continueToNextStage,children:t('Sell')}),/*#__PURE__*/_jsx(Button,{mb:\"8px\",variant:\"secondary\",onClick:continueToTransferStage,children:t('Transfer')}),hasProfile&&/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:onEditProfileModal,children:t('Set as Profile Pic')})]})]});};export default SellStage;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/components/BuySellModals/SellModal/SellStage.tsx"],"names":["React","Flex","Grid","Text","Button","Link","BinanceIcon","LinkExternal","useModal","useTranslation","BASE_URL","nftsBaseUrl","pancakeBunniesAddress","getBscScanLinkForNft","EditProfileModal","useProfile","Divider","HorizontalDivider","RoundedImage","SellStage","nftToSell","lowestPrice","continueToNextStage","continueToTransferStage","t","hasProfile","itemPageUrlId","collectionAddress","toLowerCase","attributes","value","tokenId","onEditProfileModal","image","thumbnail","name","collectionName","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","id"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Flex, Grid, Text, Button, Link, BinanceIcon, LinkExternal, useModal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BASE_URL } from 'config'\nimport { nftsBaseUrl, pancakeBunniesAddress } from 'views/Nft/market/constants'\nimport { NftToken } from 'state/nftMarket/types'\nimport { getBscScanLinkForNft } from 'utils'\nimport EditProfileModal from 'views/Nft/market/Profile/components/EditProfileModal'\nimport { useProfile } from 'state/profile/hooks'\nimport { Divider, HorizontalDivider, RoundedImage } from '../shared/styles'\n\ninterface SellStageProps {\n  nftToSell: NftToken\n  lowestPrice: number\n  continueToNextStage: () => void\n  continueToTransferStage: () => void\n}\n\n// Initial stage when user wants to put their NFT for sale or transfer to another wallet\nconst SellStage: React.FC<SellStageProps> = ({\n  nftToSell,\n  lowestPrice,\n  continueToNextStage,\n  continueToTransferStage,\n}) => {\n  const { t } = useTranslation()\n  const { hasProfile } = useProfile()\n  const itemPageUrlId =\n    nftToSell.collectionAddress.toLowerCase() === pancakeBunniesAddress.toLowerCase()\n      ? nftToSell.attributes[0].value\n      : nftToSell.tokenId\n\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n\n  return (\n    <>\n      <Flex p=\"16px\">\n        <RoundedImage src={nftToSell.image.thumbnail} height={68} width={68} mr=\"8px\" />\n        <Grid flex=\"1\" gridTemplateColumns=\"1fr 1fr\" alignItems=\"center\">\n          <Text bold>{nftToSell.name}</Text>\n          <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"right\">\n            {nftToSell.collectionName}\n          </Text>\n          <Text small color=\"textSubtle\">\n            {t('Lowest price')}\n          </Text>\n          <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n            <BinanceIcon width={16} height={16} mr=\"4px\" />\n            <Text small>\n              {lowestPrice\n                ? lowestPrice.toLocaleString(undefined, {\n                    minimumFractionDigits: 3,\n                    maximumFractionDigits: 3,\n                  })\n                : '-'}\n            </Text>\n          </Flex>\n        </Grid>\n      </Flex>\n      <Flex justifyContent=\"space-between\" px=\"16px\" mt=\"8px\">\n        <Flex flex=\"2\">\n          <Text small color=\"textSubtle\">\n            {t('Token ID: %id%', { id: nftToSell.tokenId })}\n          </Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\" flex=\"3\">\n          <Button\n            as={Link}\n            p=\"0px\"\n            height=\"16px\"\n            external\n            variant=\"text\"\n            href={`${BASE_URL}${nftsBaseUrl}/collections/${nftToSell.collectionAddress}/${itemPageUrlId}`}\n          >\n            {t('View Item')}\n          </Button>\n          <HorizontalDivider />\n          <LinkExternal\n            p=\"0px\"\n            height=\"16px\"\n            href={getBscScanLinkForNft(nftToSell.collectionAddress, nftToSell.tokenId)}\n          >\n            BscScan\n          </LinkExternal>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex flexDirection=\"column\" px=\"16px\" pb=\"16px\">\n        <Button mb=\"8px\" onClick={continueToNextStage}>\n          {t('Sell')}\n        </Button>\n        <Button mb=\"8px\" variant=\"secondary\" onClick={continueToTransferStage}>\n          {t('Transfer')}\n        </Button>\n        {hasProfile && (\n          <Button variant=\"secondary\" onClick={onEditProfileModal}>\n            {t('Set as Profile Pic')}\n          </Button>\n        )}\n      </Flex>\n    </>\n  )\n}\n\nexport default SellStage\n"]},"metadata":{},"sourceType":"module"}