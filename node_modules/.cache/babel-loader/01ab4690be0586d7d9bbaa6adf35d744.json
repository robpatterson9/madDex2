{"ast":null,"code":"import React from'react';import{useWeb3React}from'@web3-react/core';import{useParams}from'react-router';import{isAddress}from'utils';import{Flex,Text}from'@pancakeswap/uikit';import Page from'components/Layout/Page';import{useTranslation}from'contexts/Localization';import ConnectedProfile from'./ConnectedProfile';import UnconnectedProfile from'./UnconnectedProfile';import MarketPageHeader from'../components/MarketPageHeader';import ProfileHeader from'./components/ProfileHeader';import NoNftsImage from'./components/NoNftsImage';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var NftProfile=function NftProfile(){var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useParams=useParams(),accountAddress=_useParams.accountAddress;var _useTranslation=useTranslation(),t=_useTranslation.t;var isConnectedProfile=(account===null||account===void 0?void 0:account.toLowerCase())===(accountAddress===null||accountAddress===void 0?void 0:accountAddress.toLowerCase());var invalidAddress=!accountAddress||isAddress(accountAddress)===false;if(invalidAddress){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MarketPageHeader,{position:\"relative\",children:/*#__PURE__*/_jsx(ProfileHeader,{accountPath:accountAddress,profile:null,achievements:null,nftCollected:null})}),/*#__PURE__*/_jsx(Page,{style:{minHeight:'auto'},children:/*#__PURE__*/_jsxs(Flex,{p:\"24px\",flexDirection:\"column\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(NoNftsImage,{}),/*#__PURE__*/_jsx(Text,{textAlign:\"center\",maxWidth:\"420px\",pt:\"8px\",bold:true,children:t('Please enter a valid address, or connect your wallet to view your profile')})]})})]});}return/*#__PURE__*/_jsx(_Fragment,{children:isConnectedProfile?/*#__PURE__*/_jsx(ConnectedProfile,{}):/*#__PURE__*/_jsx(UnconnectedProfile,{})});};export default NftProfile;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Profile/index.tsx"],"names":["React","useWeb3React","useParams","isAddress","Flex","Text","Page","useTranslation","ConnectedProfile","UnconnectedProfile","MarketPageHeader","ProfileHeader","NoNftsImage","NftProfile","account","accountAddress","t","isConnectedProfile","toLowerCase","invalidAddress","minHeight"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OAASC,SAAT,KAA0B,cAA1B,CACA,OAASC,SAAT,KAA0B,OAA1B,CACA,OAASC,IAAT,CAAeC,IAAf,KAA2B,oBAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,gCAA7B,CACA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,CACA,MAAOC,CAAAA,WAAP,KAAwB,0BAAxB,C,6IAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,kBAAoBZ,YAAY,EAAhC,CAAQa,OAAR,eAAQA,OAAR,CACA,eAA2BZ,SAAS,EAApC,CAAQa,cAAR,YAAQA,cAAR,CACA,oBAAcR,cAAc,EAA5B,CAAQS,CAAR,iBAAQA,CAAR,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,CAAAH,OAAO,OAAP,EAAAA,OAAO,SAAP,QAAAA,OAAO,CAAEI,WAAT,OAA2BH,cAA3B,SAA2BA,cAA3B,iBAA2BA,cAAc,CAAEG,WAAhB,EAA3B,CAA3B,CACA,GAAMC,CAAAA,cAAc,CAAG,CAACJ,cAAD,EAAmBZ,SAAS,CAACY,cAAD,CAAT,GAA8B,KAAxE,CAEA,GAAII,cAAJ,CAAoB,CAClB,mBACE,wCACE,KAAC,gBAAD,EAAkB,QAAQ,CAAC,UAA3B,uBACE,KAAC,aAAD,EAAe,WAAW,CAAEJ,cAA5B,CAA4C,OAAO,CAAE,IAArD,CAA2D,YAAY,CAAE,IAAzE,CAA+E,YAAY,CAAE,IAA7F,EADF,EADF,cAIE,KAAC,IAAD,EAAM,KAAK,CAAE,CAAEK,SAAS,CAAE,MAAb,CAAb,uBACE,MAAC,IAAD,EAAM,CAAC,CAAC,MAAR,CAAe,aAAa,CAAC,QAA7B,CAAsC,UAAU,CAAC,QAAjD,wBACE,KAAC,WAAD,IADF,cAEE,KAAC,IAAD,EAAM,SAAS,CAAC,QAAhB,CAAyB,QAAQ,CAAC,OAAlC,CAA0C,EAAE,CAAC,KAA7C,CAAmD,IAAI,KAAvD,UACGJ,CAAC,CAAC,2EAAD,CADJ,EAFF,GADF,EAJF,GADF,CAeD,CAED,mBAAO,yBAAGC,kBAAkB,cAAG,KAAC,gBAAD,IAAH,cAA0B,KAAC,kBAAD,IAA/C,EAAP,CACD,CA3BD,CA6BA,cAAeJ,CAAAA,UAAf","sourcesContent":["import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useParams } from 'react-router'\nimport { isAddress } from 'utils'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport Page from 'components/Layout/Page'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectedProfile from './ConnectedProfile'\nimport UnconnectedProfile from './UnconnectedProfile'\nimport MarketPageHeader from '../components/MarketPageHeader'\nimport ProfileHeader from './components/ProfileHeader'\nimport NoNftsImage from './components/NoNftsImage'\n\nconst NftProfile = () => {\n  const { account } = useWeb3React()\n  const { accountAddress } = useParams<{ accountAddress: string }>()\n  const { t } = useTranslation()\n\n  const isConnectedProfile = account?.toLowerCase() === accountAddress?.toLowerCase()\n  const invalidAddress = !accountAddress || isAddress(accountAddress) === false\n\n  if (invalidAddress) {\n    return (\n      <>\n        <MarketPageHeader position=\"relative\">\n          <ProfileHeader accountPath={accountAddress} profile={null} achievements={null} nftCollected={null} />\n        </MarketPageHeader>\n        <Page style={{ minHeight: 'auto' }}>\n          <Flex p=\"24px\" flexDirection=\"column\" alignItems=\"center\">\n            <NoNftsImage />\n            <Text textAlign=\"center\" maxWidth=\"420px\" pt=\"8px\" bold>\n              {t('Please enter a valid address, or connect your wallet to view your profile')}\n            </Text>\n          </Flex>\n        </Page>\n      </>\n    )\n  }\n\n  return <>{isConnectedProfile ? <ConnectedProfile /> : <UnconnectedProfile />}</>\n}\n\nexport default NftProfile\n"]},"metadata":{},"sourceType":"module"}