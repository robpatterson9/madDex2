{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Pools/components/PoolsTable/Apr.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Flex, useModal, CalculateIcon, Skeleton, Button } from '@pancakeswap/uikit';\nimport RoiCalculatorModal from 'components/RoiCalculatorModal';\nimport Balance from 'components/Balance';\nimport { useTranslation } from 'contexts/Localization';\nimport { getAprData } from 'views/Pools/helpers';\nimport BigNumber from 'bignumber.js';\nimport { BIG_ZERO } from 'utils/bigNumber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AprLabelContainer = styled(Flex)`\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n_c = AprLabelContainer;\n\nconst Apr = ({\n  pool,\n  showIcon,\n  stakedBalance,\n  performanceFee = 0,\n  ...props\n}) => {\n  _s();\n\n  const {\n    stakingToken,\n    earningToken,\n    isFinished,\n    earningTokenPrice,\n    stakingTokenPrice,\n    userData,\n    apr\n  } = pool;\n  const {\n    t\n  } = useTranslation();\n  const {\n    apr: earningsPercentageToDisplay,\n    autoCompoundFrequency\n  } = getAprData(pool, performanceFee);\n  const stakingTokenBalance = (userData === null || userData === void 0 ? void 0 : userData.stakingTokenBalance) ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO;\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap';\n  const [onPresentApyModal] = useModal( /*#__PURE__*/_jsxDEV(RoiCalculatorModal, {\n    earningTokenPrice: earningTokenPrice,\n    stakingTokenPrice: stakingTokenPrice,\n    stakingTokenBalance: stakedBalance.plus(stakingTokenBalance),\n    apr: apr,\n    stakingTokenSymbol: stakingToken.symbol,\n    linkLabel: t('Get %symbol%', {\n      symbol: stakingToken.symbol\n    }),\n    linkHref: apyModalLink,\n    earningTokenSymbol: earningToken.symbol,\n    autoCompoundFrequency: autoCompoundFrequency,\n    performanceFee: performanceFee\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this));\n\n  const openRoiModal = event => {\n    event.stopPropagation();\n    onPresentApyModal();\n  };\n\n  return /*#__PURE__*/_jsxDEV(AprLabelContainer, {\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    ...props,\n    children: earningsPercentageToDisplay || isFinished ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Balance, {\n        onClick: openRoiModal,\n        fontSize: \"16px\",\n        isDisabled: isFinished,\n        value: isFinished ? 0 : earningsPercentageToDisplay,\n        decimals: 2,\n        unit: \"%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), !isFinished && showIcon && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: openRoiModal,\n        variant: \"text\",\n        width: \"20px\",\n        height: \"20px\",\n        padding: \"0px\",\n        marginLeft: \"4px\",\n        children: /*#__PURE__*/_jsxDEV(CalculateIcon, {\n          color: \"textSubtle\",\n          width: \"20px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Skeleton, {\n      width: \"80px\",\n      height: \"16px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Apr, \"CH8vxo7uNeVgHFK2O5nDzK61NLI=\", false, function () {\n  return [useTranslation, useModal];\n});\n\n_c2 = Apr;\nexport default Apr;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AprLabelContainer\");\n$RefreshReg$(_c2, \"Apr\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Pools/components/PoolsTable/Apr.tsx"],"names":["React","styled","Flex","useModal","CalculateIcon","Skeleton","Button","RoiCalculatorModal","Balance","useTranslation","getAprData","BigNumber","BIG_ZERO","AprLabelContainer","Apr","pool","showIcon","stakedBalance","performanceFee","props","stakingToken","earningToken","isFinished","earningTokenPrice","stakingTokenPrice","userData","apr","t","earningsPercentageToDisplay","autoCompoundFrequency","stakingTokenBalance","apyModalLink","address","onPresentApyModal","plus","symbol","openRoiModal","event","stopPropagation"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport Balance from 'components/Balance'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst AprLabelContainer = styled(Flex)`\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprProps extends FlexProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, stakedBalance, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, stakingTokenPrice, userData, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      apr={apr}\n      stakingTokenSymbol={stakingToken.symbol}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <AprLabelContainer alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            onClick={openRoiModal}\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n          {!isFinished && showIcon && (\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n            </Button>\n          )}\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </AprLabelContainer>\n  )\n}\n\nexport default Apr\n"]},"metadata":{},"sourceType":"module"}