{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/FarmAuction/components/AuctionHistory.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { format } from 'date-fns';\nimport styled from 'styled-components';\nimport { Text, Flex, Box, Input, ArrowBackIcon, ArrowForwardIcon, ArrowLastIcon, IconButton, BunnyPlaceholderIcon, Spinner, useMatchBreakpoints } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport useAuctionHistory from '../hooks/useAuctionHistory';\nimport AuctionLeaderboardTable from './AuctionLeaderboard/AuctionLeaderboardTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledIconButton = styled(IconButton)`\n  width: 32px;\n\n  :disabled {\n    background: none;\n\n    svg {\n      fill: ${({\n  theme\n}) => theme.colors.textDisabled};\n\n      path {\n        fill: ${({\n  theme\n}) => theme.colors.textDisabled};\n      }\n    }\n  }\n`;\n_c = StyledIconButton;\n\nconst AuctionHistory = ({\n  mostRecentClosedAuctionId\n}) => {\n  _s();\n\n  const [historyAuctionId, setHistoryAuctionId] = useState(mostRecentClosedAuctionId ? mostRecentClosedAuctionId.toString() : '0');\n  const historyAuctionIdAsInt = parseInt(historyAuctionId, 10);\n  const {\n    t\n  } = useTranslation();\n  const {\n    isXs,\n    isSm,\n    isMd,\n    isLg,\n    isXl,\n    isXxl\n  } = useMatchBreakpoints();\n  const isLargerScreen = isLg || isXl || isXxl;\n  const isSmallerScreen = isXs || isSm || isMd;\n  const auctionHistory = useAuctionHistory(historyAuctionIdAsInt);\n  const selectedAuction = Object.values(auctionHistory).find(auctionData => auctionData.auction.id === historyAuctionIdAsInt);\n  let auctionTable = selectedAuction ? /*#__PURE__*/_jsxDEV(AuctionLeaderboardTable, {\n    bidders: selectedAuction.bidders,\n    noBidsText: \"No bids were placed in this auction\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Flex, {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    p: \"24px\",\n    height: \"250px\",\n    children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n\n  if (Number.isNaN(historyAuctionIdAsInt)) {\n    auctionTable = /*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      p: \"24px\",\n      height: \"250px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        mb: \"8px\",\n        children: t('Please specify auction ID')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BunnyPlaceholderIcon, {\n        height: \"64px\",\n        width: \"64px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n  const endDate = selectedAuction ? format(selectedAuction.auction.endDate, 'MMM. dd yyyy, hh:mm aa') : null;\n\n  const handleHistoryAuctionChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n\n    if (value) {\n      let newAuctionId = value;\n\n      if (parseInt(value, 10) <= 0) {\n        newAuctionId = '';\n      }\n\n      if (parseInt(value, 10) >= mostRecentClosedAuctionId) {\n        newAuctionId = mostRecentClosedAuctionId.toString();\n      }\n\n      setHistoryAuctionId(newAuctionId);\n    } else {\n      setHistoryAuctionId('');\n    }\n  };\n\n  const handleArrowPress = auctionId => {\n    if (auctionId) {\n      setHistoryAuctionId(auctionId.toString());\n    } else {\n      // auctionId is NaN when the input is empty, the only button press that will trigger this func is 'forward one'\n      setHistoryAuctionId('1');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    py: \"24px\",\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      px: ['12px', '24px'],\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        flex: \"3\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          bold: true,\n          fontSize: isLargerScreen ? '20px' : '16px',\n          mr: ['4px', '8px'],\n          children: t('Auction #')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          width: \"62px\",\n          mr: ['4px', '16px'],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            disabled: !mostRecentClosedAuctionId,\n            type: \"input\",\n            value: historyAuctionId,\n            onChange: handleHistoryAuctionChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledIconButton, {\n          disabled: !historyAuctionIdAsInt || historyAuctionIdAsInt <= 1,\n          variant: \"text\",\n          scale: \"sm\",\n          mr: ['8px', '12px'],\n          onClick: () => handleArrowPress(historyAuctionIdAsInt - 1),\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledIconButton, {\n          disabled: historyAuctionIdAsInt >= mostRecentClosedAuctionId,\n          variant: \"text\",\n          scale: \"sm\",\n          mr: ['8px', '12px'],\n          onClick: () => handleArrowPress(historyAuctionIdAsInt + 1),\n          children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledIconButton, {\n          disabled: historyAuctionIdAsInt >= mostRecentClosedAuctionId,\n          variant: \"text\",\n          scale: \"sm\",\n          onClick: () => handleArrowPress(mostRecentClosedAuctionId),\n          children: /*#__PURE__*/_jsxDEV(ArrowLastIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), isLargerScreen && /*#__PURE__*/_jsxDEV(Flex, {\n        flex: \"2\",\n        justifyContent: \"flex-end\",\n        children: endDate && /*#__PURE__*/_jsxDEV(Text, {\n          children: t('Ended %date%', {\n            date: endDate\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), isSmallerScreen && /*#__PURE__*/_jsxDEV(Flex, {\n      px: ['12px', '24px'],\n      pt: \"8px\",\n      children: endDate && /*#__PURE__*/_jsxDEV(Text, {\n        children: t('Ended %date%', {\n          date: endDate\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), mostRecentClosedAuctionId ? auctionTable : /*#__PURE__*/_jsxDEV(Flex, {\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      p: \"24px\",\n      height: \"250px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        mb: \"8px\",\n        children: t('No history yet')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BunnyPlaceholderIcon, {\n        height: \"64px\",\n        width: \"64px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuctionHistory, \"iHuWDgOcaHhdpF9GtG6W1wDMoEM=\", false, function () {\n  return [useTranslation, useMatchBreakpoints, useAuctionHistory];\n});\n\n_c2 = AuctionHistory;\nexport default AuctionHistory;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledIconButton\");\n$RefreshReg$(_c2, \"AuctionHistory\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/FarmAuction/components/AuctionHistory.tsx"],"names":["React","useState","format","styled","Text","Flex","Box","Input","ArrowBackIcon","ArrowForwardIcon","ArrowLastIcon","IconButton","BunnyPlaceholderIcon","Spinner","useMatchBreakpoints","useTranslation","useAuctionHistory","AuctionLeaderboardTable","StyledIconButton","theme","colors","textDisabled","AuctionHistory","mostRecentClosedAuctionId","historyAuctionId","setHistoryAuctionId","toString","historyAuctionIdAsInt","parseInt","t","isXs","isSm","isMd","isLg","isXl","isXxl","isLargerScreen","isSmallerScreen","auctionHistory","selectedAuction","Object","values","find","auctionData","auction","id","auctionTable","bidders","Number","isNaN","endDate","handleHistoryAuctionChange","event","target","value","newAuctionId","handleArrowPress","auctionId","date"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { format } from 'date-fns'\nimport styled from 'styled-components'\nimport {\n  Text,\n  Flex,\n  Box,\n  Input,\n  ArrowBackIcon,\n  ArrowForwardIcon,\n  ArrowLastIcon,\n  IconButton,\n  BunnyPlaceholderIcon,\n  Spinner,\n  useMatchBreakpoints,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useAuctionHistory from '../hooks/useAuctionHistory'\nimport AuctionLeaderboardTable from './AuctionLeaderboard/AuctionLeaderboardTable'\n\ninterface AuctionHistoryProps {\n  mostRecentClosedAuctionId: number\n}\n\nconst StyledIconButton = styled(IconButton)`\n  width: 32px;\n\n  :disabled {\n    background: none;\n\n    svg {\n      fill: ${({ theme }) => theme.colors.textDisabled};\n\n      path {\n        fill: ${({ theme }) => theme.colors.textDisabled};\n      }\n    }\n  }\n`\n\nconst AuctionHistory: React.FC<AuctionHistoryProps> = ({ mostRecentClosedAuctionId }) => {\n  const [historyAuctionId, setHistoryAuctionId] = useState(\n    mostRecentClosedAuctionId ? mostRecentClosedAuctionId.toString() : '0',\n  )\n  const historyAuctionIdAsInt = parseInt(historyAuctionId, 10)\n\n  const { t } = useTranslation()\n\n  const { isXs, isSm, isMd, isLg, isXl, isXxl } = useMatchBreakpoints()\n  const isLargerScreen = isLg || isXl || isXxl\n  const isSmallerScreen = isXs || isSm || isMd\n\n  const auctionHistory = useAuctionHistory(historyAuctionIdAsInt)\n  const selectedAuction = Object.values(auctionHistory).find(\n    (auctionData) => auctionData.auction.id === historyAuctionIdAsInt,\n  )\n\n  let auctionTable = selectedAuction ? (\n    <AuctionLeaderboardTable bidders={selectedAuction.bidders} noBidsText=\"No bids were placed in this auction\" />\n  ) : (\n    <Flex justifyContent=\"center\" alignItems=\"center\" p=\"24px\" height=\"250px\">\n      <Spinner />\n    </Flex>\n  )\n\n  if (Number.isNaN(historyAuctionIdAsInt)) {\n    auctionTable = (\n      <Flex flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" p=\"24px\" height=\"250px\">\n        <Text mb=\"8px\">{t('Please specify auction ID')}</Text>\n        <BunnyPlaceholderIcon height=\"64px\" width=\"64px\" />\n      </Flex>\n    )\n  }\n\n  const endDate = selectedAuction ? format(selectedAuction.auction.endDate, 'MMM. dd yyyy, hh:mm aa') : null\n\n  const handleHistoryAuctionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      target: { value },\n    } = event\n    if (value) {\n      let newAuctionId = value\n      if (parseInt(value, 10) <= 0) {\n        newAuctionId = ''\n      }\n      if (parseInt(value, 10) >= mostRecentClosedAuctionId) {\n        newAuctionId = mostRecentClosedAuctionId.toString()\n      }\n      setHistoryAuctionId(newAuctionId)\n    } else {\n      setHistoryAuctionId('')\n    }\n  }\n\n  const handleArrowPress = (auctionId: number) => {\n    if (auctionId) {\n      setHistoryAuctionId(auctionId.toString())\n    } else {\n      // auctionId is NaN when the input is empty, the only button press that will trigger this func is 'forward one'\n      setHistoryAuctionId('1')\n    }\n  }\n\n  return (\n    <Box py=\"24px\">\n      <Flex px={['12px', '24px']} justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flex=\"3\" alignItems=\"center\">\n          <Text bold fontSize={isLargerScreen ? '20px' : '16px'} mr={['4px', '8px']}>\n            {t('Auction #')}\n          </Text>\n          <Box width=\"62px\" mr={['4px', '16px']}>\n            <Input\n              disabled={!mostRecentClosedAuctionId}\n              type=\"input\"\n              value={historyAuctionId}\n              onChange={handleHistoryAuctionChange}\n            />\n          </Box>\n          <StyledIconButton\n            disabled={!historyAuctionIdAsInt || historyAuctionIdAsInt <= 1}\n            variant=\"text\"\n            scale=\"sm\"\n            mr={['8px', '12px']}\n            onClick={() => handleArrowPress(historyAuctionIdAsInt - 1)}\n          >\n            <ArrowBackIcon />\n          </StyledIconButton>\n          <StyledIconButton\n            disabled={historyAuctionIdAsInt >= mostRecentClosedAuctionId}\n            variant=\"text\"\n            scale=\"sm\"\n            mr={['8px', '12px']}\n            onClick={() => handleArrowPress(historyAuctionIdAsInt + 1)}\n          >\n            <ArrowForwardIcon />\n          </StyledIconButton>\n          <StyledIconButton\n            disabled={historyAuctionIdAsInt >= mostRecentClosedAuctionId}\n            variant=\"text\"\n            scale=\"sm\"\n            onClick={() => handleArrowPress(mostRecentClosedAuctionId)}\n          >\n            <ArrowLastIcon />\n          </StyledIconButton>\n        </Flex>\n        {isLargerScreen && (\n          <Flex flex=\"2\" justifyContent=\"flex-end\">\n            {endDate && <Text>{t('Ended %date%', { date: endDate })}</Text>}\n          </Flex>\n        )}\n      </Flex>\n      {isSmallerScreen && (\n        <Flex px={['12px', '24px']} pt=\"8px\">\n          {endDate && <Text>{t('Ended %date%', { date: endDate })}</Text>}\n        </Flex>\n      )}\n      {mostRecentClosedAuctionId ? (\n        auctionTable\n      ) : (\n        <Flex flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" p=\"24px\" height=\"250px\">\n          <Text mb=\"8px\">{t('No history yet')}</Text>\n          <BunnyPlaceholderIcon height=\"64px\" width=\"64px\" />\n        </Flex>\n      )}\n    </Box>\n  )\n}\n\nexport default AuctionHistory\n"]},"metadata":{},"sourceType":"module"}