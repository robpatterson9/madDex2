{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/components/FoldableSection/SectionsWithFoldableText.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Text, Heading, Card, CardHeader, CardBody, Box } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport FoldableText from './FoldableText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SectionsWithFoldableText = ({\n  header,\n  config,\n  ...props\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    maxWidth: \"888px\",\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          scale: \"lg\",\n          color: \"secondary\",\n          children: header\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: config.map(({\n          title,\n          description\n        }, i, {\n          length\n        }) => /*#__PURE__*/_jsxDEV(FoldableText, {\n          id: title,\n          mb: i + 1 === length ? '' : '24px',\n          title: t(title),\n          children: description.map(desc => {\n            return /*#__PURE__*/_jsxDEV(Text, {\n              color: \"textSubtle\",\n              as: \"p\",\n              children: t(desc)\n            }, desc, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 19\n            }, this);\n          })\n        }, title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SectionsWithFoldableText, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = SectionsWithFoldableText;\nexport default SectionsWithFoldableText;\n\nvar _c;\n\n$RefreshReg$(_c, \"SectionsWithFoldableText\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/components/FoldableSection/SectionsWithFoldableText.tsx"],"names":["React","Text","Heading","Card","CardHeader","CardBody","Box","useTranslation","FoldableText","SectionsWithFoldableText","header","config","props","t","map","title","description","i","length","desc"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,IAAxB,EAA8BC,UAA9B,EAA0CC,QAA1C,EAAoDC,GAApD,QAAyE,oBAAzE;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAOA,MAAMC,wBAAyC,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkB,KAAGC;AAArB,CAAD,KAAkC;AAAA;;AAClF,QAAM;AAAEC,IAAAA;AAAF,MAAQN,cAAc,EAA5B;AAEA,sBACE,QAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,OAAd;AAAA,OAA0BK,KAA1B;AAAA,2BACE,QAAC,IAAD;AAAA,8BACE,QAAC,UAAD;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,IAAf;AAAoB,UAAA,KAAK,EAAC,WAA1B;AAAA,oBACGF;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,QAAD;AAAA,kBACGC,MAAM,CAACG,GAAP,CAAW,CAAC;AAAEC,UAAAA,KAAF;AAASC,UAAAA;AAAT,SAAD,EAAyBC,CAAzB,EAA4B;AAAEC,UAAAA;AAAF,SAA5B,kBACV,QAAC,YAAD;AAA0B,UAAA,EAAE,EAAEH,KAA9B;AAAqC,UAAA,EAAE,EAAEE,CAAC,GAAG,CAAJ,KAAUC,MAAV,GAAmB,EAAnB,GAAwB,MAAjE;AAAyE,UAAA,KAAK,EAAEL,CAAC,CAACE,KAAD,CAAjF;AAAA,oBACGC,WAAW,CAACF,GAAZ,CAAiBK,IAAD,IAAU;AACzB,gCACE,QAAC,IAAD;AAAiB,cAAA,KAAK,EAAC,YAAvB;AAAoC,cAAA,EAAE,EAAC,GAAvC;AAAA,wBACGN,CAAC,CAACM,IAAD;AADJ,eAAWA,IAAX;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,WANA;AADH,WAAmBJ,KAAnB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA3BD;;GAAMN,wB;UACUF,c;;;KADVE,wB;AA6BN,eAAeA,wBAAf","sourcesContent":["import React from 'react'\nimport { Text, Heading, Card, CardHeader, CardBody, Box, BoxProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport FoldableText from './FoldableText'\n\ninterface Props extends BoxProps {\n  header: string\n  config: { title: string; description: string[] }[]\n}\n\nconst SectionsWithFoldableText: React.FC<Props> = ({ header, config, ...props }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Box maxWidth=\"888px\" {...props}>\n      <Card>\n        <CardHeader>\n          <Heading scale=\"lg\" color=\"secondary\">\n            {header}\n          </Heading>\n        </CardHeader>\n        <CardBody>\n          {config.map(({ title, description }, i, { length }) => (\n            <FoldableText key={title} id={title} mb={i + 1 === length ? '' : '24px'} title={t(title)}>\n              {description.map((desc) => {\n                return (\n                  <Text key={desc} color=\"textSubtle\" as=\"p\">\n                    {t(desc)}\n                  </Text>\n                )\n              })}\n            </FoldableText>\n          ))}\n        </CardBody>\n      </Card>\n    </Box>\n  )\n}\n\nexport default SectionsWithFoldableText\n"]},"metadata":{},"sourceType":"module"}