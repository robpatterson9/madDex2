{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Button,Text,Flex,Message,Modal,Checkbox}from'@pancakeswap/uikit';import{useExpertModeManager}from'state/user/hooks';import{useTranslation}from'contexts/Localization';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ExpertModal=function ExpertModal(_ref){var setShowConfirmExpertModal=_ref.setShowConfirmExpertModal,setShowExpertModeAcknowledgement=_ref.setShowExpertModeAcknowledgement;var _useExpertModeManager=useExpertModeManager(),_useExpertModeManager2=_slicedToArray(_useExpertModeManager,2),toggleExpertMode=_useExpertModeManager2[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isRememberChecked=_useState2[0],setIsRememberChecked=_useState2[1];var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/_jsxs(Modal,{title:t('Expert Mode'),onBack:function onBack(){return setShowConfirmExpertModal(false);},onDismiss:function onDismiss(){return setShowConfirmExpertModal(false);},headerBackground:\"gradients.cardHeader\",style:{maxWidth:'360px'},children:[/*#__PURE__*/_jsx(Message,{variant:\"warning\",mb:\"24px\",children:/*#__PURE__*/_jsx(Text,{children:t(\"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\")})}),/*#__PURE__*/_jsx(Text,{mb:\"24px\",children:t('Only use this mode if you know what you’re doing.')}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",mb:\"24px\",children:[/*#__PURE__*/_jsx(Checkbox,{name:\"confirmed\",type:\"checkbox\",checked:isRememberChecked,onChange:function onChange(){return setIsRememberChecked(!isRememberChecked);},scale:\"sm\"}),/*#__PURE__*/_jsx(Text,{ml:\"10px\",color:\"textSubtle\",style:{userSelect:'none'},children:t('Don’t show this again')})]}),/*#__PURE__*/_jsx(Button,{mb:\"8px\",id:\"confirm-expert-mode\",onClick:function onClick(){// eslint-disable-next-line no-alert\nif(window.prompt(\"Please type the word \\\"confirm\\\" to enable expert mode.\")==='confirm'){toggleExpertMode();setShowConfirmExpertModal(false);if(isRememberChecked){setShowExpertModeAcknowledgement(false);}}},children:t('Turn On Expert Mode')}),/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:function onClick(){setShowConfirmExpertModal(false);},children:t('Cancel')})]});};export default ExpertModal;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/components/Menu/GlobalSettings/ExpertModal.tsx"],"names":["React","useState","Button","Text","Flex","Message","Modal","Checkbox","useExpertModeManager","useTranslation","ExpertModal","setShowConfirmExpertModal","setShowExpertModeAcknowledgement","toggleExpertMode","isRememberChecked","setIsRememberChecked","t","maxWidth","userSelect","window","prompt"],"mappings":"wJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,IAAvB,CAA6BC,OAA7B,CAAsCC,KAAtC,CAAiEC,QAAjE,KAAiF,oBAAjF,CACA,OAASC,oBAAT,KAAqC,kBAArC,CACA,OAASC,cAAT,KAA+B,uBAA/B,C,wFAOA,GAAMC,CAAAA,WAAuC,CAAG,QAA1CA,CAAAA,WAA0C,MAAqE,IAAlEC,CAAAA,yBAAkE,MAAlEA,yBAAkE,CAAvCC,gCAAuC,MAAvCA,gCAAuC,CACnH,0BAA6BJ,oBAAoB,EAAjD,gEAASK,gBAAT,2BACA,cAAkDZ,QAAQ,CAAC,KAAD,CAA1D,wCAAOa,iBAAP,eAA0BC,oBAA1B,eAEA,oBAAcN,cAAc,EAA5B,CAAQO,CAAR,iBAAQA,CAAR,CAEA,mBACE,MAAC,KAAD,EACE,KAAK,CAAEA,CAAC,CAAC,aAAD,CADV,CAEE,MAAM,CAAE,wBAAML,CAAAA,yBAAyB,CAAC,KAAD,CAA/B,EAFV,CAGE,SAAS,CAAE,2BAAMA,CAAAA,yBAAyB,CAAC,KAAD,CAA/B,EAHb,CAIE,gBAAgB,CAAC,sBAJnB,CAKE,KAAK,CAAE,CAAEM,QAAQ,CAAE,OAAZ,CALT,wBAOE,KAAC,OAAD,EAAS,OAAO,CAAC,SAAjB,CAA2B,EAAE,CAAC,MAA9B,uBACE,KAAC,IAAD,WACGD,CAAC,CACA,wIADA,CADJ,EADF,EAPF,cAcE,KAAC,IAAD,EAAM,EAAE,CAAC,MAAT,UAAiBA,CAAC,CAAC,mDAAD,CAAlB,EAdF,cAeE,MAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,CAA0B,EAAE,CAAC,MAA7B,wBACE,KAAC,QAAD,EACE,IAAI,CAAC,WADP,CAEE,IAAI,CAAC,UAFP,CAGE,OAAO,CAAEF,iBAHX,CAIE,QAAQ,CAAE,0BAAMC,CAAAA,oBAAoB,CAAC,CAACD,iBAAF,CAA1B,EAJZ,CAKE,KAAK,CAAC,IALR,EADF,cAQE,KAAC,IAAD,EAAM,EAAE,CAAC,MAAT,CAAgB,KAAK,CAAC,YAAtB,CAAmC,KAAK,CAAE,CAAEI,UAAU,CAAE,MAAd,CAA1C,UACGF,CAAC,CAAC,uBAAD,CADJ,EARF,GAfF,cA2BE,KAAC,MAAD,EACE,EAAE,CAAC,KADL,CAEE,EAAE,CAAC,qBAFL,CAGE,OAAO,CAAE,kBAAM,CACb;AACA,GAAIG,MAAM,CAACC,MAAP,8DAA2E,SAA/E,CAA0F,CACxFP,gBAAgB,GAChBF,yBAAyB,CAAC,KAAD,CAAzB,CACA,GAAIG,iBAAJ,CAAuB,CACrBF,gCAAgC,CAAC,KAAD,CAAhC,CACD,CACF,CACF,CAZH,UAcGI,CAAC,CAAC,qBAAD,CAdJ,EA3BF,cA2CE,KAAC,MAAD,EACE,OAAO,CAAC,WADV,CAEE,OAAO,CAAE,kBAAM,CACbL,yBAAyB,CAAC,KAAD,CAAzB,CACD,CAJH,UAMGK,CAAC,CAAC,QAAD,CANJ,EA3CF,GADF,CAsDD,CA5DD,CA8DA,cAAeN,CAAAA,WAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Button, Text, Flex, Message, Modal, InjectedModalProps, Checkbox } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ExpertModalProps extends InjectedModalProps {\n  setShowConfirmExpertModal: (boolean) => void\n  setShowExpertModeAcknowledgement: (boolean) => void\n}\n\nconst ExpertModal: React.FC<ExpertModalProps> = ({ setShowConfirmExpertModal, setShowExpertModeAcknowledgement }) => {\n  const [, toggleExpertMode] = useExpertModeManager()\n  const [isRememberChecked, setIsRememberChecked] = useState(false)\n\n  const { t } = useTranslation()\n\n  return (\n    <Modal\n      title={t('Expert Mode')}\n      onBack={() => setShowConfirmExpertModal(false)}\n      onDismiss={() => setShowConfirmExpertModal(false)}\n      headerBackground=\"gradients.cardHeader\"\n      style={{ maxWidth: '360px' }}\n    >\n      <Message variant=\"warning\" mb=\"24px\">\n        <Text>\n          {t(\n            \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n          )}\n        </Text>\n      </Message>\n      <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n      <Flex alignItems=\"center\" mb=\"24px\">\n        <Checkbox\n          name=\"confirmed\"\n          type=\"checkbox\"\n          checked={isRememberChecked}\n          onChange={() => setIsRememberChecked(!isRememberChecked)}\n          scale=\"sm\"\n        />\n        <Text ml=\"10px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n          {t('Don’t show this again')}\n        </Text>\n      </Flex>\n      <Button\n        mb=\"8px\"\n        id=\"confirm-expert-mode\"\n        onClick={() => {\n          // eslint-disable-next-line no-alert\n          if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n            toggleExpertMode()\n            setShowConfirmExpertModal(false)\n            if (isRememberChecked) {\n              setShowExpertModeAcknowledgement(false)\n            }\n          }\n        }}\n      >\n        {t('Turn On Expert Mode')}\n      </Button>\n      <Button\n        variant=\"secondary\"\n        onClick={() => {\n          setShowConfirmExpertModal(false)\n        }}\n      >\n        {t('Cancel')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default ExpertModal\n"]},"metadata":{},"sourceType":"module"}