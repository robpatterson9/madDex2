{"ast":null,"code":"import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"number\",\"size\",\"fontSize\",\"rotateText\"];import React,{useEffect,useState}from'react';import{Flex}from'@pancakeswap/uikit';import{random}from'lodash';import uniqueId from'lodash/uniqueId';import{parseRetrievedNumber}from'../helpers';import{BallWithNumber}from'../svgs';import{jsx as _jsx}from\"react/jsx-runtime\";var WinningNumbers=function WinningNumbers(_ref){var number=_ref.number,_ref$size=_ref.size,size=_ref$size===void 0?'32px':_ref$size,_ref$fontSize=_ref.fontSize,fontSize=_ref$fontSize===void 0?'16px':_ref$fontSize,rotateText=_ref.rotateText,containerProps=_objectWithoutProperties(_ref,_excluded);var _useState=useState([]),_useState2=_slicedToArray(_useState,2),rotationValues=_useState2[0],setRotationValues=_useState2[1];var reversedNumber=parseRetrievedNumber(number);var numAsArray=reversedNumber.split('');var colors=['pink','lilac','teal','aqua','green','yellow'];useEffect(function(){if(rotateText&&numAsArray&&rotationValues.length===0){setRotationValues(numAsArray.map(function(){return random(-30,30);}));}},[rotateText,numAsArray,rotationValues]);return/*#__PURE__*/_jsx(Flex,_objectSpread(_objectSpread({justifyContent:\"space-between\"},containerProps),{},{children:numAsArray.map(function(num,index){return/*#__PURE__*/_jsx(BallWithNumber,{rotationTransform:rotateText&&rotationValues[index],size:size,fontSize:fontSize,color:colors[index],number:num},uniqueId());})}));};export default WinningNumbers;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Lottery/components/WinningNumbers.tsx"],"names":["React","useEffect","useState","Flex","random","uniqueId","parseRetrievedNumber","BallWithNumber","WinningNumbers","number","size","fontSize","rotateText","containerProps","rotationValues","setRotationValues","reversedNumber","numAsArray","split","colors","length","map","num","index"],"mappings":"mhBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,IAAT,KAAgC,oBAAhC,CACA,OAASC,MAAT,KAAuB,QAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,iBAArB,CACA,OAASC,oBAAT,KAAqC,YAArC,CACA,OAASC,cAAT,KAA+B,SAA/B,C,2CAUA,GAAMC,CAAAA,cAA6C,CAAG,QAAhDA,CAAAA,cAAgD,MAMhD,IALJC,CAAAA,MAKI,MALJA,MAKI,gBAJJC,IAII,CAJJA,IAII,oBAJG,MAIH,8BAHJC,QAGI,CAHJA,QAGI,wBAHO,MAGP,eAFJC,UAEI,MAFJA,UAEI,CADDC,cACC,0CACJ,cAA4CX,QAAQ,CAAC,EAAD,CAApD,wCAAOY,cAAP,eAAuBC,iBAAvB,eACA,GAAMC,CAAAA,cAAc,CAAGV,oBAAoB,CAACG,MAAD,CAA3C,CACA,GAAMQ,CAAAA,UAAU,CAAGD,cAAc,CAACE,KAAf,CAAqB,EAArB,CAAnB,CACA,GAAMC,CAAAA,MAAmB,CAAG,CAAC,MAAD,CAAS,OAAT,CAAkB,MAAlB,CAA0B,MAA1B,CAAkC,OAAlC,CAA2C,QAA3C,CAA5B,CAEAlB,SAAS,CAAC,UAAM,CACd,GAAIW,UAAU,EAAIK,UAAd,EAA4BH,cAAc,CAACM,MAAf,GAA0B,CAA1D,CAA6D,CAC3DL,iBAAiB,CAACE,UAAU,CAACI,GAAX,CAAe,iBAAMjB,CAAAA,MAAM,CAAC,CAAC,EAAF,CAAM,EAAN,CAAZ,EAAf,CAAD,CAAjB,CACD,CACF,CAJQ,CAIN,CAACQ,UAAD,CAAaK,UAAb,CAAyBH,cAAzB,CAJM,CAAT,CAMA,mBACE,KAAC,IAAD,8BAAM,cAAc,CAAC,eAArB,EAAyCD,cAAzC,eACGI,UAAU,CAACI,GAAX,CAAe,SAACC,GAAD,CAAMC,KAAN,CAAgB,CAC9B,mBACE,KAAC,cAAD,EAEE,iBAAiB,CAAEX,UAAU,EAAIE,cAAc,CAACS,KAAD,CAFjD,CAGE,IAAI,CAAEb,IAHR,CAIE,QAAQ,CAAEC,QAJZ,CAKE,KAAK,CAAEQ,MAAM,CAACI,KAAD,CALf,CAME,MAAM,CAAED,GANV,EACOjB,QAAQ,EADf,CADF,CAUD,CAXA,CADH,GADF,CAgBD,CAlCD,CAoCA,cAAeG,CAAAA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Flex, FlexProps } from '@pancakeswap/uikit'\nimport { random } from 'lodash'\nimport uniqueId from 'lodash/uniqueId'\nimport { parseRetrievedNumber } from '../helpers'\nimport { BallWithNumber } from '../svgs'\nimport { BallColor } from '../svgs/Balls'\n\ninterface WinningNumbersProps extends FlexProps {\n  number: string\n  size?: string\n  fontSize?: string\n  rotateText?: boolean\n}\n\nconst WinningNumbers: React.FC<WinningNumbersProps> = ({\n  number,\n  size = '32px',\n  fontSize = '16px',\n  rotateText,\n  ...containerProps\n}) => {\n  const [rotationValues, setRotationValues] = useState([])\n  const reversedNumber = parseRetrievedNumber(number)\n  const numAsArray = reversedNumber.split('')\n  const colors: BallColor[] = ['pink', 'lilac', 'teal', 'aqua', 'green', 'yellow']\n\n  useEffect(() => {\n    if (rotateText && numAsArray && rotationValues.length === 0) {\n      setRotationValues(numAsArray.map(() => random(-30, 30)))\n    }\n  }, [rotateText, numAsArray, rotationValues])\n\n  return (\n    <Flex justifyContent=\"space-between\" {...containerProps}>\n      {numAsArray.map((num, index) => {\n        return (\n          <BallWithNumber\n            key={uniqueId()}\n            rotationTransform={rotateText && rotationValues[index]}\n            size={size}\n            fontSize={fontSize}\n            color={colors[index]}\n            number={num}\n          />\n        )\n      })}\n    </Flex>\n  )\n}\n\nexport default WinningNumbers\n"]},"metadata":{},"sourceType":"module"}