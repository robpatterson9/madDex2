{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React,{useContext,useState}from'react';import styled from'styled-components';import{AutoRenewIcon,Button,Card,CardBody,Heading,Text}from'@pancakeswap/uikit';import{useWeb3React}from'@web3-react/core';import{Link as RouterLink}from'react-router-dom';import{getPancakeProfileAddress}from'utils/addressHelpers';import{getErc721Contract}from'utils/contractHelpers';import{useTranslation}from'contexts/Localization';import{useUserNfts}from'state/nftMarket/hooks';import useToast from'hooks/useToast';import{useCallWithGasPrice}from'hooks/useCallWithGasPrice';import useFetchUserNfts from'views/Nft/market/Profile/hooks/useFetchUserNfts';import{nftsBaseUrl}from'views/Nft/market/constants';import{UserNftInitializationState}from'state/nftMarket/types';import SelectionCard from'./SelectionCard';import NextStepButton from'./NextStepButton';import{ProfileCreationContext}from'./contexts/ProfileCreationProvider';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Link=styled(RouterLink)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  color: \",\";\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.primary;});var NftWrapper=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin-bottom: 24px;\\n\"])));var ProfilePicture=function ProfilePicture(){var _useWeb3React=useWeb3React(),library=_useWeb3React.library,account=_useWeb3React.account;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isApproved=_useState2[0],setIsApproved=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isApproving=_useState4[0],setIsApproving=_useState4[1];var _useContext=useContext(ProfileCreationContext),selectedNft=_useContext.selectedNft,actions=_useContext.actions;var _useUserNfts=useUserNfts(),nfts=_useUserNfts.nfts,userNftsInitializationState=_useUserNfts.userNftsInitializationState;useFetchUserNfts(account);var _useTranslation=useTranslation(),t=_useTranslation.t;var _useToast=useToast(),toastError=_useToast.toastError,toastSuccess=_useToast.toastSuccess;var _useCallWithGasPrice=useCallWithGasPrice(),callWithGasPrice=_useCallWithGasPrice.callWithGasPrice;var handleApprove=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var contract,tx,receipt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:contract=getErc721Contract(selectedNft.collectionAddress,library.getSigner());_context.next=3;return callWithGasPrice(contract,'approve',[getPancakeProfileAddress(),selectedNft.tokenId]);case 3:tx=_context.sent;setIsApproving(true);_context.next=7;return tx.wait();case 7:receipt=_context.sent;if(receipt.status){toastSuccess(t('Enabled'),t('Please progress to the next step.'));setIsApproving(false);setIsApproved(true);}else{toastError(t('Error'),t('Please try again. Confirm the transaction and make sure you are paying enough gas!'));setIsApproving(false);}case 9:case\"end\":return _context.stop();}}},_callee);}));return function handleApprove(){return _ref2.apply(this,arguments);};}();if(nfts.length===0&&userNftsInitializationState===UserNftInitializationState.INITIALIZED){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Heading,{scale:\"xl\",mb:\"24px\",children:t('Oops!')}),/*#__PURE__*/_jsx(Text,{bold:true,fontSize:\"20px\",mb:\"24px\",children:t('We couldn’t find any Pancake Collectibles in your wallet.')}),/*#__PURE__*/_jsx(Text,{as:\"p\",children:t('You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.')})]});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"20px\",color:\"textSubtle\",bold:true,children:t('Step %num%',{num:2})}),/*#__PURE__*/_jsx(Heading,{as:\"h3\",scale:\"xl\",mb:\"24px\",children:t('Set Profile Picture')}),/*#__PURE__*/_jsx(Card,{mb:\"24px\",children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{as:\"h4\",scale:\"lg\",mb:\"8px\",children:t('Choose collectible')}),/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"textSubtle\",children:t('Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.')}),/*#__PURE__*/_jsxs(Text,{as:\"p\",color:\"textSubtle\",mb:\"24px\",children:[t('Only approved Pancake Collectibles can be used.'),/*#__PURE__*/_jsx(Link,{to:\"\".concat(nftsBaseUrl,\"/collections\"),style:{marginLeft:'4px'},children:t('See the list >')})]}),/*#__PURE__*/_jsx(NftWrapper,{children:nfts.map(function(walletNft){var firstTokenId=nfts[0].tokenId;return/*#__PURE__*/_jsx(SelectionCard,{name:\"profilePicture\",value:firstTokenId,image:walletNft.image.thumbnail,isChecked:firstTokenId===selectedNft.tokenId,onChange:function onChange(value){return actions.setSelectedNft(value,walletNft.collectionAddress);},children:/*#__PURE__*/_jsx(Text,{bold:true,children:walletNft.name})},walletNft.tokenId);})}),/*#__PURE__*/_jsx(Heading,{as:\"h4\",scale:\"lg\",mb:\"8px\",children:t('Allow collectible to be locked')}),/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"textSubtle\",mb:\"16px\",children:t(\"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\")}),/*#__PURE__*/_jsx(Button,{isLoading:isApproving,disabled:isApproved||isApproving||selectedNft.tokenId===null,onClick:handleApprove,endIcon:isApproving?/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,color:\"currentColor\"}):undefined,id:\"approveStarterCollectible\",children:t('Enable')})]})}),/*#__PURE__*/_jsx(NextStepButton,{onClick:actions.nextStep,disabled:selectedNft.tokenId===null||!isApproved||isApproving,children:t('Next Step')})]});};export default ProfilePicture;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/ProfileCreation/ProfilePicture.tsx"],"names":["React","useContext","useState","styled","AutoRenewIcon","Button","Card","CardBody","Heading","Text","useWeb3React","Link","RouterLink","getPancakeProfileAddress","getErc721Contract","useTranslation","useUserNfts","useToast","useCallWithGasPrice","useFetchUserNfts","nftsBaseUrl","UserNftInitializationState","SelectionCard","NextStepButton","ProfileCreationContext","theme","colors","primary","NftWrapper","div","ProfilePicture","library","account","isApproved","setIsApproved","isApproving","setIsApproving","selectedNft","actions","nfts","userNftsInitializationState","t","toastError","toastSuccess","callWithGasPrice","handleApprove","contract","collectionAddress","getSigner","tokenId","tx","wait","receipt","status","length","INITIALIZED","num","marginLeft","map","walletNft","firstTokenId","image","thumbnail","value","setSelectedNft","name","undefined","nextStep"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserNfts } from 'state/nftMarket/hooks'\nimport useToast from 'hooks/useToast'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport useFetchUserNfts from 'views/Nft/market/Profile/hooks/useFetchUserNfts'\nimport { nftsBaseUrl } from 'views/Nft/market/constants'\nimport { UserNftInitializationState } from 'state/nftMarket/types'\nimport SelectionCard from './SelectionCard'\nimport NextStepButton from './NextStepButton'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Link = styled(RouterLink)`\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst NftWrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst ProfilePicture: React.FC = () => {\n  const { library, account } = useWeb3React()\n  const [isApproved, setIsApproved] = useState(false)\n  const [isApproving, setIsApproving] = useState(false)\n  const { selectedNft, actions } = useContext(ProfileCreationContext)\n\n  const { nfts, userNftsInitializationState } = useUserNfts()\n  useFetchUserNfts(account)\n\n  const { t } = useTranslation()\n  const { toastError, toastSuccess } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n\n  const handleApprove = async () => {\n    const contract = getErc721Contract(selectedNft.collectionAddress, library.getSigner())\n    const tx = await callWithGasPrice(contract, 'approve', [getPancakeProfileAddress(), selectedNft.tokenId])\n    setIsApproving(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Enabled'), t('Please progress to the next step.'))\n      setIsApproving(false)\n      setIsApproved(true)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setIsApproving(false)\n    }\n  }\n\n  if (nfts.length === 0 && userNftsInitializationState === UserNftInitializationState.INITIALIZED) {\n    return (\n      <>\n        <Heading scale=\"xl\" mb=\"24px\">\n          {t('Oops!')}\n        </Heading>\n        <Text bold fontSize=\"20px\" mb=\"24px\">\n          {t('We couldn’t find any Pancake Collectibles in your wallet.')}\n        </Text>\n        <Text as=\"p\">\n          {t(\n            'You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\n          )}\n        </Text>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 2 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Set Profile Picture')}\n      </Heading>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Choose collectible')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {t('Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t('Only approved Pancake Collectibles can be used.')}\n            <Link to={`${nftsBaseUrl}/collections`} style={{ marginLeft: '4px' }}>\n              {t('See the list >')}\n            </Link>\n          </Text>\n          <NftWrapper>\n            {nfts.map((walletNft) => {\n              const firstTokenId = nfts[0].tokenId\n              return (\n                <SelectionCard\n                  name=\"profilePicture\"\n                  key={walletNft.tokenId}\n                  value={firstTokenId}\n                  image={walletNft.image.thumbnail}\n                  isChecked={firstTokenId === selectedNft.tokenId}\n                  onChange={(value: string) => actions.setSelectedNft(value, walletNft.collectionAddress)}\n                >\n                  <Text bold>{walletNft.name}</Text>\n                </SelectionCard>\n              )\n            })}\n          </NftWrapper>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Allow collectible to be locked')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {t(\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\n            )}\n          </Text>\n          <Button\n            isLoading={isApproving}\n            disabled={isApproved || isApproving || selectedNft.tokenId === null}\n            onClick={handleApprove}\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n            id=\"approveStarterCollectible\"\n          >\n            {t('Enable')}\n          </Button>\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={selectedNft.tokenId === null || !isApproved || isApproving}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default ProfilePicture\n"]},"metadata":{},"sourceType":"module"}