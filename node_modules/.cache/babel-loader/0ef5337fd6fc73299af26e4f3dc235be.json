{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Card,CardFooter,CardHeader,Heading,Text,TabMenu,Tab,Box,Flex,ExpandableLabel}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import TopTradersGrid from'./TopTradersGrid';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TopTradersCard=function TopTradersCard(_ref){var team1LeaderboardInformation=_ref.team1LeaderboardInformation,team2LeaderboardInformation=_ref.team2LeaderboardInformation,team3LeaderboardInformation=_ref.team3LeaderboardInformation,globalLeaderboardInformation=_ref.globalLeaderboardInformation,isGlobalLeaderboardDataComplete=_ref.isGlobalLeaderboardDataComplete;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),activeTab=_useState2[0],setActiveTab=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isExpanded=_useState4[0],setIsExpanded=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),topTradersGridData=_useState6[0],setTopTradersGridData=_useState6[1];var handleItemClick=function handleItemClick(index){return setActiveTab(index);};var tabs=[t('Total'),'Storm','Flippers','Cakers'];useEffect(function(){var getData=function getData(){if(activeTab===0){setTopTradersGridData(globalLeaderboardInformation.data);}if(activeTab===1){setTopTradersGridData(team1LeaderboardInformation.leaderboardData.data);}if(activeTab===2){setTopTradersGridData(team2LeaderboardInformation.leaderboardData.data);}if(activeTab===3){setTopTradersGridData(team3LeaderboardInformation.leaderboardData.data);}};if(isGlobalLeaderboardDataComplete){getData();}},[isGlobalLeaderboardDataComplete,activeTab,globalLeaderboardInformation,team1LeaderboardInformation,team2LeaderboardInformation,team3LeaderboardInformation]);return/*#__PURE__*/_jsx(Card,{id:\"top-traders-card\",children:/*#__PURE__*/_jsxs(Box,{width:\"100%\",children:[/*#__PURE__*/_jsxs(CardHeader,{children:[/*#__PURE__*/_jsx(Heading,{color:\"secondary\",scale:\"lg\",children:t('Top Traders')}),/*#__PURE__*/_jsx(Text,{fontSize:\"14px\",color:\"textSubtle\",children:t('Since start of the competition')})]}),/*#__PURE__*/_jsxs(Box,{mt:\"16px\",children:[/*#__PURE__*/_jsx(TabMenu,{activeIndex:activeTab,onItemClick:handleItemClick,children:tabs.map(function(tabText){return/*#__PURE__*/_jsx(Tab,{children:tabText},tabText);})}),/*#__PURE__*/_jsx(TopTradersGrid,{data:topTradersGridData,isExpanded:isExpanded})]}),/*#__PURE__*/_jsx(CardFooter,{p:\"0px\",children:/*#__PURE__*/_jsx(Flex,{alignItems:\"center\",justifyContent:\"center\",children:/*#__PURE__*/_jsx(ExpandableLabel,{expanded:isExpanded,onClick:function onClick(){return setIsExpanded(!isExpanded);},children:isExpanded?t('Hide'):t('Show More')})})})]})});};export default TopTradersCard;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/TradingCompetition/components/TeamRanks/TopTradersCard/index.tsx"],"names":["React","useState","useEffect","Card","CardFooter","CardHeader","Heading","Text","TabMenu","Tab","Box","Flex","ExpandableLabel","useTranslation","TopTradersGrid","TopTradersCard","team1LeaderboardInformation","team2LeaderboardInformation","team3LeaderboardInformation","globalLeaderboardInformation","isGlobalLeaderboardDataComplete","t","activeTab","setActiveTab","isExpanded","setIsExpanded","topTradersGridData","setTopTradersGridData","handleItemClick","index","tabs","getData","data","leaderboardData","map","tabText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  Card,\n  CardFooter,\n  CardHeader,\n  Heading,\n  Text,\n  TabMenu,\n  Tab,\n  Box,\n  Flex,\n  ExpandableLabel,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { TeamRanksProps } from '../../../types'\nimport TopTradersGrid from './TopTradersGrid'\n\nconst TopTradersCard: React.FC<TeamRanksProps> = ({\n  team1LeaderboardInformation,\n  team2LeaderboardInformation,\n  team3LeaderboardInformation,\n  globalLeaderboardInformation,\n  isGlobalLeaderboardDataComplete,\n}) => {\n  const { t } = useTranslation()\n  const [activeTab, setActiveTab] = useState(0)\n  const [isExpanded, setIsExpanded] = useState(false)\n  const [topTradersGridData, setTopTradersGridData] = useState(null)\n  const handleItemClick = (index: number) => setActiveTab(index)\n  const tabs = [t('Total'), 'Storm', 'Flippers', 'Cakers']\n\n  useEffect(() => {\n    const getData = () => {\n      if (activeTab === 0) {\n        setTopTradersGridData(globalLeaderboardInformation.data)\n      }\n\n      if (activeTab === 1) {\n        setTopTradersGridData(team1LeaderboardInformation.leaderboardData.data)\n      }\n\n      if (activeTab === 2) {\n        setTopTradersGridData(team2LeaderboardInformation.leaderboardData.data)\n      }\n\n      if (activeTab === 3) {\n        setTopTradersGridData(team3LeaderboardInformation.leaderboardData.data)\n      }\n    }\n\n    if (isGlobalLeaderboardDataComplete) {\n      getData()\n    }\n  }, [\n    isGlobalLeaderboardDataComplete,\n    activeTab,\n    globalLeaderboardInformation,\n    team1LeaderboardInformation,\n    team2LeaderboardInformation,\n    team3LeaderboardInformation,\n  ])\n\n  return (\n    <Card id=\"top-traders-card\">\n      <Box width=\"100%\">\n        <CardHeader>\n          <Heading color=\"secondary\" scale=\"lg\">\n            {t('Top Traders')}\n          </Heading>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {t('Since start of the competition')}\n          </Text>\n        </CardHeader>\n        <Box mt=\"16px\">\n          <TabMenu activeIndex={activeTab} onItemClick={handleItemClick}>\n            {tabs.map((tabText) => {\n              return <Tab key={tabText}>{tabText}</Tab>\n            })}\n          </TabMenu>\n          <TopTradersGrid data={topTradersGridData} isExpanded={isExpanded} />\n        </Box>\n        <CardFooter p=\"0px\">\n          <Flex alignItems=\"center\" justifyContent=\"center\">\n            <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n              {isExpanded ? t('Hide') : t('Show More')}\n            </ExpandableLabel>\n          </Flex>\n        </CardFooter>\n      </Box>\n    </Card>\n  )\n}\n\nexport default TopTradersCard\n"]},"metadata":{},"sourceType":"module"}