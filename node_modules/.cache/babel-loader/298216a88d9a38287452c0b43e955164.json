{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{Box,CardBody,Flex,Text}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{useWeb3React}from'@web3-react/core';import ConnectWalletButton from'components/ConnectWalletButton';import tokens from'config/constants/tokens';import{useCakeVault}from'state/pools/hooks';import{convertSharesToCake}from'views/Pools/helpers';import AprRow from'../PoolCard/AprRow';import{StyledCard}from'../PoolCard/StyledCard';import CardFooter from'../PoolCard/CardFooter';import StyledCardHeader from'../PoolCard/StyledCardHeader';import VaultCardActions from'./VaultCardActions';import UnstakingFeeCountdownRow from'./UnstakingFeeCountdownRow';import RecentCakeProfitRow from'./RecentCakeProfitRow';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledCardBody=styled(CardBody)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  min-height: \",\";\\n\"])),function(_ref){var isLoading=_ref.isLoading;return isLoading?'0':'254px';});var CakeVaultCard=function CakeVaultCard(_ref2){var pool=_ref2.pool,showStakedOnly=_ref2.showStakedOnly;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useCakeVault=useCakeVault(),_useCakeVault$userDat=_useCakeVault.userData,userShares=_useCakeVault$userDat.userShares,isVaultUserDataLoading=_useCakeVault$userDat.isLoading,performanceFee=_useCakeVault.fees.performanceFee,pricePerFullShare=_useCakeVault.pricePerFullShare;var _convertSharesToCake=convertSharesToCake(userShares,pricePerFullShare),cakeAsBigNumber=_convertSharesToCake.cakeAsBigNumber;var accountHasSharesStaked=userShares&&userShares.gt(0);var isLoading=!pool.userData||isVaultUserDataLoading;var performanceFeeAsDecimal=performanceFee&&performanceFee/100;if(showStakedOnly&&!accountHasSharesStaked){return null;}return/*#__PURE__*/_jsxs(StyledCard,{isActive:true,children:[/*#__PURE__*/_jsx(StyledCardHeader,{isStaking:accountHasSharesStaked,isAutoVault:true,earningToken:tokens.cake,stakingToken:tokens.cake}),/*#__PURE__*/_jsxs(StyledCardBody,{isLoading:isLoading,children:[/*#__PURE__*/_jsx(AprRow,{pool:pool,stakedBalance:cakeAsBigNumber,performanceFee:performanceFeeAsDecimal}),/*#__PURE__*/_jsx(Box,{mt:\"24px\",children:/*#__PURE__*/_jsx(RecentCakeProfitRow,{})}),/*#__PURE__*/_jsx(Box,{mt:\"8px\",children:/*#__PURE__*/_jsx(UnstakingFeeCountdownRow,{})}),/*#__PURE__*/_jsx(Flex,{mt:\"32px\",flexDirection:\"column\",children:account?/*#__PURE__*/_jsx(VaultCardActions,{pool:pool,accountHasSharesStaked:accountHasSharesStaked,isLoading:isLoading,performanceFee:performanceFeeAsDecimal}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{mb:\"10px\",textTransform:\"uppercase\",fontSize:\"12px\",color:\"textSubtle\",bold:true,children:t('Start earning')}),/*#__PURE__*/_jsx(ConnectWalletButton,{})]})})]}),/*#__PURE__*/_jsx(CardFooter,{pool:pool,account:account})]});};export default CakeVaultCard;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Pools/components/CakeVaultCard/index.tsx"],"names":["React","styled","Box","CardBody","Flex","Text","useTranslation","useWeb3React","ConnectWalletButton","tokens","useCakeVault","convertSharesToCake","AprRow","StyledCard","CardFooter","StyledCardHeader","VaultCardActions","UnstakingFeeCountdownRow","RecentCakeProfitRow","StyledCardBody","isLoading","CakeVaultCard","pool","showStakedOnly","t","account","userData","userShares","isVaultUserDataLoading","performanceFee","fees","pricePerFullShare","cakeAsBigNumber","accountHasSharesStaked","gt","performanceFeeAsDecimal","cake"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport tokens from 'config/constants/tokens'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: DeserializedPool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        isStaking={accountHasSharesStaked}\n        isAutoVault\n        earningToken={tokens.cake}\n        stakingToken={tokens.cake}\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} stakedBalance={cakeAsBigNumber} performanceFee={performanceFeeAsDecimal} />\n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions\n              pool={pool}\n              accountHasSharesStaked={accountHasSharesStaked}\n              isLoading={isLoading}\n              performanceFee={performanceFeeAsDecimal}\n            />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n"]},"metadata":{},"sourceType":"module"}