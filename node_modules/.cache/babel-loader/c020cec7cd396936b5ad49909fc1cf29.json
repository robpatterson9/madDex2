{"ast":null,"code":"import React,{useEffect}from'react';import{ArrowBackIcon,Box,Button,Flex,Heading}from'@pancakeswap/uikit';import{useWeb3React}from'@web3-react/core';import{Link,useParams}from'react-router-dom';import{useAppDispatch}from'state';import{ProposalState,VotingStateLoadingStatus}from'state/types';import{useGetProposal,useGetVotingStateLoadingStatus,useGetVotes,useGetProposalLoadingStatus}from'state/voting/hooks';import{fetchProposal,fetchVotes}from'state/voting';import{useTranslation}from'contexts/Localization';import Container from'components/Layout/Container';import ReactMarkdown from'components/ReactMarkdown';import PageLoader from'components/Loader/PageLoader';import{isCoreProposal}from'../helpers';import{ProposalStateTag,ProposalTypeTag}from'../components/Proposals/tags';import Layout from'../components/Layout';import Details from'./Details';import Results from'./Results';import Vote from'./Vote';import Votes from'./Votes';import{PageMeta}from'../../../components/Layout/Page';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Proposal=function Proposal(){var _useParams=useParams(),id=_useParams.id;var proposal=useGetProposal(id);var _useTranslation=useTranslation(),t=_useTranslation.t;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var dispatch=useAppDispatch();var votes=useGetVotes(id);var voteLoadingStatus=useGetVotingStateLoadingStatus();var proposalLoadingStatus=useGetProposalLoadingStatus();var hasAccountVoted=account&&votes.some(function(vote){return vote.voter.toLowerCase()===account.toLowerCase();});var _ref=proposal!==null&&proposal!==void 0?proposal:{},_ref$id=_ref.id,proposalId=_ref$id===void 0?null:_ref$id,_ref$snapshot=_ref.snapshot,snapshot=_ref$snapshot===void 0?null:_ref$snapshot;var isPageLoading=voteLoadingStatus===VotingStateLoadingStatus.LOADING||proposalLoadingStatus===VotingStateLoadingStatus.LOADING;useEffect(function(){dispatch(fetchProposal(id));},[id,dispatch]);// We have to wait for the proposal to load before fetching the votes because we need to include the snapshot\nuseEffect(function(){if(proposalId&&snapshot){dispatch(fetchVotes({proposalId:proposalId,block:Number(snapshot)}));}},[proposalId,snapshot,dispatch]);if(!proposal){return/*#__PURE__*/_jsx(PageLoader,{});}return/*#__PURE__*/_jsxs(Container,{py:\"40px\",children:[/*#__PURE__*/_jsx(PageMeta,{}),/*#__PURE__*/_jsx(Box,{mb:\"40px\",children:/*#__PURE__*/_jsx(Button,{as:Link,to:\"/voting\",variant:\"text\",startIcon:/*#__PURE__*/_jsx(ArrowBackIcon,{color:\"primary\",width:\"24px\"}),px:\"0\",children:t('Back to Vote Overview')})}),/*#__PURE__*/_jsxs(Layout,{children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Box,{mb:\"32px\",children:[/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",mb:\"8px\",children:[/*#__PURE__*/_jsx(ProposalStateTag,{proposalState:proposal.state}),/*#__PURE__*/_jsx(ProposalTypeTag,{isCoreProposal:isCoreProposal(proposal),ml:\"8px\"})]}),/*#__PURE__*/_jsx(Heading,{as:\"h1\",scale:\"xl\",mb:\"16px\",children:proposal.title}),/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(ReactMarkdown,{children:proposal.body})})]}),!isPageLoading&&!hasAccountVoted&&proposal.state===ProposalState.ACTIVE&&/*#__PURE__*/_jsx(Vote,{proposal:proposal,mb:\"16px\"}),/*#__PURE__*/_jsx(Votes,{votes:votes})]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Details,{proposal:proposal}),/*#__PURE__*/_jsx(Results,{choices:proposal.choices,votes:votes})]})]})]});};export default Proposal;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Voting/Proposal/index.tsx"],"names":["React","useEffect","ArrowBackIcon","Box","Button","Flex","Heading","useWeb3React","Link","useParams","useAppDispatch","ProposalState","VotingStateLoadingStatus","useGetProposal","useGetVotingStateLoadingStatus","useGetVotes","useGetProposalLoadingStatus","fetchProposal","fetchVotes","useTranslation","Container","ReactMarkdown","PageLoader","isCoreProposal","ProposalStateTag","ProposalTypeTag","Layout","Details","Results","Vote","Votes","PageMeta","Proposal","id","proposal","t","account","dispatch","votes","voteLoadingStatus","proposalLoadingStatus","hasAccountVoted","some","vote","voter","toLowerCase","proposalId","snapshot","isPageLoading","LOADING","block","Number","state","title","body","ACTIVE","choices"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { ArrowBackIcon, Box, Button, Flex, Heading } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { Link, useParams } from 'react-router-dom'\nimport { useAppDispatch } from 'state'\nimport { ProposalState, VotingStateLoadingStatus } from 'state/types'\nimport {\n  useGetProposal,\n  useGetVotingStateLoadingStatus,\n  useGetVotes,\n  useGetProposalLoadingStatus,\n} from 'state/voting/hooks'\nimport { fetchProposal, fetchVotes } from 'state/voting'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport ReactMarkdown from 'components/ReactMarkdown'\nimport PageLoader from 'components/Loader/PageLoader'\nimport { isCoreProposal } from '../helpers'\nimport { ProposalStateTag, ProposalTypeTag } from '../components/Proposals/tags'\nimport Layout from '../components/Layout'\nimport Details from './Details'\nimport Results from './Results'\nimport Vote from './Vote'\nimport Votes from './Votes'\nimport { PageMeta } from '../../../components/Layout/Page'\n\nconst Proposal = () => {\n  const { id }: { id: string } = useParams()\n  const proposal = useGetProposal(id)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const votes = useGetVotes(id)\n  const voteLoadingStatus = useGetVotingStateLoadingStatus()\n  const proposalLoadingStatus = useGetProposalLoadingStatus()\n  const hasAccountVoted = account && votes.some((vote) => vote.voter.toLowerCase() === account.toLowerCase())\n  const { id: proposalId = null, snapshot = null } = proposal ?? {}\n  const isPageLoading =\n    voteLoadingStatus === VotingStateLoadingStatus.LOADING || proposalLoadingStatus === VotingStateLoadingStatus.LOADING\n\n  useEffect(() => {\n    dispatch(fetchProposal(id))\n  }, [id, dispatch])\n\n  // We have to wait for the proposal to load before fetching the votes because we need to include the snapshot\n  useEffect(() => {\n    if (proposalId && snapshot) {\n      dispatch(fetchVotes({ proposalId, block: Number(snapshot) }))\n    }\n  }, [proposalId, snapshot, dispatch])\n\n  if (!proposal) {\n    return <PageLoader />\n  }\n\n  return (\n    <Container py=\"40px\">\n      <PageMeta />\n      <Box mb=\"40px\">\n        <Button as={Link} to=\"/voting\" variant=\"text\" startIcon={<ArrowBackIcon color=\"primary\" width=\"24px\" />} px=\"0\">\n          {t('Back to Vote Overview')}\n        </Button>\n      </Box>\n      <Layout>\n        <Box>\n          <Box mb=\"32px\">\n            <Flex alignItems=\"center\" mb=\"8px\">\n              <ProposalStateTag proposalState={proposal.state} />\n              <ProposalTypeTag isCoreProposal={isCoreProposal(proposal)} ml=\"8px\" />\n            </Flex>\n            <Heading as=\"h1\" scale=\"xl\" mb=\"16px\">\n              {proposal.title}\n            </Heading>\n            <Box>\n              <ReactMarkdown>{proposal.body}</ReactMarkdown>\n            </Box>\n          </Box>\n          {!isPageLoading && !hasAccountVoted && proposal.state === ProposalState.ACTIVE && (\n            <Vote proposal={proposal} mb=\"16px\" />\n          )}\n          <Votes votes={votes} />\n        </Box>\n        <Box>\n          <Details proposal={proposal} />\n          <Results choices={proposal.choices} votes={votes} />\n        </Box>\n      </Layout>\n    </Container>\n  )\n}\n\nexport default Proposal\n"]},"metadata":{},"sourceType":"module"}