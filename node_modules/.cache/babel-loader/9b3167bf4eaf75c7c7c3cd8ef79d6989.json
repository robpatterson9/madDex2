{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Swap/components/SwapModalHeader.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { TradeType } from '@pancakeswap/sdk';\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit';\nimport { Field } from 'state/swap/actions';\nimport { useTranslation } from 'contexts/Localization';\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices';\nimport { AutoColumn } from 'components/Layout/Column';\nimport { CurrencyLogo } from 'components/Logo';\nimport { RowBetween, RowFixed } from 'components/Layout/Row';\nimport truncateHash from 'utils/truncateHash';\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges\n}) {\n  _s();\n\n  var _slippageAdjustedAmou, _slippageAdjustedAmou2;\n\n  const {\n    t\n  } = useTranslation();\n  const slippageAdjustedAmounts = useMemo(() => computeSlippageAdjustedAmounts(trade, allowedSlippage), [trade, allowedSlippage]);\n  const {\n    priceImpactWithoutFee\n  } = useMemo(() => computeTradePriceBreakdown(trade), [trade]);\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee);\n  const amount = trade.tradeType === TradeType.EXACT_INPUT ? (_slippageAdjustedAmou = slippageAdjustedAmounts[Field.OUTPUT]) === null || _slippageAdjustedAmou === void 0 ? void 0 : _slippageAdjustedAmou.toSignificant(6) : (_slippageAdjustedAmou2 = slippageAdjustedAmounts[Field.INPUT]) === null || _slippageAdjustedAmou2 === void 0 ? void 0 : _slippageAdjustedAmou2.toSignificant(6);\n  const symbol = trade.tradeType === TradeType.EXACT_INPUT ? trade.outputAmount.currency.symbol : trade.inputAmount.currency.symbol;\n  const tradeInfoText = trade.tradeType === TradeType.EXACT_INPUT ? t('Output is estimated. You will receive at least %amount% %symbol% or the transaction will revert.', {\n    amount,\n    symbol\n  }) : t('Input is estimated. You will sell at most %amount% %symbol% or the transaction will revert.', {\n    amount,\n    symbol\n  });\n  const [estimatedText, transactionRevertText] = tradeInfoText.split(`${amount} ${symbol}`);\n  const truncatedRecipient = recipient ? truncateHash(recipient) : '';\n  const recipientInfoText = t('Output will be sent to %recipient%', {\n    recipient: truncatedRecipient\n  });\n  const [recipientSentToText, postSentToText] = recipientInfoText.split(truncatedRecipient);\n  return /*#__PURE__*/_jsxDEV(AutoColumn, {\n    gap: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n      align: \"flex-end\",\n      children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n        gap: \"0px\",\n        children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n          currency: trade.inputAmount.currency,\n          size: \"24px\",\n          style: {\n            marginRight: '12px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TruncatedText, {\n          fontSize: \"24px\",\n          color: showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text',\n          children: trade.inputAmount.toSignificant(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n        gap: \"0px\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"24px\",\n          ml: \"10px\",\n          children: trade.inputAmount.currency.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n      children: /*#__PURE__*/_jsxDEV(ArrowDownIcon, {\n        width: \"16px\",\n        ml: \"4px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n      align: \"flex-end\",\n      children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n        gap: \"0px\",\n        children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n          currency: trade.outputAmount.currency,\n          size: \"24px\",\n          style: {\n            marginRight: '12px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TruncatedText, {\n          fontSize: \"24px\",\n          color: priceImpactSeverity > 2 ? 'failure' : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT ? 'primary' : 'text',\n          children: trade.outputAmount.toSignificant(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n        gap: \"0px\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"24px\",\n          ml: \"10px\",\n          children: trade.outputAmount.currency.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), showAcceptChanges ? /*#__PURE__*/_jsxDEV(SwapShowAcceptChanges, {\n      justify: \"flex-start\",\n      gap: \"0px\",\n      children: /*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(ErrorIcon, {\n            mr: \"8px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            children: [\" \", t('Price Updated')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onAcceptChanges,\n          children: t('Accept')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(AutoColumn, {\n      justify: \"flex-start\",\n      gap: \"sm\",\n      style: {\n        padding: '24px 0 0 0px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        small: true,\n        color: \"textSubtle\",\n        textAlign: \"left\",\n        style: {\n          width: '100%'\n        },\n        children: [estimatedText, /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [amount, \" \", symbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), transactionRevertText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), recipient !== null ? /*#__PURE__*/_jsxDEV(AutoColumn, {\n      justify: \"flex-start\",\n      gap: \"sm\",\n      style: {\n        padding: '12px 0 0 0px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        color: \"textSubtle\",\n        children: [recipientSentToText, /*#__PURE__*/_jsxDEV(\"b\", {\n          title: recipient,\n          children: truncatedRecipient\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), postSentToText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SwapModalHeader, \"/fct36INQVGl127PeotkYWwZCT0=\", false, function () {\n  return [useTranslation];\n});\n\n_c = SwapModalHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwapModalHeader\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Swap/components/SwapModalHeader.tsx"],"names":["React","useMemo","TradeType","Button","Text","ErrorIcon","ArrowDownIcon","Field","useTranslation","computeSlippageAdjustedAmounts","computeTradePriceBreakdown","warningSeverity","AutoColumn","CurrencyLogo","RowBetween","RowFixed","truncateHash","TruncatedText","SwapShowAcceptChanges","SwapModalHeader","trade","allowedSlippage","recipient","showAcceptChanges","onAcceptChanges","t","slippageAdjustedAmounts","priceImpactWithoutFee","priceImpactSeverity","amount","tradeType","EXACT_INPUT","OUTPUT","toSignificant","INPUT","symbol","outputAmount","currency","inputAmount","tradeInfoText","estimatedText","transactionRevertText","split","truncatedRecipient","recipientInfoText","recipientSentToText","postSentToText","marginRight","EXACT_OUTPUT","padding","width"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport truncateHash from 'utils/truncateHash'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const { t } = useTranslation()\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  const amount =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)\n      : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)\n  const symbol =\n    trade.tradeType === TradeType.EXACT_INPUT ? trade.outputAmount.currency.symbol : trade.inputAmount.currency.symbol\n\n  const tradeInfoText =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? t('Output is estimated. You will receive at least %amount% %symbol% or the transaction will revert.', {\n          amount,\n          symbol,\n        })\n      : t('Input is estimated. You will sell at most %amount% %symbol% or the transaction will revert.', {\n          amount,\n          symbol,\n        })\n\n  const [estimatedText, transactionRevertText] = tradeInfoText.split(`${amount} ${symbol}`)\n\n  const truncatedRecipient = recipient ? truncateHash(recipient) : ''\n\n  const recipientInfoText = t('Output will be sent to %recipient%', {\n    recipient: truncatedRecipient,\n  })\n\n  const [recipientSentToText, postSentToText] = recipientInfoText.split(truncatedRecipient)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> {t('Price Updated')}</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>{t('Accept')}</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n          {estimatedText}\n          <b>\n            {amount} {symbol}\n          </b>\n          {transactionRevertText}\n        </Text>\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            {recipientSentToText}\n            <b title={recipient}>{truncatedRecipient}</b>\n            {postSentToText}\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}