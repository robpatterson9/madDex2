{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useAppDispatch } from 'state';\nimport useIsWindowVisible from 'hooks/useIsWindowVisible';\nimport { simpleRpcProvider } from 'utils/providers';\nimport { setBlock } from '.';\nexport const usePollBlockNumber = () => {\n  _s();\n\n  const timer = useRef(null);\n  const dispatch = useAppDispatch();\n  const isWindowVisible = useIsWindowVisible();\n  useEffect(() => {\n    if (isWindowVisible) {\n      timer.current = setInterval(async () => {\n        const blockNumber = await simpleRpcProvider.getBlockNumber();\n        dispatch(setBlock(blockNumber));\n      }, 6000);\n    } else {\n      clearInterval(timer.current);\n    }\n\n    return () => clearInterval(timer.current);\n  }, [dispatch, timer, isWindowVisible]);\n};\n\n_s(usePollBlockNumber, \"EpTpWFhqa4KMU9ulDchmEK0mxUc=\", false, function () {\n  return [useAppDispatch, useIsWindowVisible];\n});\n\nexport const useBlock = () => {\n  _s2();\n\n  return useSelector(state => state.block);\n};\n\n_s2(useBlock, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const useInitialBlock = () => {\n  _s3();\n\n  return useSelector(state => state.block.initialBlock);\n};\n\n_s3(useInitialBlock, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/state/block/hooks.ts"],"names":["useEffect","useRef","useSelector","useAppDispatch","useIsWindowVisible","simpleRpcProvider","setBlock","usePollBlockNumber","timer","dispatch","isWindowVisible","current","setInterval","blockNumber","getBlockNumber","clearInterval","useBlock","state","block","useInitialBlock","initialBlock"],"mappings":";;;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,OAAOC,kBAAP,MAA+B,0BAA/B;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,SAASC,QAAT,QAAyB,GAAzB;AAGA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AACtC,QAAMC,KAAK,GAAGP,MAAM,CAAC,IAAD,CAApB;AACA,QAAMQ,QAAQ,GAAGN,cAAc,EAA/B;AACA,QAAMO,eAAe,GAAGN,kBAAkB,EAA1C;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,eAAJ,EAAqB;AACnBF,MAAAA,KAAK,CAACG,OAAN,GAAgBC,WAAW,CAAC,YAAY;AACtC,cAAMC,WAAW,GAAG,MAAMR,iBAAiB,CAACS,cAAlB,EAA1B;AACAL,QAAAA,QAAQ,CAACH,QAAQ,CAACO,WAAD,CAAT,CAAR;AACD,OAH0B,EAGxB,IAHwB,CAA3B;AAID,KALD,MAKO;AACLE,MAAAA,aAAa,CAACP,KAAK,CAACG,OAAP,CAAb;AACD;;AAED,WAAO,MAAMI,aAAa,CAACP,KAAK,CAACG,OAAP,CAA1B;AACD,GAXQ,EAWN,CAACF,QAAD,EAAWD,KAAX,EAAkBE,eAAlB,CAXM,CAAT;AAYD,CAjBM;;GAAMH,kB;UAEMJ,c,EACOC,kB;;;AAgB1B,OAAO,MAAMY,QAAQ,GAAG,MAAM;AAAA;;AAC5B,SAAOd,WAAW,CAAEe,KAAD,IAAkBA,KAAK,CAACC,KAAzB,CAAlB;AACD,CAFM;;IAAMF,Q;UACJd,W;;;AAGT,OAAO,MAAMiB,eAAe,GAAG,MAAM;AAAA;;AACnC,SAAOjB,WAAW,CAAEe,KAAD,IAAkBA,KAAK,CAACC,KAAN,CAAYE,YAA/B,CAAlB;AACD,CAFM;;IAAMD,e;UACJjB,W","sourcesContent":["import { useEffect, useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const timer = useRef(null)\n  const dispatch = useAppDispatch()\n  const isWindowVisible = useIsWindowVisible()\n\n  useEffect(() => {\n    if (isWindowVisible) {\n      timer.current = setInterval(async () => {\n        const blockNumber = await simpleRpcProvider.getBlockNumber()\n        dispatch(setBlock(blockNumber))\n      }, 6000)\n    } else {\n      clearInterval(timer.current)\n    }\n\n    return () => clearInterval(timer.current)\n  }, [dispatch, timer, isWindowVisible])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n"]},"metadata":{},"sourceType":"module"}