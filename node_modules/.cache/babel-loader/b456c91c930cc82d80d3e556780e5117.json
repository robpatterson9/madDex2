{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Pools/components/PoolsTable/ActionPanel/AutoHarvest.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Text, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { getCakeVaultEarnings } from 'views/Pools/helpers';\nimport { useTranslation } from 'contexts/Localization';\nimport Balance from 'components/Balance';\nimport { useCakeVault } from 'state/pools/hooks';\nimport { ActionContainer, ActionTitles, ActionContent } from './styles';\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AutoHarvestAction = ({\n  userDataLoaded,\n  earningTokenPrice\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n  const {\n    userData: {\n      cakeAtLastUserAction,\n      userShares\n    },\n    pricePerFullShare,\n    fees: {\n      performanceFee\n    }\n  } = useCakeVault();\n  const {\n    hasAutoEarnings,\n    autoCakeToDisplay,\n    autoUsdToDisplay\n  } = getCakeVaultEarnings(account, cakeAtLastUserAction, userShares, pricePerFullShare, earningTokenPrice);\n  const earningTokenBalance = autoCakeToDisplay;\n  const earningTokenDollarBalance = autoUsdToDisplay;\n  const hasEarnings = hasAutoEarnings;\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip(t('Subtracted automatically from each yield harvest and burned.'), {\n    placement: 'bottom-start'\n  });\n\n  const actionTitle = /*#__PURE__*/_jsxDEV(Text, {\n    fontSize: \"12px\",\n    bold: true,\n    color: \"secondary\",\n    as: \"span\",\n    textTransform: \"uppercase\",\n    children: t('Recent CAKE profit')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n\n  if (!account) {\n    return /*#__PURE__*/_jsxDEV(ActionContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ActionTitles, {\n        children: actionTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionContent, {\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!userDataLoaded) {\n    return /*#__PURE__*/_jsxDEV(ActionContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ActionTitles, {\n        children: actionTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActionContent, {\n        children: /*#__PURE__*/_jsxDEV(Skeleton, {\n          width: 180,\n          height: \"32px\",\n          marginTop: 14\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ActionContainer, {\n    isAutoVault: true,\n    children: [/*#__PURE__*/_jsxDEV(ActionTitles, {\n      children: actionTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActionContent, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        flex: \"1\",\n        pt: \"16px\",\n        flexDirection: \"column\",\n        alignSelf: \"flex-start\",\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: hasEarnings ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Balance, {\n              lineHeight: \"1\",\n              bold: true,\n              fontSize: \"20px\",\n              decimals: 5,\n              value: earningTokenBalance\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), earningTokenPrice > 0 && /*#__PURE__*/_jsxDEV(Balance, {\n              display: \"inline\",\n              fontSize: \"12px\",\n              color: \"textSubtle\",\n              decimals: 2,\n              prefix: \"~\",\n              value: earningTokenDollarBalance,\n              unit: \" USD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              color: \"textDisabled\",\n              children: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"12px\",\n              color: \"textDisabled\",\n              children: \"0 USD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        flex: \"1.3\",\n        flexDirection: \"column\",\n        alignSelf: \"flex-start\",\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(UnstakingFeeCountdownRow, {\n          isTableVariant: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          mb: \"2px\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          children: [tooltipVisible && tooltip, /*#__PURE__*/_jsxDEV(TooltipText, {\n            ref: targetRef,\n            small: true,\n            children: t('Performance Fee')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              ml: \"4px\",\n              small: true,\n              children: [performanceFee / 100, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AutoHarvestAction, \"QB0Kb4BBtMgSpg6tt731Y/6sC3A=\", false, function () {\n  return [useTranslation, useWeb3React, useCakeVault, useTooltip];\n});\n\n_c = AutoHarvestAction;\nexport default AutoHarvestAction;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutoHarvestAction\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Pools/components/PoolsTable/ActionPanel/AutoHarvest.tsx"],"names":["React","Text","Flex","TooltipText","useTooltip","Skeleton","Heading","useWeb3React","getCakeVaultEarnings","useTranslation","Balance","useCakeVault","ActionContainer","ActionTitles","ActionContent","UnstakingFeeCountdownRow","AutoHarvestAction","userDataLoaded","earningTokenPrice","t","account","userData","cakeAtLastUserAction","userShares","pricePerFullShare","fees","performanceFee","hasAutoEarnings","autoCakeToDisplay","autoUsdToDisplay","earningTokenBalance","earningTokenDollarBalance","hasEarnings","targetRef","tooltip","tooltipVisible","placement","actionTitle"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Text, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface AutoHarvestActionProps extends DeserializedPool {\n  userDataLoaded: boolean\n}\n\nconst AutoHarvestAction: React.FunctionComponent<AutoHarvestActionProps> = ({ userDataLoaded, earningTokenPrice }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const earningTokenBalance = autoCakeToDisplay\n  const earningTokenDollarBalance = autoUsdToDisplay\n  const hasEarnings = hasAutoEarnings\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent CAKE profit')}\n    </Text>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer isAutoVault>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n          <UnstakingFeeCountdownRow isTableVariant />\n          <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n            {tooltipVisible && tooltip}\n            <TooltipText ref={targetRef} small>\n              {t('Performance Fee')}\n            </TooltipText>\n            <Flex alignItems=\"center\">\n              <Text ml=\"4px\" small>\n                {performanceFee / 100}%\n              </Text>\n            </Flex>\n          </Flex>\n        </Flex>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default AutoHarvestAction\n"]},"metadata":{},"sourceType":"module"}