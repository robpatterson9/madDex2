{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/v1/NothingToClaimModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport styled from 'styled-components';\nimport { ModalContainer, ModalBody, ModalTitle, ModalHeader, Text, Heading, ModalCloseButton, Button, AutoRenewIcon } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { getAllV1History } from './helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = styled(ModalContainer)`\n  overflow: visible;\n`;\n_c = Modal;\nconst BunnyDecoration = styled.div`\n  position: absolute;\n  top: -116px; // line up bunny at the top of the modal\n  left: 0px;\n  text-align: center;\n  width: 100%;\n`;\n_c2 = BunnyDecoration;\n\nconst CollectRoundWinningsModal = ({\n  onDismiss\n}) => {\n  _s();\n\n  const [isFetching, setIsFetching] = useState(false);\n  const [history, setHistory] = useState([]);\n  const {\n    t\n  } = useTranslation();\n  const {\n    account\n  } = useWeb3React();\n\n  const handleClick = () => {\n    const header = ['Round', 'Result', 'Your Position', 'Bet Amount', 'Transaction', 'Claimed Transaction', 'Lock Price', 'Close Price', 'Total Bets', 'Total Amount', 'Round Failed'].join(',');\n    const rows = history.reduce((accum, bet) => {\n      return [...accum, [bet.round.epoch, bet.round.position, bet.position, bet.amount, bet.hash, bet.claimedHash || '', bet.round.lockPrice, bet.round.closePrice, bet.round.totalBets, bet.round.totalAmount, bet.round.failed].join(',')];\n    }, []);\n    const anchor = document.createElement('a');\n    const blob = new Blob([`${header}\\n${rows.join('\\n')}`], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    anchor.href = URL.createObjectURL(blob);\n    anchor.target = '_blank';\n    anchor.download = 'pancakeswap-prediction-v1-history.csv';\n    document.body.appendChild(anchor);\n    anchor.click();\n    document.body.removeChild(anchor);\n  };\n\n  useEffect(() => {\n    const fetchAllHistory = async () => {\n      setIsFetching(true);\n\n      try {\n        const response = await getAllV1History({\n          user: account.toLowerCase()\n        });\n        setHistory(response);\n      } catch (error) {\n        console.error('Unable to fetch history', error);\n      } finally {\n        setIsFetching(false);\n      }\n    };\n\n    if (account) {\n      fetchAllHistory();\n    }\n  }, [account, setHistory, setIsFetching]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    minWidth: \"288px\",\n    position: \"relative\",\n    mt: \"124px\",\n    children: [/*#__PURE__*/_jsxDEV(BunnyDecoration, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/decorations/prize-bunny.png\",\n        alt: \"bunny decoration\",\n        height: \"124px\",\n        width: \"168px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalHeader, {\n      children: [/*#__PURE__*/_jsxDEV(ModalTitle, {\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          children: t('Nothing to Collect')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {\n        onDismiss: onDismiss\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      p: \"24px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        as: \"p\",\n        fontSize: \"14px\",\n        children: t('You have no unclaimed v0.1 prizes.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        as: \"p\",\n        fontSize: \"14px\",\n        mb: \"24px\",\n        children: t('Download your v0.1 Prediction history below.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClick,\n        isLoading: isFetching,\n        endIcon: isFetching ? /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n          spin: true,\n          width: \"24px\",\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 33\n        }, this) : null,\n        children: t('Download .CSV')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CollectRoundWinningsModal, \"FFEc3eC2v6xvYmBWoMZu9jCl/Sg=\", false, function () {\n  return [useTranslation, useWeb3React];\n});\n\n_c3 = CollectRoundWinningsModal;\nexport default CollectRoundWinningsModal;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Modal\");\n$RefreshReg$(_c2, \"BunnyDecoration\");\n$RefreshReg$(_c3, \"CollectRoundWinningsModal\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/v1/NothingToClaimModal.tsx"],"names":["React","useEffect","useState","useWeb3React","styled","ModalContainer","ModalBody","ModalTitle","ModalHeader","Text","Heading","ModalCloseButton","Button","AutoRenewIcon","useTranslation","getAllV1History","Modal","BunnyDecoration","div","CollectRoundWinningsModal","onDismiss","isFetching","setIsFetching","history","setHistory","t","account","handleClick","header","join","rows","reduce","accum","bet","round","epoch","position","amount","hash","claimedHash","lockPrice","closePrice","totalBets","totalAmount","failed","anchor","document","createElement","blob","Blob","type","href","URL","createObjectURL","target","download","body","appendChild","click","removeChild","fetchAllHistory","response","user","toLowerCase","error","console"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport {\n  ModalContainer,\n  ModalBody,\n  ModalTitle,\n  ModalHeader,\n  InjectedModalProps,\n  Text,\n  Heading,\n  ModalCloseButton,\n  Button,\n  AutoRenewIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAllV1History } from './helpers'\n\nconst Modal = styled(ModalContainer)`\n  overflow: visible;\n`\n\nconst BunnyDecoration = styled.div`\n  position: absolute;\n  top: -116px; // line up bunny at the top of the modal\n  left: 0px;\n  text-align: center;\n  width: 100%;\n`\n\nconst CollectRoundWinningsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [isFetching, setIsFetching] = useState(false)\n  const [history, setHistory] = useState([])\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const handleClick = () => {\n    const header = [\n      'Round',\n      'Result',\n      'Your Position',\n      'Bet Amount',\n      'Transaction',\n      'Claimed Transaction',\n      'Lock Price',\n      'Close Price',\n      'Total Bets',\n      'Total Amount',\n      'Round Failed',\n    ].join(',')\n\n    const rows = history.reduce((accum, bet) => {\n      return [\n        ...accum,\n        [\n          bet.round.epoch,\n          bet.round.position,\n          bet.position,\n          bet.amount,\n          bet.hash,\n          bet.claimedHash || '',\n          bet.round.lockPrice,\n          bet.round.closePrice,\n          bet.round.totalBets,\n          bet.round.totalAmount,\n          bet.round.failed,\n        ].join(','),\n      ]\n    }, [])\n\n    const anchor = document.createElement('a')\n    const blob = new Blob([`${header}\\n${rows.join('\\n')}`], {\n      type: 'text/csv;charset=utf-8;',\n    })\n\n    anchor.href = URL.createObjectURL(blob)\n    anchor.target = '_blank'\n    anchor.download = 'pancakeswap-prediction-v1-history.csv'\n\n    document.body.appendChild(anchor)\n    anchor.click()\n    document.body.removeChild(anchor)\n  }\n\n  useEffect(() => {\n    const fetchAllHistory = async () => {\n      setIsFetching(true)\n\n      try {\n        const response = await getAllV1History({ user: account.toLowerCase() })\n        setHistory(response)\n      } catch (error) {\n        console.error('Unable to fetch history', error)\n      } finally {\n        setIsFetching(false)\n      }\n    }\n\n    if (account) {\n      fetchAllHistory()\n    }\n  }, [account, setHistory, setIsFetching])\n\n  return (\n    <Modal minWidth=\"288px\" position=\"relative\" mt=\"124px\">\n      <BunnyDecoration>\n        <img src=\"/images/decorations/prize-bunny.png\" alt=\"bunny decoration\" height=\"124px\" width=\"168px\" />\n      </BunnyDecoration>\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Nothing to Collect')}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <Text as=\"p\" fontSize=\"14px\">\n          {t('You have no unclaimed v0.1 prizes.')}\n        </Text>\n        <Text as=\"p\" fontSize=\"14px\" mb=\"24px\">\n          {t('Download your v0.1 Prediction history below.')}\n        </Text>\n        <Button\n          onClick={handleClick}\n          isLoading={isFetching}\n          endIcon={isFetching ? <AutoRenewIcon spin width=\"24px\" color=\"white\" /> : null}\n        >\n          {t('Download .CSV')}\n        </Button>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default CollectRoundWinningsModal\n"]},"metadata":{},"sourceType":"module"}