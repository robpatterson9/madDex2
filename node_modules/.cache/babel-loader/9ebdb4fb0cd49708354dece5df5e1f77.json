{"ast":null,"code":"import _toConsumableArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from'react';import{Button,Card,CardBody,CardHeader,Heading}from'@pancakeswap/uikit';import uniqueId from'lodash/uniqueId';import{useTranslation}from'contexts/Localization';import Choice from'./Choice';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var MINIMUM_CHOICES=2;export var makeChoice=function makeChoice(){return{id:uniqueId(),value:''};};var Choices=function Choices(_ref){var choices=_ref.choices,onChange=_ref.onChange;var _useTranslation=useTranslation(),t=_useTranslation.t;var hasMinimumChoices=choices.filter(function(choice){return choice.value.length>0;}).length>=MINIMUM_CHOICES;var addChoice=function addChoice(){onChange([].concat(_toConsumableArray(choices),[makeChoice()]));};return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(Heading,{as:\"h3\",scale:\"md\",children:t('Choices')})}),/*#__PURE__*/_jsxs(CardBody,{children:[choices.map(function(_ref2,index){var id=_ref2.id,value=_ref2.value;var handleTextInput=function handleTextInput(newValue){var newChoices=_toConsumableArray(choices);var choiceIndex=newChoices.findIndex(function(newChoice){return newChoice.id===id;});newChoices[choiceIndex].value=newValue;onChange(newChoices);};var handleRemove=function handleRemove(){onChange(choices.filter(function(newPrevChoice){return newPrevChoice.id!==id;}));};return/*#__PURE__*/_jsx(Choice,{scale:\"lg\",onTextInput:handleTextInput,placeholder:t('Input choice text'),value:value,onRemove:index>1?handleRemove:undefined},id);}),/*#__PURE__*/_jsx(Button,{type:\"button\",onClick:addChoice,disabled:!hasMinimumChoices,children:t('Add Choice')})]})]});};export default Choices;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Voting/CreateProposal/Choices.tsx"],"names":["React","Button","Card","CardBody","CardHeader","Heading","uniqueId","useTranslation","Choice","MINIMUM_CHOICES","makeChoice","id","value","Choices","choices","onChange","t","hasMinimumChoices","filter","choice","length","addChoice","map","index","handleTextInput","newValue","newChoices","choiceIndex","findIndex","newChoice","handleRemove","newPrevChoice","undefined"],"mappings":"gKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,QAAvB,CAAiCC,UAAjC,CAA6CC,OAA7C,KAA4D,oBAA5D,CACA,MAAOC,CAAAA,QAAP,KAAqB,iBAArB,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,C,wFAYA,MAAO,IAAMC,CAAAA,eAAe,CAAG,CAAxB,CACP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAe,CAAEC,EAAE,CAAEL,QAAQ,EAAd,CAAkBM,KAAK,CAAE,EAAzB,CAAf,EAAnB,CAEP,GAAMC,CAAAA,OAA+B,CAAG,QAAlCA,CAAAA,OAAkC,MAA2B,IAAxBC,CAAAA,OAAwB,MAAxBA,OAAwB,CAAfC,QAAe,MAAfA,QAAe,CACjE,oBAAcR,cAAc,EAA5B,CAAQS,CAAR,iBAAQA,CAAR,CACA,GAAMC,CAAAA,iBAAiB,CAAGH,OAAO,CAACI,MAAR,CAAe,SAACC,MAAD,QAAYA,CAAAA,MAAM,CAACP,KAAP,CAAaQ,MAAb,CAAsB,CAAlC,EAAf,EAAoDA,MAApD,EAA8DX,eAAxF,CAEA,GAAMY,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBN,QAAQ,8BAAKD,OAAL,GAAcJ,UAAU,EAAxB,GAAR,CACD,CAFD,CAIA,mBACE,MAAC,IAAD,yBACE,KAAC,UAAD,wBACE,KAAC,OAAD,EAAS,EAAE,CAAC,IAAZ,CAAiB,KAAK,CAAC,IAAvB,UACGM,CAAC,CAAC,SAAD,CADJ,EADF,EADF,cAME,MAAC,QAAD,YACGF,OAAO,CAACQ,GAAR,CAAY,eAAgBC,KAAhB,CAA0B,IAAvBZ,CAAAA,EAAuB,OAAvBA,EAAuB,CAAnBC,KAAmB,OAAnBA,KAAmB,CACrC,GAAMY,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,QAAD,CAAsB,CAC5C,GAAMC,CAAAA,UAAU,oBAAOZ,OAAP,CAAhB,CACA,GAAMa,CAAAA,WAAW,CAAGD,UAAU,CAACE,SAAX,CAAqB,SAACC,SAAD,QAAeA,CAAAA,SAAS,CAAClB,EAAV,GAAiBA,EAAhC,EAArB,CAApB,CAEAe,UAAU,CAACC,WAAD,CAAV,CAAwBf,KAAxB,CAAgCa,QAAhC,CAEAV,QAAQ,CAACW,UAAD,CAAR,CACD,CAPD,CASA,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBf,QAAQ,CAACD,OAAO,CAACI,MAAR,CAAe,SAACa,aAAD,QAAmBA,CAAAA,aAAa,CAACpB,EAAd,GAAqBA,EAAxC,EAAf,CAAD,CAAR,CACD,CAFD,CAIA,mBACE,KAAC,MAAD,EAEE,KAAK,CAAC,IAFR,CAGE,WAAW,CAAEa,eAHf,CAIE,WAAW,CAAER,CAAC,CAAC,mBAAD,CAJhB,CAKE,KAAK,CAAEJ,KALT,CAME,QAAQ,CAAEW,KAAK,CAAG,CAAR,CAAYO,YAAZ,CAA2BE,SANvC,EACOrB,EADP,CADF,CAUD,CAxBA,CADH,cA2BE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAEU,SAA/B,CAA0C,QAAQ,CAAE,CAACJ,iBAArD,UACGD,CAAC,CAAC,YAAD,CADJ,EA3BF,GANF,GADF,CAwCD,CAhDD,CAkDA,cAAeH,CAAAA,OAAf","sourcesContent":["import React from 'react'\nimport { Button, Card, CardBody, CardHeader, Heading } from '@pancakeswap/uikit'\nimport uniqueId from 'lodash/uniqueId'\nimport { useTranslation } from 'contexts/Localization'\nimport Choice from './Choice'\n\nexport interface Choice {\n  id: string\n  value: string\n}\n\ninterface ChoicesProps {\n  choices: Choice[]\n  onChange: (newChoices: Choice[]) => void\n}\n\nexport const MINIMUM_CHOICES = 2\nexport const makeChoice = (): Choice => ({ id: uniqueId(), value: '' })\n\nconst Choices: React.FC<ChoicesProps> = ({ choices, onChange }) => {\n  const { t } = useTranslation()\n  const hasMinimumChoices = choices.filter((choice) => choice.value.length > 0).length >= MINIMUM_CHOICES\n\n  const addChoice = () => {\n    onChange([...choices, makeChoice()])\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <Heading as=\"h3\" scale=\"md\">\n          {t('Choices')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        {choices.map(({ id, value }, index) => {\n          const handleTextInput = (newValue: string) => {\n            const newChoices = [...choices]\n            const choiceIndex = newChoices.findIndex((newChoice) => newChoice.id === id)\n\n            newChoices[choiceIndex].value = newValue\n\n            onChange(newChoices)\n          }\n\n          const handleRemove = () => {\n            onChange(choices.filter((newPrevChoice) => newPrevChoice.id !== id))\n          }\n\n          return (\n            <Choice\n              key={id}\n              scale=\"lg\"\n              onTextInput={handleTextInput}\n              placeholder={t('Input choice text')}\n              value={value}\n              onRemove={index > 1 ? handleRemove : undefined}\n            />\n          )\n        })}\n\n        <Button type=\"button\" onClick={addChoice} disabled={!hasMinimumChoices}>\n          {t('Add Choice')}\n        </Button>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Choices\n"]},"metadata":{},"sourceType":"module"}