{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _modalTitles;import React,{useState}from'react';import{ethers}from'ethers';import useTheme from'hooks/useTheme';import{useTranslation}from'contexts/Localization';import useTokenBalance,{useGetBnbBalance}from'hooks/useTokenBalance';import{getBalanceNumber}from'utils/formatBalance';import{ethersToBigNumber}from'utils/bigNumber';import tokens from'config/constants/tokens';import{parseUnits,formatEther}from'ethers/lib/utils';import{useERC20,useNftMarketContract}from'hooks/useContract';import{useWeb3React}from'@web3-react/core';import{useCallWithGasPrice}from'hooks/useCallWithGasPrice';import useApproveConfirmTransaction from'hooks/useApproveConfirmTransaction';import useToast from'hooks/useToast';import{ToastDescriptionWithTx}from'components/Toast';import{useAppDispatch}from'state';import{addUserNft}from'state/nftMarket/reducer';import{NftLocation}from'state/nftMarket/types';import{StyledModal}from'./styles';import ReviewStage from'./ReviewStage';import ConfirmStage from'../shared/ConfirmStage';import ApproveAndConfirmStage from'../shared/ApproveAndConfirmStage';import{PaymentCurrency,BuyingStage}from'./types';import TransactionConfirmed from'../shared/TransactionConfirmed';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var modalTitles=(_modalTitles={},_defineProperty(_modalTitles,BuyingStage.REVIEW,'Review'),_defineProperty(_modalTitles,BuyingStage.APPROVE_AND_CONFIRM,'Back'),_defineProperty(_modalTitles,BuyingStage.CONFIRM,'Back'),_defineProperty(_modalTitles,BuyingStage.TX_CONFIRMED,'Transaction Confirmed'),_modalTitles);var BuyModal=function BuyModal(_ref){var nftToBuy=_ref.nftToBuy,onDismiss=_ref.onDismiss;var _useState=useState(BuyingStage.REVIEW),_useState2=_slicedToArray(_useState,2),stage=_useState2[0],setStage=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),confirmedTxHash=_useState4[0],setConfirmedTxHash=_useState4[1];var _useState5=useState(PaymentCurrency.BNB),_useState6=_slicedToArray(_useState5,2),paymentCurrency=_useState6[0],setPaymentCurrency=_useState6[1];var _useTheme=useTheme(),theme=_useTheme.theme;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useCallWithGasPrice=useCallWithGasPrice(),callWithGasPrice=_useCallWithGasPrice.callWithGasPrice;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var wbnbContract=useERC20(tokens.wbnb.address);var nftMarketContract=useNftMarketContract();var _useToast=useToast(),toastSuccess=_useToast.toastSuccess;var dispatch=useAppDispatch();var nftPriceWei=parseUnits(nftToBuy.marketData.currentAskPrice,'ether');var nftPrice=parseFloat(nftToBuy.marketData.currentAskPrice);// BNB - returns ethers.BigNumber\nvar _useGetBnbBalance=useGetBnbBalance(),bnbBalance=_useGetBnbBalance.balance,bnbFetchStatus=_useGetBnbBalance.fetchStatus;var formattedBnbBalance=parseFloat(formatEther(bnbBalance));// WBNB - returns BigNumber\nvar _useTokenBalance=useTokenBalance(tokens.wbnb.address),wbnbBalance=_useTokenBalance.balance,wbnbFetchStatus=_useTokenBalance.fetchStatus;var formattedWbnbBalance=getBalanceNumber(wbnbBalance);var walletBalance=paymentCurrency===PaymentCurrency.BNB?formattedBnbBalance:formattedWbnbBalance;var walletFetchStatus=paymentCurrency===PaymentCurrency.BNB?bnbFetchStatus:wbnbFetchStatus;var notEnoughBnbForPurchase=paymentCurrency===PaymentCurrency.BNB?bnbBalance.lt(nftPriceWei):wbnbBalance.lt(ethersToBigNumber(nftPriceWei));var _useApproveConfirmTra=useApproveConfirmTransaction({onRequiresApproval:function(){var _onRequiresApproval=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var currentAllowance;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return wbnbContract.allowance(account,nftMarketContract.address);case 3:currentAllowance=_context.sent;return _context.abrupt(\"return\",currentAllowance.gt(0));case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",false);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));function onRequiresApproval(){return _onRequiresApproval.apply(this,arguments);}return onRequiresApproval;}(),onApprove:function onApprove(){return callWithGasPrice(wbnbContract,'approve',[nftMarketContract.address,ethers.constants.MaxUint256]);},onApproveSuccess:function(){var _onApproveSuccess=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2){var receipt;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:receipt=_ref2.receipt;toastSuccess(t('Contract approved - you can now buy NFT with WBNB!'),/*#__PURE__*/_jsx(ToastDescriptionWithTx,{txHash:receipt.transactionHash}));case 2:case\"end\":return _context2.stop();}}},_callee2);}));function onApproveSuccess(_x){return _onApproveSuccess.apply(this,arguments);}return onApproveSuccess;}(),onConfirm:function onConfirm(){var payAmount=Number.isNaN(nftPrice)?ethers.BigNumber.from(0):parseUnits(nftToBuy.marketData.currentAskPrice);if(paymentCurrency===PaymentCurrency.BNB){return callWithGasPrice(nftMarketContract,'buyTokenUsingBNB',[nftToBuy.collectionAddress,nftToBuy.tokenId],{value:payAmount});}return callWithGasPrice(nftMarketContract,'buyTokenUsingWBNB',[nftToBuy.collectionAddress,nftToBuy.tokenId,payAmount]);},onSuccess:function(){var _onSuccess=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref3){var receipt;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:receipt=_ref3.receipt;setConfirmedTxHash(receipt.transactionHash);setStage(BuyingStage.TX_CONFIRMED);dispatch(addUserNft({tokenId:nftToBuy.tokenId,collectionAddress:nftToBuy.collectionAddress,nftLocation:NftLocation.WALLET}));toastSuccess(t('Your NFT has been sent to your wallet'),/*#__PURE__*/_jsx(ToastDescriptionWithTx,{txHash:receipt.transactionHash}));case 5:case\"end\":return _context3.stop();}}},_callee3);}));function onSuccess(_x2){return _onSuccess.apply(this,arguments);}return onSuccess;}()}),isApproving=_useApproveConfirmTra.isApproving,isApproved=_useApproveConfirmTra.isApproved,isConfirming=_useApproveConfirmTra.isConfirming,handleApprove=_useApproveConfirmTra.handleApprove,handleConfirm=_useApproveConfirmTra.handleConfirm;var continueToNextStage=function continueToNextStage(){if(paymentCurrency===PaymentCurrency.WBNB&&!isApproved){setStage(BuyingStage.APPROVE_AND_CONFIRM);}else{setStage(BuyingStage.CONFIRM);}};var goBack=function goBack(){setStage(BuyingStage.REVIEW);};var showBackButton=stage===BuyingStage.CONFIRM||stage===BuyingStage.APPROVE_AND_CONFIRM;return/*#__PURE__*/_jsxs(StyledModal,{title:modalTitles[stage],stage:stage,onDismiss:onDismiss,onBack:showBackButton?goBack:null,headerBackground:theme.colors.gradients.cardHeader,children:[stage===BuyingStage.REVIEW&&/*#__PURE__*/_jsx(ReviewStage,{nftToBuy:nftToBuy,paymentCurrency:paymentCurrency,setPaymentCurrency:setPaymentCurrency,nftPrice:nftPrice,walletBalance:walletBalance,walletFetchStatus:walletFetchStatus,notEnoughBnbForPurchase:notEnoughBnbForPurchase,continueToNextStage:continueToNextStage}),stage===BuyingStage.APPROVE_AND_CONFIRM&&/*#__PURE__*/_jsx(ApproveAndConfirmStage,{variant:\"buy\",handleApprove:handleApprove,isApproved:isApproved,isApproving:isApproving,isConfirming:isConfirming,handleConfirm:handleConfirm}),stage===BuyingStage.CONFIRM&&/*#__PURE__*/_jsx(ConfirmStage,{isConfirming:isConfirming,handleConfirm:handleConfirm}),stage===BuyingStage.TX_CONFIRMED&&/*#__PURE__*/_jsx(TransactionConfirmed,{txHash:confirmedTxHash,onDismiss:onDismiss})]});};export default BuyModal;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/components/BuySellModals/BuyModal/index.tsx"],"names":["React","useState","ethers","useTheme","useTranslation","useTokenBalance","useGetBnbBalance","getBalanceNumber","ethersToBigNumber","tokens","parseUnits","formatEther","useERC20","useNftMarketContract","useWeb3React","useCallWithGasPrice","useApproveConfirmTransaction","useToast","ToastDescriptionWithTx","useAppDispatch","addUserNft","NftLocation","StyledModal","ReviewStage","ConfirmStage","ApproveAndConfirmStage","PaymentCurrency","BuyingStage","TransactionConfirmed","modalTitles","REVIEW","APPROVE_AND_CONFIRM","CONFIRM","TX_CONFIRMED","BuyModal","nftToBuy","onDismiss","stage","setStage","confirmedTxHash","setConfirmedTxHash","BNB","paymentCurrency","setPaymentCurrency","theme","t","callWithGasPrice","account","wbnbContract","wbnb","address","nftMarketContract","toastSuccess","dispatch","nftPriceWei","marketData","currentAskPrice","nftPrice","parseFloat","bnbBalance","balance","bnbFetchStatus","fetchStatus","formattedBnbBalance","wbnbBalance","wbnbFetchStatus","formattedWbnbBalance","walletBalance","walletFetchStatus","notEnoughBnbForPurchase","lt","onRequiresApproval","allowance","currentAllowance","gt","onApprove","constants","MaxUint256","onApproveSuccess","receipt","transactionHash","onConfirm","payAmount","Number","isNaN","BigNumber","from","collectionAddress","tokenId","value","onSuccess","nftLocation","WALLET","isApproving","isApproved","isConfirming","handleApprove","handleConfirm","continueToNextStage","WBNB","goBack","showBackButton","colors","gradients","cardHeader"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport useTheme from 'hooks/useTheme'\nimport { useTranslation } from 'contexts/Localization'\nimport useTokenBalance, { useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { ethersToBigNumber } from 'utils/bigNumber'\nimport tokens from 'config/constants/tokens'\nimport { parseUnits, formatEther } from 'ethers/lib/utils'\nimport { useERC20, useNftMarketContract } from 'hooks/useContract'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport useToast from 'hooks/useToast'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport { useAppDispatch } from 'state'\nimport { addUserNft } from 'state/nftMarket/reducer'\nimport { NftLocation, NftToken } from 'state/nftMarket/types'\nimport { StyledModal } from './styles'\nimport ReviewStage from './ReviewStage'\nimport ConfirmStage from '../shared/ConfirmStage'\nimport ApproveAndConfirmStage from '../shared/ApproveAndConfirmStage'\nimport { PaymentCurrency, BuyingStage } from './types'\nimport TransactionConfirmed from '../shared/TransactionConfirmed'\n\nconst modalTitles = {\n  [BuyingStage.REVIEW]: 'Review',\n  [BuyingStage.APPROVE_AND_CONFIRM]: 'Back',\n  [BuyingStage.CONFIRM]: 'Back',\n  [BuyingStage.TX_CONFIRMED]: 'Transaction Confirmed',\n}\n\ninterface BuyModalProps extends InjectedModalProps {\n  nftToBuy: NftToken\n}\n\nconst BuyModal: React.FC<BuyModalProps> = ({ nftToBuy, onDismiss }) => {\n  const [stage, setStage] = useState(BuyingStage.REVIEW)\n  const [confirmedTxHash, setConfirmedTxHash] = useState('')\n  const [paymentCurrency, setPaymentCurrency] = useState<PaymentCurrency>(PaymentCurrency.BNB)\n  const { theme } = useTheme()\n  const { t } = useTranslation()\n  const { callWithGasPrice } = useCallWithGasPrice()\n\n  const { account } = useWeb3React()\n  const wbnbContract = useERC20(tokens.wbnb.address)\n  const nftMarketContract = useNftMarketContract()\n\n  const { toastSuccess } = useToast()\n  const dispatch = useAppDispatch()\n\n  const nftPriceWei = parseUnits(nftToBuy.marketData.currentAskPrice, 'ether')\n  const nftPrice = parseFloat(nftToBuy.marketData.currentAskPrice)\n\n  // BNB - returns ethers.BigNumber\n  const { balance: bnbBalance, fetchStatus: bnbFetchStatus } = useGetBnbBalance()\n  const formattedBnbBalance = parseFloat(formatEther(bnbBalance))\n  // WBNB - returns BigNumber\n  const { balance: wbnbBalance, fetchStatus: wbnbFetchStatus } = useTokenBalance(tokens.wbnb.address)\n  const formattedWbnbBalance = getBalanceNumber(wbnbBalance)\n\n  const walletBalance = paymentCurrency === PaymentCurrency.BNB ? formattedBnbBalance : formattedWbnbBalance\n  const walletFetchStatus = paymentCurrency === PaymentCurrency.BNB ? bnbFetchStatus : wbnbFetchStatus\n\n  const notEnoughBnbForPurchase =\n    paymentCurrency === PaymentCurrency.BNB\n      ? bnbBalance.lt(nftPriceWei)\n      : wbnbBalance.lt(ethersToBigNumber(nftPriceWei))\n\n  const { isApproving, isApproved, isConfirming, handleApprove, handleConfirm } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const currentAllowance = await wbnbContract.allowance(account, nftMarketContract.address)\n        return currentAllowance.gt(0)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return callWithGasPrice(wbnbContract, 'approve', [nftMarketContract.address, ethers.constants.MaxUint256])\n    },\n    onApproveSuccess: async ({ receipt }) => {\n      toastSuccess(\n        t('Contract approved - you can now buy NFT with WBNB!'),\n        <ToastDescriptionWithTx txHash={receipt.transactionHash} />,\n      )\n    },\n    onConfirm: () => {\n      const payAmount = Number.isNaN(nftPrice)\n        ? ethers.BigNumber.from(0)\n        : parseUnits(nftToBuy.marketData.currentAskPrice)\n      if (paymentCurrency === PaymentCurrency.BNB) {\n        return callWithGasPrice(nftMarketContract, 'buyTokenUsingBNB', [nftToBuy.collectionAddress, nftToBuy.tokenId], {\n          value: payAmount,\n        })\n      }\n      return callWithGasPrice(nftMarketContract, 'buyTokenUsingWBNB', [\n        nftToBuy.collectionAddress,\n        nftToBuy.tokenId,\n        payAmount,\n      ])\n    },\n    onSuccess: async ({ receipt }) => {\n      setConfirmedTxHash(receipt.transactionHash)\n      setStage(BuyingStage.TX_CONFIRMED)\n      dispatch(\n        addUserNft({\n          tokenId: nftToBuy.tokenId,\n          collectionAddress: nftToBuy.collectionAddress,\n          nftLocation: NftLocation.WALLET,\n        }),\n      )\n      toastSuccess(\n        t('Your NFT has been sent to your wallet'),\n        <ToastDescriptionWithTx txHash={receipt.transactionHash} />,\n      )\n    },\n  })\n\n  const continueToNextStage = () => {\n    if (paymentCurrency === PaymentCurrency.WBNB && !isApproved) {\n      setStage(BuyingStage.APPROVE_AND_CONFIRM)\n    } else {\n      setStage(BuyingStage.CONFIRM)\n    }\n  }\n\n  const goBack = () => {\n    setStage(BuyingStage.REVIEW)\n  }\n\n  const showBackButton = stage === BuyingStage.CONFIRM || stage === BuyingStage.APPROVE_AND_CONFIRM\n\n  return (\n    <StyledModal\n      title={modalTitles[stage]}\n      stage={stage}\n      onDismiss={onDismiss}\n      onBack={showBackButton ? goBack : null}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stage === BuyingStage.REVIEW && (\n        <ReviewStage\n          nftToBuy={nftToBuy}\n          paymentCurrency={paymentCurrency}\n          setPaymentCurrency={setPaymentCurrency}\n          nftPrice={nftPrice}\n          walletBalance={walletBalance}\n          walletFetchStatus={walletFetchStatus}\n          notEnoughBnbForPurchase={notEnoughBnbForPurchase}\n          continueToNextStage={continueToNextStage}\n        />\n      )}\n      {stage === BuyingStage.APPROVE_AND_CONFIRM && (\n        <ApproveAndConfirmStage\n          variant=\"buy\"\n          handleApprove={handleApprove}\n          isApproved={isApproved}\n          isApproving={isApproving}\n          isConfirming={isConfirming}\n          handleConfirm={handleConfirm}\n        />\n      )}\n      {stage === BuyingStage.CONFIRM && <ConfirmStage isConfirming={isConfirming} handleConfirm={handleConfirm} />}\n      {stage === BuyingStage.TX_CONFIRMED && <TransactionConfirmed txHash={confirmedTxHash} onDismiss={onDismiss} />}\n    </StyledModal>\n  )\n}\n\nexport default BuyModal\n"]},"metadata":{},"sourceType":"module"}