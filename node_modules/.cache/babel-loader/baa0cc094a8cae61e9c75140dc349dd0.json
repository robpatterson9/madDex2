{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{Text,Box,Flex,Button}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{LotteryStatus}from'config/constants/types';import{useGetUserLotteriesGraphData}from'state/lottery/hooks';import FinishedRoundRow from'./FinishedRoundRow';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Grid=styled(Box)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(3, 1fr) auto;\\n\"])));var FinishedRoundTable=function FinishedRoundTable(_ref){var _userLotteryData$roun;var handleShowMoreClick=_ref.handleShowMoreClick,numUserRoundsRequested=_ref.numUserRoundsRequested,handleHistoryRowClick=_ref.handleHistoryRowClick;var _useTranslation=useTranslation(),t=_useTranslation.t;var userLotteryData=useGetUserLotteriesGraphData();var filteredForClaimable=userLotteryData===null||userLotteryData===void 0?void 0:userLotteryData.rounds.filter(function(round){return round.status.toLowerCase()===LotteryStatus.CLAIMABLE;});var sortedByRoundId=filteredForClaimable===null||filteredForClaimable===void 0?void 0:filteredForClaimable.sort(function(roundA,roundB){return parseInt(roundB.lotteryId,10)-parseInt(roundA.lotteryId,10);});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Grid,{px:\"24px\",pt:\"24px\",mb:\"8px\",children:[/*#__PURE__*/_jsx(Text,{bold:true,fontSize:\"12px\",color:\"secondary\",children:\"#\"}),/*#__PURE__*/_jsx(Text,{bold:true,fontSize:\"12px\",color:\"secondary\",textTransform:\"uppercase\",children:t('Date')}),/*#__PURE__*/_jsx(Text,{bold:true,fontSize:\"12px\",color:\"secondary\",textTransform:\"uppercase\",children:t('Your Tickets')}),/*#__PURE__*/_jsx(Box,{width:\"20px\"})]}),/*#__PURE__*/_jsxs(Flex,{px:\"24px\",pb:\"24px\",flexDirection:\"column\",overflowY:\"scroll\",height:\"240px\",children:[userLotteryData&&sortedByRoundId.map(function(finishedRound){return/*#__PURE__*/_jsx(FinishedRoundRow,{roundId:finishedRound.lotteryId,hasWon:finishedRound.claimed,numberTickets:finishedRound.totalTickets,endTime:finishedRound.endTime,onClick:handleHistoryRowClick},finishedRound.lotteryId);}),(userLotteryData===null||userLotteryData===void 0?void 0:(_userLotteryData$roun=userLotteryData.rounds)===null||_userLotteryData$roun===void 0?void 0:_userLotteryData$roun.length)===numUserRoundsRequested&&/*#__PURE__*/_jsx(Flex,{justifyContent:\"center\",children:/*#__PURE__*/_jsx(Button,{mt:\"12px\",variant:\"text\",width:\"fit-content\",onClick:handleShowMoreClick,children:t('Show More')})})]})]});};export default FinishedRoundTable;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Lottery/components/YourHistoryCard/FinishedRoundTable.tsx"],"names":["React","styled","Text","Box","Flex","Button","useTranslation","LotteryStatus","useGetUserLotteriesGraphData","FinishedRoundRow","Grid","FinishedRoundTable","handleShowMoreClick","numUserRoundsRequested","handleHistoryRowClick","t","userLotteryData","filteredForClaimable","rounds","filter","round","status","toLowerCase","CLAIMABLE","sortedByRoundId","sort","roundA","roundB","parseInt","lotteryId","map","finishedRound","claimed","totalTickets","endTime","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Box, Flex, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { LotteryStatus } from 'config/constants/types'\nimport { useGetUserLotteriesGraphData } from 'state/lottery/hooks'\nimport FinishedRoundRow from './FinishedRoundRow'\n\nconst Grid = styled(Box)`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr) auto;\n`\n\ninterface FinishedRoundTableProps {\n  handleHistoryRowClick: (string) => void\n  handleShowMoreClick: () => void\n  numUserRoundsRequested: number\n}\n\nconst FinishedRoundTable: React.FC<FinishedRoundTableProps> = ({\n  handleShowMoreClick,\n  numUserRoundsRequested,\n  handleHistoryRowClick,\n}) => {\n  const { t } = useTranslation()\n  const userLotteryData = useGetUserLotteriesGraphData()\n\n  const filteredForClaimable = userLotteryData?.rounds.filter((round) => {\n    return round.status.toLowerCase() === LotteryStatus.CLAIMABLE\n  })\n\n  const sortedByRoundId = filteredForClaimable?.sort((roundA, roundB) => {\n    return parseInt(roundB.lotteryId, 10) - parseInt(roundA.lotteryId, 10)\n  })\n\n  return (\n    <>\n      <Grid px=\"24px\" pt=\"24px\" mb=\"8px\">\n        <Text bold fontSize=\"12px\" color=\"secondary\">\n          #\n        </Text>\n        <Text bold fontSize=\"12px\" color=\"secondary\" textTransform=\"uppercase\">\n          {t('Date')}\n        </Text>\n        <Text bold fontSize=\"12px\" color=\"secondary\" textTransform=\"uppercase\">\n          {t('Your Tickets')}\n        </Text>\n        <Box width=\"20px\" />\n      </Grid>\n      <Flex px=\"24px\" pb=\"24px\" flexDirection=\"column\" overflowY=\"scroll\" height=\"240px\">\n        {userLotteryData &&\n          sortedByRoundId.map((finishedRound) => (\n            <FinishedRoundRow\n              key={finishedRound.lotteryId}\n              roundId={finishedRound.lotteryId}\n              hasWon={finishedRound.claimed}\n              numberTickets={finishedRound.totalTickets}\n              endTime={finishedRound.endTime}\n              onClick={handleHistoryRowClick}\n            />\n          ))}\n        {userLotteryData?.rounds?.length === numUserRoundsRequested && (\n          <Flex justifyContent=\"center\">\n            <Button mt=\"12px\" variant=\"text\" width=\"fit-content\" onClick={handleShowMoreClick}>\n              {t('Show More')}\n            </Button>\n          </Flex>\n        )}\n      </Flex>\n    </>\n  )\n}\n\nexport default FinishedRoundTable\n"]},"metadata":{},"sourceType":"module"}