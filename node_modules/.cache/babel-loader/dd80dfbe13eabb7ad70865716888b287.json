{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{Flex,Link,Skeleton,Text,TimerIcon}from'@pancakeswap/uikit';import{getBscScanLink}from'utils';import{useBlock}from'state/block/hooks';import Balance from'components/Balance';import{useTranslation}from'contexts/Localization';import{getPoolBlockInfo}from'views/Pools/helpers';import BaseCell,{CellContent}from'./BaseCell';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledCell=styled(BaseCell)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  flex: 2 0 100px;\\n\"])));var EndsInCell=function EndsInCell(_ref){var pool=_ref.pool;var sousId=pool.sousId,totalStaked=pool.totalStaked,startBlock=pool.startBlock,endBlock=pool.endBlock,isFinished=pool.isFinished;var _useBlock=useBlock(),currentBlock=_useBlock.currentBlock;var _useTranslation=useTranslation(),t=_useTranslation.t;var _getPoolBlockInfo=getPoolBlockInfo(pool,currentBlock),shouldShowBlockCountdown=_getPoolBlockInfo.shouldShowBlockCountdown,blocksUntilStart=_getPoolBlockInfo.blocksUntilStart,blocksRemaining=_getPoolBlockInfo.blocksRemaining,hasPoolStarted=_getPoolBlockInfo.hasPoolStarted,blocksToDisplay=_getPoolBlockInfo.blocksToDisplay;var isCakePool=sousId===0;var renderBlocks=shouldShowBlockCountdown?/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Flex,{flex:\"1.3\",children:[/*#__PURE__*/_jsx(Balance,{fontSize:\"16px\",value:blocksToDisplay,decimals:0}),/*#__PURE__*/_jsx(Text,{ml:\"4px\",textTransform:\"lowercase\",children:t('Blocks')})]}),/*#__PURE__*/_jsx(Flex,{flex:\"1\",children:/*#__PURE__*/_jsx(Link,{external:true,href:getBscScanLink(hasPoolStarted?endBlock:startBlock,'countdown'),onClick:function onClick(e){return e.stopPropagation();},children:/*#__PURE__*/_jsx(TimerIcon,{ml:\"4px\"})})})]}):/*#__PURE__*/_jsx(Text,{children:\"-\"});// A bit hacky way to determine if public data is loading relying on totalStaked\n// Opted to go for this since we don't really need a separate publicDataLoaded flag\n// anywhere else\nvar isLoadingPublicData=!totalStaked.gt(0)||!currentBlock||!blocksRemaining&&!blocksUntilStart;var showLoading=isLoadingPublicData&&!isCakePool&&!isFinished;return/*#__PURE__*/_jsx(StyledCell,{role:\"cell\",children:/*#__PURE__*/_jsxs(CellContent,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",textAlign:\"left\",children:hasPoolStarted||!shouldShowBlockCountdown?t('Ends in'):t('Starts in')}),showLoading?/*#__PURE__*/_jsx(Skeleton,{width:\"80px\",height:\"16px\"}):renderBlocks]})});};export default EndsInCell;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Pools/components/PoolsTable/Cells/EndsInCell.tsx"],"names":["React","styled","Flex","Link","Skeleton","Text","TimerIcon","getBscScanLink","useBlock","Balance","useTranslation","getPoolBlockInfo","BaseCell","CellContent","StyledCell","EndsInCell","pool","sousId","totalStaked","startBlock","endBlock","isFinished","currentBlock","t","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","isCakePool","renderBlocks","e","stopPropagation","isLoadingPublicData","gt","showLoading"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { DeserializedPool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n"]},"metadata":{},"sourceType":"module"}