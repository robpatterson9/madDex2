{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/ChartDisclaimer.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { ModalContainer, ModalBody, Text, Button, LinkExternal, Flex, Image, Heading, Checkbox, Box } from '@pancakeswap/uikit';\nimport styled from 'styled-components';\nimport { useTranslation } from 'contexts/Localization';\nimport { useUserPredictionChartDisclaimerShow } from 'state/user/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ul = styled.ul`\n  color: ${({\n  theme\n}) => theme.colors.textSubtle};\n  list-style-position: outside;\n  margin-left: 16px;\n\n  & > li {\n    font-size: 14px;\n    line-height: 1.5;\n  }\n`;\n_c = Ul;\n\nconst ChartDisclaimer = ({\n  onDismiss\n}) => {\n  _s();\n\n  const [showDisclaimer, setShowDisclaimer] = useUserPredictionChartDisclaimerShow();\n  const {\n    t\n  } = useTranslation();\n\n  const handleConfirm = () => {\n    onDismiss();\n  };\n\n  return /*#__PURE__*/_jsxDEV(ModalContainer, {\n    minWidth: \"320px\",\n    children: /*#__PURE__*/_jsxDEV(ModalBody, {\n      p: \"24px\",\n      maxWidth: \"400px\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"center\",\n        mb: \"32px\",\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: \"/images/chartwarning.svg\",\n          width: 190,\n          height: 118\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h3\",\n        size: \"sm\",\n        children: [t('Warning'), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h4\",\n        size: \"sm\",\n        mb: \"24px\",\n        children: [t('Prices shown on cards and charts are different'), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        as: \"p\",\n        fontSize: \"14px\",\n        color: \"textSubtle\",\n        children: [t('The price you see come from difference places'), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Ul, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: t('Prices on cards come from Chainlinkâ€™s verifiable price oracle.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: t(\"Prices on charts come from Binance.com. Chart's are provided for your reference only.\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        as: \"p\",\n        mb: \"16px\",\n        fontSize: \"14px\",\n        color: \"textSubtle\",\n        children: t(\"Only the price from Chainlink (shown on the cards) determines the round's result.\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LinkExternal, {\n        href: \"https://docs.pancakeswap.finance/products/prediction/prediction-faq#what-are-you-using-for-your-price-feed\",\n        external: true,\n        mb: \"24px\",\n        children: t('Learn More')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          width: \"100%\",\n          onClick: handleConfirm,\n          mb: \"16px\",\n          children: t('I understand')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"checkbox\",\n        style: {\n          display: 'block',\n          cursor: 'pointer',\n          marginBottom: '24px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 'none'\n            },\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              id: \"checkbox\",\n              scale: \"sm\",\n              checked: !showDisclaimer,\n              onChange: () => setShowDisclaimer(!showDisclaimer)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            ml: \"8px\",\n            children: t(\"Don't show this again\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChartDisclaimer, \"i0WQd4c5iw1/BmhaIDcyxv443Q4=\", false, function () {\n  return [useUserPredictionChartDisclaimerShow, useTranslation];\n});\n\n_c2 = ChartDisclaimer;\nexport default ChartDisclaimer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Ul\");\n$RefreshReg$(_c2, \"ChartDisclaimer\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/ChartDisclaimer.tsx"],"names":["React","ModalContainer","ModalBody","Text","Button","LinkExternal","Flex","Image","Heading","Checkbox","Box","styled","useTranslation","useUserPredictionChartDisclaimerShow","Ul","ul","theme","colors","textSubtle","ChartDisclaimer","onDismiss","showDisclaimer","setShowDisclaimer","t","handleConfirm","display","cursor","marginBottom","flex"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n  ModalContainer,\n  ModalBody,\n  Text,\n  Button,\n  InjectedModalProps,\n  LinkExternal,\n  Flex,\n  Image,\n  Heading,\n  Checkbox,\n  Box,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserPredictionChartDisclaimerShow } from 'state/user/hooks'\n\nconst Ul = styled.ul`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  list-style-position: outside;\n  margin-left: 16px;\n\n  & > li {\n    font-size: 14px;\n    line-height: 1.5;\n  }\n`\n\nconst ChartDisclaimer: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showDisclaimer, setShowDisclaimer] = useUserPredictionChartDisclaimerShow()\n  const { t } = useTranslation()\n\n  const handleConfirm = () => {\n    onDismiss()\n  }\n\n  return (\n    <ModalContainer minWidth=\"320px\">\n      <ModalBody p=\"24px\" maxWidth=\"400px\">\n        <Flex justifyContent=\"center\" mb=\"32px\">\n          <Image src=\"/images/chartwarning.svg\" width={190} height={118} />\n        </Flex>\n        <Heading as=\"h3\" size=\"sm\">\n          {t('Warning')}:\n        </Heading>\n        <Heading as=\"h4\" size=\"sm\" mb=\"24px\">\n          {t('Prices shown on cards and charts are different')}:\n        </Heading>\n        <Text as=\"p\" fontSize=\"14px\" color=\"textSubtle\">\n          {t('The price you see come from difference places')}:\n        </Text>\n        <Ul>\n          <li>{t('Prices on cards come from Chainlinkâ€™s verifiable price oracle.')}</li>\n          <li>{t(\"Prices on charts come from Binance.com. Chart's are provided for your reference only.\")}</li>\n        </Ul>\n        <Text as=\"p\" mb=\"16px\" fontSize=\"14px\" color=\"textSubtle\">\n          {t(\"Only the price from Chainlink (shown on the cards) determines the round's result.\")}\n        </Text>\n        <LinkExternal\n          href=\"https://docs.pancakeswap.finance/products/prediction/prediction-faq#what-are-you-using-for-your-price-feed\"\n          external\n          mb=\"24px\"\n        >\n          {t('Learn More')}\n        </LinkExternal>\n        <Box>\n          <Button width=\"100%\" onClick={handleConfirm} mb=\"16px\">\n            {t('I understand')}\n          </Button>\n        </Box>\n        <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\n          <Flex alignItems=\"center\">\n            <div style={{ flex: 'none' }}>\n              <Checkbox\n                id=\"checkbox\"\n                scale=\"sm\"\n                checked={!showDisclaimer}\n                onChange={() => setShowDisclaimer(!showDisclaimer)}\n              />\n            </div>\n            <Text ml=\"8px\">{t(\"Don't show this again\")}</Text>\n          </Flex>\n        </label>\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default ChartDisclaimer\n"]},"metadata":{},"sourceType":"module"}