{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Lottery/components/PreviousRoundCard/Body.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { CardBody, Heading, Flex, Skeleton, Text, Box, Button, useModal, CardRibbon, useMatchBreakpoints } from '@pancakeswap/uikit';\nimport { useGetUserLotteriesGraphData, useLottery } from 'state/lottery/hooks';\nimport { LotteryStatus } from 'config/constants/types';\nimport { useTranslation } from 'contexts/Localization';\nimport WinningNumbers from '../WinningNumbers';\nimport ViewTicketsModal from '../ViewTicketsModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledCardBody = styled(CardBody)`\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c = StyledCardBody;\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: auto;\n\n  ${({\n  theme\n}) => theme.mediaQueries.md} {\n    grid-column-gap: 72px;\n    grid-row-gap: 36px;\n    grid-template-columns: auto 1fr;\n  }\n`;\n_c2 = Grid;\nconst StyledCardRibbon = styled(CardRibbon)`\n  right: -20px;\n  top: -20px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.xs} {\n    right: -10px;\n    top: -10px;\n  }\n`;\n_c3 = StyledCardRibbon;\n\nconst PreviousRoundCardBody = ({\n  lotteryNodeData,\n  lotteryId\n}) => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    currentLotteryId,\n    currentRound: {\n      status\n    }\n  } = useLottery();\n  const userLotteryData = useGetUserLotteriesGraphData();\n  const userDataForRound = userLotteryData.rounds.find(userLotteryRound => userLotteryRound.lotteryId === lotteryId);\n  const {\n    isLg,\n    isXl,\n    isXxl\n  } = useMatchBreakpoints();\n  const isLargerScreen = isLg || isXl || isXxl;\n  const currentLotteryIdAsInt = parseInt(currentLotteryId);\n  const mostRecentFinishedRoundId = status === LotteryStatus.CLAIMABLE ? currentLotteryIdAsInt : currentLotteryIdAsInt - 1;\n  const isLatestRound = mostRecentFinishedRoundId.toString() === lotteryId;\n  const [onPresentViewTicketsModal] = useModal( /*#__PURE__*/_jsxDEV(ViewTicketsModal, {\n    roundId: lotteryId,\n    roundStatus: lotteryNodeData === null || lotteryNodeData === void 0 ? void 0 : lotteryNodeData.status\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this));\n  const totalTicketNumber = userDataForRound ? userDataForRound.totalTickets : 0;\n  const ticketRoundText = totalTicketNumber > 1 ? t('You had %amount% tickets this round', {\n    amount: totalTicketNumber\n  }) : t('You had %amount% ticket this round', {\n    amount: totalTicketNumber\n  });\n  const [youHadText, ticketsThisRoundText] = ticketRoundText.split(totalTicketNumber.toString());\n  return /*#__PURE__*/_jsxDEV(StyledCardBody, {\n    children: [isLatestRound && /*#__PURE__*/_jsxDEV(StyledCardRibbon, {\n      text: t('Latest')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: ['center', null, null, 'flex-start'],\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          mb: \"24px\",\n          children: t('Winning Number')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        maxWidth: ['240px', null, null, '100%'],\n        justifyContent: ['center', null, null, 'flex-start'],\n        children: lotteryNodeData ? /*#__PURE__*/_jsxDEV(WinningNumbers, {\n          rotateText: isLargerScreen || false,\n          number: lotteryNodeData === null || lotteryNodeData === void 0 ? void 0 : lotteryNodeData.finalNumber.toString(),\n          mr: [null, null, null, '32px'],\n          size: \"100%\",\n          fontSize: isLargerScreen ? '42px' : '16px'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Skeleton, {\n          width: ['240px', null, null, '450px'],\n          height: ['34px', null, null, '71px'],\n          mr: [null, null, null, '32px']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), userDataForRound && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: ['none', null, null, 'flex'],\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            children: t('Your tickets')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          flexDirection: \"column\",\n          mr: [null, null, null, '24px'],\n          alignItems: ['center', null, null, 'flex-start'],\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mt: ['32px', null, null, 0],\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              display: \"inline\",\n              children: [youHadText, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              display: \"inline\",\n              bold: true,\n              children: userDataForRound.totalTickets\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              display: \"inline\",\n              children: ticketsThisRoundText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onPresentViewTicketsModal,\n            height: \"auto\",\n            width: \"fit-content\",\n            p: \"0\",\n            variant: \"text\",\n            scale: \"sm\",\n            children: t('View your tickets')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PreviousRoundCardBody, \"O3e6CipetVoLBI+Sh+U/yqvNcbE=\", false, function () {\n  return [useTranslation, useLottery, useGetUserLotteriesGraphData, useMatchBreakpoints, useModal];\n});\n\n_c4 = PreviousRoundCardBody;\nexport default PreviousRoundCardBody;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledCardBody\");\n$RefreshReg$(_c2, \"Grid\");\n$RefreshReg$(_c3, \"StyledCardRibbon\");\n$RefreshReg$(_c4, \"PreviousRoundCardBody\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Lottery/components/PreviousRoundCard/Body.tsx"],"names":["React","styled","CardBody","Heading","Flex","Skeleton","Text","Box","Button","useModal","CardRibbon","useMatchBreakpoints","useGetUserLotteriesGraphData","useLottery","LotteryStatus","useTranslation","WinningNumbers","ViewTicketsModal","StyledCardBody","Grid","div","theme","mediaQueries","md","StyledCardRibbon","xs","PreviousRoundCardBody","lotteryNodeData","lotteryId","t","currentLotteryId","currentRound","status","userLotteryData","userDataForRound","rounds","find","userLotteryRound","isLg","isXl","isXxl","isLargerScreen","currentLotteryIdAsInt","parseInt","mostRecentFinishedRoundId","CLAIMABLE","isLatestRound","toString","onPresentViewTicketsModal","totalTicketNumber","totalTickets","ticketRoundText","amount","youHadText","ticketsThisRoundText","split","finalNumber"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport {\n  CardBody,\n  Heading,\n  Flex,\n  Skeleton,\n  Text,\n  Box,\n  Button,\n  useModal,\n  CardRibbon,\n  useMatchBreakpoints,\n} from '@pancakeswap/uikit'\nimport { LotteryRound } from 'state/types'\nimport { useGetUserLotteriesGraphData, useLottery } from 'state/lottery/hooks'\nimport { LotteryStatus } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport WinningNumbers from '../WinningNumbers'\nimport ViewTicketsModal from '../ViewTicketsModal'\n\nconst StyledCardBody = styled(CardBody)`\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: auto;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-column-gap: 72px;\n    grid-row-gap: 36px;\n    grid-template-columns: auto 1fr;\n  }\n`\n\nconst StyledCardRibbon = styled(CardRibbon)`\n  right: -20px;\n  top: -20px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    right: -10px;\n    top: -10px;\n  }\n`\n\nconst PreviousRoundCardBody: React.FC<{ lotteryNodeData: LotteryRound; lotteryId: string }> = ({\n  lotteryNodeData,\n  lotteryId,\n}) => {\n  const { t } = useTranslation()\n  const {\n    currentLotteryId,\n    currentRound: { status },\n  } = useLottery()\n  const userLotteryData = useGetUserLotteriesGraphData()\n  const userDataForRound = userLotteryData.rounds.find((userLotteryRound) => userLotteryRound.lotteryId === lotteryId)\n  const { isLg, isXl, isXxl } = useMatchBreakpoints()\n  const isLargerScreen = isLg || isXl || isXxl\n\n  const currentLotteryIdAsInt = parseInt(currentLotteryId)\n  const mostRecentFinishedRoundId =\n    status === LotteryStatus.CLAIMABLE ? currentLotteryIdAsInt : currentLotteryIdAsInt - 1\n  const isLatestRound = mostRecentFinishedRoundId.toString() === lotteryId\n\n  const [onPresentViewTicketsModal] = useModal(\n    <ViewTicketsModal roundId={lotteryId} roundStatus={lotteryNodeData?.status} />,\n  )\n\n  const totalTicketNumber = userDataForRound ? userDataForRound.totalTickets : 0\n  const ticketRoundText =\n    totalTicketNumber > 1\n      ? t('You had %amount% tickets this round', { amount: totalTicketNumber })\n      : t('You had %amount% ticket this round', { amount: totalTicketNumber })\n  const [youHadText, ticketsThisRoundText] = ticketRoundText.split(totalTicketNumber.toString())\n\n  return (\n    <StyledCardBody>\n      {isLatestRound && <StyledCardRibbon text={t('Latest')} />}\n      <Grid>\n        <Flex justifyContent={['center', null, null, 'flex-start']}>\n          <Heading mb=\"24px\">{t('Winning Number')}</Heading>\n        </Flex>\n        <Flex maxWidth={['240px', null, null, '100%']} justifyContent={['center', null, null, 'flex-start']}>\n          {lotteryNodeData ? (\n            <WinningNumbers\n              rotateText={isLargerScreen || false}\n              number={lotteryNodeData?.finalNumber.toString()}\n              mr={[null, null, null, '32px']}\n              size=\"100%\"\n              fontSize={isLargerScreen ? '42px' : '16px'}\n            />\n          ) : (\n            <Skeleton\n              width={['240px', null, null, '450px']}\n              height={['34px', null, null, '71px']}\n              mr={[null, null, null, '32px']}\n            />\n          )}\n        </Flex>\n        {userDataForRound && (\n          <>\n            <Box display={['none', null, null, 'flex']}>\n              <Heading>{t('Your tickets')}</Heading>\n            </Box>\n            <Flex\n              flexDirection=\"column\"\n              mr={[null, null, null, '24px']}\n              alignItems={['center', null, null, 'flex-start']}\n            >\n              <Box mt={['32px', null, null, 0]}>\n                <Text display=\"inline\">{youHadText} </Text>\n                <Text display=\"inline\" bold>\n                  {userDataForRound.totalTickets}\n                </Text>\n                <Text display=\"inline\">{ticketsThisRoundText}</Text>\n              </Box>\n              <Button\n                onClick={onPresentViewTicketsModal}\n                height=\"auto\"\n                width=\"fit-content\"\n                p=\"0\"\n                variant=\"text\"\n                scale=\"sm\"\n              >\n                {t('View your tickets')}\n              </Button>\n            </Flex>\n          </>\n        )}\n      </Grid>\n    </StyledCardBody>\n  )\n}\n\nexport default PreviousRoundCardBody\n"]},"metadata":{},"sourceType":"module"}