{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React,{useState}from'react';import styled from'styled-components';import{Card,Flex,Text,Skeleton}from'@pancakeswap/uikit';import{getBscScanLink}from'utils';import{useTranslation}from'contexts/Localization';import ExpandableSectionButton from'components/ExpandableSectionButton';import{BASE_ADD_LIQUIDITY_URL}from'config';import{getAddress}from'utils/addressHelpers';import getLiquidityUrlPathParts from'utils/getLiquidityUrlPathParts';import DetailsSection from'./DetailsSection';import CardHeading from'./CardHeading';import CardActionsContainer from'./CardActionsContainer';import ApyButton from'./ApyButton';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledCard=styled(Card)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  align-self: baseline;\\n  background: #000000;\\n\\n\"])));var FarmCardInnerContainer=styled(Flex)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  flex-direction: column;\\n  justify-content: space-around;\\n  padding: 44px;\\n\"])));var ExpandingWrapper=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  padding: 24px;\\n  border-top: 6px solid \",\";\\n  overflow: hidden;\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.cardBorder;});var FarmCard=function FarmCard(_ref2){var farm=_ref2.farm,displayApr=_ref2.displayApr,removed=_ref2.removed,cakePrice=_ref2.cakePrice,account=_ref2.account;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showExpandableSection=_useState2[0],setShowExpandableSection=_useState2[1];var totalValueFormatted=farm.liquidity&&farm.liquidity.gt(0)?\"$\".concat(farm.liquidity.toNumber().toLocaleString(undefined,{maximumFractionDigits:0})):'';var lpLabel=farm.lpSymbol&&farm.lpSymbol.toUpperCase().replace('PANCAKE','');var earnLabel=farm.dual?farm.dual.earnLabel:t('Heart + Fees');var liquidityUrlPathParts=getLiquidityUrlPathParts({quoteTokenAddress:farm.quoteToken.address,tokenAddress:farm.token.address});var addLiquidityUrl=\"\".concat(BASE_ADD_LIQUIDITY_URL,\"/\").concat(liquidityUrlPathParts);var lpAddress=getAddress(farm.lpAddresses);var isPromotedFarm=farm.token.symbol==='CAKE';return/*#__PURE__*/_jsxs(StyledCard,{isActive:isPromotedFarm,children:[/*#__PURE__*/_jsxs(FarmCardInnerContainer,{children:[/*#__PURE__*/_jsx(CardHeading,{lpLabel:lpLabel,multiplier:farm.multiplier,isCommunityFarm:farm.isCommunity,token:farm.token,quoteToken:farm.quoteToken}),!removed&&/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Text,{children:[t('APR'),\":\"]}),/*#__PURE__*/_jsx(Text,{bold:true,style:{display:'flex',alignItems:'center'},children:farm.apr?/*#__PURE__*/_jsx(ApyButton,{variant:\"text-and-button\",pid:farm.pid,lpSymbol:farm.lpSymbol,multiplier:farm.multiplier,lpLabel:lpLabel,addLiquidityUrl:addLiquidityUrl,cakePrice:cakePrice,apr:farm.apr,displayApr:displayApr}):/*#__PURE__*/_jsx(Skeleton,{height:24,width:80})})]}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Text,{children:[t('Earn'),\":\"]}),/*#__PURE__*/_jsx(Text,{bold:true,children:earnLabel})]}),/*#__PURE__*/_jsx(CardActionsContainer,{farm:farm,lpLabel:lpLabel,account:account,cakePrice:cakePrice,addLiquidityUrl:addLiquidityUrl})]}),/*#__PURE__*/_jsxs(ExpandingWrapper,{children:[/*#__PURE__*/_jsx(ExpandableSectionButton,{onClick:function onClick(){return setShowExpandableSection(!showExpandableSection);},expanded:showExpandableSection}),showExpandableSection&&/*#__PURE__*/_jsx(DetailsSection,{removed:removed,bscScanAddress:getBscScanLink(lpAddress,'address'),infoAddress:\"/info/pool/\".concat(lpAddress),totalValueFormatted:totalValueFormatted,lpLabel:lpLabel,addLiquidityUrl:addLiquidityUrl})]})]});};export default FarmCard;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Farms/components/FarmCard/FarmCard.tsx"],"names":["React","useState","styled","Card","Flex","Text","Skeleton","getBscScanLink","useTranslation","ExpandableSectionButton","BASE_ADD_LIQUIDITY_URL","getAddress","getLiquidityUrlPathParts","DetailsSection","CardHeading","CardActionsContainer","ApyButton","StyledCard","FarmCardInnerContainer","ExpandingWrapper","div","theme","colors","cardBorder","FarmCard","farm","displayApr","removed","cakePrice","account","t","showExpandableSection","setShowExpandableSection","totalValueFormatted","liquidity","gt","toNumber","toLocaleString","undefined","maximumFractionDigits","lpLabel","lpSymbol","toUpperCase","replace","earnLabel","dual","liquidityUrlPathParts","quoteTokenAddress","quoteToken","address","tokenAddress","token","addLiquidityUrl","lpAddress","lpAddresses","isPromotedFarm","symbol","multiplier","isCommunity","display","alignItems","apr","pid"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Card, Flex, Text, Skeleton } from '@pancakeswap/uikit'\nimport { DeserializedFarm } from 'state/types'\nimport { getBscScanLink } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport { getAddress } from 'utils/addressHelpers'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends DeserializedFarm {\n  apr?: number\n  lpRewardsApr?: number\n  liquidity?: BigNumber\n}\n\nconst StyledCard = styled(Card)`\n  align-self: baseline;\n  background: #000000;\n\n`\n\nconst FarmCardInnerContainer = styled(Flex)`\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 44px;\n`\n\nconst ExpandingWrapper = styled.div`\n  padding: 24px;\n  border-top: 6px solid ${({ theme }) => theme.colors.cardBorder};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  displayApr: string\n  removed: boolean\n  cakePrice?: BigNumber\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, displayApr, removed, cakePrice, account }) => {\n  const { t } = useTranslation()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const totalValueFormatted =\n    farm.liquidity && farm.liquidity.gt(0)\n      ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n      : ''\n\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const earnLabel = farm.dual ? farm.dual.earnLabel : t('Heart + Fees')\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: farm.quoteToken.address,\n    tokenAddress: farm.token.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  const lpAddress = getAddress(farm.lpAddresses)\n  const isPromotedFarm = farm.token.symbol === 'CAKE'\n\n  return (\n    <StyledCard isActive={isPromotedFarm}>\n      <FarmCardInnerContainer>\n        <CardHeading\n          lpLabel={lpLabel}\n          multiplier={farm.multiplier}\n          isCommunityFarm={farm.isCommunity}\n          token={farm.token}\n          quoteToken={farm.quoteToken}\n        />\n        {!removed && (\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\n            <Text>{t('APR')}:</Text>\n            <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n              {farm.apr ? (\n                <ApyButton\n                  variant=\"text-and-button\"\n                  pid={farm.pid}\n                  lpSymbol={farm.lpSymbol}\n                  multiplier={farm.multiplier}\n                  lpLabel={lpLabel}\n                  addLiquidityUrl={addLiquidityUrl}\n                  cakePrice={cakePrice}\n                  apr={farm.apr}\n                  displayApr={displayApr}\n                />\n              ) : (\n                <Skeleton height={24} width={80} />\n              )}\n            </Text>\n          </Flex>\n        )}\n        <Flex justifyContent=\"space-between\">\n          <Text>{t('Earn')}:</Text>\n          <Text bold>{earnLabel}</Text>\n        </Flex>\n        <CardActionsContainer\n          farm={farm}\n          lpLabel={lpLabel}\n          account={account}\n          cakePrice={cakePrice}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      </FarmCardInnerContainer>\n\n      <ExpandingWrapper>\n        <ExpandableSectionButton\n          onClick={() => setShowExpandableSection(!showExpandableSection)}\n          expanded={showExpandableSection}\n        />\n        {showExpandableSection && (\n          <DetailsSection\n            removed={removed}\n            bscScanAddress={getBscScanLink(lpAddress, 'address')}\n            infoAddress={`/info/pool/${lpAddress}`}\n            totalValueFormatted={totalValueFormatted}\n            lpLabel={lpLabel}\n            addLiquidityUrl={addLiquidityUrl}\n          />\n        )}\n      </ExpandingWrapper>\n    </StyledCard>\n  )\n}\n\nexport default FarmCard\n"]},"metadata":{},"sourceType":"module"}