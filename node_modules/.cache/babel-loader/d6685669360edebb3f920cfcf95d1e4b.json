{"ast":null,"code":"import _defineProperty from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{SNAPSHOT_HUB_API,SNAPSHOT_VOTING_API}from'config/constants/endpoints';import tokens from'config/constants/tokens';import{ProposalType}from'state/types';import{simpleRpcProvider}from'utils/providers';import{ADMINS,PANCAKE_SPACE,SNAPSHOT_VERSION}from'./config';export var isCoreProposal=function isCoreProposal(proposal){return ADMINS.includes(proposal.author.toLowerCase());};export var filterProposalsByType=function filterProposalsByType(proposals,proposalType){switch(proposalType){case ProposalType.COMMUNITY:return proposals.filter(function(proposal){return!isCoreProposal(proposal);});case ProposalType.CORE:return proposals.filter(function(proposal){return isCoreProposal(proposal);});case ProposalType.ALL:default:return proposals;}};export var filterProposalsByState=function filterProposalsByState(proposals,state){return proposals.filter(function(proposal){return proposal.state===state;});};/**\n * Generates metadata required by snapshot to validate payload\n */export var generateMetaData=function generateMetaData(){return{plugins:{},network:56,strategies:[{name:'cake',params:{symbol:'CAKE',address:tokens.cake.address,decimals:18}}]};};/**\n * Returns data that is required on all snapshot payloads\n */export var generatePayloadData=function generatePayloadData(){return{version:SNAPSHOT_VERSION,timestamp:(Date.now()/1e3).toFixed(),space:PANCAKE_SPACE};};/**\n * General function to send commands to the snapshot api\n */export var sendSnapshotData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(message){var response,error,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(SNAPSHOT_HUB_API,{method:'post',headers:{Accept:'application/json','Content-Type':'application/json'},body:JSON.stringify(message)});case 2:response=_context.sent;if(response.ok){_context.next=8;break;}_context.next=6;return response.json();case 6:error=_context.sent;throw new Error(error===null||error===void 0?void 0:error.error_description);case 8:_context.next=10;return response.json();case 10:data=_context.sent;return _context.abrupt(\"return\",data);case 12:case\"end\":return _context.stop();}}},_callee);}));return function sendSnapshotData(_x){return _ref.apply(this,arguments);};}();export var getVotingPower=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(account,poolAddresses,block){var blockNumber,response,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.t0=block;if(_context2.t0){_context2.next=5;break;}_context2.next=4;return simpleRpcProvider.getBlockNumber();case 4:_context2.t0=_context2.sent;case 5:blockNumber=_context2.t0;_context2.next=8;return fetch(\"\".concat(SNAPSHOT_VOTING_API,\"/power\"),{method:'post',headers:{'Content-Type':'application/json'},body:JSON.stringify({address:account,block:blockNumber,poolAddresses:poolAddresses})});case 8:response=_context2.sent;_context2.next=11;return response.json();case 11:data=_context2.sent;return _context2.abrupt(\"return\",data.data);case 13:case\"end\":return _context2.stop();}}},_callee2);}));return function getVotingPower(_x2,_x3,_x4){return _ref2.apply(this,arguments);};}();export var calculateVoteResults=function calculateVoteResults(votes){return votes.reduce(function(accum,vote){var choiceText=vote.proposal.choices[vote.choice-1];return _objectSpread(_objectSpread({},accum),{},_defineProperty({},choiceText,accum[choiceText]?[].concat(_toConsumableArray(accum[choiceText]),[vote]):[vote]));},{});};export var getTotalFromVotes=function getTotalFromVotes(votes){return votes.reduce(function(accum,vote){var _vote$metadata;var power=parseFloat((_vote$metadata=vote.metadata)===null||_vote$metadata===void 0?void 0:_vote$metadata.votingPower);return accum+power;},0);};","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Voting/helpers.ts"],"names":["SNAPSHOT_HUB_API","SNAPSHOT_VOTING_API","tokens","ProposalType","simpleRpcProvider","ADMINS","PANCAKE_SPACE","SNAPSHOT_VERSION","isCoreProposal","proposal","includes","author","toLowerCase","filterProposalsByType","proposals","proposalType","COMMUNITY","filter","CORE","ALL","filterProposalsByState","state","generateMetaData","plugins","network","strategies","name","params","symbol","address","cake","decimals","generatePayloadData","version","timestamp","Date","now","toFixed","space","sendSnapshotData","message","fetch","method","headers","Accept","body","JSON","stringify","response","ok","json","error","Error","error_description","data","getVotingPower","account","poolAddresses","block","getBlockNumber","blockNumber","calculateVoteResults","votes","reduce","accum","vote","choiceText","choices","choice","getTotalFromVotes","power","parseFloat","metadata","votingPower"],"mappings":"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","sourcesContent":["import { SNAPSHOT_HUB_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport tokens from 'config/constants/tokens'\nimport { Proposal, ProposalState, ProposalType, Vote } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { ADMINS, PANCAKE_SPACE, SNAPSHOT_VERSION } from './config'\n\nexport const isCoreProposal = (proposal: Proposal) => {\n  return ADMINS.includes(proposal.author.toLowerCase())\n}\n\nexport const filterProposalsByType = (proposals: Proposal[], proposalType: ProposalType) => {\n  switch (proposalType) {\n    case ProposalType.COMMUNITY:\n      return proposals.filter((proposal) => !isCoreProposal(proposal))\n    case ProposalType.CORE:\n      return proposals.filter((proposal) => isCoreProposal(proposal))\n    case ProposalType.ALL:\n    default:\n      return proposals\n  }\n}\n\nexport const filterProposalsByState = (proposals: Proposal[], state: ProposalState) => {\n  return proposals.filter((proposal) => proposal.state === state)\n}\n\nexport interface Message {\n  address: string\n  msg: string\n  sig: string\n}\n\n/**\n * Generates metadata required by snapshot to validate payload\n */\nexport const generateMetaData = () => {\n  return {\n    plugins: {},\n    network: 56,\n    strategies: [{ name: 'cake', params: { symbol: 'CAKE', address: tokens.cake.address, decimals: 18 } }],\n  }\n}\n\n/**\n * Returns data that is required on all snapshot payloads\n */\nexport const generatePayloadData = () => {\n  return {\n    version: SNAPSHOT_VERSION,\n    timestamp: (Date.now() / 1e3).toFixed(),\n    space: PANCAKE_SPACE,\n  }\n}\n\n/**\n * General function to send commands to the snapshot api\n */\nexport const sendSnapshotData = async (message: Message) => {\n  const response = await fetch(SNAPSHOT_HUB_API, {\n    method: 'post',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(message),\n  })\n\n  if (!response.ok) {\n    const error = await response.json()\n    throw new Error(error?.error_description)\n  }\n\n  const data = await response.json()\n  return data\n}\n\nexport const getVotingPower = async (account: string, poolAddresses: string[], block?: number) => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/power`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      address: account,\n      block: blockNumber,\n      poolAddresses,\n    }),\n  })\n  const data = await response.json()\n  return data.data\n}\n\nexport const calculateVoteResults = (votes: Vote[]): { [key: string]: Vote[] } => {\n  return votes.reduce((accum, vote) => {\n    const choiceText = vote.proposal.choices[vote.choice - 1]\n\n    return {\n      ...accum,\n      [choiceText]: accum[choiceText] ? [...accum[choiceText], vote] : [vote],\n    }\n  }, {})\n}\n\nexport const getTotalFromVotes = (votes: Vote[]) => {\n  return votes.reduce((accum, vote) => {\n    const power = parseFloat(vote.metadata?.votingPower)\n    return accum + power\n  }, 0)\n}\n"]},"metadata":{},"sourceType":"module"}