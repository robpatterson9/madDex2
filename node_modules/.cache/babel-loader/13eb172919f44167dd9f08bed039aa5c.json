{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{ChevronDownIcon,ChevronUpIcon,Text}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Wrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  cursor: pointer;\\n\\n  svg {\\n    fill: \",\";\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.primary;});var ExpandableSectionButton=function ExpandableSectionButton(_ref2){var _onClick=_ref2.onClick,expanded=_ref2.expanded;var _useTranslation=useTranslation(),t=_useTranslation.t;return/*#__PURE__*/_jsxs(Wrapper,{\"aria-label\":t('Hide or show expandable content'),role:\"button\",onClick:function onClick(){return _onClick();},children:[/*#__PURE__*/_jsx(Text,{color:\"primary\",bold:true,children:expanded?t('Hide'):t('Details')}),expanded?/*#__PURE__*/_jsx(ChevronUpIcon,{}):/*#__PURE__*/_jsx(ChevronDownIcon,{})]});};ExpandableSectionButton.defaultProps={expanded:false};export default ExpandableSectionButton;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/components/ExpandableSectionButton/ExpandableSectionButton.tsx"],"names":["React","styled","ChevronDownIcon","ChevronUpIcon","Text","useTranslation","Wrapper","div","theme","colors","primary","ExpandableSectionButton","onClick","expanded","t","defaultProps"],"mappings":"4LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,eAAT,CAA0BC,aAA1B,CAAyCC,IAAzC,KAAqD,oBAArD,CACA,OAASC,cAAT,KAA+B,uBAA/B,C,wFAOA,GAAMC,CAAAA,OAAO,CAAGL,MAAM,CAACM,GAAV,6LAOD,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,MAAN,CAAaC,OAA5B,EAPC,CAAb,CAWA,GAAMC,CAAAA,uBAA+D,CAAG,QAAlEA,CAAAA,uBAAkE,OAA2B,IAAxBC,CAAAA,QAAwB,OAAxBA,OAAwB,CAAfC,QAAe,OAAfA,QAAe,CACjG,oBAAcR,cAAc,EAA5B,CAAQS,CAAR,iBAAQA,CAAR,CAEA,mBACE,MAAC,OAAD,EAAS,aAAYA,CAAC,CAAC,iCAAD,CAAtB,CAA2D,IAAI,CAAC,QAAhE,CAAyE,OAAO,CAAE,yBAAMF,CAAAA,QAAO,EAAb,EAAlF,wBACE,KAAC,IAAD,EAAM,KAAK,CAAC,SAAZ,CAAsB,IAAI,KAA1B,UACGC,QAAQ,CAAGC,CAAC,CAAC,MAAD,CAAJ,CAAeA,CAAC,CAAC,SAAD,CAD3B,EADF,CAIGD,QAAQ,cAAG,KAAC,aAAD,IAAH,cAAuB,KAAC,eAAD,IAJlC,GADF,CAQD,CAXD,CAaAF,uBAAuB,CAACI,YAAxB,CAAuC,CACrCF,QAAQ,CAAE,KAD2B,CAAvC,CAIA,cAAeF,CAAAA,uBAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper aria-label={t('Hide or show expandable content')} role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? t('Hide') : t('Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n"]},"metadata":{},"sourceType":"module"}