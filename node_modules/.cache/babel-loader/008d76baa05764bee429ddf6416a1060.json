{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/PrevNextNav.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { ArrowBackIcon, ArrowForwardIcon, BunnyCardsIcon, Flex, IconButton } from '@pancakeswap/uikit';\nimport styled from 'styled-components';\nimport { useGetCurrentEpoch, useGetSortedRounds } from 'state/predictions/hooks';\nimport useSwiper from '../hooks/useSwiper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledPrevNextNav = styled(Flex)`\n  align-items: center;\n  display: none;\n  justify-content: space-between;\n  overflow: initial;\n  position: relative;\n  width: 128px;\n\n  box-shadow: ${({\n  theme\n}) => theme.shadows.level1};\n  border-radius: ${({\n  theme\n}) => theme.radii.default};\n  background-color: ${({\n  theme\n}) => theme.card.background};\n\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    display: flex;\n  }\n`;\n_c = StyledPrevNextNav;\nconst Icon = styled.div`\n  cursor: pointer;\n  left: 50%;\n  margin-left: -32px;\n  position: absolute;\n`;\n_c2 = Icon;\n\nconst PrevNextNav = () => {\n  _s();\n\n  const {\n    swiper\n  } = useSwiper();\n  const currentEpoch = useGetCurrentEpoch();\n  const rounds = useGetSortedRounds();\n\n  const handlePrevSlide = () => {\n    swiper.slidePrev();\n  };\n\n  const handleNextSlide = () => {\n    swiper.slideNext();\n  };\n\n  const handleSlideToLive = () => {\n    const currentEpochIndex = rounds.findIndex(round => round.epoch === currentEpoch);\n    swiper.slideTo(currentEpochIndex - 1);\n    swiper.update();\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledPrevNextNav, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      variant: \"text\",\n      scale: \"sm\",\n      onClick: handlePrevSlide,\n      children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n        color: \"primary\",\n        width: \"24px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Icon, {\n      onClick: handleSlideToLive,\n      children: /*#__PURE__*/_jsxDEV(BunnyCardsIcon, {\n        width: \"64px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      variant: \"text\",\n      scale: \"sm\",\n      onClick: handleNextSlide,\n      children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n        color: \"primary\",\n        width: \"24px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrevNextNav, \"r2YDaqFm+imHL9jg86C+8O5XUJQ=\", false, function () {\n  return [useSwiper, useGetCurrentEpoch, useGetSortedRounds];\n});\n\n_c3 = PrevNextNav;\nexport default PrevNextNav;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledPrevNextNav\");\n$RefreshReg$(_c2, \"Icon\");\n$RefreshReg$(_c3, \"PrevNextNav\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/components/PrevNextNav.tsx"],"names":["React","ArrowBackIcon","ArrowForwardIcon","BunnyCardsIcon","Flex","IconButton","styled","useGetCurrentEpoch","useGetSortedRounds","useSwiper","StyledPrevNextNav","theme","shadows","level1","radii","default","card","background","mediaQueries","lg","Icon","div","PrevNextNav","swiper","currentEpoch","rounds","handlePrevSlide","slidePrev","handleNextSlide","slideNext","handleSlideToLive","currentEpochIndex","findIndex","round","epoch","slideTo","update"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,EAA0CC,cAA1C,EAA0DC,IAA1D,EAAgEC,UAAhE,QAAkF,oBAAlF;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,yBAAvD;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAEA,MAAMC,iBAAiB,GAAGJ,MAAM,CAACF,IAAD,CAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,CAAC;AAAEO,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,OAAN,CAAcC,MAAO;AACpD,mBAAmB,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,KAAN,CAAYC,OAAQ;AACtD,sBAAsB,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACK,IAAN,CAAWC,UAAW;AAC3D;AACA,IAAI,CAAC;AAAEN,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACO,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA,CAfA;KAAMT,iB;AAiBN,MAAMU,IAAI,GAAGd,MAAM,CAACe,GAAI;AACxB;AACA;AACA;AACA;AACA,CALA;MAAMD,I;;AAON,MAAME,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAad,SAAS,EAA5B;AACA,QAAMe,YAAY,GAAGjB,kBAAkB,EAAvC;AACA,QAAMkB,MAAM,GAAGjB,kBAAkB,EAAjC;;AAEA,QAAMkB,eAAe,GAAG,MAAM;AAC5BH,IAAAA,MAAM,CAACI,SAAP;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC5BL,IAAAA,MAAM,CAACM,SAAP;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAG,MAAM;AAC9B,UAAMC,iBAAiB,GAAGN,MAAM,CAACO,SAAP,CAAkBC,KAAD,IAAWA,KAAK,CAACC,KAAN,KAAgBV,YAA5C,CAA1B;AAEAD,IAAAA,MAAM,CAACY,OAAP,CAAeJ,iBAAiB,GAAG,CAAnC;AACAR,IAAAA,MAAM,CAACa,MAAP;AACD,GALD;;AAOA,sBACE,QAAC,iBAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,MAApB;AAA2B,MAAA,KAAK,EAAC,IAAjC;AAAsC,MAAA,OAAO,EAAEV,eAA/C;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,KAAK,EAAC,SAArB;AAA+B,QAAA,KAAK,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAEI,iBAAf;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,MAApB;AAA2B,MAAA,KAAK,EAAC,IAAjC;AAAsC,MAAA,OAAO,EAAEF,eAA/C;AAAA,6BACE,QAAC,gBAAD;AAAkB,QAAA,KAAK,EAAC,SAAxB;AAAkC,QAAA,KAAK,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAjCD;;GAAMN,W;UACeb,S,EACEF,kB,EACNC,kB;;;MAHXc,W;AAmCN,eAAeA,WAAf","sourcesContent":["import React from 'react'\nimport { ArrowBackIcon, ArrowForwardIcon, BunnyCardsIcon, Flex, IconButton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useGetCurrentEpoch, useGetSortedRounds } from 'state/predictions/hooks'\nimport useSwiper from '../hooks/useSwiper'\n\nconst StyledPrevNextNav = styled(Flex)`\n  align-items: center;\n  display: none;\n  justify-content: space-between;\n  overflow: initial;\n  position: relative;\n  width: 128px;\n\n  box-shadow: ${({ theme }) => theme.shadows.level1};\n  border-radius: ${({ theme }) => theme.radii.default};\n  background-color: ${({ theme }) => theme.card.background};\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: flex;\n  }\n`\n\nconst Icon = styled.div`\n  cursor: pointer;\n  left: 50%;\n  margin-left: -32px;\n  position: absolute;\n`\n\nconst PrevNextNav = () => {\n  const { swiper } = useSwiper()\n  const currentEpoch = useGetCurrentEpoch()\n  const rounds = useGetSortedRounds()\n\n  const handlePrevSlide = () => {\n    swiper.slidePrev()\n  }\n\n  const handleNextSlide = () => {\n    swiper.slideNext()\n  }\n\n  const handleSlideToLive = () => {\n    const currentEpochIndex = rounds.findIndex((round) => round.epoch === currentEpoch)\n\n    swiper.slideTo(currentEpochIndex - 1)\n    swiper.update()\n  }\n\n  return (\n    <StyledPrevNextNav>\n      <IconButton variant=\"text\" scale=\"sm\" onClick={handlePrevSlide}>\n        <ArrowBackIcon color=\"primary\" width=\"24px\" />\n      </IconButton>\n      <Icon onClick={handleSlideToLive}>\n        <BunnyCardsIcon width=\"64px\" />\n      </Icon>\n      <IconButton variant=\"text\" scale=\"sm\" onClick={handleNextSlide}>\n        <ArrowForwardIcon color=\"primary\" width=\"24px\" />\n      </IconButton>\n    </StyledPrevNextNav>\n  )\n}\n\nexport default PrevNextNav\n"]},"metadata":{},"sourceType":"module"}