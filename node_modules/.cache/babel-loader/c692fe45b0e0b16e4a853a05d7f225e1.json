{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useState}from'react';import styled from'styled-components';import{useTranslation}from'contexts/Localization';import{Flex,CardFooter,ExpandableLabel,HelpIcon,useTooltip}from'@pancakeswap/uikit';import{CompoundingPoolTag,ManualPoolTag}from'components/Tags';import ExpandedFooter from'./ExpandedFooter';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ExpandableButtonWrapper=styled(Flex)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  justify-content: space-between;\\n  button {\\n    padding: 0;\\n  }\\n\"])));var Footer=function Footer(_ref){var pool=_ref.pool,account=_ref.account;var isAutoVault=pool.isAutoVault;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isExpanded=_useState2[0],setIsExpanded=_useState2[1];var manualTooltipText=t('You must harvest and compound your earnings from this pool manually.');var autoTooltipText=t('Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.');var _useTooltip=useTooltip(isAutoVault?autoTooltipText:manualTooltipText,{placement:'bottom'}),targetRef=_useTooltip.targetRef,tooltip=_useTooltip.tooltip,tooltipVisible=_useTooltip.tooltipVisible;return/*#__PURE__*/_jsxs(CardFooter,{children:[/*#__PURE__*/_jsxs(ExpandableButtonWrapper,{children:[/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[isAutoVault?/*#__PURE__*/_jsx(CompoundingPoolTag,{}):/*#__PURE__*/_jsx(ManualPoolTag,{}),tooltipVisible&&tooltip,/*#__PURE__*/_jsx(Flex,{ref:targetRef,children:/*#__PURE__*/_jsx(HelpIcon,{ml:\"4px\",width:\"20px\",height:\"20px\",color:\"textSubtle\"})})]}),/*#__PURE__*/_jsx(ExpandableLabel,{expanded:isExpanded,onClick:function onClick(){return setIsExpanded(!isExpanded);},children:isExpanded?t('Hide'):t('Details')})]}),isExpanded&&/*#__PURE__*/_jsx(ExpandedFooter,{pool:pool,account:account})]});};export default Footer;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Pools/components/PoolCard/CardFooter/index.tsx"],"names":["React","useState","styled","useTranslation","Flex","CardFooter","ExpandableLabel","HelpIcon","useTooltip","CompoundingPoolTag","ManualPoolTag","ExpandedFooter","ExpandableButtonWrapper","Footer","pool","account","isAutoVault","t","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","placement","targetRef","tooltip","tooltipVisible"],"mappings":"oVAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,IAAT,CAAeC,UAAf,CAA2BC,eAA3B,CAA4CC,QAA5C,CAAsDC,UAAtD,KAAwE,oBAAxE,CAEA,OAASC,kBAAT,CAA6BC,aAA7B,KAAkD,iBAAlD,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,C,wFAQA,GAAMC,CAAAA,uBAAuB,CAAGV,MAAM,CAACE,IAAD,CAAT,gKAA7B,CAQA,GAAMS,CAAAA,MAA6B,CAAG,QAAhCA,CAAAA,MAAgC,MAAuB,IAApBC,CAAAA,IAAoB,MAApBA,IAAoB,CAAdC,OAAc,MAAdA,OAAc,CAC3D,GAAQC,CAAAA,WAAR,CAAwBF,IAAxB,CAAQE,WAAR,CACA,oBAAcb,cAAc,EAA5B,CAAQc,CAAR,iBAAQA,CAAR,CACA,cAAoChB,QAAQ,CAAC,KAAD,CAA5C,wCAAOiB,UAAP,eAAmBC,aAAnB,eAEA,GAAMC,CAAAA,iBAAiB,CAAGH,CAAC,CAAC,sEAAD,CAA3B,CACA,GAAMI,CAAAA,eAAe,CAAGJ,CAAC,CACvB,qGADuB,CAAzB,CAIA,gBAA+CT,UAAU,CAACQ,WAAW,CAAGK,eAAH,CAAqBD,iBAAjC,CAAoD,CAC3GE,SAAS,CAAE,QADgG,CAApD,CAAzD,CAAQC,SAAR,aAAQA,SAAR,CAAmBC,OAAnB,aAAmBA,OAAnB,CAA4BC,cAA5B,aAA4BA,cAA5B,CAIA,mBACE,MAAC,UAAD,yBACE,MAAC,uBAAD,yBACE,MAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,WACGT,WAAW,cAAG,KAAC,kBAAD,IAAH,cAA4B,KAAC,aAAD,IAD1C,CAEGS,cAAc,EAAID,OAFrB,cAGE,KAAC,IAAD,EAAM,GAAG,CAAED,SAAX,uBACE,KAAC,QAAD,EAAU,EAAE,CAAC,KAAb,CAAmB,KAAK,CAAC,MAAzB,CAAgC,MAAM,CAAC,MAAvC,CAA8C,KAAK,CAAC,YAApD,EADF,EAHF,GADF,cAQE,KAAC,eAAD,EAAiB,QAAQ,CAAEL,UAA3B,CAAuC,OAAO,CAAE,yBAAMC,CAAAA,aAAa,CAAC,CAACD,UAAF,CAAnB,EAAhD,UACGA,UAAU,CAAGD,CAAC,CAAC,MAAD,CAAJ,CAAeA,CAAC,CAAC,SAAD,CAD7B,EARF,GADF,CAaGC,UAAU,eAAI,KAAC,cAAD,EAAgB,IAAI,CAAEJ,IAAtB,CAA4B,OAAO,CAAEC,OAArC,EAbjB,GADF,CAiBD,CA/BD,CAiCA,cAAeF,CAAAA,MAAf","sourcesContent":["import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { DeserializedPool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: DeserializedPool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n"]},"metadata":{},"sourceType":"module"}