{"ast":null,"code":"import{useEffect,useRef}from'react';/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */var usePreviousValue=function usePreviousValue(value){var ref=useRef();useEffect(function(){ref.current=value;},[value]);return ref.current;};export default usePreviousValue;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/hooks/usePreviousValue.ts"],"names":["useEffect","useRef","usePreviousValue","value","ref","current"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,MAApB,KAAkC,OAAlC,CAEA;AACA;AACA;AACA;AACA,GACA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAgB,CACvC,GAAMC,CAAAA,GAAG,CAAGH,MAAM,EAAlB,CAEAD,SAAS,CAAC,UAAM,CACdI,GAAG,CAACC,OAAJ,CAAcF,KAAd,CACD,CAFQ,CAEN,CAACA,KAAD,CAFM,CAAT,CAIA,MAAOC,CAAAA,GAAG,CAACC,OAAX,CACD,CARD,CAUA,cAAeH,CAAAA,gBAAf","sourcesContent":["import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n"]},"metadata":{},"sourceType":"module"}