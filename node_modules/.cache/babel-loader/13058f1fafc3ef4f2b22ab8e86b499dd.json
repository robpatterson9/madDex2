{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/components/CollapsibleCard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CardHeader, Card, Flex, Heading, IconButton, ChevronUpIcon, ChevronDownIcon } from '@pancakeswap/uikit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CollapsibleCard = ({\n  initialOpenState = true,\n  title,\n  children,\n  ...props\n}) => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(initialOpenState);\n\n  const toggleOpen = () => setIsOpen(!isOpen);\n\n  return /*#__PURE__*/_jsxDEV(Card, { ...props,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      p: \"16px\",\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h3\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          variant: \"text\",\n          scale: \"sm\",\n          onClick: toggleOpen,\n          children: isOpen ? /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n            width: \"44px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 23\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n            width: \"24px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), isOpen && children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CollapsibleCard, \"mQDcZT0Wj4EA2OFLPXVfDha2PC4=\");\n\n_c = CollapsibleCard;\nexport default CollapsibleCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"CollapsibleCard\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/components/CollapsibleCard/index.tsx"],"names":["React","useState","CardHeader","Card","Flex","Heading","IconButton","ChevronUpIcon","ChevronDownIcon","CollapsibleCard","initialOpenState","title","children","props","isOpen","setIsOpen","toggleOpen"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAEEC,UAFF,EAGEC,IAHF,EAIEC,IAJF,EAKEC,OALF,EAMEC,UANF,EAOEC,aAPF,EAQEC,eARF,QASO,oBATP;;;AAgBA,MAAMC,eAA+C,GAAG,CAAC;AAAEC,EAAAA,gBAAgB,GAAG,IAArB;AAA2BC,EAAAA,KAA3B;AAAkCC,EAAAA,QAAlC;AAA4C,KAAGC;AAA/C,CAAD,KAA4D;AAAA;;AAClH,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAACS,gBAAD,CAApC;;AAEA,QAAMM,UAAU,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAAlC;;AAEA,sBACE,QAAC,IAAD,OAAUD,KAAV;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,CAAC,EAAC,MAAd;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,UAAU,EAAC,QAAjB;AAA0B,QAAA,cAAc,EAAC,eAAzC;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,EAAE,EAAC,IAAZ;AAAA,oBAAkBF;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,MAApB;AAA2B,UAAA,KAAK,EAAC,IAAjC;AAAsC,UAAA,OAAO,EAAEK,UAA/C;AAAA,oBACGF,MAAM,gBAAG,QAAC,aAAD;AAAe,YAAA,KAAK,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,kBAAH,gBAAoC,QAAC,eAAD;AAAiB,YAAA,KAAK,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA;AAD7C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EASGA,MAAM,IAAIF,QATb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAlBD;;GAAMH,e;;KAAAA,e;AAoBN,eAAeA,eAAf","sourcesContent":["import React, { useState } from 'react'\nimport {\n  CardProps,\n  CardHeader,\n  Card,\n  Flex,\n  Heading,\n  IconButton,\n  ChevronUpIcon,\n  ChevronDownIcon,\n} from '@pancakeswap/uikit'\n\ninterface CollapsibleCardProps extends CardProps {\n  initialOpenState?: boolean\n  title: string\n}\n\nconst CollapsibleCard: React.FC<CollapsibleCardProps> = ({ initialOpenState = true, title, children, ...props }) => {\n  const [isOpen, setIsOpen] = useState(initialOpenState)\n\n  const toggleOpen = () => setIsOpen(!isOpen)\n\n  return (\n    <Card {...props}>\n      <CardHeader p=\"16px\">\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Heading as=\"h3\">{title}</Heading>\n          <IconButton variant=\"text\" scale=\"sm\" onClick={toggleOpen}>\n            {isOpen ? <ChevronUpIcon width=\"44px\" /> : <ChevronDownIcon width=\"24px\" />}\n          </IconButton>\n        </Flex>\n      </CardHeader>\n      {isOpen && children}\n    </Card>\n  )\n}\n\nexport default CollapsibleCard\n"]},"metadata":{},"sourceType":"module"}