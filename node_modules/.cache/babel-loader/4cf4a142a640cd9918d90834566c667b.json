{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Collection/Items/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Box, Flex, Text } from '@pancakeswap/uikit';\nimport { useAppDispatch } from 'state';\nimport { fetchCollection } from 'state/nftMarket/reducer';\nimport { useGetCollection } from 'state/nftMarket/hooks';\nimport { useTranslation } from 'contexts/Localization';\nimport Select from 'components/Select/Select';\nimport Page from 'components/Layout/Page';\nimport CollectionNfts from './CollectionNfts';\nimport Header from '../Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Items = () => {\n  _s();\n\n  const {\n    collectionAddress\n  } = useParams();\n  const [sortBy, setSortBy] = useState('updatedAt');\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useAppDispatch();\n  const collection = useGetCollection(collectionAddress);\n  const {\n    address\n  } = collection || {};\n  const sortByItems = [{\n    label: t('Recently listed'),\n    value: 'updatedAt'\n  }, {\n    label: t('Lowest price'),\n    value: 'currentAskPrice'\n  }];\n\n  const handleChange = newOption => {\n    setSortBy(newOption.value);\n  };\n\n  useEffect(() => {\n    if (address) {\n      dispatch(fetchCollection(address));\n    }\n  }, [address, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      collection: collection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Page, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        justifyContent: ['flex-start', null, null, 'flex-end'],\n        mb: \"24px\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          minWidth: \"165px\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"12px\",\n            textTransform: \"uppercase\",\n            color: \"textSubtle\",\n            fontWeight: 600,\n            mb: \"4px\",\n            children: t('Sort By')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: sortByItems,\n            onOptionChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CollectionNfts, {\n        collection: collection,\n        sortBy: sortBy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Items, \"kQQZw2LXzX0XZM5xZVWVLauHWkc=\", false, function () {\n  return [useParams, useTranslation, useAppDispatch, useGetCollection];\n});\n\n_c = Items;\nexport default Items;\n\nvar _c;\n\n$RefreshReg$(_c, \"Items\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Collection/Items/index.tsx"],"names":["React","useEffect","useState","useParams","Box","Flex","Text","useAppDispatch","fetchCollection","useGetCollection","useTranslation","Select","Page","CollectionNfts","Header","Items","collectionAddress","sortBy","setSortBy","t","dispatch","collection","address","sortByItems","label","value","handleChange","newOption"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,QAAgC,oBAAhC;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,MAAP,MAAoC,0BAApC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,WAAnB;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAwBb,SAAS,EAAvC;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,WAAD,CAApC;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAQT,cAAc,EAA5B;AACA,QAAMU,QAAQ,GAAGb,cAAc,EAA/B;AACA,QAAMc,UAAU,GAAGZ,gBAAgB,CAACO,iBAAD,CAAnC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAcD,UAAU,IAAI,EAAlC;AAEA,QAAME,WAAW,GAAG,CAClB;AAAEC,IAAAA,KAAK,EAAEL,CAAC,CAAC,iBAAD,CAAV;AAA+BM,IAAAA,KAAK,EAAE;AAAtC,GADkB,EAElB;AAAED,IAAAA,KAAK,EAAEL,CAAC,CAAC,cAAD,CAAV;AAA4BM,IAAAA,KAAK,EAAE;AAAnC,GAFkB,CAApB;;AAKA,QAAMC,YAAY,GAAIC,SAAD,IAA4B;AAC/CT,IAAAA,SAAS,CAACS,SAAS,CAACF,KAAX,CAAT;AACD,GAFD;;AAIAxB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,OAAJ,EAAa;AACXF,MAAAA,QAAQ,CAACZ,eAAe,CAACc,OAAD,CAAhB,CAAR;AACD;AACF,GAJQ,EAIN,CAACA,OAAD,EAAUF,QAAV,CAJM,CAAT;AAMA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,UAAU,EAAEC;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,UAAU,EAAC,QAAjB;AAA0B,QAAA,cAAc,EAAE,CAAC,YAAD,EAAe,IAAf,EAAqB,IAArB,EAA2B,UAA3B,CAA1C;AAAkF,QAAA,EAAE,EAAC,MAArF;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,QAAQ,EAAC,OAAd;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,QAAQ,EAAC,MAAf;AAAsB,YAAA,aAAa,EAAC,WAApC;AAAgD,YAAA,KAAK,EAAC,YAAtD;AAAmE,YAAA,UAAU,EAAE,GAA/E;AAAoF,YAAA,EAAE,EAAC,KAAvF;AAAA,sBACGF,CAAC,CAAC,SAAD;AADJ;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEI,WAAjB;AAA8B,YAAA,cAAc,EAAEG;AAA9C;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,cAAD;AAAgB,QAAA,UAAU,EAAEL,UAA5B;AAAwC,QAAA,MAAM,EAAEJ;AAAhD;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAgBD,CAvCD;;GAAMF,K;UAC0BZ,S,EAEhBO,c,EACGH,c,EACEE,gB;;;KALfM,K;AAyCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\nimport { Box, Flex, Text } from '@pancakeswap/uikit'\nimport { useAppDispatch } from 'state'\nimport { fetchCollection } from 'state/nftMarket/reducer'\nimport { useGetCollection } from 'state/nftMarket/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport Page from 'components/Layout/Page'\nimport CollectionNfts from './CollectionNfts'\nimport Header from '../Header'\n\nconst Items = () => {\n  const { collectionAddress } = useParams<{ collectionAddress: string }>()\n  const [sortBy, setSortBy] = useState('updatedAt')\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const collection = useGetCollection(collectionAddress)\n  const { address } = collection || {}\n\n  const sortByItems = [\n    { label: t('Recently listed'), value: 'updatedAt' },\n    { label: t('Lowest price'), value: 'currentAskPrice' },\n  ]\n\n  const handleChange = (newOption: OptionProps) => {\n    setSortBy(newOption.value)\n  }\n\n  useEffect(() => {\n    if (address) {\n      dispatch(fetchCollection(address))\n    }\n  }, [address, dispatch])\n\n  return (\n    <>\n      <Header collection={collection} />\n      <Page>\n        <Flex alignItems=\"center\" justifyContent={['flex-start', null, null, 'flex-end']} mb=\"24px\">\n          <Box minWidth=\"165px\">\n            <Text fontSize=\"12px\" textTransform=\"uppercase\" color=\"textSubtle\" fontWeight={600} mb=\"4px\">\n              {t('Sort By')}\n            </Text>\n            <Select options={sortByItems} onOptionChange={handleChange} />\n          </Box>\n        </Flex>\n        <CollectionNfts collection={collection} sortBy={sortBy} />\n      </Page>\n    </>\n  )\n}\n\nexport default Items\n"]},"metadata":{},"sourceType":"module"}