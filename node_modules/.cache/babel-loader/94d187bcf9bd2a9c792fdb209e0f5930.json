{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useMemo}from'react';import{TradeType}from'@pancakeswap/sdk';import{Button,Text,ErrorIcon,ArrowDownIcon}from'@pancakeswap/uikit';import{Field}from'state/swap/actions';import{useTranslation}from'contexts/Localization';import{computeSlippageAdjustedAmounts,computeTradePriceBreakdown,warningSeverity}from'utils/prices';import{AutoColumn}from'components/Layout/Column';import{CurrencyLogo}from'components/Logo';import{RowBetween,RowFixed}from'components/Layout/Row';import truncateHash from'utils/truncateHash';import{TruncatedText,SwapShowAcceptChanges}from'./styleds';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function SwapModalHeader(_ref){var _slippageAdjustedAmou,_slippageAdjustedAmou2;var trade=_ref.trade,allowedSlippage=_ref.allowedSlippage,recipient=_ref.recipient,showAcceptChanges=_ref.showAcceptChanges,onAcceptChanges=_ref.onAcceptChanges;var _useTranslation=useTranslation(),t=_useTranslation.t;var slippageAdjustedAmounts=useMemo(function(){return computeSlippageAdjustedAmounts(trade,allowedSlippage);},[trade,allowedSlippage]);var _useMemo=useMemo(function(){return computeTradePriceBreakdown(trade);},[trade]),priceImpactWithoutFee=_useMemo.priceImpactWithoutFee;var priceImpactSeverity=warningSeverity(priceImpactWithoutFee);var amount=trade.tradeType===TradeType.EXACT_INPUT?(_slippageAdjustedAmou=slippageAdjustedAmounts[Field.OUTPUT])===null||_slippageAdjustedAmou===void 0?void 0:_slippageAdjustedAmou.toSignificant(6):(_slippageAdjustedAmou2=slippageAdjustedAmounts[Field.INPUT])===null||_slippageAdjustedAmou2===void 0?void 0:_slippageAdjustedAmou2.toSignificant(6);var symbol=trade.tradeType===TradeType.EXACT_INPUT?trade.outputAmount.currency.symbol:trade.inputAmount.currency.symbol;var tradeInfoText=trade.tradeType===TradeType.EXACT_INPUT?t('Output is estimated. You will receive at least %amount% %symbol% or the transaction will revert.',{amount:amount,symbol:symbol}):t('Input is estimated. You will sell at most %amount% %symbol% or the transaction will revert.',{amount:amount,symbol:symbol});var _tradeInfoText$split=tradeInfoText.split(\"\".concat(amount,\" \").concat(symbol)),_tradeInfoText$split2=_slicedToArray(_tradeInfoText$split,2),estimatedText=_tradeInfoText$split2[0],transactionRevertText=_tradeInfoText$split2[1];var truncatedRecipient=recipient?truncateHash(recipient):'';var recipientInfoText=t('Output will be sent to %recipient%',{recipient:truncatedRecipient});var _recipientInfoText$sp=recipientInfoText.split(truncatedRecipient),_recipientInfoText$sp2=_slicedToArray(_recipientInfoText$sp,2),recipientSentToText=_recipientInfoText$sp2[0],postSentToText=_recipientInfoText$sp2[1];return/*#__PURE__*/_jsxs(AutoColumn,{gap:\"md\",children:[/*#__PURE__*/_jsxs(RowBetween,{align:\"flex-end\",children:[/*#__PURE__*/_jsxs(RowFixed,{gap:\"0px\",children:[/*#__PURE__*/_jsx(CurrencyLogo,{currency:trade.inputAmount.currency,size:\"24px\",style:{marginRight:'12px'}}),/*#__PURE__*/_jsx(TruncatedText,{fontSize:\"24px\",color:showAcceptChanges&&trade.tradeType===TradeType.EXACT_OUTPUT?'primary':'text',children:trade.inputAmount.toSignificant(6)})]}),/*#__PURE__*/_jsx(RowFixed,{gap:\"0px\",children:/*#__PURE__*/_jsx(Text,{fontSize:\"24px\",ml:\"10px\",children:trade.inputAmount.currency.symbol})})]}),/*#__PURE__*/_jsx(RowFixed,{children:/*#__PURE__*/_jsx(ArrowDownIcon,{width:\"16px\",ml:\"4px\"})}),/*#__PURE__*/_jsxs(RowBetween,{align:\"flex-end\",children:[/*#__PURE__*/_jsxs(RowFixed,{gap:\"0px\",children:[/*#__PURE__*/_jsx(CurrencyLogo,{currency:trade.outputAmount.currency,size:\"24px\",style:{marginRight:'12px'}}),/*#__PURE__*/_jsx(TruncatedText,{fontSize:\"24px\",color:priceImpactSeverity>2?'failure':showAcceptChanges&&trade.tradeType===TradeType.EXACT_INPUT?'primary':'text',children:trade.outputAmount.toSignificant(6)})]}),/*#__PURE__*/_jsx(RowFixed,{gap:\"0px\",children:/*#__PURE__*/_jsx(Text,{fontSize:\"24px\",ml:\"10px\",children:trade.outputAmount.currency.symbol})})]}),showAcceptChanges?/*#__PURE__*/_jsx(SwapShowAcceptChanges,{justify:\"flex-start\",gap:\"0px\",children:/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsxs(RowFixed,{children:[/*#__PURE__*/_jsx(ErrorIcon,{mr:\"8px\"}),/*#__PURE__*/_jsxs(Text,{bold:true,children:[\" \",t('Price Updated')]})]}),/*#__PURE__*/_jsx(Button,{onClick:onAcceptChanges,children:t('Accept')})]})}):null,/*#__PURE__*/_jsx(AutoColumn,{justify:\"flex-start\",gap:\"sm\",style:{padding:'24px 0 0 0px'},children:/*#__PURE__*/_jsxs(Text,{small:true,color:\"textSubtle\",textAlign:\"left\",style:{width:'100%'},children:[estimatedText,/*#__PURE__*/_jsxs(\"b\",{children:[amount,\" \",symbol]}),transactionRevertText]})}),recipient!==null?/*#__PURE__*/_jsx(AutoColumn,{justify:\"flex-start\",gap:\"sm\",style:{padding:'12px 0 0 0px'},children:/*#__PURE__*/_jsxs(Text,{color:\"textSubtle\",children:[recipientSentToText,/*#__PURE__*/_jsx(\"b\",{title:recipient,children:truncatedRecipient}),postSentToText]})}):null]});}","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Swap/components/SwapModalHeader.tsx"],"names":["React","useMemo","TradeType","Button","Text","ErrorIcon","ArrowDownIcon","Field","useTranslation","computeSlippageAdjustedAmounts","computeTradePriceBreakdown","warningSeverity","AutoColumn","CurrencyLogo","RowBetween","RowFixed","truncateHash","TruncatedText","SwapShowAcceptChanges","SwapModalHeader","trade","allowedSlippage","recipient","showAcceptChanges","onAcceptChanges","t","slippageAdjustedAmounts","priceImpactWithoutFee","priceImpactSeverity","amount","tradeType","EXACT_INPUT","OUTPUT","toSignificant","INPUT","symbol","outputAmount","currency","inputAmount","tradeInfoText","split","estimatedText","transactionRevertText","truncatedRecipient","recipientInfoText","recipientSentToText","postSentToText","marginRight","EXACT_OUTPUT","padding","width"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport truncateHash from 'utils/truncateHash'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const { t } = useTranslation()\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  const amount =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)\n      : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)\n  const symbol =\n    trade.tradeType === TradeType.EXACT_INPUT ? trade.outputAmount.currency.symbol : trade.inputAmount.currency.symbol\n\n  const tradeInfoText =\n    trade.tradeType === TradeType.EXACT_INPUT\n      ? t('Output is estimated. You will receive at least %amount% %symbol% or the transaction will revert.', {\n          amount,\n          symbol,\n        })\n      : t('Input is estimated. You will sell at most %amount% %symbol% or the transaction will revert.', {\n          amount,\n          symbol,\n        })\n\n  const [estimatedText, transactionRevertText] = tradeInfoText.split(`${amount} ${symbol}`)\n\n  const truncatedRecipient = recipient ? truncateHash(recipient) : ''\n\n  const recipientInfoText = t('Output will be sent to %recipient%', {\n    recipient: truncatedRecipient,\n  })\n\n  const [recipientSentToText, postSentToText] = recipientInfoText.split(truncatedRecipient)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> {t('Price Updated')}</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>{t('Accept')}</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n          {estimatedText}\n          <b>\n            {amount} {symbol}\n          </b>\n          {transactionRevertText}\n        </Text>\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            {recipientSentToText}\n            <b title={recipient}>{truncatedRecipient}</b>\n            {postSentToText}\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}