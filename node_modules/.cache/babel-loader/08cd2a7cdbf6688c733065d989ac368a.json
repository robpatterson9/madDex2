{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useEffect,useReducer,useCallback}from'react';import BigNumber from'bignumber.js';import{getInterestBreakdown,getPrincipalForInterest,getRoi}from'utils/compoundApyHelpers';/**\n * This hook is handling all the calculator state and calculations.\n * UI connected to it is merely representation of the data and buttons to trigger actions\n */ // Mapping from the compounding frequency button index to actual compounding frequency\n// in number of compounds per day\nvar compoundingIndexToFrequency={0:1,1:0.142857142,2:0.071428571,// once every 7 days\n3:0.033333333// once every 30 days\n};var TOKEN_PRECISION=10;var USD_PRECISION=2;// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\nexport var EditingCurrency;// Calculator works in 2 modes\n(function(EditingCurrency){EditingCurrency[EditingCurrency[\"TOKEN\"]=0]=\"TOKEN\";EditingCurrency[EditingCurrency[\"USD\"]=1]=\"USD\";})(EditingCurrency||(EditingCurrency={}));export var CalculatorMode;(function(CalculatorMode){CalculatorMode[CalculatorMode[\"ROI_BASED_ON_PRINCIPAL\"]=0]=\"ROI_BASED_ON_PRINCIPAL\";CalculatorMode[CalculatorMode[\"PRINCIPAL_BASED_ON_ROI\"]=1]=\"PRINCIPAL_BASED_ON_ROI\";})(CalculatorMode||(CalculatorMode={}));var initialState={controls:{compounding:true,compoundingFrequency:1,// how many compound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\nactiveCompoundingIndex:0,// active compounding selected in\nstakingDuration:3,mode:CalculatorMode.ROI_BASED_ON_PRINCIPAL,editingCurrency:EditingCurrency.USD},data:{principalAsToken:'0.00',principalAsUSD:'',roiUSD:0,roiTokens:0,roiPercentage:0}};var roiCalculatorReducer=function roiCalculatorReducer(state,action){switch(action.type){case'setStakingDuration':{var controls=_objectSpread(_objectSpread({},state.controls),{},{stakingDuration:action.payload});return _objectSpread(_objectSpread({},state),{},{controls:controls});}case'toggleCompounding':{var toggledCompounding=!state.controls.compounding;var _controls=_objectSpread(_objectSpread({},state.controls),{},{compounding:toggledCompounding});return _objectSpread(_objectSpread({},state),{},{controls:_controls});}case'setCompoundingFrequency':{var _action$payload=action.payload,index=_action$payload.index,autoCompoundFrequency=_action$payload.autoCompoundFrequency;if(autoCompoundFrequency){return _objectSpread(_objectSpread({},state),{},{controls:_objectSpread(_objectSpread({},state.controls),{},{compoundingFrequency:autoCompoundFrequency})});}var compoundingFrequency=compoundingIndexToFrequency[index];var _controls2=_objectSpread(_objectSpread({},state.controls),{},{compoundingFrequency:compoundingFrequency,activeCompoundingIndex:index});return _objectSpread(_objectSpread({},state),{},{controls:_controls2});}case'setPrincipal':{var _action$payload2=action.payload,principalAsUSD=_action$payload2.principalAsUSD,principalAsToken=_action$payload2.principalAsToken;var data=_objectSpread(_objectSpread({},state.data),{},{principalAsUSD:principalAsUSD,principalAsToken:principalAsToken});var _controls3=_objectSpread(_objectSpread({},state.controls),{},{mode:CalculatorMode.ROI_BASED_ON_PRINCIPAL});return{controls:_controls3,data:data};}case'setPrincipalForTargetRoi':{var _action$payload3=action.payload,_principalAsUSD=_action$payload3.principalAsUSD,_principalAsToken=_action$payload3.principalAsToken,roiPercentage=_action$payload3.roiPercentage;var _data=_objectSpread(_objectSpread({},state.data),{},{principalAsUSD:_principalAsUSD,principalAsToken:_principalAsToken,roiPercentage:roiPercentage});return _objectSpread(_objectSpread({},state),{},{data:_data});}case'setCalculatorMode':{var mode=action.payload;var _controls4=_objectSpread(_objectSpread({},state.controls),{},{mode:mode});if(mode===CalculatorMode.PRINCIPAL_BASED_ON_ROI){var roiUSD=parseFloat(state.data.roiUSD.toFixed(USD_PRECISION));var _data2=_objectSpread(_objectSpread({},state.data),{},{roiUSD:roiUSD});return{controls:_controls4,data:_data2};}return _objectSpread(_objectSpread({},state),{},{controls:_controls4});}case'setRoi':{var _data3=_objectSpread(_objectSpread({},state.data),action.payload);return _objectSpread(_objectSpread({},state),{},{data:_data3});}case'setTargetRoi':{var _action$payload4=action.payload,_roiUSD=_action$payload4.roiUSD,roiTokens=_action$payload4.roiTokens;var _data4=_objectSpread(_objectSpread({},state.data),{},{roiUSD:_roiUSD,roiTokens:roiTokens});var _controls5=_objectSpread(_objectSpread({},state.controls),{},{mode:CalculatorMode.PRINCIPAL_BASED_ON_ROI});return{controls:_controls5,data:_data4};}case'toggleEditingCurrency':{var currencyAfterChange=state.controls.editingCurrency===EditingCurrency.USD?EditingCurrency.TOKEN:EditingCurrency.USD;var _controls6=_objectSpread(_objectSpread({},state.controls),{},{editingCurrency:currencyAfterChange});return _objectSpread(_objectSpread({},state),{},{controls:_controls6});}default:return state;}};var useRoiCalculatorReducer=function useRoiCalculatorReducer(stakingTokenPrice,earningTokenPrice,apr,autoCompoundFrequency,performanceFee){var _useReducer=useReducer(roiCalculatorReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var _state$data=state.data,principalAsUSD=_state$data.principalAsUSD,roiUSD=_state$data.roiUSD;var _state$controls=state.controls,compounding=_state$controls.compounding,compoundingFrequency=_state$controls.compoundingFrequency,stakingDuration=_state$controls.stakingDuration,mode=_state$controls.mode;// If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\nuseEffect(function(){if(autoCompoundFrequency>0){dispatch({type:'setCompoundingFrequency',payload:{autoCompoundFrequency:autoCompoundFrequency}});}},[autoCompoundFrequency]);// Calculates and sets ROI whenever related values change\nuseEffect(function(){if(mode===CalculatorMode.ROI_BASED_ON_PRINCIPAL){var principalInUSDAsNumber=parseFloat(principalAsUSD);var compoundFrequency=compounding?compoundingFrequency:0;var interestBreakdown=getInterestBreakdown({principalInUSD:principalInUSDAsNumber,apr:apr,earningTokenPrice:earningTokenPrice,compoundFrequency:compoundFrequency,performanceFee:performanceFee});var hasInterest=!Number.isNaN(interestBreakdown[stakingDuration]);var roiTokens=hasInterest?interestBreakdown[stakingDuration]:0;var roiAsUSD=hasInterest?roiTokens*earningTokenPrice:0;var roiPercentage=hasInterest?getRoi({amountEarned:roiAsUSD,amountInvested:principalInUSDAsNumber}):0;dispatch({type:'setRoi',payload:{roiUSD:roiAsUSD,roiTokens:roiTokens,roiPercentage:roiPercentage}});}},[principalAsUSD,apr,stakingDuration,earningTokenPrice,performanceFee,compounding,compoundingFrequency,mode]);// Calculates and sets principal based on expected ROI value\nuseEffect(function(){if(mode===CalculatorMode.PRINCIPAL_BASED_ON_ROI){var principalForExpectedRoi=getPrincipalForInterest(roiUSD,apr,compounding?compoundingFrequency:0,performanceFee);var principalUSD=!Number.isNaN(principalForExpectedRoi[stakingDuration])?principalForExpectedRoi[stakingDuration]:0;var principalToken=new BigNumber(principalUSD).div(stakingTokenPrice);var roiPercentage=getRoi({amountEarned:roiUSD,amountInvested:principalUSD});dispatch({type:'setPrincipalForTargetRoi',payload:{principalAsUSD:principalUSD.toFixed(USD_PRECISION),principalAsToken:principalToken.toFixed(TOKEN_PRECISION),roiPercentage:roiPercentage}});}},[stakingDuration,apr,compounding,compoundingFrequency,mode,roiUSD,stakingTokenPrice,performanceFee]);// Handler for compounding frequency buttons\nvar setCompoundingFrequency=function setCompoundingFrequency(index){dispatch({type:'setCompoundingFrequency',payload:{index:index}});};// Handler for principal input when in USD mode\nvar setPrincipalFromUSDValue=function setPrincipalFromUSDValue(amount){var principalAsTokenBN=new BigNumber(amount).div(stakingTokenPrice);var principalAsToken=principalAsTokenBN.gt(0)?principalAsTokenBN.toFixed(TOKEN_PRECISION):'0.00';dispatch({type:'setPrincipal',payload:{principalAsUSD:amount,principalAsToken:principalAsToken}});};// Handler for principal input when in Token mode\nvar setPrincipalFromTokenValue=useCallback(function(amount){var principalAsUsdBN=new BigNumber(amount).times(stakingTokenPrice);var principalAsUsdString=principalAsUsdBN.gt(0)?principalAsUsdBN.toFixed(USD_PRECISION):'0.00';dispatch({type:'setPrincipal',payload:{principalAsUSD:principalAsUsdString,principalAsToken:amount}});},[stakingTokenPrice]);// Handler for staking duration buttons\nvar setStakingDuration=function setStakingDuration(stakingDurationIndex){dispatch({type:'setStakingDuration',payload:stakingDurationIndex});};// Handler for compounding checkbox\nvar toggleCompounding=function toggleCompounding(){dispatch({type:'toggleCompounding'});};// Handler for principal input mode switch\nvar toggleEditingCurrency=function toggleEditingCurrency(){dispatch({type:'toggleEditingCurrency'});};var setCalculatorMode=function setCalculatorMode(modeToSet){dispatch({type:'setCalculatorMode',payload:modeToSet});};// Handler for ROI input\nvar setTargetRoi=function setTargetRoi(amount){var targetRoiAsTokens=new BigNumber(amount).div(earningTokenPrice);dispatch({type:'setTargetRoi',payload:{roiUSD:amount,roiTokens:targetRoiAsTokens.isNaN()?0:targetRoiAsTokens.toNumber()}});};return{state:state,setPrincipalFromUSDValue:setPrincipalFromUSDValue,setPrincipalFromTokenValue:setPrincipalFromTokenValue,setStakingDuration:setStakingDuration,toggleCompounding:toggleCompounding,toggleEditingCurrency:toggleEditingCurrency,setCompoundingFrequency:setCompoundingFrequency,setCalculatorMode:setCalculatorMode,setTargetRoi:setTargetRoi};};export default useRoiCalculatorReducer;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/components/RoiCalculatorModal/useRoiCalculatorReducer.ts"],"names":["useEffect","useReducer","useCallback","BigNumber","getInterestBreakdown","getPrincipalForInterest","getRoi","compoundingIndexToFrequency","TOKEN_PRECISION","USD_PRECISION","EditingCurrency","CalculatorMode","initialState","controls","compounding","compoundingFrequency","activeCompoundingIndex","stakingDuration","mode","ROI_BASED_ON_PRINCIPAL","editingCurrency","USD","data","principalAsToken","principalAsUSD","roiUSD","roiTokens","roiPercentage","roiCalculatorReducer","state","action","type","payload","toggledCompounding","index","autoCompoundFrequency","PRINCIPAL_BASED_ON_ROI","parseFloat","toFixed","currencyAfterChange","TOKEN","useRoiCalculatorReducer","stakingTokenPrice","earningTokenPrice","apr","performanceFee","dispatch","principalInUSDAsNumber","compoundFrequency","interestBreakdown","principalInUSD","hasInterest","Number","isNaN","roiAsUSD","amountEarned","amountInvested","principalForExpectedRoi","principalUSD","principalToken","div","setCompoundingFrequency","setPrincipalFromUSDValue","amount","principalAsTokenBN","gt","setPrincipalFromTokenValue","principalAsUsdBN","times","principalAsUsdString","setStakingDuration","stakingDurationIndex","toggleCompounding","toggleEditingCurrency","setCalculatorMode","modeToSet","setTargetRoi","targetRoiAsTokens","toNumber"],"mappings":"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","sourcesContent":["import { useEffect, useReducer, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getInterestBreakdown, getPrincipalForInterest, getRoi } from 'utils/compoundApyHelpers'\n\n/**\n * This hook is handling all the calculator state and calculations.\n * UI connected to it is merely representation of the data and buttons to trigger actions\n */\n\n// Mapping from the compounding frequency button index to actual compounding frequency\n// in number of compounds per day\nconst compoundingIndexToFrequency = {\n  0: 1,\n  1: 0.142857142,\n  2: 0.071428571, // once every 7 days\n  3: 0.033333333, // once every 30 days\n}\n\nconst TOKEN_PRECISION = 10\nconst USD_PRECISION = 2\n\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\nexport enum EditingCurrency {\n  TOKEN,\n  USD,\n}\n\n// Calculator works in 2 modes\nexport enum CalculatorMode {\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\n}\n\nexport interface RoiCalculatorReducerState {\n  controls: {\n    compounding: boolean // Compounding checkbox state\n    compoundingFrequency: number // Compounding frequency in number of compounds per day\n    activeCompoundingIndex: number // index of active compounding button in ButtonMenu\n    stakingDuration: number // index of active staking duration button in ButtonMenu\n    mode: CalculatorMode\n    editingCurrency: EditingCurrency\n  }\n  data: {\n    principalAsToken: string // Used as value for Inputs\n    principalAsUSD: string // Used as value for Inputs\n    roiUSD: number\n    roiTokens: number\n    roiPercentage: number // ROI expressed in percentage relative to principal\n  }\n}\n\nconst initialState: RoiCalculatorReducerState = {\n  controls: {\n    compounding: true,\n    compoundingFrequency: 1, // how many compound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\n    activeCompoundingIndex: 0, // active compounding selected in\n    stakingDuration: 3,\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\n    editingCurrency: EditingCurrency.USD,\n  },\n  data: {\n    principalAsToken: '0.00',\n    principalAsUSD: '',\n    roiUSD: 0,\n    roiTokens: 0,\n    roiPercentage: 0,\n  },\n}\n\nconst roiCalculatorReducer = (\n  state: RoiCalculatorReducerState,\n  action: { type: string; payload?: any },\n): RoiCalculatorReducerState => {\n  switch (action.type) {\n    case 'setStakingDuration': {\n      const controls = { ...state.controls, stakingDuration: action.payload }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'toggleCompounding': {\n      const toggledCompounding = !state.controls.compounding\n      const controls = { ...state.controls, compounding: toggledCompounding }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setCompoundingFrequency': {\n      const { index, autoCompoundFrequency } = action.payload\n      if (autoCompoundFrequency) {\n        return {\n          ...state,\n          controls: {\n            ...state.controls,\n            compoundingFrequency: autoCompoundFrequency,\n          },\n        }\n      }\n      const compoundingFrequency = compoundingIndexToFrequency[index]\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setPrincipal': {\n      const { principalAsUSD, principalAsToken } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken }\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL }\n      return {\n        controls,\n        data,\n      }\n    }\n    case 'setPrincipalForTargetRoi': {\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage }\n      return {\n        ...state,\n        data,\n      }\n    }\n    case 'setCalculatorMode': {\n      const mode = action.payload\n      const controls = { ...state.controls, mode }\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION))\n        const data = { ...state.data, roiUSD }\n        return { controls, data }\n      }\n      return { ...state, controls }\n    }\n    case 'setRoi': {\n      const data = { ...state.data, ...action.payload }\n      return { ...state, data }\n    }\n    case 'setTargetRoi': {\n      const { roiUSD, roiTokens } = action.payload\n      const data = { ...state.data, roiUSD, roiTokens }\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI }\n      return { controls, data }\n    }\n    case 'toggleEditingCurrency': {\n      const currencyAfterChange =\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange }\n      return { ...state, controls }\n    }\n    default:\n      return state\n  }\n}\n\nconst useRoiCalculatorReducer = (\n  stakingTokenPrice: number,\n  earningTokenPrice: number,\n  apr: number,\n  autoCompoundFrequency: number,\n  performanceFee: number,\n) => {\n  const [state, dispatch] = useReducer(roiCalculatorReducer, initialState)\n  const { principalAsUSD, roiUSD } = state.data\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls\n\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\n  useEffect(() => {\n    if (autoCompoundFrequency > 0) {\n      dispatch({ type: 'setCompoundingFrequency', payload: { autoCompoundFrequency } })\n    }\n  }, [autoCompoundFrequency])\n\n  // Calculates and sets ROI whenever related values change\n  useEffect(() => {\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\n      const principalInUSDAsNumber = parseFloat(principalAsUSD)\n      const compoundFrequency = compounding ? compoundingFrequency : 0\n      const interestBreakdown = getInterestBreakdown({\n        principalInUSD: principalInUSDAsNumber,\n        apr,\n        earningTokenPrice,\n        compoundFrequency,\n        performanceFee,\n      })\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration])\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0\n      const roiPercentage = hasInterest\n        ? getRoi({\n            amountEarned: roiAsUSD,\n            amountInvested: principalInUSDAsNumber,\n          })\n        : 0\n      dispatch({ type: 'setRoi', payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } })\n    }\n  }, [principalAsUSD, apr, stakingDuration, earningTokenPrice, performanceFee, compounding, compoundingFrequency, mode])\n\n  // Calculates and sets principal based on expected ROI value\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n      const principalForExpectedRoi = getPrincipalForInterest(\n        roiUSD,\n        apr,\n        compounding ? compoundingFrequency : 0,\n        performanceFee,\n      )\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\n        ? principalForExpectedRoi[stakingDuration]\n        : 0\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice)\n      const roiPercentage = getRoi({\n        amountEarned: roiUSD,\n        amountInvested: principalUSD,\n      })\n      dispatch({\n        type: 'setPrincipalForTargetRoi',\n        payload: {\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\n          roiPercentage,\n        },\n      })\n    }\n  }, [stakingDuration, apr, compounding, compoundingFrequency, mode, roiUSD, stakingTokenPrice, performanceFee])\n\n  // Handler for compounding frequency buttons\n  const setCompoundingFrequency = (index: number) => {\n    dispatch({ type: 'setCompoundingFrequency', payload: { index } })\n  }\n\n  // Handler for principal input when in USD mode\n  const setPrincipalFromUSDValue = (amount: string) => {\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice)\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : '0.00'\n    dispatch({ type: 'setPrincipal', payload: { principalAsUSD: amount, principalAsToken } })\n  }\n\n  // Handler for principal input when in Token mode\n  const setPrincipalFromTokenValue = useCallback(\n    (amount: string) => {\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice)\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : '0.00'\n      dispatch({\n        type: 'setPrincipal',\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\n      })\n    },\n    [stakingTokenPrice],\n  )\n\n  // Handler for staking duration buttons\n  const setStakingDuration = (stakingDurationIndex: number) => {\n    dispatch({ type: 'setStakingDuration', payload: stakingDurationIndex })\n  }\n\n  // Handler for compounding checkbox\n  const toggleCompounding = () => {\n    dispatch({ type: 'toggleCompounding' })\n  }\n\n  // Handler for principal input mode switch\n  const toggleEditingCurrency = () => {\n    dispatch({ type: 'toggleEditingCurrency' })\n  }\n\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\n    dispatch({ type: 'setCalculatorMode', payload: modeToSet })\n  }\n\n  // Handler for ROI input\n  const setTargetRoi = (amount: string) => {\n    const targetRoiAsTokens = new BigNumber(amount).div(earningTokenPrice)\n    dispatch({\n      type: 'setTargetRoi',\n      payload: { roiUSD: amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\n    })\n  }\n\n  return {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  }\n}\n\nexport default useRoiCalculatorReducer\n"]},"metadata":{},"sourceType":"module"}