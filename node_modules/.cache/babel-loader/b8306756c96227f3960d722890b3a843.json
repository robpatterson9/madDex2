{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Predictions/Leaderboard/components/Results/styles.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { Flex, Text } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport { useBNBBusdPrice } from 'hooks/useBUSDPrice';\nimport { multiplyPriceByAmount } from 'utils/prices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Row = ({\n  children,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = Row;\nexport const NetWinnings = ({\n  amount,\n  textPrefix = '',\n  textColor = 'text',\n  ...props\n}) => {\n  _s();\n\n  const bnbBusdPrice = useBNBBusdPrice();\n  const value = multiplyPriceByAmount(bnbBusdPrice, Math.abs(amount));\n\n  if (!amount) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    flexDirection: \"column\",\n    alignItems: \"flex-end\",\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontWeight: \"bold\",\n      color: textColor,\n      children: `${textPrefix}${amount.toLocaleString(undefined, {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 6\n      })}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"12px\",\n      color: \"textSubtle\",\n      lineHeight: 1,\n      children: `~$${value.toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      })}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NetWinnings, \"acpdubramp8ianb4OadufVq3Fuw=\", false, function () {\n  return [useBNBBusdPrice];\n});\n\n_c2 = NetWinnings;\nexport const NetWinningsRow = ({\n  amount\n}) => {\n  _s2();\n\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(Row, {\n    mb: \"4px\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"12px\",\n      color: \"textSubtle\",\n      children: t('Net Winnings (BNB)')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NetWinnings, {\n      amount: amount,\n      textPrefix: amount > 0 ? '+' : '',\n      textColor: amount > 0 ? 'success' : 'failure'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(NetWinningsRow, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c3 = NetWinningsRow;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"NetWinnings\");\n$RefreshReg$(_c3, \"NetWinningsRow\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/Leaderboard/components/Results/styles.tsx"],"names":["React","Flex","Text","useTranslation","useBNBBusdPrice","multiplyPriceByAmount","Row","children","props","NetWinnings","amount","textPrefix","textColor","bnbBusdPrice","value","Math","abs","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","NetWinningsRow","t"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAA0BC,IAA1B,QAAsC,oBAAtC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,qBAAT,QAAsC,cAAtC;;AAEA,OAAO,MAAMC,GAAwB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA4B;AAClE,sBACE,QAAC,IAAD;AAAM,IAAA,UAAU,EAAC,QAAjB;AAA0B,IAAA,cAAc,EAAC,eAAzC;AAAA,OAA6DA,KAA7D;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CANM;KAAMD,G;AAcb,OAAO,MAAMG,WAAuC,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,UAAU,GAAG,EAAvB;AAA2BC,EAAAA,SAAS,GAAG,MAAvC;AAA+C,KAAGJ;AAAlD,CAAD,KAA+D;AAAA;;AACpH,QAAMK,YAAY,GAAGT,eAAe,EAApC;AACA,QAAMU,KAAK,GAAGT,qBAAqB,CAACQ,YAAD,EAAeE,IAAI,CAACC,GAAL,CAASN,MAAT,CAAf,CAAnC;;AAEA,MAAI,CAACA,MAAL,EAAa;AACX,WAAO,IAAP;AACD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,aAAa,EAAC,QAApB;AAA6B,IAAA,UAAU,EAAC,UAAxC;AAAA,OAAuDF,KAAvD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,UAAU,EAAC,MAAjB;AAAwB,MAAA,KAAK,EAAEI,SAA/B;AAAA,gBACI,GAAED,UAAW,GAAED,MAAM,CAACO,cAAP,CAAsBC,SAAtB,EAAiC;AAAEC,QAAAA,qBAAqB,EAAE,CAAzB;AAA4BC,QAAAA,qBAAqB,EAAE;AAAnD,OAAjC,CAAyF;AAD5G;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAC,YAA5B;AAAyC,MAAA,UAAU,EAAE,CAArD;AAAA,gBACI,KAAIN,KAAK,CAACG,cAAN,CAAqBC,SAArB,EAAgC;AAAEC,QAAAA,qBAAqB,EAAE,CAAzB;AAA4BC,QAAAA,qBAAqB,EAAE;AAAnD,OAAhC,CAAwF;AADhG;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAlBM;;GAAMX,W;UACUL,e;;;MADVK,W;AAoBb,OAAO,MAAMY,cAA4C,GAAG,CAAC;AAAEX,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AAC1E,QAAM;AAAEY,IAAAA;AAAF,MAAQnB,cAAc,EAA5B;AAEA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAC,KAAR;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAC,YAA5B;AAAA,gBACGmB,CAAC,CAAC,oBAAD;AADJ;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEZ,MAArB;AAA6B,MAAA,UAAU,EAAEA,MAAM,GAAG,CAAT,GAAa,GAAb,GAAmB,EAA5D;AAAgE,MAAA,SAAS,EAAEA,MAAM,GAAG,CAAT,GAAa,SAAb,GAAyB;AAApG;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAXM;;IAAMW,c;UACGlB,c;;;MADHkB,c","sourcesContent":["import React from 'react'\nimport { Flex, FlexProps, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useBNBBusdPrice } from 'hooks/useBUSDPrice'\nimport { multiplyPriceByAmount } from 'utils/prices'\n\nexport const Row: React.FC<FlexProps> = ({ children, ...props }) => {\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {children}\n    </Flex>\n  )\n}\n\ninterface NetWinningsProps extends FlexProps {\n  amount: number\n  textPrefix?: string\n  textColor?: string\n}\n\nexport const NetWinnings: React.FC<NetWinningsProps> = ({ amount, textPrefix = '', textColor = 'text', ...props }) => {\n  const bnbBusdPrice = useBNBBusdPrice()\n  const value = multiplyPriceByAmount(bnbBusdPrice, Math.abs(amount))\n\n  if (!amount) {\n    return null\n  }\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"flex-end\" {...props}>\n      <Text fontWeight=\"bold\" color={textColor}>\n        {`${textPrefix}${amount.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: 6 })}`}\n      </Text>\n      <Text fontSize=\"12px\" color=\"textSubtle\" lineHeight={1}>\n        {`~$${value.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`}\n      </Text>\n    </Flex>\n  )\n}\n\nexport const NetWinningsRow: React.FC<{ amount: number }> = ({ amount }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Row mb=\"4px\">\n      <Text fontSize=\"12px\" color=\"textSubtle\">\n        {t('Net Winnings (BNB)')}\n      </Text>\n      <NetWinnings amount={amount} textPrefix={amount > 0 ? '+' : ''} textColor={amount > 0 ? 'success' : 'failure'} />\n    </Row>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}