{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from'react';import styled from'styled-components';import{useWeb3React}from'@web3-react/core';import{Button,Grid,Text,Flex,Box,BinanceIcon,useModal,Skeleton}from'@pancakeswap/uikit';import{formatNumber}from'utils/formatBalance';import{useTranslation}from'contexts/Localization';import{useBNBBusdPrice}from'hooks/useBUSDPrice';import{multiplyPriceByAmount}from'utils/prices';import BuyModal from'views/Nft/market/components/BuySellModals/BuyModal';import SellModal from'views/Nft/market/components/BuySellModals/SellModal';import ProfileCell from'views/Nft/market/components/ProfileCell';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var OwnersTableRow=styled(Grid)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  grid-template-columns: 2fr 2fr 1fr;\\n  grid-row-gap: 16px;\\n  margin-top: 16px;\\n  align-itmes: center;\\n  & > div {\\n    padding-bottom: 16px;\\n    border-bottom: \",\";\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return\"1px solid \".concat(theme.colors.cardBorder);});var ButtonContainer=styled(Box)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  text-align: right;\\n  padding-right: 24px;\\n\"])));var Row=function Row(_ref2){var t=_ref2.t,nft=_ref2.nft,bnbBusdPrice=_ref2.bnbBusdPrice,account=_ref2.account;var priceInUsd=multiplyPriceByAmount(bnbBusdPrice,parseFloat(nft.marketData.currentAskPrice));var ownNft=account?nft.marketData.currentSeller===account.toLowerCase():false;var _useModal=useModal(/*#__PURE__*/_jsx(BuyModal,{nftToBuy:nft})),_useModal2=_slicedToArray(_useModal,1),onPresentBuyModal=_useModal2[0];var _useModal3=useModal(/*#__PURE__*/_jsx(SellModal,{variant:\"edit\",nftToSell:nft})),_useModal4=_slicedToArray(_useModal3,1),onPresentAdjustPriceModal=_useModal4[0];return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Box,{pl:\"24px\",children:[/*#__PURE__*/_jsxs(Flex,{justifySelf:\"flex-start\",alignItems:\"center\",width:\"max-content\",children:[/*#__PURE__*/_jsx(BinanceIcon,{width:\"24px\",height:\"24px\",mr:\"8px\"}),/*#__PURE__*/_jsx(Text,{bold:true,children:formatNumber(parseFloat(nft.marketData.currentAskPrice),0,3)})]}),bnbBusdPrice?/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",children:\"(~\".concat(formatNumber(priceInUsd,2,2),\" USD)\")}):/*#__PURE__*/_jsx(Skeleton,{width:\"86px\",height:\"12px\",mt:\"4px\"})]}),/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(Flex,{width:\"max-content\",alignItems:\"center\",children:/*#__PURE__*/_jsx(ProfileCell,{accountAddress:nft.marketData.currentSeller})})}),/*#__PURE__*/_jsx(ButtonContainer,{children:ownNft?/*#__PURE__*/_jsx(Button,{scale:\"sm\",variant:\"danger\",maxWidth:\"128px\",onClick:onPresentAdjustPriceModal,children:t('Edit')}):/*#__PURE__*/_jsx(Button,{scale:\"sm\",variant:\"secondary\",maxWidth:\"128px\",onClick:onPresentBuyModal,children:t('Buy')})})]});};var ForSaleTableRow=function ForSaleTableRow(_ref3){var nftsForSale=_ref3.nftsForSale;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useTranslation=useTranslation(),t=_useTranslation.t;var bnbBusdPrice=useBNBBusdPrice();return/*#__PURE__*/_jsx(OwnersTableRow,{children:nftsForSale.map(function(nft){return/*#__PURE__*/_jsx(Row,{t:t,nft:nft,bnbBusdPrice:bnbBusdPrice,account:account},nft.tokenId);})});};export default ForSaleTableRow;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Collection/IndividualNFTPage/ForSaleTableCard/ForSaleTableRows.tsx"],"names":["React","styled","useWeb3React","Button","Grid","Text","Flex","Box","BinanceIcon","useModal","Skeleton","formatNumber","useTranslation","useBNBBusdPrice","multiplyPriceByAmount","BuyModal","SellModal","ProfileCell","OwnersTableRow","theme","colors","cardBorder","ButtonContainer","Row","t","nft","bnbBusdPrice","account","priceInUsd","parseFloat","marketData","currentAskPrice","ownNft","currentSeller","toLowerCase","onPresentBuyModal","onPresentAdjustPriceModal","ForSaleTableRow","nftsForSale","map","tokenId"],"mappings":"qWAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,YAAT,KAA6B,kBAA7B,CAEA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,IAAvB,CAA6BC,IAA7B,CAAmCC,GAAnC,CAAwCC,WAAxC,CAAqDC,QAArD,CAA+DC,QAA/D,KAA+E,oBAA/E,CACA,OAASC,YAAT,KAA6B,qBAA7B,CAEA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,eAAT,KAAgC,oBAAhC,CACA,OAASC,qBAAT,KAAsC,cAAtC,CAEA,MAAOC,CAAAA,QAAP,KAAqB,oDAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,qDAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,yCAAxB,C,6IAEA,GAAMC,CAAAA,cAAc,CAAGjB,MAAM,CAACG,IAAD,CAAT,oPAOC,kBAAGe,CAAAA,KAAH,MAAGA,KAAH,2BAA4BA,KAAK,CAACC,MAAN,CAAaC,UAAzC,GAPD,CAApB,CAWA,GAAMC,CAAAA,eAAe,CAAGrB,MAAM,CAACM,GAAD,CAAT,mHAArB,CAYA,GAAMgB,CAAAA,GAAuB,CAAG,QAA1BA,CAAAA,GAA0B,OAAuC,IAApCC,CAAAA,CAAoC,OAApCA,CAAoC,CAAjCC,GAAiC,OAAjCA,GAAiC,CAA5BC,YAA4B,OAA5BA,YAA4B,CAAdC,OAAc,OAAdA,OAAc,CACrE,GAAMC,CAAAA,UAAU,CAAGd,qBAAqB,CAACY,YAAD,CAAeG,UAAU,CAACJ,GAAG,CAACK,UAAJ,CAAeC,eAAhB,CAAzB,CAAxC,CAEA,GAAMC,CAAAA,MAAM,CAAGL,OAAO,CAAGF,GAAG,CAACK,UAAJ,CAAeG,aAAf,GAAiCN,OAAO,CAACO,WAAR,EAApC,CAA4D,KAAlF,CACA,cAA4BzB,QAAQ,cAAC,KAAC,QAAD,EAAU,QAAQ,CAAEgB,GAApB,EAAD,CAApC,wCAAOU,iBAAP,eACA,eAAoC1B,QAAQ,cAAC,KAAC,SAAD,EAAW,OAAO,CAAC,MAAnB,CAA0B,SAAS,CAAEgB,GAArC,EAAD,CAA5C,yCAAOW,yBAAP,eAEA,mBACE,wCACE,MAAC,GAAD,EAAK,EAAE,CAAC,MAAR,wBACE,MAAC,IAAD,EAAM,WAAW,CAAC,YAAlB,CAA+B,UAAU,CAAC,QAA1C,CAAmD,KAAK,CAAC,aAAzD,wBACE,KAAC,WAAD,EAAa,KAAK,CAAC,MAAnB,CAA0B,MAAM,CAAC,MAAjC,CAAwC,EAAE,CAAC,KAA3C,EADF,cAEE,KAAC,IAAD,EAAM,IAAI,KAAV,UAAYzB,YAAY,CAACkB,UAAU,CAACJ,GAAG,CAACK,UAAJ,CAAeC,eAAhB,CAAX,CAA6C,CAA7C,CAAgD,CAAhD,CAAxB,EAFF,GADF,CAKGL,YAAY,cACX,KAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,CAAsB,KAAK,CAAC,YAA5B,sBACQf,YAAY,CAACiB,UAAD,CAAa,CAAb,CAAgB,CAAhB,CADpB,WADW,cAKX,KAAC,QAAD,EAAU,KAAK,CAAC,MAAhB,CAAuB,MAAM,CAAC,MAA9B,CAAqC,EAAE,CAAC,KAAxC,EAVJ,GADF,cAcE,KAAC,GAAD,wBACE,KAAC,IAAD,EAAM,KAAK,CAAC,aAAZ,CAA0B,UAAU,CAAC,QAArC,uBACE,KAAC,WAAD,EAAa,cAAc,CAAEH,GAAG,CAACK,UAAJ,CAAeG,aAA5C,EADF,EADF,EAdF,cAmBE,KAAC,eAAD,WACGD,MAAM,cACL,KAAC,MAAD,EAAQ,KAAK,CAAC,IAAd,CAAmB,OAAO,CAAC,QAA3B,CAAoC,QAAQ,CAAC,OAA7C,CAAqD,OAAO,CAAEI,yBAA9D,UACGZ,CAAC,CAAC,MAAD,CADJ,EADK,cAKL,KAAC,MAAD,EAAQ,KAAK,CAAC,IAAd,CAAmB,OAAO,CAAC,WAA3B,CAAuC,QAAQ,CAAC,OAAhD,CAAwD,OAAO,CAAEW,iBAAjE,UACGX,CAAC,CAAC,KAAD,CADJ,EANJ,EAnBF,GADF,CAiCD,CAxCD,CA8CA,GAAMa,CAAAA,eAAgD,CAAG,QAAnDA,CAAAA,eAAmD,OAAqB,IAAlBC,CAAAA,WAAkB,OAAlBA,WAAkB,CAC5E,kBAAoBpC,YAAY,EAAhC,CAAQyB,OAAR,eAAQA,OAAR,CACA,oBAAcf,cAAc,EAA5B,CAAQY,CAAR,iBAAQA,CAAR,CACA,GAAME,CAAAA,YAAY,CAAGb,eAAe,EAApC,CACA,mBACE,KAAC,cAAD,WACGyB,WAAW,CAACC,GAAZ,CAAgB,SAACd,GAAD,qBACf,KAAC,GAAD,EAAuB,CAAC,CAAED,CAA1B,CAA6B,GAAG,CAAEC,GAAlC,CAAuC,YAAY,CAAEC,YAArD,CAAmE,OAAO,CAAEC,OAA5E,EAAUF,GAAG,CAACe,OAAd,CADe,EAAhB,CADH,EADF,CAOD,CAXD,CAaA,cAAeH,CAAAA,eAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Price } from '@pancakeswap/sdk'\nimport { Button, Grid, Text, Flex, Box, BinanceIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport { formatNumber } from 'utils/formatBalance'\nimport { ContextApi } from 'contexts/Localization/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { useBNBBusdPrice } from 'hooks/useBUSDPrice'\nimport { multiplyPriceByAmount } from 'utils/prices'\nimport { NftToken } from 'state/nftMarket/types'\nimport BuyModal from 'views/Nft/market/components/BuySellModals/BuyModal'\nimport SellModal from 'views/Nft/market/components/BuySellModals/SellModal'\nimport ProfileCell from 'views/Nft/market/components/ProfileCell'\n\nconst OwnersTableRow = styled(Grid)`\n  grid-template-columns: 2fr 2fr 1fr;\n  grid-row-gap: 16px;\n  margin-top: 16px;\n  align-itmes: center;\n  & > div {\n    padding-bottom: 16px;\n    border-bottom: ${({ theme }) => `1px solid ${theme.colors.cardBorder}`};\n  }\n`\n\nconst ButtonContainer = styled(Box)`\n  text-align: right;\n  padding-right: 24px;\n`\n\ninterface RowProps {\n  t: ContextApi['t']\n  nft: NftToken\n  bnbBusdPrice: Price\n  account: string\n}\n\nconst Row: React.FC<RowProps> = ({ t, nft, bnbBusdPrice, account }) => {\n  const priceInUsd = multiplyPriceByAmount(bnbBusdPrice, parseFloat(nft.marketData.currentAskPrice))\n\n  const ownNft = account ? nft.marketData.currentSeller === account.toLowerCase() : false\n  const [onPresentBuyModal] = useModal(<BuyModal nftToBuy={nft} />)\n  const [onPresentAdjustPriceModal] = useModal(<SellModal variant=\"edit\" nftToSell={nft} />)\n\n  return (\n    <>\n      <Box pl=\"24px\">\n        <Flex justifySelf=\"flex-start\" alignItems=\"center\" width=\"max-content\">\n          <BinanceIcon width=\"24px\" height=\"24px\" mr=\"8px\" />\n          <Text bold>{formatNumber(parseFloat(nft.marketData.currentAskPrice), 0, 3)}</Text>\n        </Flex>\n        {bnbBusdPrice ? (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {`(~${formatNumber(priceInUsd, 2, 2)} USD)`}\n          </Text>\n        ) : (\n          <Skeleton width=\"86px\" height=\"12px\" mt=\"4px\" />\n        )}\n      </Box>\n      <Box>\n        <Flex width=\"max-content\" alignItems=\"center\">\n          <ProfileCell accountAddress={nft.marketData.currentSeller} />\n        </Flex>\n      </Box>\n      <ButtonContainer>\n        {ownNft ? (\n          <Button scale=\"sm\" variant=\"danger\" maxWidth=\"128px\" onClick={onPresentAdjustPriceModal}>\n            {t('Edit')}\n          </Button>\n        ) : (\n          <Button scale=\"sm\" variant=\"secondary\" maxWidth=\"128px\" onClick={onPresentBuyModal}>\n            {t('Buy')}\n          </Button>\n        )}\n      </ButtonContainer>\n    </>\n  )\n}\n\ninterface ForSaleTableRowsProps {\n  nftsForSale: NftToken[]\n}\n\nconst ForSaleTableRow: React.FC<ForSaleTableRowsProps> = ({ nftsForSale }) => {\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const bnbBusdPrice = useBNBBusdPrice()\n  return (\n    <OwnersTableRow>\n      {nftsForSale.map((nft) => (\n        <Row key={nft.tokenId} t={t} nft={nft} bnbBusdPrice={bnbBusdPrice} account={account} />\n      ))}\n    </OwnersTableRow>\n  )\n}\n\nexport default ForSaleTableRow\n"]},"metadata":{},"sourceType":"module"}