{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Predictions/Leaderboard/components/WalletStatsModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Box, CloseIcon, Flex, Grid, Text, IconButton, LinkExternal, ModalContainer, ModalHeader, ProfileAvatar, useMatchBreakpoints, Skeleton, Heading } from '@pancakeswap/uikit';\nimport { useGetProfileAvatar } from 'state/profile/hooks';\nimport useTheme from 'hooks/useTheme';\nimport styled from 'styled-components';\nimport { getBscScanLink } from 'utils';\nimport truncateHash from 'utils/truncateHash';\nimport { LeaderboardLoadingState } from 'state/types';\nimport { useGetOrFetchLeaderboardAddressResult, useGetLeaderboardLoadingState, useGetSelectedAddress } from 'state/predictions/hooks';\nimport { useTranslation } from 'contexts/Localization';\nimport { NetWinnings } from './Results/styles';\nimport MobileBetsTable from './MobileBetsTable';\nimport DesktopBetsTable from './Results/DesktopBetsTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExternalLink = styled(LinkExternal)`\n  color: ${({\n  theme\n}) => theme.colors.text};\n\n  svg {\n    fill: ${({\n  theme\n}) => theme.colors.text};\n  }\n`;\n_c = ExternalLink;\n\nconst WalletStatsModal = ({\n  account,\n  onDismiss,\n  onBeforeDismiss\n}) => {\n  _s();\n\n  var _profileAvatar$nft, _profileAvatar$nft$im, _result$winRate, _result$totalBetsClai, _result$totalBets;\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    theme\n  } = useTheme();\n  const selectedAddress = useGetSelectedAddress();\n  const address = account || selectedAddress;\n  const result = useGetOrFetchLeaderboardAddressResult(address);\n  const profileAvatar = useGetProfileAvatar(address);\n  const leaderboardLoadingState = useGetLeaderboardLoadingState();\n  const isLoading = leaderboardLoadingState === LeaderboardLoadingState.LOADING;\n  const {\n    isDesktop\n  } = useMatchBreakpoints();\n\n  const handleDismiss = () => {\n    if (onBeforeDismiss) {\n      onBeforeDismiss();\n    }\n\n    onDismiss();\n  };\n\n  return /*#__PURE__*/_jsxDEV(ModalContainer, {\n    minWidth: \"320px\",\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      background: theme.colors.gradients.bubblegum,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          width: ['64px', null, null, null, null, null, '96px'],\n          mr: \"16px\",\n          children: /*#__PURE__*/_jsxDEV(ProfileAvatar, {\n            src: (_profileAvatar$nft = profileAvatar.nft) === null || _profileAvatar$nft === void 0 ? void 0 : (_profileAvatar$nft$im = _profileAvatar$nft.image) === null || _profileAvatar$nft$im === void 0 ? void 0 : _profileAvatar$nft$im.thumbnail,\n            height: 96,\n            width: 96\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [profileAvatar.username && /*#__PURE__*/_jsxDEV(Heading, {\n            scale: \"lg\",\n            mb: \"8px\",\n            children: profileAvatar.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ExternalLink, {\n            href: getBscScanLink(address, 'address'),\n            children: truncateHash(address)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        variant: \"text\",\n        onClick: handleDismiss,\n        \"aria-label\": \"Close the dialog\",\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n          color: \"text\",\n          width: \"24px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), result === null ? /*#__PURE__*/_jsxDEV(Text, {\n      p: \"32px\",\n      textAlign: \"center\",\n      fontWeight: \"bold\",\n      children: t('No results found.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      maxHeight: ['500px', null, null, null, null, null, 'none'],\n      overflowY: \"auto\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        gridTemplateColumns: ['1fr', null, null, null, null, null, 'repeat(4, 1fr)'],\n        gridGap: \"16px\",\n        p: \"24px\",\n        borderBottom: \"1px solid\",\n        borderColor: \"cardBorder\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            as: \"h6\",\n            fontSize: \"12px\",\n            textTransform: \"uppercase\",\n            color: \"textSubtle\",\n            fontWeight: \"bold\",\n            mb: \"8px\",\n            children: t('Net Winnings')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), isLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(NetWinnings, {\n            amount: result === null || result === void 0 ? void 0 : result.netBNB,\n            textPrefix: (result === null || result === void 0 ? void 0 : result.netBNB) > 0 ? '+' : '',\n            textColor: (result === null || result === void 0 ? void 0 : result.netBNB) > 0 ? 'success' : 'failure',\n            alignItems: \"flex-end\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            as: \"h6\",\n            fontSize: \"12px\",\n            textTransform: \"uppercase\",\n            color: \"textSubtle\",\n            fontWeight: \"bold\",\n            mb: \"8px\",\n            children: t('Win Rate')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), isLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: \"bold\",\n            children: `${result === null || result === void 0 ? void 0 : (_result$winRate = result.winRate) === null || _result$winRate === void 0 ? void 0 : _result$winRate.toLocaleString(undefined, {\n              minimumFractionDigits: 0,\n              maximumFractionDigits: 2\n            })}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            as: \"h6\",\n            fontSize: \"12px\",\n            textTransform: \"uppercase\",\n            color: \"textSubtle\",\n            fontWeight: \"bold\",\n            mb: \"8px\",\n            children: t('Rounds Won')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), isLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 28\n          }, this) : /*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: \"bold\",\n            children: result === null || result === void 0 ? void 0 : (_result$totalBetsClai = result.totalBetsClaimed) === null || _result$totalBetsClai === void 0 ? void 0 : _result$totalBetsClai.toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            as: \"h6\",\n            fontSize: \"12px\",\n            textTransform: \"uppercase\",\n            color: \"textSubtle\",\n            fontWeight: \"bold\",\n            mb: \"8px\",\n            children: t('Rounds Played')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), isLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 28\n          }, this) : /*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: \"bold\",\n            children: result === null || result === void 0 ? void 0 : (_result$totalBets = result.totalBets) === null || _result$totalBets === void 0 ? void 0 : _result$totalBets.toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), isDesktop ? /*#__PURE__*/_jsxDEV(DesktopBetsTable, {\n        account: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(MobileBetsTable, {\n        account: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 65\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WalletStatsModal, \"Syz7kfogl0PF7bmiuMjII2WReWU=\", false, function () {\n  return [useTranslation, useTheme, useGetSelectedAddress, useGetOrFetchLeaderboardAddressResult, useGetProfileAvatar, useGetLeaderboardLoadingState, useMatchBreakpoints];\n});\n\n_c2 = WalletStatsModal;\nexport default WalletStatsModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ExternalLink\");\n$RefreshReg$(_c2, \"WalletStatsModal\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Predictions/Leaderboard/components/WalletStatsModal.tsx"],"names":["React","Box","CloseIcon","Flex","Grid","Text","IconButton","LinkExternal","ModalContainer","ModalHeader","ProfileAvatar","useMatchBreakpoints","Skeleton","Heading","useGetProfileAvatar","useTheme","styled","getBscScanLink","truncateHash","LeaderboardLoadingState","useGetOrFetchLeaderboardAddressResult","useGetLeaderboardLoadingState","useGetSelectedAddress","useTranslation","NetWinnings","MobileBetsTable","DesktopBetsTable","ExternalLink","theme","colors","text","WalletStatsModal","account","onDismiss","onBeforeDismiss","t","selectedAddress","address","result","profileAvatar","leaderboardLoadingState","isLoading","LOADING","isDesktop","handleDismiss","gradients","bubblegum","flex","nft","image","thumbnail","username","netBNB","winRate","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","totalBetsClaimed","totalBets"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n  Box,\n  CloseIcon,\n  Flex,\n  Grid,\n  Text,\n  IconButton,\n  InjectedModalProps,\n  LinkExternal,\n  ModalContainer,\n  ModalHeader,\n  ProfileAvatar,\n  useMatchBreakpoints,\n  Skeleton,\n  Heading,\n} from '@pancakeswap/uikit'\nimport { useGetProfileAvatar } from 'state/profile/hooks'\nimport useTheme from 'hooks/useTheme'\nimport styled from 'styled-components'\nimport { getBscScanLink } from 'utils'\nimport truncateHash from 'utils/truncateHash'\nimport { LeaderboardLoadingState } from 'state/types'\nimport {\n  useGetOrFetchLeaderboardAddressResult,\n  useGetLeaderboardLoadingState,\n  useGetSelectedAddress,\n} from 'state/predictions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { NetWinnings } from './Results/styles'\nimport MobileBetsTable from './MobileBetsTable'\nimport DesktopBetsTable from './Results/DesktopBetsTable'\n\ninterface WalletStatsModalProps extends InjectedModalProps {\n  account?: string\n  onBeforeDismiss?: () => void\n}\n\nconst ExternalLink = styled(LinkExternal)`\n  color: ${({ theme }) => theme.colors.text};\n\n  svg {\n    fill: ${({ theme }) => theme.colors.text};\n  }\n`\n\nconst WalletStatsModal: React.FC<WalletStatsModalProps> = ({ account, onDismiss, onBeforeDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const selectedAddress = useGetSelectedAddress()\n  const address = account || selectedAddress\n  const result = useGetOrFetchLeaderboardAddressResult(address)\n  const profileAvatar = useGetProfileAvatar(address)\n  const leaderboardLoadingState = useGetLeaderboardLoadingState()\n  const isLoading = leaderboardLoadingState === LeaderboardLoadingState.LOADING\n  const { isDesktop } = useMatchBreakpoints()\n\n  const handleDismiss = () => {\n    if (onBeforeDismiss) {\n      onBeforeDismiss()\n    }\n\n    onDismiss()\n  }\n\n  return (\n    <ModalContainer minWidth=\"320px\">\n      <ModalHeader background={theme.colors.gradients.bubblegum}>\n        <Flex alignItems=\"center\" style={{ flex: 1 }}>\n          <Box width={['64px', null, null, null, null, null, '96px']} mr=\"16px\">\n            <ProfileAvatar src={profileAvatar.nft?.image?.thumbnail} height={96} width={96} />\n          </Box>\n          <Box>\n            {profileAvatar.username && (\n              <Heading scale=\"lg\" mb=\"8px\">\n                {profileAvatar.username}\n              </Heading>\n            )}\n            <ExternalLink href={getBscScanLink(address, 'address')}>{truncateHash(address)}</ExternalLink>\n          </Box>\n        </Flex>\n        <IconButton variant=\"text\" onClick={handleDismiss} aria-label=\"Close the dialog\">\n          <CloseIcon color=\"text\" width=\"24px\" />\n        </IconButton>\n      </ModalHeader>\n      {result === null ? (\n        <Text p=\"32px\" textAlign=\"center\" fontWeight=\"bold\">\n          {t('No results found.')}\n        </Text>\n      ) : (\n        <Box maxHeight={['500px', null, null, null, null, null, 'none']} overflowY=\"auto\">\n          <Grid\n            gridTemplateColumns={['1fr', null, null, null, null, null, 'repeat(4, 1fr)']}\n            gridGap=\"16px\"\n            p=\"24px\"\n            borderBottom=\"1px solid\"\n            borderColor=\"cardBorder\"\n          >\n            <Box>\n              <Text as=\"h6\" fontSize=\"12px\" textTransform=\"uppercase\" color=\"textSubtle\" fontWeight=\"bold\" mb=\"8px\">\n                {t('Net Winnings')}\n              </Text>\n              {isLoading ? (\n                <Skeleton />\n              ) : (\n                <NetWinnings\n                  amount={result?.netBNB}\n                  textPrefix={result?.netBNB > 0 ? '+' : ''}\n                  textColor={result?.netBNB > 0 ? 'success' : 'failure'}\n                  alignItems=\"flex-end\"\n                />\n              )}\n            </Box>\n            <Box>\n              <Text as=\"h6\" fontSize=\"12px\" textTransform=\"uppercase\" color=\"textSubtle\" fontWeight=\"bold\" mb=\"8px\">\n                {t('Win Rate')}\n              </Text>\n              {isLoading ? (\n                <Skeleton />\n              ) : (\n                <Text fontWeight=\"bold\">{`${result?.winRate?.toLocaleString(undefined, {\n                  minimumFractionDigits: 0,\n                  maximumFractionDigits: 2,\n                })}%`}</Text>\n              )}\n            </Box>\n            <Box>\n              <Text as=\"h6\" fontSize=\"12px\" textTransform=\"uppercase\" color=\"textSubtle\" fontWeight=\"bold\" mb=\"8px\">\n                {t('Rounds Won')}\n              </Text>\n              {isLoading ? <Skeleton /> : <Text fontWeight=\"bold\">{result?.totalBetsClaimed?.toLocaleString()}</Text>}\n            </Box>\n            <Box>\n              <Text as=\"h6\" fontSize=\"12px\" textTransform=\"uppercase\" color=\"textSubtle\" fontWeight=\"bold\" mb=\"8px\">\n                {t('Rounds Played')}\n              </Text>\n              {isLoading ? <Skeleton /> : <Text fontWeight=\"bold\">{result?.totalBets?.toLocaleString()}</Text>}\n            </Box>\n          </Grid>\n          {isDesktop ? <DesktopBetsTable account={address} /> : <MobileBetsTable account={address} />}\n        </Box>\n      )}\n    </ModalContainer>\n  )\n}\n\nexport default WalletStatsModal\n"]},"metadata":{},"sourceType":"module"}