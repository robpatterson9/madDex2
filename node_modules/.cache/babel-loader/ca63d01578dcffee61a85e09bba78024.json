{"ast":null,"code":"import _toConsumableArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{createContext,useCallback,useState}from'react';import{kebabCase}from'lodash';import{toastTypes}from'components/Toast';import{jsx as _jsx}from\"react/jsx-runtime\";export var ToastsContext=/*#__PURE__*/createContext(undefined);export var ToastsProvider=function ToastsProvider(_ref){var children=_ref.children;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),toasts=_useState2[0],setToasts=_useState2[1];var toast=useCallback(function(_ref2){var title=_ref2.title,description=_ref2.description,type=_ref2.type;setToasts(function(prevToasts){var id=kebabCase(title);// Remove any existing toasts with the same id\nvar currentToasts=prevToasts.filter(function(prevToast){return prevToast.id!==id;});return[{id:id,title:title,description:description,type:type}].concat(_toConsumableArray(currentToasts));});},[setToasts]);var toastError=function toastError(title,description){return toast({title:title,description:description,type:toastTypes.DANGER});};var toastInfo=function toastInfo(title,description){return toast({title:title,description:description,type:toastTypes.INFO});};var toastSuccess=function toastSuccess(title,description){return toast({title:title,description:description,type:toastTypes.SUCCESS});};var toastWarning=function toastWarning(title,description){return toast({title:title,description:description,type:toastTypes.WARNING});};var clear=function clear(){return setToasts([]);};var remove=function remove(id){setToasts(function(prevToasts){return prevToasts.filter(function(prevToast){return prevToast.id!==id;});});};return/*#__PURE__*/_jsx(ToastsContext.Provider,{value:{toasts:toasts,clear:clear,remove:remove,toastError:toastError,toastInfo:toastInfo,toastSuccess:toastSuccess,toastWarning:toastWarning},children:children});};","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/contexts/ToastsContext/Provider.tsx"],"names":["React","createContext","useCallback","useState","kebabCase","toastTypes","ToastsContext","undefined","ToastsProvider","children","toasts","setToasts","toast","title","description","type","prevToasts","id","currentToasts","filter","prevToast","toastError","DANGER","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","clear","remove"],"mappings":"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","sourcesContent":["import React, { createContext, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from 'components/Toast'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}