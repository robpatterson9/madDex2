{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React,{useState,useEffect}from'react';import BigNumber from'bignumber.js';import{Flex,Text}from'@pancakeswap/uikit';import styled from'styled-components';import{BIG_ZERO}from'utils/bigNumber';import{useTranslation}from'contexts/Localization';import RewardBracketDetail from'./RewardBracketDetail';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Wrapper=styled(Flex)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  flex-direction: column;\\n\"])));var RewardsInner=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(2, auto);\\n  row-gap: 16px;\\n\\n  \",\" {\\n    grid-template-columns: repeat(4, 1fr);\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.mediaQueries.sm;});var RewardBrackets=function RewardBrackets(_ref2){var lotteryNodeData=_ref2.lotteryNodeData,isHistoricRound=_ref2.isHistoricRound;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useState=useState({isLoading:true,cakeToBurn:BIG_ZERO,rewardsLessTreasuryFee:BIG_ZERO,rewardsBreakdown:null,countWinnersPerBracket:null}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];useEffect(function(){if(lotteryNodeData){var treasuryFee=lotteryNodeData.treasuryFee,amountCollectedInCake=lotteryNodeData.amountCollectedInCake,rewardsBreakdown=lotteryNodeData.rewardsBreakdown,_countWinnersPerBracket=lotteryNodeData.countWinnersPerBracket;var feeAsPercentage=new BigNumber(treasuryFee).div(100);var _cakeToBurn=feeAsPercentage.div(100).times(new BigNumber(amountCollectedInCake));var amountLessTreasuryFee=new BigNumber(amountCollectedInCake).minus(_cakeToBurn);setState({isLoading:false,cakeToBurn:_cakeToBurn,rewardsLessTreasuryFee:amountLessTreasuryFee,rewardsBreakdown:rewardsBreakdown,countWinnersPerBracket:_countWinnersPerBracket});}else{setState({isLoading:true,cakeToBurn:BIG_ZERO,rewardsLessTreasuryFee:BIG_ZERO,rewardsBreakdown:null,countWinnersPerBracket:null});}},[lotteryNodeData]);var getCakeRewards=function getCakeRewards(bracket){var shareAsPercentage=new BigNumber(state.rewardsBreakdown[bracket]).div(100);return state.rewardsLessTreasuryFee.div(100).times(shareAsPercentage);};var isLoading=state.isLoading,countWinnersPerBracket=state.countWinnersPerBracket,cakeToBurn=state.cakeToBurn;var rewardBrackets=[0,1,2,3,4,5];return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsxs(Text,{fontSize:\"14px\",mb:\"24px\",children:[t('Match the winning number in the same order to share prizes.'),' ',!isHistoricRound&&t('Current prizes up for grabs:')]}),/*#__PURE__*/_jsxs(RewardsInner,{children:[rewardBrackets.map(function(bracketIndex){return/*#__PURE__*/_jsx(RewardBracketDetail,{rewardBracket:bracketIndex,cakeAmount:!isLoading&&getCakeRewards(bracketIndex),numberWinners:!isLoading&&countWinnersPerBracket[bracketIndex],isHistoricRound:isHistoricRound,isLoading:isLoading},bracketIndex);}),/*#__PURE__*/_jsx(RewardBracketDetail,{rewardBracket:0,cakeAmount:cakeToBurn,isBurn:true,isLoading:isLoading})]})]});};export default RewardBrackets;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Lottery/components/RewardBrackets.tsx"],"names":["React","useState","useEffect","BigNumber","Flex","Text","styled","BIG_ZERO","useTranslation","RewardBracketDetail","Wrapper","RewardsInner","div","theme","mediaQueries","sm","RewardBrackets","lotteryNodeData","isHistoricRound","t","isLoading","cakeToBurn","rewardsLessTreasuryFee","rewardsBreakdown","countWinnersPerBracket","state","setState","treasuryFee","amountCollectedInCake","feeAsPercentage","times","amountLessTreasuryFee","minus","getCakeRewards","bracket","shareAsPercentage","rewardBrackets","map","bracketIndex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useTranslation } from 'contexts/Localization'\nimport { LotteryRound } from 'state/types'\nimport RewardBracketDetail from './RewardBracketDetail'\n\nconst Wrapper = styled(Flex)`\n  width: 100%;\n  flex-direction: column;\n`\n\nconst RewardsInner = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, auto);\n  row-gap: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n`\n\ninterface RewardMatchesProps {\n  lotteryNodeData: LotteryRound\n  isHistoricRound?: boolean\n}\n\ninterface RewardsState {\n  isLoading: boolean\n  cakeToBurn: BigNumber\n  rewardsLessTreasuryFee: BigNumber\n  rewardsBreakdown: string[]\n  countWinnersPerBracket: string[]\n}\n\nconst RewardBrackets: React.FC<RewardMatchesProps> = ({ lotteryNodeData, isHistoricRound }) => {\n  const { t } = useTranslation()\n  const [state, setState] = useState<RewardsState>({\n    isLoading: true,\n    cakeToBurn: BIG_ZERO,\n    rewardsLessTreasuryFee: BIG_ZERO,\n    rewardsBreakdown: null,\n    countWinnersPerBracket: null,\n  })\n\n  useEffect(() => {\n    if (lotteryNodeData) {\n      const { treasuryFee, amountCollectedInCake, rewardsBreakdown, countWinnersPerBracket } = lotteryNodeData\n\n      const feeAsPercentage = new BigNumber(treasuryFee).div(100)\n      const cakeToBurn = feeAsPercentage.div(100).times(new BigNumber(amountCollectedInCake))\n      const amountLessTreasuryFee = new BigNumber(amountCollectedInCake).minus(cakeToBurn)\n      setState({\n        isLoading: false,\n        cakeToBurn,\n        rewardsLessTreasuryFee: amountLessTreasuryFee,\n        rewardsBreakdown,\n        countWinnersPerBracket,\n      })\n    } else {\n      setState({\n        isLoading: true,\n        cakeToBurn: BIG_ZERO,\n        rewardsLessTreasuryFee: BIG_ZERO,\n        rewardsBreakdown: null,\n        countWinnersPerBracket: null,\n      })\n    }\n  }, [lotteryNodeData])\n\n  const getCakeRewards = (bracket: number) => {\n    const shareAsPercentage = new BigNumber(state.rewardsBreakdown[bracket]).div(100)\n    return state.rewardsLessTreasuryFee.div(100).times(shareAsPercentage)\n  }\n\n  const { isLoading, countWinnersPerBracket, cakeToBurn } = state\n\n  const rewardBrackets = [0, 1, 2, 3, 4, 5]\n\n  return (\n    <Wrapper>\n      <Text fontSize=\"14px\" mb=\"24px\">\n        {t('Match the winning number in the same order to share prizes.')}{' '}\n        {!isHistoricRound && t('Current prizes up for grabs:')}\n      </Text>\n      <RewardsInner>\n        {rewardBrackets.map((bracketIndex) => (\n          <RewardBracketDetail\n            key={bracketIndex}\n            rewardBracket={bracketIndex}\n            cakeAmount={!isLoading && getCakeRewards(bracketIndex)}\n            numberWinners={!isLoading && countWinnersPerBracket[bracketIndex]}\n            isHistoricRound={isHistoricRound}\n            isLoading={isLoading}\n          />\n        ))}\n        <RewardBracketDetail rewardBracket={0} cakeAmount={cakeToBurn} isBurn isLoading={isLoading} />\n      </RewardsInner>\n    </Wrapper>\n  )\n}\n\nexport default RewardBrackets\n"]},"metadata":{},"sourceType":"module"}