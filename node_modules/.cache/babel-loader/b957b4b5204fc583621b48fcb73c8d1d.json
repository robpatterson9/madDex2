{"ast":null,"code":"import React from'react';import{Flex,Heading,Skeleton}from'@pancakeswap/uikit';import getTimePeriods from'utils/getTimePeriods';import Timer from'./Timer';import useNextEventCountdown from'../../hooks/useNextEventCountdown';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Countdown=function Countdown(_ref){var nextEventTime=_ref.nextEventTime,preCountdownText=_ref.preCountdownText,postCountdownText=_ref.postCountdownText;var secondsRemaining=useNextEventCountdown(nextEventTime);var _getTimePeriods=getTimePeriods(secondsRemaining),days=_getTimePeriods.days,hours=_getTimePeriods.hours,minutes=_getTimePeriods.minutes;return/*#__PURE__*/_jsx(_Fragment,{children:secondsRemaining?/*#__PURE__*/_jsxs(Flex,{display:\"inline-flex\",justifyContent:\"flex-end\",alignItems:\"flex-end\",children:[preCountdownText&&/*#__PURE__*/_jsx(Heading,{mr:\"12px\",color:\"#ffff\",children:preCountdownText}),/*#__PURE__*/_jsx(Timer,{minutes:minutes+1// We don't show seconds - so values from 0 - 59s should be shown as 1 min\n,hours:hours,days:days}),postCountdownText&&/*#__PURE__*/_jsx(Heading,{color:\"#ffff\",children:postCountdownText})]}):/*#__PURE__*/_jsx(Skeleton,{height:\"41px\",width:\"250px\"})});};export default Countdown;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Lottery/components/Countdown/index.tsx"],"names":["React","Flex","Heading","Skeleton","getTimePeriods","Timer","useNextEventCountdown","Countdown","nextEventTime","preCountdownText","postCountdownText","secondsRemaining","days","hours","minutes"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,OAAf,CAAwBC,QAAxB,KAAwC,oBAAxC,CACA,MAAOC,CAAAA,cAAP,KAA2B,sBAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,qBAAP,KAAkC,mCAAlC,C,6IAQA,GAAMC,CAAAA,SAAmC,CAAG,QAAtCA,CAAAA,SAAsC,MAA4D,IAAzDC,CAAAA,aAAyD,MAAzDA,aAAyD,CAA1CC,gBAA0C,MAA1CA,gBAA0C,CAAxBC,iBAAwB,MAAxBA,iBAAwB,CACtG,GAAMC,CAAAA,gBAAgB,CAAGL,qBAAqB,CAACE,aAAD,CAA9C,CACA,oBAAiCJ,cAAc,CAACO,gBAAD,CAA/C,CAAQC,IAAR,iBAAQA,IAAR,CAAcC,KAAd,iBAAcA,KAAd,CAAqBC,OAArB,iBAAqBA,OAArB,CAEA,mBACE,yBACGH,gBAAgB,cACf,MAAC,IAAD,EAAM,OAAO,CAAC,aAAd,CAA4B,cAAc,CAAC,UAA3C,CAAsD,UAAU,CAAC,UAAjE,WACGF,gBAAgB,eACf,KAAC,OAAD,EAAS,EAAE,CAAC,MAAZ,CAAmB,KAAK,CAAC,OAAzB,UACGA,gBADH,EAFJ,cAME,KAAC,KAAD,EACE,OAAO,CAAEK,OAAO,CAAG,CAAG;AADxB,CAEE,KAAK,CAAED,KAFT,CAGE,IAAI,CAAED,IAHR,EANF,CAWGF,iBAAiB,eAAI,KAAC,OAAD,EAAS,KAAK,CAAC,OAAf,UAAwBA,iBAAxB,EAXxB,GADe,cAef,KAAC,QAAD,EAAU,MAAM,CAAC,MAAjB,CAAwB,KAAK,CAAC,OAA9B,EAhBJ,EADF,CAqBD,CAzBD,CA2BA,cAAeH,CAAAA,SAAf","sourcesContent":["import React from 'react'\nimport { Flex, Heading, Skeleton } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport Timer from './Timer'\nimport useNextEventCountdown from '../../hooks/useNextEventCountdown'\n\ninterface CountdownProps {\n  nextEventTime: number\n  preCountdownText?: string\n  postCountdownText?: string\n}\n\nconst Countdown: React.FC<CountdownProps> = ({ nextEventTime, preCountdownText, postCountdownText }) => {\n  const secondsRemaining = useNextEventCountdown(nextEventTime)\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return (\n    <>\n      {secondsRemaining ? (\n        <Flex display=\"inline-flex\" justifyContent=\"flex-end\" alignItems=\"flex-end\">\n          {preCountdownText && (\n            <Heading mr=\"12px\" color=\"#ffff\">\n              {preCountdownText}\n            </Heading>\n          )}\n          <Timer\n            minutes={minutes + 1} // We don't show seconds - so values from 0 - 59s should be shown as 1 min\n            hours={hours}\n            days={days}\n          />\n          {postCountdownText && <Heading color=\"#ffff\">{postCountdownText}</Heading>}\n        </Flex>\n      ) : (\n        <Skeleton height=\"41px\" width=\"250px\" />\n      )}\n    </>\n  )\n}\n\nexport default Countdown\n"]},"metadata":{},"sourceType":"module"}