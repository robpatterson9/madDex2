{"ast":null,"code":"var _jsxFileName = \"/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Collection/IndividualNFTPage/ForSaleTableCard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Flex, Card, Grid, SellIcon, Text, ArrowBackIcon, ArrowForwardIcon, useMatchBreakpoints, ArrowUpIcon, ArrowDownIcon, Button, Spinner } from '@pancakeswap/uikit';\nimport { useTranslation } from 'contexts/Localization';\nimport useTheme from 'hooks/useTheme';\nimport ForSaleTableRows from './ForSaleTableRows';\nimport { StyledSortButton } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ITEMS_PER_PAGE_DESKTOP = 10;\nconst ITEMS_PER_PAGE_MOBILE = 5;\nconst StyledCard = styled(Card)`\n  width: 100%;\n  & > div:first-child {\n    ${({\n  hasManyPages\n}) => hasManyPages ? 'min-height: 480px;' : null}\n    display: flex;\n    flex-direction: column;\n    ${({\n  theme\n}) => theme.mediaQueries.md} {\n      ${({\n  hasManyPages\n}) => hasManyPages ? 'min-height: 850px;' : null}\n    }\n  }\n`;\n_c = StyledCard;\nconst TableHeading = styled(Grid)`\n  border-bottom: ${({\n  theme\n}) => `1px solid ${theme.colors.cardBorder}`};\n`;\n_c2 = TableHeading;\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 16px;\n  margin-bottom: 16px;\n`;\n_c3 = PageButtons;\nconst Arrow = styled.div`\n  color: ${({\n  theme\n}) => theme.colors.primary};\n  padding: 0 20px;\n  :hover {\n    cursor: pointer;\n  }\n`;\n_c4 = Arrow;\n\nconst ForSaleTableCard = ({\n  nftsForSale,\n  bunnyId,\n  totalForSale,\n  loadMore,\n  isFetchingMoreNfts,\n  priceSort,\n  togglePriceSort\n}) => {\n  _s();\n\n  const [page, setPage] = useState(1);\n  const {\n    isMobile\n  } = useMatchBreakpoints();\n  const itemsPerPage = isMobile ? ITEMS_PER_PAGE_MOBILE : ITEMS_PER_PAGE_DESKTOP;\n  const {\n    t\n  } = useTranslation();\n  const {\n    theme\n  } = useTheme();\n  useEffect(() => {\n    // If user clicks on other NFT at the bottom of the page - load new NFT table starting on page 1\n    // Same for reversing sorting direction\n    setPage(1);\n  }, [bunnyId, priceSort]);\n  const needsExtraPage = nftsForSale.length % itemsPerPage !== 0;\n  let maxPage = Math.floor(nftsForSale.length / itemsPerPage);\n\n  if (needsExtraPage) {\n    maxPage += 1;\n  }\n\n  const nftsOnCurrentPage = nftsForSale.slice((page - 1) * itemsPerPage, page * itemsPerPage);\n\n  const switchPage = pageNumber => {\n    setPage(pageNumber);\n  };\n\n  const loadMoreHandler = () => {\n    loadMore(priceSort);\n  };\n\n  const loadMoreButton = isFetchingMoreNfts ? /*#__PURE__*/_jsxDEV(Flex, {\n    width: \"96px\",\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Spinner, {\n      size: 32\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"primary\",\n    scale: \"xs\",\n    ml: \"12px\",\n    onClick: loadMoreHandler,\n    children: t('Load more')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(StyledCard, {\n    hasManyPages: maxPage > 1,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      flex: \"0 1 auto\",\n      gridTemplateColumns: \"34px 1fr\",\n      alignItems: \"center\",\n      height: \"72px\",\n      px: \"24px\",\n      borderBottom: `1px solid ${theme.colors.cardBorder}`,\n      children: [/*#__PURE__*/_jsxDEV(SellIcon, {\n        width: \"24px\",\n        height: \"24px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        children: t('For Sale (%num%)', {\n          num: totalForSale.toLocaleString()\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), nftsOnCurrentPage.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TableHeading, {\n        flex: \"0 1 auto\",\n        gridTemplateColumns: \"2fr 2fr 1fr\",\n        py: \"12px\",\n        children: [/*#__PURE__*/_jsxDEV(StyledSortButton, {\n          type: \"button\",\n          onClick: togglePriceSort,\n          children: /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              textTransform: \"uppercase\",\n              color: \"textSubtle\",\n              bold: true,\n              fontSize: \"12px\",\n              px: \"24px\",\n              children: t('Price')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), priceSort === 'asc' ? /*#__PURE__*/_jsxDEV(ArrowUpIcon, {\n              color: \"textSubtle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 40\n            }, this) : /*#__PURE__*/_jsxDEV(ArrowDownIcon, {\n              color: \"textSubtle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 77\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          textTransform: \"uppercase\",\n          color: \"textSubtle\",\n          bold: true,\n          fontSize: \"12px\",\n          children: t('Owner')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        flex: \"1 1 auto\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        height: \"100%\",\n        children: [/*#__PURE__*/_jsxDEV(ForSaleTableRows, {\n          nftsForSale: nftsOnCurrentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PageButtons, {\n          children: [/*#__PURE__*/_jsxDEV(Arrow, {\n            onClick: () => {\n              switchPage(page === 1 ? page : page - 1);\n            },\n            children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n              color: page === 1 ? 'textDisabled' : 'primary'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: t('Page %page% of %maxPage%', {\n              page,\n              maxPage\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), page === maxPage ? loadMoreButton : /*#__PURE__*/_jsxDEV(Arrow, {\n            onClick: () => {\n              switchPage(page === maxPage ? page : page + 1);\n            },\n            children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n              color: page === maxPage ? 'textDisabled' : 'primary'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"200px\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        children: t('No items for sale')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ForSaleTableCard, \"SH1SODr1/J3y7pt2W7PsUStcMMQ=\", false, function () {\n  return [useMatchBreakpoints, useTranslation, useTheme];\n});\n\n_c5 = ForSaleTableCard;\nexport default ForSaleTableCard;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"StyledCard\");\n$RefreshReg$(_c2, \"TableHeading\");\n$RefreshReg$(_c3, \"PageButtons\");\n$RefreshReg$(_c4, \"Arrow\");\n$RefreshReg$(_c5, \"ForSaleTableCard\");","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/Collection/IndividualNFTPage/ForSaleTableCard/index.tsx"],"names":["React","useState","useEffect","styled","Flex","Card","Grid","SellIcon","Text","ArrowBackIcon","ArrowForwardIcon","useMatchBreakpoints","ArrowUpIcon","ArrowDownIcon","Button","Spinner","useTranslation","useTheme","ForSaleTableRows","StyledSortButton","ITEMS_PER_PAGE_DESKTOP","ITEMS_PER_PAGE_MOBILE","StyledCard","hasManyPages","theme","mediaQueries","md","TableHeading","colors","cardBorder","PageButtons","div","Arrow","primary","ForSaleTableCard","nftsForSale","bunnyId","totalForSale","loadMore","isFetchingMoreNfts","priceSort","togglePriceSort","page","setPage","isMobile","itemsPerPage","t","needsExtraPage","length","maxPage","Math","floor","nftsOnCurrentPage","slice","switchPage","pageNumber","loadMoreHandler","loadMoreButton","num","toLocaleString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport {\n  Flex,\n  Card,\n  Grid,\n  SellIcon,\n  Text,\n  ArrowBackIcon,\n  ArrowForwardIcon,\n  useMatchBreakpoints,\n  ArrowUpIcon,\n  ArrowDownIcon,\n  Button,\n  Spinner,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { NftToken } from 'state/nftMarket/types'\nimport ForSaleTableRows from './ForSaleTableRows'\nimport { StyledSortButton } from './styles'\n\nconst ITEMS_PER_PAGE_DESKTOP = 10\nconst ITEMS_PER_PAGE_MOBILE = 5\n\nconst StyledCard = styled(Card)<{ hasManyPages: boolean }>`\n  width: 100%;\n  & > div:first-child {\n    ${({ hasManyPages }) => (hasManyPages ? 'min-height: 480px;' : null)}\n    display: flex;\n    flex-direction: column;\n    ${({ theme }) => theme.mediaQueries.md} {\n      ${({ hasManyPages }) => (hasManyPages ? 'min-height: 850px;' : null)}\n    }\n  }\n`\n\nconst TableHeading = styled(Grid)`\n  border-bottom: ${({ theme }) => `1px solid ${theme.colors.cardBorder}`};\n`\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 16px;\n  margin-bottom: 16px;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.colors.primary};\n  padding: 0 20px;\n  :hover {\n    cursor: pointer;\n  }\n`\n\ninterface ForSaleTableCardProps {\n  nftsForSale: NftToken[]\n  bunnyId: string\n  totalForSale: number\n  priceSort: 'asc' | 'desc'\n  isFetchingMoreNfts: boolean\n  togglePriceSort: () => void\n  loadMore: (orderDirection: 'asc' | 'desc') => void\n}\n\nconst ForSaleTableCard: React.FC<ForSaleTableCardProps> = ({\n  nftsForSale,\n  bunnyId,\n  totalForSale,\n  loadMore,\n  isFetchingMoreNfts,\n  priceSort,\n  togglePriceSort,\n}) => {\n  const [page, setPage] = useState(1)\n  const { isMobile } = useMatchBreakpoints()\n  const itemsPerPage = isMobile ? ITEMS_PER_PAGE_MOBILE : ITEMS_PER_PAGE_DESKTOP\n\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  useEffect(() => {\n    // If user clicks on other NFT at the bottom of the page - load new NFT table starting on page 1\n    // Same for reversing sorting direction\n    setPage(1)\n  }, [bunnyId, priceSort])\n\n  const needsExtraPage = nftsForSale.length % itemsPerPage !== 0\n  let maxPage = Math.floor(nftsForSale.length / itemsPerPage)\n  if (needsExtraPage) {\n    maxPage += 1\n  }\n\n  const nftsOnCurrentPage = nftsForSale.slice((page - 1) * itemsPerPage, page * itemsPerPage)\n\n  const switchPage = (pageNumber: number) => {\n    setPage(pageNumber)\n  }\n\n  const loadMoreHandler = () => {\n    loadMore(priceSort)\n  }\n\n  const loadMoreButton = isFetchingMoreNfts ? (\n    <Flex width=\"96px\" justifyContent=\"center\">\n      <Spinner size={32} />\n    </Flex>\n  ) : (\n    <Button variant=\"primary\" scale=\"xs\" ml=\"12px\" onClick={loadMoreHandler}>\n      {t('Load more')}\n    </Button>\n  )\n\n  return (\n    <StyledCard hasManyPages={maxPage > 1}>\n      <Grid\n        flex=\"0 1 auto\"\n        gridTemplateColumns=\"34px 1fr\"\n        alignItems=\"center\"\n        height=\"72px\"\n        px=\"24px\"\n        borderBottom={`1px solid ${theme.colors.cardBorder}`}\n      >\n        <SellIcon width=\"24px\" height=\"24px\" />\n        <Text bold>{t('For Sale (%num%)', { num: totalForSale.toLocaleString() })}</Text>\n      </Grid>\n      {nftsOnCurrentPage.length > 0 ? (\n        <>\n          <TableHeading flex=\"0 1 auto\" gridTemplateColumns=\"2fr 2fr 1fr\" py=\"12px\">\n            <StyledSortButton type=\"button\" onClick={togglePriceSort}>\n              <Flex alignItems=\"center\">\n                <Text textTransform=\"uppercase\" color=\"textSubtle\" bold fontSize=\"12px\" px=\"24px\">\n                  {t('Price')}\n                </Text>\n                {priceSort === 'asc' ? <ArrowUpIcon color=\"textSubtle\" /> : <ArrowDownIcon color=\"textSubtle\" />}\n              </Flex>\n            </StyledSortButton>\n            <Text textTransform=\"uppercase\" color=\"textSubtle\" bold fontSize=\"12px\">\n              {t('Owner')}\n            </Text>\n          </TableHeading>\n          <Flex flex=\"1 1 auto\" flexDirection=\"column\" justifyContent=\"space-between\" height=\"100%\">\n            <ForSaleTableRows nftsForSale={nftsOnCurrentPage} />\n            <PageButtons>\n              <Arrow\n                onClick={() => {\n                  switchPage(page === 1 ? page : page - 1)\n                }}\n              >\n                <ArrowBackIcon color={page === 1 ? 'textDisabled' : 'primary'} />\n              </Arrow>\n              <Text>{t('Page %page% of %maxPage%', { page, maxPage })}</Text>\n              {page === maxPage ? (\n                loadMoreButton\n              ) : (\n                <Arrow\n                  onClick={() => {\n                    switchPage(page === maxPage ? page : page + 1)\n                  }}\n                >\n                  <ArrowForwardIcon color={page === maxPage ? 'textDisabled' : 'primary'} />\n                </Arrow>\n              )}\n            </PageButtons>\n          </Flex>\n        </>\n      ) : (\n        <Flex justifyContent=\"center\" alignItems=\"center\" height=\"200px\">\n          <Text>{t('No items for sale')}</Text>\n        </Flex>\n      )}\n    </StyledCard>\n  )\n}\n\nexport default ForSaleTableCard\n"]},"metadata":{},"sourceType":"module"}