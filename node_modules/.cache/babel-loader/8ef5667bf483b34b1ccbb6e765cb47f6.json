{"ast":null,"code":"import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useMemo,useRef,useState,useEffect}from'react';import{ETHER}from'@pancakeswap/sdk';import{Text,Input,Box}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{useAudioModeManager}from'state/user/hooks';import useDebounce from'hooks/useDebounce';import useActiveWeb3React from'hooks/useActiveWeb3React';import{useAllTokens,useToken,useIsUserAddedToken,useFoundOnInactiveList}from'../../hooks/Tokens';import{isAddress}from'../../utils';import Column,{AutoColumn}from'../Layout/Column';import Row from'../Layout/Row';import CommonBases from'./CommonBases';import CurrencyList from'./CurrencyList';import{filterTokens,useSortedTokensByQuery}from'./filtering';import useTokenComparator from'./sorting';import ImportRow from'./ImportRow';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var swapSound=new Audio('swap.mp3');function CurrencySearch(_ref){var selectedCurrency=_ref.selectedCurrency,onCurrencySelect=_ref.onCurrencySelect,otherSelectedCurrency=_ref.otherSelectedCurrency,showCommonBases=_ref.showCommonBases,showImportView=_ref.showImportView,setImportToken=_ref.setImportToken;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;// refs for fixed size lists\nvar fixedList=useRef();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),searchQuery=_useState2[0],setSearchQuery=_useState2[1];var debouncedQuery=useDebounce(searchQuery,200);var _useState3=useState(false),_useState4=_slicedToArray(_useState3,1),invertSearchOrder=_useState4[0];var allTokens=useAllTokens();// if they input an address, use it\nvar searchToken=useToken(debouncedQuery);var searchTokenIsAdded=useIsUserAddedToken(searchToken);var _useAudioModeManager=useAudioModeManager(),_useAudioModeManager2=_slicedToArray(_useAudioModeManager,1),audioPlay=_useAudioModeManager2[0];var showETH=useMemo(function(){var s=debouncedQuery.toLowerCase().trim();return s===''||s==='b'||s==='bn'||s==='bnb';},[debouncedQuery]);var tokenComparator=useTokenComparator(invertSearchOrder);var filteredTokens=useMemo(function(){return filterTokens(Object.values(allTokens),debouncedQuery);},[allTokens,debouncedQuery]);var sortedTokens=useMemo(function(){return filteredTokens.sort(tokenComparator);},[filteredTokens,tokenComparator]);var filteredSortedTokens=useSortedTokensByQuery(sortedTokens,debouncedQuery);var handleCurrencySelect=useCallback(function(currency){onCurrencySelect(currency);if(audioPlay){swapSound.play();}},[audioPlay,onCurrencySelect]);// manage focus on modal show\nvar inputRef=useRef();useEffect(function(){inputRef.current.focus();},[]);var handleInput=useCallback(function(event){var _fixedList$current;var input=event.target.value;var checksummedInput=isAddress(input);setSearchQuery(checksummedInput||input);(_fixedList$current=fixedList.current)===null||_fixedList$current===void 0?void 0:_fixedList$current.scrollTo(0);},[]);var handleEnter=useCallback(function(e){if(e.key==='Enter'){var s=debouncedQuery.toLowerCase().trim();if(s==='bnb'){handleCurrencySelect(ETHER);}else if(filteredSortedTokens.length>0){var _filteredSortedTokens;if(((_filteredSortedTokens=filteredSortedTokens[0].symbol)===null||_filteredSortedTokens===void 0?void 0:_filteredSortedTokens.toLowerCase())===debouncedQuery.trim().toLowerCase()||filteredSortedTokens.length===1){handleCurrencySelect(filteredSortedTokens[0]);}}}},[filteredSortedTokens,handleCurrencySelect,debouncedQuery]);// if no results on main list, show option to expand into inactive\nvar inactiveTokens=useFoundOnInactiveList(debouncedQuery);var filteredInactiveTokens=useSortedTokensByQuery(inactiveTokens,debouncedQuery);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(AutoColumn,{gap:\"16px\",children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Input,{id:\"token-search-input\",placeholder:t('Search name or paste address'),scale:\"lg\",autoComplete:\"off\",value:searchQuery,ref:inputRef,onChange:handleInput,onKeyDown:handleEnter})}),showCommonBases&&/*#__PURE__*/_jsx(CommonBases,{chainId:chainId,onSelect:handleCurrencySelect,selectedCurrency:selectedCurrency})]}),searchToken&&!searchTokenIsAdded?/*#__PURE__*/_jsx(Column,{style:{padding:'20px 0',height:'100%'},children:/*#__PURE__*/_jsx(ImportRow,{token:searchToken,showImportView:showImportView,setImportToken:setImportToken})}):(filteredSortedTokens===null||filteredSortedTokens===void 0?void 0:filteredSortedTokens.length)>0||(filteredInactiveTokens===null||filteredInactiveTokens===void 0?void 0:filteredInactiveTokens.length)>0?/*#__PURE__*/_jsx(Box,{margin:\"24px -24px\",children:/*#__PURE__*/_jsx(CurrencyList,{height:390,showETH:showETH,currencies:filteredInactiveTokens?filteredSortedTokens.concat(filteredInactiveTokens):filteredSortedTokens,breakIndex:inactiveTokens&&filteredSortedTokens?filteredSortedTokens.length:undefined,onCurrencySelect:handleCurrencySelect,otherCurrency:otherSelectedCurrency,selectedCurrency:selectedCurrency,fixedListRef:fixedList,showImportView:showImportView,setImportToken:setImportToken})}):/*#__PURE__*/_jsx(Column,{style:{padding:'20px',height:'100%'},children:/*#__PURE__*/_jsx(Text,{color:\"textSubtle\",textAlign:\"center\",mb:\"20px\",children:t('No results found.')})})]})});}export default CurrencySearch;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/components/SearchModal/CurrencySearch.tsx"],"names":["React","useCallback","useMemo","useRef","useState","useEffect","ETHER","Text","Input","Box","useTranslation","useAudioModeManager","useDebounce","useActiveWeb3React","useAllTokens","useToken","useIsUserAddedToken","useFoundOnInactiveList","isAddress","Column","AutoColumn","Row","CommonBases","CurrencyList","filterTokens","useSortedTokensByQuery","useTokenComparator","ImportRow","swapSound","Audio","CurrencySearch","selectedCurrency","onCurrencySelect","otherSelectedCurrency","showCommonBases","showImportView","setImportToken","t","chainId","fixedList","searchQuery","setSearchQuery","debouncedQuery","invertSearchOrder","allTokens","searchToken","searchTokenIsAdded","audioPlay","showETH","s","toLowerCase","trim","tokenComparator","filteredTokens","Object","values","sortedTokens","sort","filteredSortedTokens","handleCurrencySelect","currency","play","inputRef","current","focus","handleInput","event","input","target","value","checksummedInput","scrollTo","handleEnter","e","key","length","symbol","inactiveTokens","filteredInactiveTokens","padding","height","concat","undefined"],"mappings":"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","sourcesContent":["import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          )}\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n"]},"metadata":{},"sourceType":"module"}