{"ast":null,"code":"import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from'react';import styled from'styled-components';import{TabMenu as UIKitTabMenu,Tab,Flex,VerifiedIcon,CommunityIcon}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{ProposalType}from'state/types';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledTabMenu=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  padding-top: 16px;\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.input;});var getIndexFromType=function getIndexFromType(proposalType){switch(proposalType){case ProposalType.COMMUNITY:return 1;case ProposalType.ALL:return 2;case ProposalType.CORE:default:return 0;}};var getTypeFromIndex=function getTypeFromIndex(index){switch(index){case 1:return ProposalType.COMMUNITY;case 2:return ProposalType.ALL;default:return ProposalType.CORE;}};var TabMenu=function TabMenu(_ref2){var proposalType=_ref2.proposalType,onTypeChange=_ref2.onTypeChange;var _useTranslation=useTranslation(),t=_useTranslation.t;var handleItemClick=function handleItemClick(index){onTypeChange(getTypeFromIndex(index));};return/*#__PURE__*/_jsx(StyledTabMenu,{children:/*#__PURE__*/_jsxs(UIKitTabMenu,{activeIndex:getIndexFromType(proposalType),onItemClick:handleItemClick,children:[/*#__PURE__*/_jsx(Tab,{children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(VerifiedIcon,{color:\"currentColor\",mr:\"4px\"}),t('Core')]})}),/*#__PURE__*/_jsxs(Tab,{children:[' ',/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(CommunityIcon,{color:\"currentColor\",mr:\"4px\"}),t('Community')]})]}),/*#__PURE__*/_jsx(Tab,{children:\"All\"})]})});};export default TabMenu;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Voting/components/Proposals/TabMenu.tsx"],"names":["React","styled","TabMenu","UIKitTabMenu","Tab","Flex","VerifiedIcon","CommunityIcon","useTranslation","ProposalType","StyledTabMenu","div","theme","colors","input","getIndexFromType","proposalType","COMMUNITY","ALL","CORE","getTypeFromIndex","index","onTypeChange","t","handleItemClick"],"mappings":"4LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,OAAO,GAAIC,CAAAA,YAApB,CAAkCC,GAAlC,CAAuCC,IAAvC,CAA6CC,YAA7C,CAA2DC,aAA3D,KAAgF,oBAAhF,CACA,OAASC,cAAT,KAA+B,uBAA/B,CACA,OAASC,YAAT,KAA6B,aAA7B,C,wFAOA,GAAMC,CAAAA,aAAa,CAAGT,MAAM,CAACU,GAAV,mHACG,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,MAAN,CAAaC,KAA5B,EADH,CAAnB,CAKA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,YAAD,CAAgC,CACvD,OAAQA,YAAR,EACE,IAAKP,CAAAA,YAAY,CAACQ,SAAlB,CACE,MAAO,EAAP,CACF,IAAKR,CAAAA,YAAY,CAACS,GAAlB,CACE,MAAO,EAAP,CACF,IAAKT,CAAAA,YAAY,CAACU,IAAlB,CACA,QACE,MAAO,EAAP,CAPJ,CASD,CAVD,CAYA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAmB,CAC1C,OAAQA,KAAR,EACE,IAAK,EAAL,CACE,MAAOZ,CAAAA,YAAY,CAACQ,SAApB,CACF,IAAK,EAAL,CACE,MAAOR,CAAAA,YAAY,CAACS,GAApB,CACF,QACE,MAAOT,CAAAA,YAAY,CAACU,IAApB,CANJ,CAQD,CATD,CAWA,GAAMjB,CAAAA,OAA+B,CAAG,QAAlCA,CAAAA,OAAkC,OAAoC,IAAjCc,CAAAA,YAAiC,OAAjCA,YAAiC,CAAnBM,YAAmB,OAAnBA,YAAmB,CAC1E,oBAAcd,cAAc,EAA5B,CAAQe,CAAR,iBAAQA,CAAR,CACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACH,KAAD,CAAmB,CACzCC,YAAY,CAACF,gBAAgB,CAACC,KAAD,CAAjB,CAAZ,CACD,CAFD,CAIA,mBACE,KAAC,aAAD,wBACE,MAAC,YAAD,EAAc,WAAW,CAAEN,gBAAgB,CAACC,YAAD,CAA3C,CAA2D,WAAW,CAAEQ,eAAxE,wBACE,KAAC,GAAD,wBACE,MAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,wBACE,KAAC,YAAD,EAAc,KAAK,CAAC,cAApB,CAAmC,EAAE,CAAC,KAAtC,EADF,CAEGD,CAAC,CAAC,MAAD,CAFJ,GADF,EADF,cAOE,MAAC,GAAD,YACG,GADH,cAEE,MAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,wBACE,KAAC,aAAD,EAAe,KAAK,CAAC,cAArB,CAAoC,EAAE,CAAC,KAAvC,EADF,CAEGA,CAAC,CAAC,WAAD,CAFJ,GAFF,GAPF,cAcE,KAAC,GAAD,kBAdF,GADF,EADF,CAoBD,CA1BD,CA4BA,cAAerB,CAAAA,OAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { TabMenu as UIKitTabMenu, Tab, Flex, VerifiedIcon, CommunityIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { ProposalType } from 'state/types'\n\ninterface TabMenuProps {\n  proposalType: ProposalType\n  onTypeChange: (proposalType: ProposalType) => void\n}\n\nconst StyledTabMenu = styled.div`\n  background-color: ${({ theme }) => theme.colors.input};\n  padding-top: 16px;\n`\n\nconst getIndexFromType = (proposalType: ProposalType) => {\n  switch (proposalType) {\n    case ProposalType.COMMUNITY:\n      return 1\n    case ProposalType.ALL:\n      return 2\n    case ProposalType.CORE:\n    default:\n      return 0\n  }\n}\n\nconst getTypeFromIndex = (index: number) => {\n  switch (index) {\n    case 1:\n      return ProposalType.COMMUNITY\n    case 2:\n      return ProposalType.ALL\n    default:\n      return ProposalType.CORE\n  }\n}\n\nconst TabMenu: React.FC<TabMenuProps> = ({ proposalType, onTypeChange }) => {\n  const { t } = useTranslation()\n  const handleItemClick = (index: number) => {\n    onTypeChange(getTypeFromIndex(index))\n  }\n\n  return (\n    <StyledTabMenu>\n      <UIKitTabMenu activeIndex={getIndexFromType(proposalType)} onItemClick={handleItemClick}>\n        <Tab>\n          <Flex alignItems=\"center\">\n            <VerifiedIcon color=\"currentColor\" mr=\"4px\" />\n            {t('Core')}\n          </Flex>\n        </Tab>\n        <Tab>\n          {' '}\n          <Flex alignItems=\"center\">\n            <CommunityIcon color=\"currentColor\" mr=\"4px\" />\n            {t('Community')}\n          </Flex>\n        </Tab>\n        <Tab>All</Tab>\n      </UIKitTabMenu>\n    </StyledTabMenu>\n  )\n}\n\nexport default TabMenu\n"]},"metadata":{},"sourceType":"module"}