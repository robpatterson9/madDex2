{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Volumes/evo970/lou/madDex-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React,{useEffect,useState,useMemo,useCallback}from'react';import styled from'styled-components';import BigNumber from'bignumber.js';import{ethers}from'ethers';import{Modal,Text,Flex,HelpIcon,BalanceInput,Ticket,useTooltip,Skeleton,Button,ArrowForwardIcon}from'@pancakeswap/uikit';import{useTranslation}from'contexts/Localization';import{useWeb3React}from'@web3-react/core';import tokens from'config/constants/tokens';import{getFullDisplayBalance}from'utils/formatBalance';import{BIG_ZERO,ethersToBigNumber}from'utils/bigNumber';import{useAppDispatch}from'state';import{usePriceCakeBusd}from'state/farms/hooks';import{useLottery}from'state/lottery/hooks';import{fetchUserTicketsAndLotteries}from'state/lottery';import useTheme from'hooks/useTheme';import useTokenBalance,{FetchStatus}from'hooks/useTokenBalance';import useApproveConfirmTransaction from'hooks/useApproveConfirmTransaction';import{useCake,useLotteryV2Contract}from'hooks/useContract';import{useCallWithGasPrice}from'hooks/useCallWithGasPrice';import useToast from'hooks/useToast';import ConnectWalletButton from'components/ConnectWalletButton';import{ToastDescriptionWithTx}from'components/Toast';import ApproveConfirmButtons,{ButtonArrangement}from'components/ApproveConfirmButtons';import NumTicketsToBuyButton from'./NumTicketsToBuyButton';import EditNumbersModal from'./EditNumbersModal';import{useTicketsReducer}from'./useTicketsReducer';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledModal=styled(Modal)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  min-width: 280px;\\n  max-width: 320px;\\n\"])));var ShortcutButtonsWrapper=styled(Flex)(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  justify-content: space-between;\\n  margin-top: 8px;\\n  margin-bottom: 24px;\\n  display: \",\";\\n\"])),function(_ref){var isVisible=_ref.isVisible;return isVisible?'flex':'none';});var BuyingStage;(function(BuyingStage){BuyingStage[\"BUY\"]=\"Buy\";BuyingStage[\"EDIT\"]=\"Edit\";})(BuyingStage||(BuyingStage={}));var BuyTicketsModal=function BuyTicketsModal(_ref2){var onDismiss=_ref2.onDismiss;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useTheme=useTheme(),theme=_useTheme.theme;var _useLottery=useLottery(),maxNumberTicketsPerBuyOrClaim=_useLottery.maxNumberTicketsPerBuyOrClaim,currentLotteryId=_useLottery.currentLotteryId,_useLottery$currentRo=_useLottery.currentRound,priceTicketInCake=_useLottery$currentRo.priceTicketInCake,discountDivisor=_useLottery$currentRo.discountDivisor,userCurrentTickets=_useLottery$currentRo.userTickets.tickets;var _useCallWithGasPrice=useCallWithGasPrice(),callWithGasPrice=_useCallWithGasPrice.callWithGasPrice;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),ticketsToBuy=_useState2[0],setTicketsToBuy=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),discountValue=_useState4[0],setDiscountValue=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),totalCost=_useState6[0],setTotalCost=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),ticketCostBeforeDiscount=_useState8[0],setTicketCostBeforeDiscount=_useState8[1];var _useState9=useState(BuyingStage.BUY),_useState10=_slicedToArray(_useState9,2),buyingStage=_useState10[0],setBuyingStage=_useState10[1];var _useState11=useState(BIG_ZERO),_useState12=_slicedToArray(_useState11,2),maxPossibleTicketPurchase=_useState12[0],setMaxPossibleTicketPurchase=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),maxTicketPurchaseExceeded=_useState14[0],setMaxTicketPurchaseExceeded=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),userNotEnoughCake=_useState16[0],setUserNotEnoughCake=_useState16[1];var lotteryContract=useLotteryV2Contract();var cakeContract=useCake();var _useToast=useToast(),toastSuccess=_useToast.toastSuccess;var _useTokenBalance=useTokenBalance(tokens.cake.address),userCake=_useTokenBalance.balance,fetchStatus=_useTokenBalance.fetchStatus;// balance from useTokenBalance causes rerenders in effects as a new BigNumber is instantiated on each render, hence memoising it using the stringified value below.\nvar stringifiedUserCake=userCake.toJSON();var memoisedUserCake=useMemo(function(){return new BigNumber(stringifiedUserCake);},[stringifiedUserCake]);var cakePriceBusd=usePriceCakeBusd();var dispatch=useAppDispatch();var hasFetchedBalance=fetchStatus===FetchStatus.SUCCESS;var userCakeDisplayBalance=getFullDisplayBalance(userCake,18,3);var TooltipComponent=function TooltipComponent(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{mb:\"16px\",children:t('Buying multiple tickets in a single transaction gives a discount. The discount increases in a linear way, up to the maximum of 100 tickets:')}),/*#__PURE__*/_jsx(Text,{children:t('2 tickets: 0.05%')}),/*#__PURE__*/_jsx(Text,{children:t('50 tickets: 2.45%')}),/*#__PURE__*/_jsx(Text,{children:t('100 tickets: 4.95%')})]});};var _useTooltip=useTooltip(/*#__PURE__*/_jsx(TooltipComponent,{}),{placement:'bottom-end',tooltipOffset:[20,10]}),targetRef=_useTooltip.targetRef,tooltip=_useTooltip.tooltip,tooltipVisible=_useTooltip.tooltipVisible;var limitNumberByMaxTicketsPerBuy=useCallback(function(number){return number.gt(maxNumberTicketsPerBuyOrClaim)?maxNumberTicketsPerBuyOrClaim:number;},[maxNumberTicketsPerBuyOrClaim]);var getTicketCostAfterDiscount=useCallback(function(numberTickets){var totalAfterDiscount=priceTicketInCake.times(numberTickets).times(discountDivisor.plus(1).minus(numberTickets)).div(discountDivisor);return totalAfterDiscount;},[discountDivisor,priceTicketInCake]);var getMaxTicketBuyWithDiscount=useCallback(function(numberTickets){var costAfterDiscount=getTicketCostAfterDiscount(numberTickets);var costBeforeDiscount=priceTicketInCake.times(numberTickets);var discountAmount=costBeforeDiscount.minus(costAfterDiscount);var ticketsBoughtWithDiscount=discountAmount.div(priceTicketInCake);var overallTicketBuy=numberTickets.plus(ticketsBoughtWithDiscount);return{overallTicketBuy:overallTicketBuy,ticketsBoughtWithDiscount:ticketsBoughtWithDiscount};},[getTicketCostAfterDiscount,priceTicketInCake]);var validateInput=useCallback(function(inputNumber){var limitedNumberTickets=limitNumberByMaxTicketsPerBuy(inputNumber);var cakeCostAfterDiscount=getTicketCostAfterDiscount(limitedNumberTickets);if(cakeCostAfterDiscount.gt(userCake)){setUserNotEnoughCake(true);}else if(limitedNumberTickets.eq(maxNumberTicketsPerBuyOrClaim)){setMaxTicketPurchaseExceeded(true);}else{setUserNotEnoughCake(false);setMaxTicketPurchaseExceeded(false);}},[limitNumberByMaxTicketsPerBuy,getTicketCostAfterDiscount,maxNumberTicketsPerBuyOrClaim,userCake]);useEffect(function(){var getMaxPossiblePurchase=function getMaxPossiblePurchase(){var maxBalancePurchase=memoisedUserCake.div(priceTicketInCake);var limitedMaxPurchase=limitNumberByMaxTicketsPerBuy(maxBalancePurchase);var maxPurchase;// If the users' max CAKE balance purchase is less than the contract limit - factor the discount logic into the max number of tickets they can purchase\nif(limitedMaxPurchase.lt(maxNumberTicketsPerBuyOrClaim)){// Get max tickets purchasable with the users' balance, as well as using the discount to buy tickets\nvar _getMaxTicketBuyWithD=getMaxTicketBuyWithDiscount(limitedMaxPurchase),maxPlusDiscountTickets=_getMaxTicketBuyWithD.overallTicketBuy;// Knowing how many tickets they can buy when counting the discount - plug that total in, and see how much that total will get discounted\nvar _getMaxTicketBuyWithD2=getMaxTicketBuyWithDiscount(maxPlusDiscountTickets),secondTicketDiscountBuy=_getMaxTicketBuyWithD2.ticketsBoughtWithDiscount;// Add the additional tickets that can be bought with the discount, to the original max purchase\nmaxPurchase=limitedMaxPurchase.plus(secondTicketDiscountBuy);}else{maxPurchase=limitedMaxPurchase;}if(hasFetchedBalance&&maxPurchase.lt(1)){setUserNotEnoughCake(true);}else{setUserNotEnoughCake(false);}setMaxPossibleTicketPurchase(maxPurchase);};getMaxPossiblePurchase();},[maxNumberTicketsPerBuyOrClaim,priceTicketInCake,memoisedUserCake,limitNumberByMaxTicketsPerBuy,getTicketCostAfterDiscount,getMaxTicketBuyWithDiscount,hasFetchedBalance]);useEffect(function(){var numberOfTicketsToBuy=new BigNumber(ticketsToBuy);var costAfterDiscount=getTicketCostAfterDiscount(numberOfTicketsToBuy);var costBeforeDiscount=priceTicketInCake.times(numberOfTicketsToBuy);var discountBeingApplied=costBeforeDiscount.minus(costAfterDiscount);setTicketCostBeforeDiscount(costBeforeDiscount.gt(0)?getFullDisplayBalance(costBeforeDiscount):'0');setTotalCost(costAfterDiscount.gt(0)?getFullDisplayBalance(costAfterDiscount):'0');setDiscountValue(discountBeingApplied.gt(0)?getFullDisplayBalance(discountBeingApplied,18,5):'0');},[ticketsToBuy,priceTicketInCake,discountDivisor,getTicketCostAfterDiscount]);var getNumTicketsByPercentage=function getNumTicketsByPercentage(percentage){var percentageOfMaxTickets=maxPossibleTicketPurchase.gt(0)?maxPossibleTicketPurchase.div(new BigNumber(100)).times(new BigNumber(percentage)):BIG_ZERO;return Math.floor(percentageOfMaxTickets.toNumber());};var tenPercentOfBalance=getNumTicketsByPercentage(10);var twentyFivePercentOfBalance=getNumTicketsByPercentage(25);var fiftyPercentOfBalance=getNumTicketsByPercentage(50);var oneHundredPercentOfBalance=getNumTicketsByPercentage(100);var handleInputChange=function handleInputChange(input){// Force input to integer\nvar inputAsInt=parseInt(input,10);var inputAsBN=new BigNumber(inputAsInt);var limitedNumberTickets=limitNumberByMaxTicketsPerBuy(inputAsBN);validateInput(inputAsBN);setTicketsToBuy(inputAsInt?limitedNumberTickets.toString():'');};var handleNumberButtonClick=function handleNumberButtonClick(number){setTicketsToBuy(number.toFixed());setUserNotEnoughCake(false);setMaxTicketPurchaseExceeded(false);};var _useTicketsReducer=useTicketsReducer(parseInt(ticketsToBuy,10),userCurrentTickets),_useTicketsReducer2=_slicedToArray(_useTicketsReducer,5),updateTicket=_useTicketsReducer2[0],randomize=_useTicketsReducer2[1],tickets=_useTicketsReducer2[2],allComplete=_useTicketsReducer2[3],getTicketsForPurchase=_useTicketsReducer2[4];var _useApproveConfirmTra=useApproveConfirmTransaction({onRequiresApproval:function(){var _onRequiresApproval=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,currentAllowance;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return cakeContract.allowance(account,lotteryContract.address);case 3:response=_context.sent;currentAllowance=ethersToBigNumber(response);return _context.abrupt(\"return\",currentAllowance.gt(0));case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",false);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));function onRequiresApproval(){return _onRequiresApproval.apply(this,arguments);}return onRequiresApproval;}(),onApprove:function onApprove(){return callWithGasPrice(cakeContract,'approve',[lotteryContract.address,ethers.constants.MaxUint256]);},onApproveSuccess:function(){var _onApproveSuccess=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref3){var receipt;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:receipt=_ref3.receipt;toastSuccess(t('Contract enabled - you can now purchase tickets'),/*#__PURE__*/_jsx(ToastDescriptionWithTx,{txHash:receipt.transactionHash}));case 2:case\"end\":return _context2.stop();}}},_callee2);}));function onApproveSuccess(_x){return _onApproveSuccess.apply(this,arguments);}return onApproveSuccess;}(),onConfirm:function onConfirm(){var ticketsForPurchase=getTicketsForPurchase();return callWithGasPrice(lotteryContract,'buyTickets',[currentLotteryId,ticketsForPurchase]);},onSuccess:function(){var _onSuccess=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref4){var receipt;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:receipt=_ref4.receipt;onDismiss();dispatch(fetchUserTicketsAndLotteries({account:account,currentLotteryId:currentLotteryId}));toastSuccess(t('Lottery tickets purchased!'),/*#__PURE__*/_jsx(ToastDescriptionWithTx,{txHash:receipt.transactionHash}));case 4:case\"end\":return _context3.stop();}}},_callee3);}));function onSuccess(_x2){return _onSuccess.apply(this,arguments);}return onSuccess;}()}),isApproving=_useApproveConfirmTra.isApproving,isApproved=_useApproveConfirmTra.isApproved,isConfirmed=_useApproveConfirmTra.isConfirmed,isConfirming=_useApproveConfirmTra.isConfirming,handleApprove=_useApproveConfirmTra.handleApprove,handleConfirm=_useApproveConfirmTra.handleConfirm;var getErrorMessage=function getErrorMessage(){if(userNotEnoughCake)return t('Insufficient CAKE balance');return t('The maximum number of tickets you can buy in one transaction is %maxTickets%',{maxTickets:maxNumberTicketsPerBuyOrClaim.toString()});};var percentageDiscount=function percentageDiscount(){var percentageAsBn=new BigNumber(discountValue).div(new BigNumber(ticketCostBeforeDiscount)).times(100);if(percentageAsBn.isNaN()||percentageAsBn.eq(0)){return 0;}return percentageAsBn.toNumber().toFixed(2);};var disableBuying=!isApproved||isConfirmed||userNotEnoughCake||!ticketsToBuy||new BigNumber(ticketsToBuy).lte(0)||getTicketsForPurchase().length!==parseInt(ticketsToBuy,10);if(buyingStage===BuyingStage.EDIT){return/*#__PURE__*/_jsx(EditNumbersModal,{totalCost:totalCost,updateTicket:updateTicket,randomize:randomize,tickets:tickets,allComplete:allComplete,onConfirm:handleConfirm,isConfirming:isConfirming,onDismiss:function onDismiss(){return setBuyingStage(BuyingStage.BUY);}});}return/*#__PURE__*/_jsxs(StyledModal,{title:t('Buy Tickets'),onDismiss:onDismiss,headerBackground:theme.colors.gradients.cardHeader,children:[tooltipVisible&&tooltip,/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",mb:\"8px\",children:[/*#__PURE__*/_jsxs(Text,{color:\"textSubtle\",children:[t('Buy'),\":\"]}),/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",minWidth:\"70px\",children:[/*#__PURE__*/_jsx(Text,{mr:\"4px\",bold:true,children:t('Tickets')}),/*#__PURE__*/_jsx(Ticket,{})]})]}),/*#__PURE__*/_jsx(BalanceInput,{isWarning:account&&(userNotEnoughCake||maxTicketPurchaseExceeded),placeholder:\"0\",value:ticketsToBuy,onUserInput:handleInputChange,currencyValue:cakePriceBusd.gt(0)&&\"~\".concat(ticketsToBuy?getFullDisplayBalance(priceTicketInCake.times(new BigNumber(ticketsToBuy))):'0.00',\" CAKE\")}),/*#__PURE__*/_jsx(Flex,{alignItems:\"center\",justifyContent:\"flex-end\",mt:\"4px\",mb:\"12px\",children:/*#__PURE__*/_jsxs(Flex,{justifyContent:\"flex-end\",flexDirection:\"column\",children:[account&&(userNotEnoughCake||maxTicketPurchaseExceeded)&&/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"failure\",children:getErrorMessage()}),account&&/*#__PURE__*/_jsxs(Flex,{justifyContent:\"flex-end\",children:[/*#__PURE__*/_jsxs(Text,{fontSize:\"12px\",color:\"textSubtle\",mr:\"4px\",children:[\"CAKE \",t('Balance'),\":\"]}),hasFetchedBalance?/*#__PURE__*/_jsx(Text,{fontSize:\"12px\",color:\"textSubtle\",children:userCakeDisplayBalance}):/*#__PURE__*/_jsx(Skeleton,{width:50,height:12})]})]})}),account&&!hasFetchedBalance?/*#__PURE__*/_jsx(Skeleton,{width:\"100%\",height:20,mt:\"8px\",mb:\"24px\"}):/*#__PURE__*/_jsxs(ShortcutButtonsWrapper,{isVisible:account&&hasFetchedBalance&&oneHundredPercentOfBalance>=1,children:[tenPercentOfBalance>=1&&/*#__PURE__*/_jsx(NumTicketsToBuyButton,{onClick:function onClick(){return handleNumberButtonClick(tenPercentOfBalance);},children:hasFetchedBalance?tenPercentOfBalance:\"\"}),twentyFivePercentOfBalance>=1&&/*#__PURE__*/_jsx(NumTicketsToBuyButton,{onClick:function onClick(){return handleNumberButtonClick(twentyFivePercentOfBalance);},children:hasFetchedBalance?twentyFivePercentOfBalance:\"\"}),fiftyPercentOfBalance>=1&&/*#__PURE__*/_jsx(NumTicketsToBuyButton,{onClick:function onClick(){return handleNumberButtonClick(fiftyPercentOfBalance);},children:hasFetchedBalance?fiftyPercentOfBalance:\"\"}),oneHundredPercentOfBalance>=1&&/*#__PURE__*/_jsx(NumTicketsToBuyButton,{onClick:function onClick(){return handleNumberButtonClick(oneHundredPercentOfBalance);},children:\"MAX\"})]}),/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",children:[/*#__PURE__*/_jsxs(Flex,{mb:\"8px\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Text,{color:\"textSubtle\",fontSize:\"14px\",children:[t('Cost'),\" (CAKE)\"]}),/*#__PURE__*/_jsxs(Text,{color:\"textSubtle\",fontSize:\"14px\",children:[priceTicketInCake&&getFullDisplayBalance(priceTicketInCake.times(ticketsToBuy||0)),\" CAKE\"]})]}),/*#__PURE__*/_jsxs(Flex,{mb:\"8px\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Flex,{children:[/*#__PURE__*/_jsxs(Text,{display:\"inline\",bold:true,fontSize:\"14px\",mr:\"4px\",children:[discountValue&&totalCost?percentageDiscount():0,\"%\"]}),/*#__PURE__*/_jsx(Text,{display:\"inline\",color:\"textSubtle\",fontSize:\"14px\",children:t('Bulk discount')}),/*#__PURE__*/_jsx(Flex,{alignItems:\"center\",justifyContent:\"center\",ref:targetRef,children:/*#__PURE__*/_jsx(HelpIcon,{ml:\"4px\",width:\"14px\",height:\"14px\",color:\"textSubtle\"})})]}),/*#__PURE__*/_jsxs(Text,{fontSize:\"14px\",color:\"textSubtle\",children:[\"~\",discountValue,\" CAKE\"]})]}),/*#__PURE__*/_jsxs(Flex,{borderTop:\"1px solid \".concat(theme.colors.cardBorder),pt:\"8px\",mb:\"24px\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Text,{color:\"textSubtle\",fontSize:\"16px\",children:t('You pay')}),/*#__PURE__*/_jsxs(Text,{fontSize:\"16px\",bold:true,children:[\"~\",totalCost,\" CAKE\"]})]}),account?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ApproveConfirmButtons,{isApproveDisabled:isApproved,isApproving:isApproving,isConfirmDisabled:disableBuying,isConfirming:isConfirming,onApprove:handleApprove,onConfirm:handleConfirm,buttonArrangement:ButtonArrangement.SEQUENTIAL,confirmLabel:t('Buy Instantly'),confirmId:\"lotteryBuyInstant\"}),isApproved&&/*#__PURE__*/_jsx(Button,{variant:\"secondary\",mt:\"8px\",endIcon:/*#__PURE__*/_jsx(ArrowForwardIcon,{ml:\"2px\",color:disableBuying||isConfirming?'disabled':'primary',height:\"24px\",width:\"24px\"}),disabled:disableBuying||isConfirming,onClick:function onClick(){setBuyingStage(BuyingStage.EDIT);},children:t('View/Edit Numbers')})]}):/*#__PURE__*/_jsx(ConnectWalletButton,{}),/*#__PURE__*/_jsx(Text,{mt:\"24px\",fontSize:\"12px\",color:\"textSubtle\",children:t('\"Buy Instantly\" chooses random numbers, with no duplicates among your tickets. Prices are set before each round starts, equal to $5 at that time. Purchases are final.')})]})]});};export default BuyTicketsModal;","map":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Lottery/components/BuyTicketsModal/BuyTicketsModal.tsx"],"names":["React","useEffect","useState","useMemo","useCallback","styled","BigNumber","ethers","Modal","Text","Flex","HelpIcon","BalanceInput","Ticket","useTooltip","Skeleton","Button","ArrowForwardIcon","useTranslation","useWeb3React","tokens","getFullDisplayBalance","BIG_ZERO","ethersToBigNumber","useAppDispatch","usePriceCakeBusd","useLottery","fetchUserTicketsAndLotteries","useTheme","useTokenBalance","FetchStatus","useApproveConfirmTransaction","useCake","useLotteryV2Contract","useCallWithGasPrice","useToast","ConnectWalletButton","ToastDescriptionWithTx","ApproveConfirmButtons","ButtonArrangement","NumTicketsToBuyButton","EditNumbersModal","useTicketsReducer","StyledModal","ShortcutButtonsWrapper","isVisible","BuyingStage","BuyTicketsModal","onDismiss","account","t","theme","maxNumberTicketsPerBuyOrClaim","currentLotteryId","currentRound","priceTicketInCake","discountDivisor","userCurrentTickets","userTickets","tickets","callWithGasPrice","ticketsToBuy","setTicketsToBuy","discountValue","setDiscountValue","totalCost","setTotalCost","ticketCostBeforeDiscount","setTicketCostBeforeDiscount","BUY","buyingStage","setBuyingStage","maxPossibleTicketPurchase","setMaxPossibleTicketPurchase","maxTicketPurchaseExceeded","setMaxTicketPurchaseExceeded","userNotEnoughCake","setUserNotEnoughCake","lotteryContract","cakeContract","toastSuccess","cake","address","userCake","balance","fetchStatus","stringifiedUserCake","toJSON","memoisedUserCake","cakePriceBusd","dispatch","hasFetchedBalance","SUCCESS","userCakeDisplayBalance","TooltipComponent","placement","tooltipOffset","targetRef","tooltip","tooltipVisible","limitNumberByMaxTicketsPerBuy","number","gt","getTicketCostAfterDiscount","numberTickets","totalAfterDiscount","times","plus","minus","div","getMaxTicketBuyWithDiscount","costAfterDiscount","costBeforeDiscount","discountAmount","ticketsBoughtWithDiscount","overallTicketBuy","validateInput","inputNumber","limitedNumberTickets","cakeCostAfterDiscount","eq","getMaxPossiblePurchase","maxBalancePurchase","limitedMaxPurchase","maxPurchase","lt","maxPlusDiscountTickets","secondTicketDiscountBuy","numberOfTicketsToBuy","discountBeingApplied","getNumTicketsByPercentage","percentage","percentageOfMaxTickets","Math","floor","toNumber","tenPercentOfBalance","twentyFivePercentOfBalance","fiftyPercentOfBalance","oneHundredPercentOfBalance","handleInputChange","input","inputAsInt","parseInt","inputAsBN","toString","handleNumberButtonClick","toFixed","updateTicket","randomize","allComplete","getTicketsForPurchase","onRequiresApproval","allowance","response","currentAllowance","onApprove","constants","MaxUint256","onApproveSuccess","receipt","transactionHash","onConfirm","ticketsForPurchase","onSuccess","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","getErrorMessage","maxTickets","percentageDiscount","percentageAsBn","isNaN","disableBuying","lte","length","EDIT","colors","gradients","cardHeader","cardBorder","SEQUENTIAL"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo, useCallback } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport {\n  Modal,\n  Text,\n  Flex,\n  HelpIcon,\n  BalanceInput,\n  Ticket,\n  useTooltip,\n  Skeleton,\n  Button,\n  ArrowForwardIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport tokens from 'config/constants/tokens'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { BIG_ZERO, ethersToBigNumber } from 'utils/bigNumber'\nimport { useAppDispatch } from 'state'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useLottery } from 'state/lottery/hooks'\nimport { fetchUserTicketsAndLotteries } from 'state/lottery'\nimport useTheme from 'hooks/useTheme'\nimport useTokenBalance, { FetchStatus } from 'hooks/useTokenBalance'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useCake, useLotteryV2Contract } from 'hooks/useContract'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport useToast from 'hooks/useToast'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport ApproveConfirmButtons, { ButtonArrangement } from 'components/ApproveConfirmButtons'\nimport NumTicketsToBuyButton from './NumTicketsToBuyButton'\nimport EditNumbersModal from './EditNumbersModal'\nimport { useTicketsReducer } from './useTicketsReducer'\n\nconst StyledModal = styled(Modal)`\n  min-width: 280px;\n  max-width: 320px;\n`\n\nconst ShortcutButtonsWrapper = styled(Flex)<{ isVisible: boolean }>`\n  justify-content: space-between;\n  margin-top: 8px;\n  margin-bottom: 24px;\n  display: ${({ isVisible }) => (isVisible ? 'flex' : 'none')};\n`\n\ninterface BuyTicketsModalProps {\n  onDismiss?: () => void\n}\n\nenum BuyingStage {\n  BUY = 'Buy',\n  EDIT = 'Edit',\n}\n\nconst BuyTicketsModal: React.FC<BuyTicketsModalProps> = ({ onDismiss }) => {\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const {\n    maxNumberTicketsPerBuyOrClaim,\n    currentLotteryId,\n    currentRound: {\n      priceTicketInCake,\n      discountDivisor,\n      userTickets: { tickets: userCurrentTickets },\n    },\n  } = useLottery()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const [ticketsToBuy, setTicketsToBuy] = useState('')\n  const [discountValue, setDiscountValue] = useState('')\n  const [totalCost, setTotalCost] = useState('')\n  const [ticketCostBeforeDiscount, setTicketCostBeforeDiscount] = useState('')\n  const [buyingStage, setBuyingStage] = useState<BuyingStage>(BuyingStage.BUY)\n  const [maxPossibleTicketPurchase, setMaxPossibleTicketPurchase] = useState(BIG_ZERO)\n  const [maxTicketPurchaseExceeded, setMaxTicketPurchaseExceeded] = useState(false)\n  const [userNotEnoughCake, setUserNotEnoughCake] = useState(false)\n  const lotteryContract = useLotteryV2Contract()\n  const cakeContract = useCake()\n  const { toastSuccess } = useToast()\n  const { balance: userCake, fetchStatus } = useTokenBalance(tokens.cake.address)\n  // balance from useTokenBalance causes rerenders in effects as a new BigNumber is instantiated on each render, hence memoising it using the stringified value below.\n  const stringifiedUserCake = userCake.toJSON()\n  const memoisedUserCake = useMemo(() => new BigNumber(stringifiedUserCake), [stringifiedUserCake])\n\n  const cakePriceBusd = usePriceCakeBusd()\n  const dispatch = useAppDispatch()\n  const hasFetchedBalance = fetchStatus === FetchStatus.SUCCESS\n  const userCakeDisplayBalance = getFullDisplayBalance(userCake, 18, 3)\n\n  const TooltipComponent = () => (\n    <>\n      <Text mb=\"16px\">\n        {t(\n          'Buying multiple tickets in a single transaction gives a discount. The discount increases in a linear way, up to the maximum of 100 tickets:',\n        )}\n      </Text>\n      <Text>{t('2 tickets: 0.05%')}</Text>\n      <Text>{t('50 tickets: 2.45%')}</Text>\n      <Text>{t('100 tickets: 4.95%')}</Text>\n    </>\n  )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  const limitNumberByMaxTicketsPerBuy = useCallback(\n    (number: BigNumber) => {\n      return number.gt(maxNumberTicketsPerBuyOrClaim) ? maxNumberTicketsPerBuyOrClaim : number\n    },\n    [maxNumberTicketsPerBuyOrClaim],\n  )\n\n  const getTicketCostAfterDiscount = useCallback(\n    (numberTickets: BigNumber) => {\n      const totalAfterDiscount = priceTicketInCake\n        .times(numberTickets)\n        .times(discountDivisor.plus(1).minus(numberTickets))\n        .div(discountDivisor)\n      return totalAfterDiscount\n    },\n    [discountDivisor, priceTicketInCake],\n  )\n\n  const getMaxTicketBuyWithDiscount = useCallback(\n    (numberTickets: BigNumber) => {\n      const costAfterDiscount = getTicketCostAfterDiscount(numberTickets)\n      const costBeforeDiscount = priceTicketInCake.times(numberTickets)\n      const discountAmount = costBeforeDiscount.minus(costAfterDiscount)\n      const ticketsBoughtWithDiscount = discountAmount.div(priceTicketInCake)\n      const overallTicketBuy = numberTickets.plus(ticketsBoughtWithDiscount)\n      return { overallTicketBuy, ticketsBoughtWithDiscount }\n    },\n    [getTicketCostAfterDiscount, priceTicketInCake],\n  )\n\n  const validateInput = useCallback(\n    (inputNumber: BigNumber) => {\n      const limitedNumberTickets = limitNumberByMaxTicketsPerBuy(inputNumber)\n      const cakeCostAfterDiscount = getTicketCostAfterDiscount(limitedNumberTickets)\n\n      if (cakeCostAfterDiscount.gt(userCake)) {\n        setUserNotEnoughCake(true)\n      } else if (limitedNumberTickets.eq(maxNumberTicketsPerBuyOrClaim)) {\n        setMaxTicketPurchaseExceeded(true)\n      } else {\n        setUserNotEnoughCake(false)\n        setMaxTicketPurchaseExceeded(false)\n      }\n    },\n    [limitNumberByMaxTicketsPerBuy, getTicketCostAfterDiscount, maxNumberTicketsPerBuyOrClaim, userCake],\n  )\n\n  useEffect(() => {\n    const getMaxPossiblePurchase = () => {\n      const maxBalancePurchase = memoisedUserCake.div(priceTicketInCake)\n      const limitedMaxPurchase = limitNumberByMaxTicketsPerBuy(maxBalancePurchase)\n      let maxPurchase\n\n      // If the users' max CAKE balance purchase is less than the contract limit - factor the discount logic into the max number of tickets they can purchase\n      if (limitedMaxPurchase.lt(maxNumberTicketsPerBuyOrClaim)) {\n        // Get max tickets purchasable with the users' balance, as well as using the discount to buy tickets\n        const { overallTicketBuy: maxPlusDiscountTickets } = getMaxTicketBuyWithDiscount(limitedMaxPurchase)\n\n        // Knowing how many tickets they can buy when counting the discount - plug that total in, and see how much that total will get discounted\n        const { ticketsBoughtWithDiscount: secondTicketDiscountBuy } =\n          getMaxTicketBuyWithDiscount(maxPlusDiscountTickets)\n\n        // Add the additional tickets that can be bought with the discount, to the original max purchase\n        maxPurchase = limitedMaxPurchase.plus(secondTicketDiscountBuy)\n      } else {\n        maxPurchase = limitedMaxPurchase\n      }\n\n      if (hasFetchedBalance && maxPurchase.lt(1)) {\n        setUserNotEnoughCake(true)\n      } else {\n        setUserNotEnoughCake(false)\n      }\n\n      setMaxPossibleTicketPurchase(maxPurchase)\n    }\n    getMaxPossiblePurchase()\n  }, [\n    maxNumberTicketsPerBuyOrClaim,\n    priceTicketInCake,\n    memoisedUserCake,\n    limitNumberByMaxTicketsPerBuy,\n    getTicketCostAfterDiscount,\n    getMaxTicketBuyWithDiscount,\n    hasFetchedBalance,\n  ])\n\n  useEffect(() => {\n    const numberOfTicketsToBuy = new BigNumber(ticketsToBuy)\n    const costAfterDiscount = getTicketCostAfterDiscount(numberOfTicketsToBuy)\n    const costBeforeDiscount = priceTicketInCake.times(numberOfTicketsToBuy)\n    const discountBeingApplied = costBeforeDiscount.minus(costAfterDiscount)\n    setTicketCostBeforeDiscount(costBeforeDiscount.gt(0) ? getFullDisplayBalance(costBeforeDiscount) : '0')\n    setTotalCost(costAfterDiscount.gt(0) ? getFullDisplayBalance(costAfterDiscount) : '0')\n    setDiscountValue(discountBeingApplied.gt(0) ? getFullDisplayBalance(discountBeingApplied, 18, 5) : '0')\n  }, [ticketsToBuy, priceTicketInCake, discountDivisor, getTicketCostAfterDiscount])\n\n  const getNumTicketsByPercentage = (percentage: number): number => {\n    const percentageOfMaxTickets = maxPossibleTicketPurchase.gt(0)\n      ? maxPossibleTicketPurchase.div(new BigNumber(100)).times(new BigNumber(percentage))\n      : BIG_ZERO\n    return Math.floor(percentageOfMaxTickets.toNumber())\n  }\n\n  const tenPercentOfBalance = getNumTicketsByPercentage(10)\n  const twentyFivePercentOfBalance = getNumTicketsByPercentage(25)\n  const fiftyPercentOfBalance = getNumTicketsByPercentage(50)\n  const oneHundredPercentOfBalance = getNumTicketsByPercentage(100)\n\n  const handleInputChange = (input: string) => {\n    // Force input to integer\n    const inputAsInt = parseInt(input, 10)\n    const inputAsBN = new BigNumber(inputAsInt)\n    const limitedNumberTickets = limitNumberByMaxTicketsPerBuy(inputAsBN)\n    validateInput(inputAsBN)\n    setTicketsToBuy(inputAsInt ? limitedNumberTickets.toString() : '')\n  }\n\n  const handleNumberButtonClick = (number: number) => {\n    setTicketsToBuy(number.toFixed())\n    setUserNotEnoughCake(false)\n    setMaxTicketPurchaseExceeded(false)\n  }\n\n  const [updateTicket, randomize, tickets, allComplete, getTicketsForPurchase] = useTicketsReducer(\n    parseInt(ticketsToBuy, 10),\n    userCurrentTickets,\n  )\n\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onRequiresApproval: async () => {\n        try {\n          const response = await cakeContract.allowance(account, lotteryContract.address)\n          const currentAllowance = ethersToBigNumber(response)\n          return currentAllowance.gt(0)\n        } catch (error) {\n          return false\n        }\n      },\n      onApprove: () => {\n        return callWithGasPrice(cakeContract, 'approve', [lotteryContract.address, ethers.constants.MaxUint256])\n      },\n      onApproveSuccess: async ({ receipt }) => {\n        toastSuccess(\n          t('Contract enabled - you can now purchase tickets'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash} />,\n        )\n      },\n      onConfirm: () => {\n        const ticketsForPurchase = getTicketsForPurchase()\n        return callWithGasPrice(lotteryContract, 'buyTickets', [currentLotteryId, ticketsForPurchase])\n      },\n      onSuccess: async ({ receipt }) => {\n        onDismiss()\n        dispatch(fetchUserTicketsAndLotteries({ account, currentLotteryId }))\n        toastSuccess(t('Lottery tickets purchased!'), <ToastDescriptionWithTx txHash={receipt.transactionHash} />)\n      },\n    })\n\n  const getErrorMessage = () => {\n    if (userNotEnoughCake) return t('Insufficient CAKE balance')\n    return t('The maximum number of tickets you can buy in one transaction is %maxTickets%', {\n      maxTickets: maxNumberTicketsPerBuyOrClaim.toString(),\n    })\n  }\n\n  const percentageDiscount = () => {\n    const percentageAsBn = new BigNumber(discountValue).div(new BigNumber(ticketCostBeforeDiscount)).times(100)\n    if (percentageAsBn.isNaN() || percentageAsBn.eq(0)) {\n      return 0\n    }\n    return percentageAsBn.toNumber().toFixed(2)\n  }\n\n  const disableBuying =\n    !isApproved ||\n    isConfirmed ||\n    userNotEnoughCake ||\n    !ticketsToBuy ||\n    new BigNumber(ticketsToBuy).lte(0) ||\n    getTicketsForPurchase().length !== parseInt(ticketsToBuy, 10)\n\n  if (buyingStage === BuyingStage.EDIT) {\n    return (\n      <EditNumbersModal\n        totalCost={totalCost}\n        updateTicket={updateTicket}\n        randomize={randomize}\n        tickets={tickets}\n        allComplete={allComplete}\n        onConfirm={handleConfirm}\n        isConfirming={isConfirming}\n        onDismiss={() => setBuyingStage(BuyingStage.BUY)}\n      />\n    )\n  }\n\n  return (\n    <StyledModal title={t('Buy Tickets')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text color=\"textSubtle\">{t('Buy')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Text mr=\"4px\" bold>\n            {t('Tickets')}\n          </Text>\n          <Ticket />\n        </Flex>\n      </Flex>\n      <BalanceInput\n        isWarning={account && (userNotEnoughCake || maxTicketPurchaseExceeded)}\n        placeholder=\"0\"\n        value={ticketsToBuy}\n        onUserInput={handleInputChange}\n        currencyValue={\n          cakePriceBusd.gt(0) &&\n          `~${ticketsToBuy ? getFullDisplayBalance(priceTicketInCake.times(new BigNumber(ticketsToBuy))) : '0.00'} CAKE`\n        }\n      />\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\" mt=\"4px\" mb=\"12px\">\n        <Flex justifyContent=\"flex-end\" flexDirection=\"column\">\n          {account && (userNotEnoughCake || maxTicketPurchaseExceeded) && (\n            <Text fontSize=\"12px\" color=\"failure\">\n              {getErrorMessage()}\n            </Text>\n          )}\n          {account && (\n            <Flex justifyContent=\"flex-end\">\n              <Text fontSize=\"12px\" color=\"textSubtle\" mr=\"4px\">\n                CAKE {t('Balance')}:\n              </Text>\n              {hasFetchedBalance ? (\n                <Text fontSize=\"12px\" color=\"textSubtle\">\n                  {userCakeDisplayBalance}\n                </Text>\n              ) : (\n                <Skeleton width={50} height={12} />\n              )}\n            </Flex>\n          )}\n        </Flex>\n      </Flex>\n\n      {account && !hasFetchedBalance ? (\n        <Skeleton width=\"100%\" height={20} mt=\"8px\" mb=\"24px\" />\n      ) : (\n        <ShortcutButtonsWrapper isVisible={account && hasFetchedBalance && oneHundredPercentOfBalance >= 1}>\n          {tenPercentOfBalance >= 1 && (\n            <NumTicketsToBuyButton onClick={() => handleNumberButtonClick(tenPercentOfBalance)}>\n              {hasFetchedBalance ? tenPercentOfBalance : ``}\n            </NumTicketsToBuyButton>\n          )}\n          {twentyFivePercentOfBalance >= 1 && (\n            <NumTicketsToBuyButton onClick={() => handleNumberButtonClick(twentyFivePercentOfBalance)}>\n              {hasFetchedBalance ? twentyFivePercentOfBalance : ``}\n            </NumTicketsToBuyButton>\n          )}\n          {fiftyPercentOfBalance >= 1 && (\n            <NumTicketsToBuyButton onClick={() => handleNumberButtonClick(fiftyPercentOfBalance)}>\n              {hasFetchedBalance ? fiftyPercentOfBalance : ``}\n            </NumTicketsToBuyButton>\n          )}\n          {oneHundredPercentOfBalance >= 1 && (\n            <NumTicketsToBuyButton onClick={() => handleNumberButtonClick(oneHundredPercentOfBalance)}>\n              MAX\n            </NumTicketsToBuyButton>\n          )}\n        </ShortcutButtonsWrapper>\n      )}\n      <Flex flexDirection=\"column\">\n        <Flex mb=\"8px\" justifyContent=\"space-between\">\n          <Text color=\"textSubtle\" fontSize=\"14px\">\n            {t('Cost')} (CAKE)\n          </Text>\n          <Text color=\"textSubtle\" fontSize=\"14px\">\n            {priceTicketInCake && getFullDisplayBalance(priceTicketInCake.times(ticketsToBuy || 0))} CAKE\n          </Text>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent=\"space-between\">\n          <Flex>\n            <Text display=\"inline\" bold fontSize=\"14px\" mr=\"4px\">\n              {discountValue && totalCost ? percentageDiscount() : 0}%\n            </Text>\n            <Text display=\"inline\" color=\"textSubtle\" fontSize=\"14px\">\n              {t('Bulk discount')}\n            </Text>\n            <Flex alignItems=\"center\" justifyContent=\"center\" ref={targetRef}>\n              <HelpIcon ml=\"4px\" width=\"14px\" height=\"14px\" color=\"textSubtle\" />\n            </Flex>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            ~{discountValue} CAKE\n          </Text>\n        </Flex>\n        <Flex borderTop={`1px solid ${theme.colors.cardBorder}`} pt=\"8px\" mb=\"24px\" justifyContent=\"space-between\">\n          <Text color=\"textSubtle\" fontSize=\"16px\">\n            {t('You pay')}\n          </Text>\n          <Text fontSize=\"16px\" bold>\n            ~{totalCost} CAKE\n          </Text>\n        </Flex>\n\n        {account ? (\n          <>\n            <ApproveConfirmButtons\n              isApproveDisabled={isApproved}\n              isApproving={isApproving}\n              isConfirmDisabled={disableBuying}\n              isConfirming={isConfirming}\n              onApprove={handleApprove}\n              onConfirm={handleConfirm}\n              buttonArrangement={ButtonArrangement.SEQUENTIAL}\n              confirmLabel={t('Buy Instantly')}\n              confirmId=\"lotteryBuyInstant\"\n            />\n            {isApproved && (\n              <Button\n                variant=\"secondary\"\n                mt=\"8px\"\n                endIcon={\n                  <ArrowForwardIcon\n                    ml=\"2px\"\n                    color={disableBuying || isConfirming ? 'disabled' : 'primary'}\n                    height=\"24px\"\n                    width=\"24px\"\n                  />\n                }\n                disabled={disableBuying || isConfirming}\n                onClick={() => {\n                  setBuyingStage(BuyingStage.EDIT)\n                }}\n              >\n                {t('View/Edit Numbers')}\n              </Button>\n            )}\n          </>\n        ) : (\n          <ConnectWalletButton />\n        )}\n\n        <Text mt=\"24px\" fontSize=\"12px\" color=\"textSubtle\">\n          {t(\n            '\"Buy Instantly\" chooses random numbers, with no duplicates among your tickets. Prices are set before each round starts, equal to $5 at that time. Purchases are final.',\n          )}\n        </Text>\n      </Flex>\n    </StyledModal>\n  )\n}\n\nexport default BuyTicketsModal\n"]},"metadata":{},"sourceType":"module"}