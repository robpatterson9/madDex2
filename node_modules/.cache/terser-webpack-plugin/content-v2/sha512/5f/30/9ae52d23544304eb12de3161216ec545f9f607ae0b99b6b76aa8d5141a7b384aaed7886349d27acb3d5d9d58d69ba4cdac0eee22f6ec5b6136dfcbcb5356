{"code":"(this[\"webpackJsonppancake-frontend\"]=this[\"webpackJsonppancake-frontend\"]||[]).push([[34],{1540:function(t,n,e){\"use strict\";e.r(n);var c=e(0),r=e(75),i=e(44),a=e(789),o=e(373),u=e(93),b=e(129),f=e(1),s=Object(c.lazy)((function(){return Promise.all([e.e(0),e.e(15)]).then(e.bind(null,1513))})),l=Object(c.lazy)((function(){return Promise.all([e.e(0),e.e(2),e.e(13)]).then(e.bind(null,1511))})),j=Object(c.lazy)((function(){return e.e(36).then(e.bind(null,1518))})),d=Object(c.lazy)((function(){return e.e(37).then(e.bind(null,1507))}));n.default=function(){var t=Object(i.c)().account,n=Object(a.f)();return Object(a.b)(),n!==u.b.INITIALIZED?Object(f.jsx)(o.a,{}):Object(f.jsxs)(f.Fragment,{children:[Object(f.jsx)(r.b,{exact:!0,path:b.b,children:Object(f.jsx)(s,{})}),Object(f.jsxs)(r.b,{exact:!0,path:\"\".concat(b.b,\"/collections\"),children:[Object(f.jsx)(r.a,{to:\"\".concat(b.b,\"/collections/\").concat(b.c)}),Object(f.jsx)(d,{})]}),Object(f.jsx)(r.b,{path:\"\".concat(b.b,\"/collections/:collectionAddress\"),children:Object(f.jsx)(j,{})}),Object(f.jsx)(r.b,{path:\"\".concat(b.b,\"/profile/:accountAddress?\"),children:Object(f.jsx)(l,{})}),Object(f.jsx)(r.b,{exact:!0,path:\"\".concat(b.b,\"/profile\"),children:Object(f.jsx)(r.a,{to:\"\".concat(b.b,\"/profile/\").concat((null===t||void 0===t?void 0:t.toLowerCase())||\"\")})})]})}},789:function(t,n,e){\"use strict\";e.d(n,\"b\",(function(){return b})),e.d(n,\"a\",(function(){return f})),e.d(n,\"e\",(function(){return s})),e.d(n,\"d\",(function(){return l})),e.d(n,\"g\",(function(){return j})),e.d(n,\"c\",(function(){return d})),e.d(n,\"f\",(function(){return O})),e.d(n,\"h\",(function(){return h}));var c=e(0),r=e(28),i=e(71),a=e(129),o=e(38),u=(e(123),e(368)),b=function(){var t=Object(i.b)();Object(c.useEffect)((function(){t(Object(u.d)()),t(Object(u.f)(a.c))}),[t])},f=function(t){var n=Object(i.b)(),e=Object(r.c)((function(t){return t.nftMarket.data.isFetchingMoreNfts})),a=Object(r.c)((function(t){return t.nftMarket.data.latestFetchAt})),o=d(t),b=o?o.map((function(t){return t.tokenId})):[],f=o.length>0?o[0]:null,s=Object(c.useMemo)((function(){return f?{name:f.name,description:f.description,collection:{name:f.collectionName},image:f.image}:null}),[f]);return{isFetchingMoreNfts:e,latestFetchAt:a,fetchMorePancakeBunnies:function(e){n(Object(u.e)({bunnyId:t,existingTokenIds:b,existingMetadata:s,orderDirection:e}))}}},s=function(){return Object(r.c)((function(t){return t.nftMarket.data.collections}))},l=function(t){var n=Object(o.i)(t)||\"\";return s()[n]},j=function(t){var n=Object(o.i)(t)||\"\";return Object(r.c)((function(t){return t.nftMarket.data.nfts[n]}))},d=function(t){var n=Object(r.c)((function(t){return t.nftMarket.data.nfts[a.c]}));return n?n.filter((function(n){return n.attributes[0].value===t&&n.marketData.isTradable})):[]},O=function(){return Object(r.c)((function(t){return t.nftMarket.initializationState}))},h=function(){return Object(r.c)((function(t){return t.nftMarket.data.user}))}}}]);","name":"static/js/34.6add7566.chunk.js","map":{"version":3,"sources":["static/js/34.6add7566.chunk.js"],"names":["this","push","module","__webpack_exports__","__webpack_require__","r","react__WEBPACK_IMPORTED_MODULE_0__","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_web3_react_core__WEBPACK_IMPORTED_MODULE_2__","state_nftMarket_hooks__WEBPACK_IMPORTED_MODULE_3__","components_Loader_PageLoader__WEBPACK_IMPORTED_MODULE_4__","state_nftMarket_types__WEBPACK_IMPORTED_MODULE_5__","_constants__WEBPACK_IMPORTED_MODULE_6__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__","Home","Object","Promise","all","e","then","bind","NftProfile","Collection","Collections","account","initializationState","INITIALIZED","children","exact","path","concat","to","toLowerCase","d","useFetchCollections","useFetchByBunnyId","useGetCollections","useGetCollection","useNftsFromCollection","useGetAllBunniesByBunnyId","useGetNFTInitializationState","useUserNfts","react_redux__WEBPACK_IMPORTED_MODULE_1__","state__WEBPACK_IMPORTED_MODULE_2__","views_Nft_market_constants__WEBPACK_IMPORTED_MODULE_3__","utils__WEBPACK_IMPORTED_MODULE_4__","_reducer__WEBPACK_IMPORTED_MODULE_6__","dispatch","bunnyId","isFetchingMoreNfts","state","nftMarket","data","latestFetchAt","existingBunniesInState","existingTokenIds","map","nft","tokenId","firstBunny","length","existingMetadata","name","description","collection","collectionName","image","fetchMorePancakeBunnies","orderDirection","collections","collectionAddress","checksummedCollectionAddress","nfts","filter","attributes","value","marketData","isTradable","user"],"mappings":"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"},"input":"(this[\"webpackJsonppancake-frontend\"] = this[\"webpackJsonppancake-frontend\"] || []).push([[34],{\n\n/***/ 1540:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(75);\n/* harmony import */ var _web3_react_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(44);\n/* harmony import */ var state_nftMarket_hooks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(789);\n/* harmony import */ var components_Loader_PageLoader__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(373);\n/* harmony import */ var state_nftMarket_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(93);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(129);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(1);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__);\nvar Home=/*#__PURE__*/Object(react__WEBPACK_IMPORTED_MODULE_0__[\"lazy\"])(function(){return Promise.all(/* import() */[__webpack_require__.e(0), __webpack_require__.e(15)]).then(__webpack_require__.bind(null, 1513));});var NftProfile=/*#__PURE__*/Object(react__WEBPACK_IMPORTED_MODULE_0__[\"lazy\"])(function(){return Promise.all(/* import() */[__webpack_require__.e(0), __webpack_require__.e(2), __webpack_require__.e(13)]).then(__webpack_require__.bind(null, 1511));});var Collection=/*#__PURE__*/Object(react__WEBPACK_IMPORTED_MODULE_0__[\"lazy\"])(function(){return __webpack_require__.e(/* import() */ 36).then(__webpack_require__.bind(null, 1518));});var Collections=/*#__PURE__*/Object(react__WEBPACK_IMPORTED_MODULE_0__[\"lazy\"])(function(){return __webpack_require__.e(/* import() */ 37).then(__webpack_require__.bind(null, 1507));});var Market=function Market(){var _useWeb3React=Object(_web3_react_core__WEBPACK_IMPORTED_MODULE_2__[/* useWeb3React */ \"c\"])(),account=_useWeb3React.account;var initializationState=Object(state_nftMarket_hooks__WEBPACK_IMPORTED_MODULE_3__[/* useGetNFTInitializationState */ \"f\"])();Object(state_nftMarket_hooks__WEBPACK_IMPORTED_MODULE_3__[/* useFetchCollections */ \"b\"])();if(initializationState!==state_nftMarket_types__WEBPACK_IMPORTED_MODULE_5__[/* NFTMarketInitializationState */ \"b\"].INITIALIZED){return/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(components_Loader_PageLoader__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"],{});}return/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"Fragment\"],{children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(react_router_dom__WEBPACK_IMPORTED_MODULE_1__[/* Route */ \"b\"],{exact:true,path:_constants__WEBPACK_IMPORTED_MODULE_6__[/* nftsBaseUrl */ \"b\"],children:/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(Home,{})}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(react_router_dom__WEBPACK_IMPORTED_MODULE_1__[/* Route */ \"b\"],{exact:true,path:\"\".concat(_constants__WEBPACK_IMPORTED_MODULE_6__[/* nftsBaseUrl */ \"b\"],\"/collections\"),children:[/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(react_router_dom__WEBPACK_IMPORTED_MODULE_1__[/* Redirect */ \"a\"],{to:\"\".concat(_constants__WEBPACK_IMPORTED_MODULE_6__[/* nftsBaseUrl */ \"b\"],\"/collections/\").concat(_constants__WEBPACK_IMPORTED_MODULE_6__[/* pancakeBunniesAddress */ \"c\"])}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(Collections,{})]}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(react_router_dom__WEBPACK_IMPORTED_MODULE_1__[/* Route */ \"b\"],{path:\"\".concat(_constants__WEBPACK_IMPORTED_MODULE_6__[/* nftsBaseUrl */ \"b\"],\"/collections/:collectionAddress\"),children:/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(Collection,{})}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(react_router_dom__WEBPACK_IMPORTED_MODULE_1__[/* Route */ \"b\"],{path:\"\".concat(_constants__WEBPACK_IMPORTED_MODULE_6__[/* nftsBaseUrl */ \"b\"],\"/profile/:accountAddress?\"),children:/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(NftProfile,{})}),/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(react_router_dom__WEBPACK_IMPORTED_MODULE_1__[/* Route */ \"b\"],{exact:true,path:\"\".concat(_constants__WEBPACK_IMPORTED_MODULE_6__[/* nftsBaseUrl */ \"b\"],\"/profile\"),children:/*#__PURE__*/Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(react_router_dom__WEBPACK_IMPORTED_MODULE_1__[/* Redirect */ \"a\"],{to:\"\".concat(_constants__WEBPACK_IMPORTED_MODULE_6__[/* nftsBaseUrl */ \"b\"],\"/profile/\").concat((account===null||account===void 0?void 0:account.toLowerCase())||'')})})]});};/* harmony default export */ __webpack_exports__[\"default\"] = (Market);\n\n/***/ }),\n\n/***/ 789:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return useFetchCollections; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return useFetchByBunnyId; });\n/* unused harmony export useUpdateNftInfo */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return useGetCollections; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return useGetCollection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return useNftsFromCollection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return useGetAllBunniesByBunnyId; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return useGetNFTInitializationState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return useUserNfts; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(28);\n/* harmony import */ var state__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(71);\n/* harmony import */ var views_Nft_market_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(129);\n/* harmony import */ var utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(38);\n/* harmony import */ var hooks_useRefresh__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(123);\n/* harmony import */ var _reducer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(368);\nvar useFetchCollections=function useFetchCollections(){var dispatch=Object(state__WEBPACK_IMPORTED_MODULE_2__[/* useAppDispatch */ \"b\"])();Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(function(){dispatch(Object(_reducer__WEBPACK_IMPORTED_MODULE_6__[/* fetchCollections */ \"d\"])());dispatch(Object(_reducer__WEBPACK_IMPORTED_MODULE_6__[/* fetchNftsFromCollections */ \"f\"])(views_Nft_market_constants__WEBPACK_IMPORTED_MODULE_3__[/* pancakeBunniesAddress */ \"c\"]));},[dispatch]);};// Returns a function that fetches more NFTs when called and puts them into redux state.\n// Also returns loading flag and time of latest successful fetch\nvar useFetchByBunnyId=function useFetchByBunnyId(bunnyId){var dispatch=Object(state__WEBPACK_IMPORTED_MODULE_2__[/* useAppDispatch */ \"b\"])();var isFetchingMoreNfts=Object(react_redux__WEBPACK_IMPORTED_MODULE_1__[/* useSelector */ \"c\"])(function(state){return state.nftMarket.data.isFetchingMoreNfts;});var latestFetchAt=Object(react_redux__WEBPACK_IMPORTED_MODULE_1__[/* useSelector */ \"c\"])(function(state){return state.nftMarket.data.latestFetchAt;});// Extra guard in case market data shifts\n// we don't wanna fetch same tokens multiple times\nvar existingBunniesInState=useGetAllBunniesByBunnyId(bunnyId);var existingTokenIds=existingBunniesInState?existingBunniesInState.map(function(nft){return nft.tokenId;}):[];var firstBunny=existingBunniesInState.length>0?existingBunniesInState[0]:null;// If we already have NFT with this bunny id in state - we can reuse its metadata without making API request\nvar existingMetadata=Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useMemo\"])(function(){return firstBunny?{name:firstBunny.name,description:firstBunny.description,collection:{name:firstBunny.collectionName},image:firstBunny.image}:null;},[firstBunny]);var fetchMorePancakeBunnies=function fetchMorePancakeBunnies(orderDirection){dispatch(Object(_reducer__WEBPACK_IMPORTED_MODULE_6__[/* fetchNftsByBunnyId */ \"e\"])({bunnyId:bunnyId,existingTokenIds:existingTokenIds,existingMetadata:existingMetadata,orderDirection:orderDirection}));};return{isFetchingMoreNfts:isFetchingMoreNfts,latestFetchAt:latestFetchAt,fetchMorePancakeBunnies:fetchMorePancakeBunnies};};// This hook gets all token ids stored in redux and periodically checks subgraph in case the data we have is staled\n// e.g. NFT gets sold - must be changed form isTradable: true to isTradable: false\nvar useUpdateNftInfo=function useUpdateNftInfo(collectionAddress){var dispatch=Object(state__WEBPACK_IMPORTED_MODULE_2__[/* useAppDispatch */ \"b\"])();var _useRefresh=Object(hooks_useRefresh__WEBPACK_IMPORTED_MODULE_5__[/* default */ \"a\"])(),fastRefresh=_useRefresh.fastRefresh;var lastUpdateAt=Object(react_redux__WEBPACK_IMPORTED_MODULE_1__[/* useSelector */ \"c\"])(function(state){return state.nftMarket.data.lastUpdateAt;});var isFetchingMoreNfts=Object(react_redux__WEBPACK_IMPORTED_MODULE_1__[/* useSelector */ \"c\"])(function(state){return state.nftMarket.data.isFetchingMoreNfts;});var existingNfts=useNftsFromCollection(collectionAddress);Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(function(){var msSinceLastUpdate=Date.now()-lastUpdateAt;var existingTokenIds=existingNfts?existingNfts.map(function(nft){return nft.tokenId;}):[];if(msSinceLastUpdate>10000&&!isFetchingMoreNfts){dispatch(Object(_reducer__WEBPACK_IMPORTED_MODULE_6__[/* updateNftTokensData */ \"j\"])({collectionAddress:collectionAddress,existingTokenIds:existingTokenIds}));}},[dispatch,fastRefresh,collectionAddress,existingNfts,lastUpdateAt,isFetchingMoreNfts]);};var useGetCollections=function useGetCollections(){return Object(react_redux__WEBPACK_IMPORTED_MODULE_1__[/* useSelector */ \"c\"])(function(state){return state.nftMarket.data.collections;});};var useGetCollection=function useGetCollection(collectionAddress){var checksummedCollectionAddress=Object(utils__WEBPACK_IMPORTED_MODULE_4__[/* isAddress */ \"i\"])(collectionAddress)||'';var collections=useGetCollections();return collections[checksummedCollectionAddress];};var useNftsFromCollection=function useNftsFromCollection(collectionAddress){var checksummedCollectionAddress=Object(utils__WEBPACK_IMPORTED_MODULE_4__[/* isAddress */ \"i\"])(collectionAddress)||'';var nfts=Object(react_redux__WEBPACK_IMPORTED_MODULE_1__[/* useSelector */ \"c\"])(function(state){return state.nftMarket.data.nfts[checksummedCollectionAddress];});return nfts;};var useGetAllBunniesByBunnyId=function useGetAllBunniesByBunnyId(bunnyId){var nfts=Object(react_redux__WEBPACK_IMPORTED_MODULE_1__[/* useSelector */ \"c\"])(function(state){return state.nftMarket.data.nfts[views_Nft_market_constants__WEBPACK_IMPORTED_MODULE_3__[/* pancakeBunniesAddress */ \"c\"]];});return nfts?nfts.filter(function(nft){return nft.attributes[0].value===bunnyId&&nft.marketData.isTradable;}):[];};var useGetNFTInitializationState=function useGetNFTInitializationState(){return Object(react_redux__WEBPACK_IMPORTED_MODULE_1__[/* useSelector */ \"c\"])(function(state){return state.nftMarket.initializationState;});};var useUserNfts=function useUserNfts(){return Object(react_redux__WEBPACK_IMPORTED_MODULE_1__[/* useSelector */ \"c\"])(function(state){return state.nftMarket.data.user;});};\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Volumes/evo970/lou/madDex-master/src/views/Nft/market/index.tsx","/Volumes/evo970/lou/madDex-master/src/state/nftMarket/hooks.ts"],"names":["Home","lazy","NftProfile","Collection","Collections","Market","useWeb3React","account","initializationState","useGetNFTInitializationState","useFetchCollections","NFTMarketInitializationState","INITIALIZED","nftsBaseUrl","pancakeBunniesAddress","toLowerCase","dispatch","useAppDispatch","useEffect","fetchCollections","fetchNftsFromCollections","useFetchByBunnyId","bunnyId","isFetchingMoreNfts","useSelector","state","nftMarket","data","latestFetchAt","existingBunniesInState","useGetAllBunniesByBunnyId","existingTokenIds","map","nft","tokenId","firstBunny","length","existingMetadata","useMemo","name","description","collection","collectionName","image","fetchMorePancakeBunnies","orderDirection","fetchNftsByBunnyId","useUpdateNftInfo","collectionAddress","useRefresh","fastRefresh","lastUpdateAt","existingNfts","useNftsFromCollection","msSinceLastUpdate","Date","now","updateNftTokensData","useGetCollections","collections","useGetCollection","checksummedCollectionAddress","isAddress","nfts","filter","attributes","value","marketData","isTradable","useUserNfts","user"],"mappings":"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","file":"x","sourcesContent":["import React, { lazy } from 'react'\nimport { Redirect, Route } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport { useFetchCollections, useGetNFTInitializationState } from 'state/nftMarket/hooks'\nimport PageLoader from 'components/Loader/PageLoader'\nimport { NFTMarketInitializationState } from 'state/nftMarket/types'\nimport { nftsBaseUrl, pancakeBunniesAddress } from './constants'\n\nconst Home = lazy(() => import('./Home'))\nconst NftProfile = lazy(() => import('./Profile'))\nconst Collection = lazy(() => import('./Collection'))\nconst Collections = lazy(() => import('./Collections'))\n\nconst Market = () => {\n  const { account } = useWeb3React()\n  const initializationState = useGetNFTInitializationState()\n\n  useFetchCollections()\n\n  if (initializationState !== NFTMarketInitializationState.INITIALIZED) {\n    return <PageLoader />\n  }\n\n  return (\n    <>\n      <Route exact path={nftsBaseUrl}>\n        <Home />\n      </Route>\n      <Route exact path={`${nftsBaseUrl}/collections`}>\n        <Redirect to={`${nftsBaseUrl}/collections/${pancakeBunniesAddress}`} />\n        <Collections />\n      </Route>\n      <Route path={`${nftsBaseUrl}/collections/:collectionAddress`}>\n        <Collection />\n      </Route>\n      <Route path={`${nftsBaseUrl}/profile/:accountAddress?`}>\n        <NftProfile />\n      </Route>\n      <Route exact path={`${nftsBaseUrl}/profile`}>\n        <Redirect to={`${nftsBaseUrl}/profile/${account?.toLowerCase() || ''}`} />\n      </Route>\n    </>\n  )\n}\n\nexport default Market\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { pancakeBunniesAddress } from 'views/Nft/market/constants'\nimport { isAddress } from 'utils'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchCollections, fetchNftsByBunnyId, fetchNftsFromCollections, updateNftTokensData } from './reducer'\nimport { State } from '../types'\nimport { NftToken, UserNftsState } from './types'\n\nexport const useFetchCollections = () => {\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    dispatch(fetchCollections())\n    dispatch(fetchNftsFromCollections(pancakeBunniesAddress))\n  }, [dispatch])\n}\n\n// Returns a function that fetches more NFTs when called and puts them into redux state.\n// Also returns loading flag and time of latest successful fetch\nexport const useFetchByBunnyId = (bunnyId: string) => {\n  const dispatch = useAppDispatch()\n\n  const isFetchingMoreNfts = useSelector((state: State) => state.nftMarket.data.isFetchingMoreNfts)\n  const latestFetchAt = useSelector((state: State) => state.nftMarket.data.latestFetchAt)\n\n  // Extra guard in case market data shifts\n  // we don't wanna fetch same tokens multiple times\n  const existingBunniesInState = useGetAllBunniesByBunnyId(bunnyId)\n  const existingTokenIds = existingBunniesInState ? existingBunniesInState.map((nft) => nft.tokenId) : []\n\n  const firstBunny = existingBunniesInState.length > 0 ? existingBunniesInState[0] : null\n\n  // If we already have NFT with this bunny id in state - we can reuse its metadata without making API request\n  const existingMetadata = useMemo(() => {\n    return firstBunny\n      ? {\n          name: firstBunny.name,\n          description: firstBunny.description,\n          collection: { name: firstBunny.collectionName },\n          image: firstBunny.image,\n        }\n      : null\n  }, [firstBunny])\n\n  const fetchMorePancakeBunnies = (orderDirection: 'asc' | 'desc') => {\n    dispatch(fetchNftsByBunnyId({ bunnyId, existingTokenIds, existingMetadata, orderDirection }))\n  }\n  return { isFetchingMoreNfts, latestFetchAt, fetchMorePancakeBunnies }\n}\n\n// This hook gets all token ids stored in redux and periodically checks subgraph in case the data we have is staled\n// e.g. NFT gets sold - must be changed form isTradable: true to isTradable: false\nexport const useUpdateNftInfo = (collectionAddress: string) => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  const lastUpdateAt = useSelector((state: State) => state.nftMarket.data.lastUpdateAt)\n  const isFetchingMoreNfts = useSelector((state: State) => state.nftMarket.data.isFetchingMoreNfts)\n\n  const existingNfts = useNftsFromCollection(collectionAddress)\n\n  useEffect(() => {\n    const msSinceLastUpdate = Date.now() - lastUpdateAt\n    const existingTokenIds = existingNfts ? existingNfts.map((nft) => nft.tokenId) : []\n    if (msSinceLastUpdate > 10000 && !isFetchingMoreNfts) {\n      dispatch(updateNftTokensData({ collectionAddress, existingTokenIds }))\n    }\n  }, [dispatch, fastRefresh, collectionAddress, existingNfts, lastUpdateAt, isFetchingMoreNfts])\n}\n\nexport const useGetCollections = () => {\n  return useSelector((state: State) => state.nftMarket.data.collections)\n}\n\nexport const useGetCollection = (collectionAddress: string) => {\n  const checksummedCollectionAddress = isAddress(collectionAddress) || ''\n  const collections = useGetCollections()\n  return collections[checksummedCollectionAddress]\n}\n\nexport const useNftsFromCollection = (collectionAddress: string) => {\n  const checksummedCollectionAddress = isAddress(collectionAddress) || ''\n  const nfts: NftToken[] = useSelector((state: State) => state.nftMarket.data.nfts[checksummedCollectionAddress])\n  return nfts\n}\n\nexport const useGetAllBunniesByBunnyId = (bunnyId: string) => {\n  const nfts: NftToken[] = useSelector((state: State) => state.nftMarket.data.nfts[pancakeBunniesAddress])\n  return nfts ? nfts.filter((nft) => nft.attributes[0].value === bunnyId && nft.marketData.isTradable) : []\n}\n\nexport const useGetNFTInitializationState = () => {\n  return useSelector((state: State) => state.nftMarket.initializationState)\n}\n\nexport const useUserNfts = (): UserNftsState => {\n  return useSelector((state: State) => state.nftMarket.data.user)\n}\n"]}}